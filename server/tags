!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ACK_FAILURE	fex/fex/blargg_source.h	116;"	d
ACK_FAILURE	fex/fex/blargg_source.h	117;"	d
ACPixel	src/filters/2xSaImmx.asm	/^ACPixel       resb 8$/;"	l
ADC_RD_RS	src/gba/GBA-thumb.cpp	154;"	d	file:
ADDRESS_POST	src/gba/GBA-arm.cpp	1530;"	d	file:
ADDRESS_PREDEC	src/gba/GBA-arm.cpp	1531;"	d	file:
ADDRESS_PREINC	src/gba/GBA-arm.cpp	1532;"	d	file:
ADD_RD_RS_O3	src/gba/GBA-thumb.cpp	100;"	d	file:
ADD_RD_RS_O3_0	src/gba/GBA-thumb.cpp	118;"	d	file:
ADD_RD_RS_RN	src/gba/GBA-thumb.cpp	82;"	d	file:
ADD_RN_O8	src/gba/GBA-thumb.cpp	119;"	d	file:
AF	src/gb/GB.cpp	/^gbRegister AF;$/;"	v
AFX_ACCELEDITOR_H__66F5C854_E28E_40D1_B763_1850374B46A2__INCLUDED_	src/win32/AccelEditor.h	2;"	d
AFX_ACCELERATORMANAGER_H__A6D76F4B_26C6_11D2_BE72_006097AC8D00__INCLUDED_	src/win32/AcceleratorManager.h	29;"	d
AFX_ASSOCIATE_H__3326525B_B405_40A7_82C4_B2594669A930__INCLUDED_	src/win32/Associate.h	2;"	d
AFX_BITMAPCONTROL_H__2434AADB_B6A5_4E43_AA16_7B65B6F7FA26__INCLUDED_	src/win32/BitmapControl.h	2;"	d
AFX_BUGREPORT_H__DE7BC381_E45D_4200_910C_E5378E6364C9__INCLUDED_	src/win32/BugReport.h	21;"	d
AFX_COLORBUTTON_H__DF02109B_B91C_49FD_954F_74A48B83C314__INCLUDED_	src/win32/ColorButton.h	2;"	d
AFX_COLORCONTROL_H__747E1E47_DDFA_4D67_B337_A473F2BACB86__INCLUDED_	src/win32/ColorControl.h	2;"	d
AFX_DISASSEMBLE_H__CA10E857_7D76_4B19_A62B_D0677040FD0F__INCLUDED_	src/win32/Disassemble.h	2;"	d
AFX_EXPORTGSASNAPSHOT_H__ADF8566A_C64D_43CF_9CD2_A290370BA4F1__INCLUDED_	src/win32/ExportGSASnapshot.h	2;"	d
AFX_FILEDLG_H__7E4F8B92_1B63_4126_8261_D9334C645940__INCLUDED_	src/win32/FileDlg.h	2;"	d
AFX_GAMEOVERRIDES_H__EEEFE37F_F477_455D_8682_705FB2DBCC0C__INCLUDED_	src/win32/GameOverrides.h	21;"	d
AFX_GBACHEATS_H__FC31D47D_52C8_42B2_95C7_7C3FD09316A4__INCLUDED_	src/win32/GBACheats.h	2;"	d
AFX_GBCHEATSDLG_H__8ECCB04A_AB75_4552_8625_C6FBF30A95D9__INCLUDED_	src/win32/GBCheatsDlg.h	2;"	d
AFX_GBCOLORDLG_H__8D6126EF_06BB_48CF_ABB3_2CC4B1B60358__INCLUDED_	src/win32/GBColorDlg.h	2;"	d
AFX_GBDISASSEMBLE_H__3EFD5B47_6DBF_4F63_8F91_A9511EC590EB__INCLUDED_	src/win32/GBDisassemble.h	2;"	d
AFX_GBMAPVIEW_H__4CD23D38_F2CD_4B95_AE76_2781591DD077__INCLUDED_	src/win32/GBMapView.h	2;"	d
AFX_GBMEMORYVIEWERDLG_H__23AD2804_EFA5_4900_AEC5_47196A41C50D__INCLUDED_	src/win32/GBMemoryViewerDlg.h	2;"	d
AFX_GBOAMVIEW_H__FE8105E6_9693_479A_8C57_DEEA1B2EA3D6__INCLUDED_	src/win32/GBOamView.h	2;"	d
AFX_GBPALETTEVIEW_H__F909FF55_3021_4301_B017_0C2C9D8D8C08__INCLUDED_	src/win32/GBPaletteView.h	2;"	d
AFX_GBPRINTER_H__3180CC5A_1F9D_47E5_B044_407442CB40A4__INCLUDED_	src/win32/GBPrinterDlg.h	2;"	d
AFX_GBTILEVIEW_H__C8C8DEBB_17ED_4C5C_9DBE_D730A49B312C__INCLUDED_	src/win32/GBTileView.h	2;"	d
AFX_GDBCONNECTION_H__DD73B298_E1A7_4A46_B282_E7A2B37FC9D9__INCLUDED_	src/win32/GDBConnection.h	2;"	d
AFX_GSACODESELECT_H__189BD94D_288F_4E2A_9395_EAB16F104D87__INCLUDED_	src/win32/GSACodeSelect.h	2;"	d
AFX_HYPERLINK_H__BECEAB7D_31FB_4727_A42B_8732162EEBCC__INCLUDED_	src/win32/Hyperlink.h	2;"	d
AFX_IOVIEWER_H__9C266B78_FC02_4572_9062_0241802B0E76__INCLUDED_	src/win32/IOViewer.h	2;"	d
AFX_JOYPAD_H__FFFB2470_9EEC_4D2D_A5F0_3BF31579999A__INCLUDED_	src/win32/Joypad.h	3;"	d
AFX_KEYBOARDEDIT_H__88E35AB0_2E23_11D2_BA24_0060B0B5E151__INCLUDED_	src/win32/KeyboardEdit.h	29;"	d
AFX_LANGSELECT_H__63619E13_A375_4ED4_952F_DCF8998C2914__INCLUDED_	src/win32/LangSelect.h	2;"	d
AFX_MAPVIEW_H__20F40C77_8E10_44B7_BB49_7865F73C3E75__INCLUDED_	src/win32/MapView.h	2;"	d
AFX_MAXSCALE_H__3F42C0CC_DD5E_4A96_A60D_33AB7CBDE406__INCLUDED_	src/win32/MaxScale.h	2;"	d
AFX_MEMORYVIEWERADDRESSSIZE_H__04605262_2B1D_4EED_A467_B6C56AC2CACD__INCLUDED_	src/win32/MemoryViewerAddressSize.h	2;"	d
AFX_MEMORYVIEWERDLG_H__15046D5B_D5A2_4C49_A969_2A77F803F2F1__INCLUDED_	src/win32/MemoryViewerDlg.h	2;"	d
AFX_MEMORYVIEWER_H__52C50474_5399_4D0B_A3E4_4C52C4E0EAA0__INCLUDED_	src/win32/MemoryViewer.h	2;"	d
AFX_OAMVIEW_H__E5369352_80F8_49C4_9F23_05EB6FC1345B__INCLUDED_	src/win32/OamView.h	2;"	d
AFX_PALETTEVIEW1_H__0873E3FF_9486_4B2C_8EF0_59C3B4F47162__INCLUDED_	src/win32/PaletteView.h	2;"	d
AFX_PALETTEVIEWCONTROL_H__31F600AE_B7E5_4F6C_80B6_55E4B61FBD57__INCLUDED_	src/win32/PaletteViewControl.h	2;"	d
AFX_REWINDINTERVAL_H__C95AFF44_1F64_44C8_BAAB_A54B982D28EA__INCLUDED_	src/win32/RewindInterval.h	2;"	d
AFX_ROMINFO_H__9888A45C_3E71_4C0F_B119_EFC74DFF8CD3__INCLUDED_	src/win32/RomInfo.h	2;"	d
AFX_SELECTPLUGIN_H__A097B9D0_7C23_4C1A_A2D3_1AEC07501BBC__INCLUDED_	src/win32/SelectPlugin.h	2;"	d
AFX_STRINGTOKENIZER_H__1AB4CD12_6B7A_49E4_A87F_75D3DC3FF20F__INCLUDED_	src/win32/StringTokenizer.h	2;"	d
AFX_THROTTLE_H__5F03B6E9_0C43_4933_A7BC_1618428C2B7F__INCLUDED_	src/win32/Throttle.h	2;"	d
AFX_TILEVIEW_H__055751EC_2DF3_495B_B643_29025465CD2E__INCLUDED_	src/win32/TileView.h	2;"	d
AFX_WAVWRITER_H__BE6C9DE9_60E7_4192_9797_8C7F55B3CE46__INCLUDED_	src/win32/WavWriter.h	2;"	d
AFX_ZOOMCONTROL_H__BC193230_D2D6_4240_93AE_28C2EF2C641A__INCLUDED_	src/win32/ZoomControl.h	2;"	d
AFv	src/wx/viewers.cpp	/^	wxControl *AFv, *BCv, *DEv, *HLv, *SPv, *PCv, *LYv, *IFFv;$/;"	m	class:Viewers::GBDisassembleViewer	file:
AGBPRINT_H	src/gba/agbprint.h	2;"	d
ALCchar	src/win32/LoadOAL.h	19;"	d
ALFunction	src/win32/OALConfig.h	/^	OPENALFNTABLE ALFunction;$/;"	m	class:OALConfig
ALFunction	src/win32/OpenAL.cpp	/^	OPENALFNTABLE  ALFunction;$/;"	m	class:OpenAL	file:
ALFunction	src/wx/openal.cpp	/^	static OPENALFNTABLE  ALFunction;$/;"	m	class:OpenAL	file:
ALFunction	src/wx/openal.cpp	/^OPENALFNTABLE OpenAL::ALFunction = {NULL};$/;"	m	class:OpenAL	file:
ALLOC	src/common/memgzio.c	52;"	d	file:
ALU_FINISH	src/gba/GBA-arm.cpp	1094;"	d	file:
ALU_FINISH	src/gba/GBA-arm.cpp	667;"	d	file:
ALU_HEADER	src/gba/GBA-arm.cpp	296;"	d	file:
ALU_HEADER	src/gba/GBA-arm.cpp	329;"	d	file:
ALU_INIT	src/gba/GBA-arm.cpp	385;"	d	file:
ALU_INIT_C	src/gba/GBA-arm.cpp	399;"	d	file:
ALU_INIT_C	src/gba/GBA-arm.cpp	740;"	d	file:
ALU_INIT_NC	src/gba/GBA-arm.cpp	400;"	d	file:
ALU_INIT_NC	src/gba/GBA-arm.cpp	915;"	d	file:
ALU_INSN	src/gba/GBA-arm.cpp	1119;"	d	file:
ALU_TRAILER	src/gba/GBA-arm.cpp	297;"	d	file:
ALU_TRAILER	src/gba/GBA-arm.cpp	330;"	d	file:
AL_NO_PROTOTYPES	src/wx/openal.h	4;"	d
ALchar	src/win32/LoadOAL.h	15;"	d
APP_ABI	src/libretro/jni/Application.mk	/^APP_ABI := all$/;"	m
ARCHITECTURE_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	298;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	301;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	304;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	307;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	310;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	313;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	316;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	320;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	291;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	294;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	297;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	300;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	303;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	306;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	309;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	313;"	d	file:
ARMT_Convert	fex/7z_C/Bra.c	/^SizeT ARMT_Convert(Byte *data, SizeT size, UInt32 ip, int encoding)$/;"	f
ARM_Convert	fex/7z_C/Bra.c	/^SizeT ARM_Convert(Byte *data, SizeT size, UInt32 ip, int encoding)$/;"	f
ARM_PREFETCH	src/gba/GBAcpu.h	26;"	d
ARM_PREFETCH	src/sdl/debugger.cpp	204;"	d	file:
ARM_PREFETCH_NEXT	src/gba/GBAcpu.h	38;"	d
ARRAY_H	src/common/Array.h	20;"	d
ARange	src/gba/elf.h	/^struct ARange {$/;"	s
ARanges	src/gba/elf.h	/^struct ARanges {$/;"	s
ASCII	src/sdl/debugger.cpp	1993;"	d	file:
ASCII_FLAG	src/common/memgzio.c	58;"	d	file:
ASMVAR	src/gba/GBA-arm.cpp	302;"	d	file:
ASMVAR2	src/gba/GBA-arm.cpp	303;"	d	file:
ASSERT	src/win32/ResizeDlg.cpp	35;"	d	file:
ASSERT_SUCCESS	src/win32/OpenAL.cpp	26;"	d	file:
ASSERT_SUCCESS	src/wx/openal.cpp	22;"	d	file:
ASSERT_VALID_HWND	src/win32/WinHelper.h	40;"	d
AUDIO_API	src/win32/VBA.h	/^enum AUDIO_API {$/;"	g
AUDIO_BUF_LEN	src/common/ffmpeg.cpp	68;"	d	file:
AUD_DIRECTSOUND	src/wx/wxvbam.h	/^    AUD_SDL, AUD_OPENAL, AUD_DIRECTSOUND, AUD_XAUDIO2$/;"	e	enum:audioapi
AUD_OPENAL	src/wx/wxvbam.h	/^    AUD_SDL, AUD_OPENAL, AUD_DIRECTSOUND, AUD_XAUDIO2$/;"	e	enum:audioapi
AUD_SDL	src/wx/wxvbam.h	/^    AUD_SDL, AUD_OPENAL, AUD_DIRECTSOUND, AUD_XAUDIO2$/;"	e	enum:audioapi
AUD_XAUDIO2	src/wx/wxvbam.h	/^    AUD_SDL, AUD_OPENAL, AUD_DIRECTSOUND, AUD_XAUDIO2$/;"	e	enum:audioapi
AVIWrite	src/win32/AVIWrite.cpp	/^AVIWrite::AVIWrite()$/;"	f	class:AVIWrite
AVIWrite	src/win32/AVIWrite.h	/^class AVIWrite$/;"	c
AVMEDIA_TYPE_AUDIO	src/common/ffmpeg.cpp	45;"	d	file:
AVMEDIA_TYPE_VIDEO	src/common/ffmpeg.cpp	44;"	d	file:
AV_PKT_FLAG_KEY	src/common/ffmpeg.cpp	18;"	d	file:
AV_SAMPLE_FMT_S16	src/common/ffmpeg.cpp	52;"	d	file:
AboutDialog	src/win32/AboutDialog.cpp	/^AboutDialog::AboutDialog(CWnd* pParent \/*=NULL*\/)$/;"	f	class:AboutDialog
AboutDialog	src/win32/AboutDialog.h	/^class AboutDialog : public CDialog$/;"	c
AccelConfig_t	src/wx/guiinit.cpp	/^static class AccelConfig_t : public wxEvtHandler$/;"	c	file:
AccelEditor	src/win32/AccelEditor.cpp	/^AccelEditor::AccelEditor(CWnd* pParent \/*=NULL*\/)$/;"	f	class:AccelEditor
AccelEditor	src/win32/AccelEditor.h	/^class AccelEditor : public ResizeDlg$/;"	c
AcceptsFocus	src/wx/viewsupt.h	/^	bool AcceptsFocus() { return false; }$/;"	f	class:Viewers::DispCheckBox
ActiveCtrl	src/wx/viewsupt.cpp	/^    void Viewer::ActiveCtrl(wxCommandEvent &ev)$/;"	f	class:Viewers::Viewer
ActiveCtrlScr	src/wx/viewsupt.h	/^	void ActiveCtrlScr(wxScrollEvent &ev) { ActiveCtrl(ev); }$/;"	f	class:Viewers::Viewer
ActiveCtrlSpin	src/wx/viewsupt.h	/^	void ActiveCtrlSpin(wxSpinEvent &ev) { ActiveCtrl(ev); }$/;"	f	class:Viewers::Viewer
AdMame2x	src/filters/admame.cpp	/^void AdMame2x(u8 *srcPtr, u32 srcPitch, u8 * \/* deltaPtr *\/,$/;"	f
AdMame2x32	src/filters/admame.cpp	/^void AdMame2x32(u8 *srcPtr, u32 srcPitch, u8 * \/* deltaPtr *\/,$/;"	f
Add	src/win32/CmdAccelOb.cpp	/^void CCmdAccelOb::Add(BYTE cVirt, WORD wKey, bool bLocked)$/;"	f	class:CCmdAccelOb
Add	src/win32/CmdAccelOb.cpp	/^void CCmdAccelOb::Add(CAccelsOb* pAccel)$/;"	f	class:CCmdAccelOb
Add	src/wx/widgets/sdljoy.cpp	/^void wxSDLJoy::Add(int joy)$/;"	f	class:wxSDLJoy
AddAccel	src/win32/AcceleratorManager.cpp	/^bool CAcceleratorManager::AddAccel(BYTE cVirt, WORD wIDCommand, WORD wKey, LPCTSTR szCommand, bool bLocked)$/;"	f	class:CAcceleratorManager
AddAudioFrame	src/win32/AVIWrite.cpp	/^bool AVIWrite::AddAudioFrame( LPVOID soundData )$/;"	f	class:AVIWrite
AddBorder	src/wx/panel.cpp	/^void GameArea::AddBorder()$/;"	f	class:GameArea
AddCBACode	src/win32/GBACheats.cpp	/^AddCBACode::AddCBACode(CWnd* pParent \/*=NULL*\/)$/;"	f	class:AddCBACode
AddCBACode	src/win32/GBACheats.h	/^class AddCBACode : public CDialog$/;"	c
AddCheat	src/win32/GBACheats.cpp	/^AddCheat::AddCheat(u32 address, CWnd* pParent \/*=NULL*\/)$/;"	f	class:AddCheat
AddCheat	src/win32/GBACheats.h	/^class AddCheat : public CDialog$/;"	c
AddCheat	src/wx/guiinit.cpp	/^    void AddCheat()$/;"	f	class:CheatList_t
AddCheat	src/wx/guiinit.cpp	/^    void AddCheat(int idx)$/;"	f	class:CheatFind_t
AddCheatB	src/wx/guiinit.cpp	/^    void AddCheatB(wxCommandEvent &ev)$/;"	f	class:CheatFind_t
AddCheatCode	src/win32/GBACheats.cpp	/^AddCheatCode::AddCheatCode(CWnd* pParent \/*=NULL*\/)$/;"	f	class:AddCheatCode
AddCheatCode	src/win32/GBACheats.h	/^class AddCheatCode : public CDialog$/;"	c
AddCheatL	src/wx/guiinit.cpp	/^    void AddCheatL(wxListEvent &ev)$/;"	f	class:CheatFind_t
AddCommandAccel	src/win32/AcceleratorManager.cpp	/^bool CAcceleratorManager::AddCommandAccel(WORD wIDCommand, LPCTSTR szCommand, bool bLocked)$/;"	f	class:CAcceleratorManager
AddDialogData	src/win32/ResizeDlg.cpp	/^void *ResizeDlg::AddDialogData()$/;"	f	class:ResizeDlg
AddFileWithMimeType	src/wx/wxhead.h	45;"	d
AddFrame	src/common/ffmpeg.cpp	/^MediaRet MediaRecorder::AddFrame(const u16 *aud)$/;"	f	class:MediaRecorder
AddFrame	src/common/ffmpeg.cpp	/^MediaRet MediaRecorder::AddFrame(const u8 *vid)$/;"	f	class:MediaRecorder
AddFrame	src/wx/panel.cpp	/^void GameArea::AddFrame(const u16 *data, int length)$/;"	f	class:GameArea
AddFrame	src/wx/panel.cpp	/^void GameArea::AddFrame(const u8 *data)$/;"	f	class:GameArea
AddGBCheat	src/win32/GBCheatsDlg.cpp	/^AddGBCheat::AddGBCheat(u32 addr, CWnd* pParent \/*=NULL*\/)$/;"	f	class:AddGBCheat
AddGBCheat	src/win32/GBCheatsDlg.h	/^class AddGBCheat : public CDialog$/;"	c
AddGBCode	src/win32/GBCheatsDlg.cpp	/^AddGBCode::AddGBCode(bool (*verify)(const char *,const char*), int len, const char *title, CWnd* pParent \/*=NULL*\/)$/;"	f	class:AddGBCode
AddGBCode	src/win32/GBCheatsDlg.h	/^class AddGBCode : public CDialog$/;"	c
AddGSACode	src/win32/GBACheats.cpp	/^AddGSACode::AddGSACode(CWnd* pParent \/*=NULL*\/)$/;"	f	class:AddGSACode
AddGSACode	src/win32/GBACheats.h	/^class AddGSACode : public CDialog$/;"	c
AddRef	src/win32/XAudio2.cpp	/^	ULONG STDMETHODCALLTYPE AddRef()$/;"	f	class:XAudio2_Device_Notifier
AddRef	src/wx/xaudio2.cpp	/^	ULONG STDMETHODCALLTYPE AddRef()$/;"	f	class:XAudio2_Device_Notifier
AddSound	src/win32/WavWriter.cpp	/^void WavWriter::AddSound(const u8 *data, int len)$/;"	f	class:WavWriter
AddVideoFrame	src/win32/AVIWrite.cpp	/^bool AVIWrite::AddVideoFrame( LPVOID imageData )$/;"	f	class:AVIWrite
AddressFromSel	src/wx/gfxviewers.cpp	/^	u32 AddressFromSel()$/;"	f	class:Viewers::MapViewer
AddressToGBA	src/sdl/debugger.cpp	/^unsigned int AddressToGBA(u8* mem)$/;"	f
AdjustDescWidth	src/wx/guiinit.cpp	/^    void AdjustDescWidth()$/;"	f	class:CheatList_t
AdjustFrames	src/wx/guiinit.cpp	/^    void AdjustFrames(int count)$/;"	f	class:SoundConfig_t
AdjustFramesEv	src/wx/guiinit.cpp	/^    void AdjustFramesEv(wxCommandEvent &ev)$/;"	f	class:SoundConfig_t
AdjustMinSize	src/wx/panel.cpp	/^void GameArea::AdjustMinSize()$/;"	f	class:GameArea
AdjustSize	src/wx/panel.cpp	/^void GameArea::AdjustSize(bool force)$/;"	f	class:GameArea
Align	fex/7z_C/LzmaDec.c	102;"	d	file:
AlignOffset	fex/7z_C/Ppmd7.h	/^  UInt32 AlignOffset;$/;"	m	struct:__anon6
Alloc	fex/7z_C/Types.h	/^  void *(*Alloc)(void *p, size_t size);$/;"	m	struct:__anon33
AllocUnits	fex/7z_C/Ppmd7.c	/^static void *AllocUnits(CPpmd7 *p, unsigned indx)$/;"	f	file:
AllocUnitsRare	fex/7z_C/Ppmd7.c	/^static void *AllocUnitsRare(CPpmd7 *p, unsigned indx)$/;"	f	file:
ApiFailure	src/win32/ResizeDlg.cpp	/^void ApiFailure(char *pcszFilename, int nLine, char *pcszExpression )$/;"	f
AppendFormat	src/win32/BugReport.cpp	/^static void AppendFormat(CString& report, const char *format, ...)$/;"	f	file:
Apply	src/wx/viewers.cpp	/^	void Apply(wxCommandEvent &ev)$/;"	f	class:Viewers::IOViewer
Array	src/common/Array.h	/^	Array(const std::size_t size = 0) : a(size ? new T[size] : 0), sz(size) {}$/;"	f	class:Array
Array	src/common/Array.h	/^class Array {$/;"	c
Array	src/gba/elf.h	/^struct Array {$/;"	s
AssertFailed	src/win32/ResizeDlg.cpp	/^void AssertFailed(char *file, int line, char *exp)$/;"	f
AssertValid	src/win32/AcceleratorManager.cpp	/^void CAcceleratorManager::AssertValid() const$/;"	f	class:CAcceleratorManager
AssertValid	src/win32/BitmapControl.cpp	/^void BitmapControl::AssertValid() const$/;"	f	class:BitmapControl
AssertValid	src/win32/CmdAccelOb.cpp	/^void CAccelsOb::AssertValid() const$/;"	f	class:CAccelsOb
AssertValid	src/win32/CmdAccelOb.cpp	/^void CCmdAccelOb::AssertValid() const$/;"	f	class:CCmdAccelOb
Assign	src/wx/guiinit.cpp	/^    void Assign(wxCommandEvent &ev)$/;"	f	class:AccelConfig_t
AssignKey	src/win32/Joypad.cpp	/^void AssignKey(KeyList &Key, LONG_PTR Out)$/;"	f
AssignKeys	src/win32/Joypad.cpp	57;"	d	file:
Associate	src/win32/Associate.cpp	/^Associate::Associate(CWnd* pParent \/*=NULL*\/)$/;"	f	class:Associate
Associate	src/win32/Associate.h	/^class Associate : public CDialog$/;"	c
Attach	src/wx/widgets/sdljoy.cpp	/^wxEvtHandler *wxSDLJoy::Attach(wxEvtHandler *handler)$/;"	f	class:wxSDLJoy
Attrib	fex/7z_C/7z.h	/^  UInt32 Attrib;$/;"	m	struct:__anon14
AttribDefined	fex/7z_C/7z.h	/^  Byte AttribDefined;$/;"	m	struct:__anon14
AudioCoreSettingsDlg	src/win32/AudioCoreSettingsDlg.cpp	/^AudioCoreSettingsDlg::AudioCoreSettingsDlg(CWnd* pParent \/*=NULL*\/)$/;"	f	class:AudioCoreSettingsDlg
AudioCoreSettingsDlg	src/win32/AudioCoreSettingsDlg.h	/^class AudioCoreSettingsDlg : public CDialog$/;"	c
B	src/gb/gb.h	/^  } B;$/;"	m	union:__anon153	typeref:struct:__anon153::__anon154
B	src/gba/GBA.h	/^  } B;$/;"	m	union:__anon48	typeref:struct:__anon48::__anon49
B0	src/gb/gb.h	/^    u8 B1, B0;$/;"	m	struct:__anon153::__anon154
B0	src/gba/GBA.h	/^    u8 B0;$/;"	m	struct:__anon48::__anon49
B1	src/gb/gb.h	/^    u8 B1, B0;$/;"	m	struct:__anon153::__anon154
B1	src/gba/GBA.h	/^    u8 B1;$/;"	m	struct:__anon48::__anon49
B2	src/gba/GBA.h	/^    u8 B2;$/;"	m	struct:__anon48::__anon49
B3	src/gba/GBA.h	/^    u8 B3;$/;"	m	struct:__anon48::__anon49
BC	src/gb/GB.cpp	/^gbRegister BC;$/;"	v
BCv	src/wx/viewers.cpp	/^	wxControl *AFv, *BCv, *DEv, *HLv, *SPv, *PCv, *LYv, *IFFv;$/;"	m	class:Viewers::GBDisassembleViewer	file:
BEGIN	src/sdl/expr-lex.cpp	126;"	d	file:
BG0CNT	src/gba/Globals.cpp	/^u16 BG0CNT   = 0x0000;$/;"	v
BG0HOFS	src/gba/Globals.cpp	/^u16 BG0HOFS  = 0x0000;$/;"	v
BG0VOFS	src/gba/Globals.cpp	/^u16 BG0VOFS  = 0x0000;$/;"	v
BG1CNT	src/gba/Globals.cpp	/^u16 BG1CNT   = 0x0000;$/;"	v
BG1HOFS	src/gba/Globals.cpp	/^u16 BG1HOFS  = 0x0000;$/;"	v
BG1VOFS	src/gba/Globals.cpp	/^u16 BG1VOFS  = 0x0000;$/;"	v
BG2CNT	src/gba/Globals.cpp	/^u16 BG2CNT   = 0x0000;$/;"	v
BG2HOFS	src/gba/Globals.cpp	/^u16 BG2HOFS  = 0x0000;$/;"	v
BG2PA	src/gba/Globals.cpp	/^u16 BG2PA    = 0x0100;$/;"	v
BG2PB	src/gba/Globals.cpp	/^u16 BG2PB    = 0x0000;$/;"	v
BG2PC	src/gba/Globals.cpp	/^u16 BG2PC    = 0x0000;$/;"	v
BG2PD	src/gba/Globals.cpp	/^u16 BG2PD    = 0x0100;$/;"	v
BG2VOFS	src/gba/Globals.cpp	/^u16 BG2VOFS  = 0x0000;$/;"	v
BG2X_H	src/gba/Globals.cpp	/^u16 BG2X_H   = 0x0000;$/;"	v
BG2X_L	src/gba/Globals.cpp	/^u16 BG2X_L   = 0x0000;$/;"	v
BG2Y_H	src/gba/Globals.cpp	/^u16 BG2Y_H   = 0x0000;$/;"	v
BG2Y_L	src/gba/Globals.cpp	/^u16 BG2Y_L   = 0x0000;$/;"	v
BG3CNT	src/gba/Globals.cpp	/^u16 BG3CNT   = 0x0000;$/;"	v
BG3HOFS	src/gba/Globals.cpp	/^u16 BG3HOFS  = 0x0000;$/;"	v
BG3PA	src/gba/Globals.cpp	/^u16 BG3PA    = 0x0100;$/;"	v
BG3PB	src/gba/Globals.cpp	/^u16 BG3PB    = 0x0000;$/;"	v
BG3PC	src/gba/Globals.cpp	/^u16 BG3PC    = 0x0000;$/;"	v
BG3PD	src/gba/Globals.cpp	/^u16 BG3PD    = 0x0100;$/;"	v
BG3VOFS	src/gba/Globals.cpp	/^u16 BG3VOFS  = 0x0000;$/;"	v
BG3X_H	src/gba/Globals.cpp	/^u16 BG3X_H   = 0x0000;$/;"	v
BG3X_L	src/gba/Globals.cpp	/^u16 BG3X_L   = 0x0000;$/;"	v
BG3Y_H	src/gba/Globals.cpp	/^u16 BG3Y_H   = 0x0000;$/;"	v
BG3Y_L	src/gba/Globals.cpp	/^u16 BG3Y_L   = 0x0000;$/;"	v
BINARY_EXTRACTOR_H	fex/fex/Binary_Extractor.h	5;"	d
BIOSDialog	src/win32/BIOSDialog.cpp	/^BIOSDialog::BIOSDialog(CWnd* pParent \/*=NULL*\/)$/;"	f	class:BIOSDialog
BIOSDialog	src/win32/BIOSDialog.h	/^class BIOSDialog : public CDialog$/;"	c
BIOS_ArcTan	src/gba/bios.cpp	/^void BIOS_ArcTan()$/;"	f
BIOS_ArcTan2	src/gba/bios.cpp	/^void BIOS_ArcTan2()$/;"	f
BIOS_BgAffineSet	src/gba/bios.cpp	/^void BIOS_BgAffineSet()$/;"	f
BIOS_BitUnPack	src/gba/bios.cpp	/^void BIOS_BitUnPack()$/;"	f
BIOS_CpuFastSet	src/gba/bios.cpp	/^void BIOS_CpuFastSet()$/;"	f
BIOS_CpuSet	src/gba/bios.cpp	/^void BIOS_CpuSet()$/;"	f
BIOS_Diff16bitUnFilter	src/gba/bios.cpp	/^void BIOS_Diff16bitUnFilter()$/;"	f
BIOS_Diff8bitUnFilterVram	src/gba/bios.cpp	/^void BIOS_Diff8bitUnFilterVram()$/;"	f
BIOS_Diff8bitUnFilterWram	src/gba/bios.cpp	/^void BIOS_Diff8bitUnFilterWram()$/;"	f
BIOS_Div	src/gba/bios.cpp	/^void BIOS_Div()$/;"	f
BIOS_DivARM	src/gba/bios.cpp	/^void BIOS_DivARM()$/;"	f
BIOS_GetBiosChecksum	src/gba/bios.cpp	/^void BIOS_GetBiosChecksum()$/;"	f
BIOS_H	src/gba/bios.h	2;"	d
BIOS_HuffUnComp	src/gba/bios.cpp	/^void BIOS_HuffUnComp()$/;"	f
BIOS_LZ77UnCompVram	src/gba/bios.cpp	/^void BIOS_LZ77UnCompVram()$/;"	f
BIOS_LZ77UnCompWram	src/gba/bios.cpp	/^void BIOS_LZ77UnCompWram()$/;"	f
BIOS_MidiKey2Freq	src/gba/bios.cpp	/^void BIOS_MidiKey2Freq()$/;"	f
BIOS_ObjAffineSet	src/gba/bios.cpp	/^void BIOS_ObjAffineSet()$/;"	f
BIOS_RLUnCompVram	src/gba/bios.cpp	/^void BIOS_RLUnCompVram()$/;"	f
BIOS_RLUnCompWram	src/gba/bios.cpp	/^void BIOS_RLUnCompWram()$/;"	f
BIOS_RegisterRamReset	src/gba/bios.cpp	/^void BIOS_RegisterRamReset()$/;"	f
BIOS_RegisterRamReset	src/gba/bios.cpp	/^void BIOS_RegisterRamReset(u32 flags)$/;"	f
BIOS_SndDriverJmpTableCopy	src/gba/bios.cpp	/^void BIOS_SndDriverJmpTableCopy()$/;"	f
BIOS_SoftReset	src/gba/bios.cpp	/^void BIOS_SoftReset()$/;"	f
BIOS_Sqrt	src/gba/bios.cpp	/^void BIOS_Sqrt()$/;"	f
BITS_16	src/gba/CheatSearch.h	/^  BITS_16,$/;"	e	enum:__anon53
BITS_32	src/gba/CheatSearch.h	/^  BITS_32$/;"	e	enum:__anon53
BITS_8	src/gba/CheatSearch.h	/^  BITS_8,$/;"	e	enum:__anon53
BLARGG_4CHAR	fex/fex/blargg_common.h	32;"	d
BLARGG_4CHAR	src/apu/blargg_common.h	90;"	d
BLARGG_BIG_ENDIAN	fex/fex/blargg_endian.h	30;"	d
BLARGG_BIG_ENDIAN	fex/fex/blargg_endian.h	42;"	d
BLARGG_BIG_ENDIAN	fex/fex/blargg_endian.h	52;"	d
BLARGG_CHECK_ALLOC	fex/fex/blargg_source.h	110;"	d
BLARGG_CHECK_ALLOC	src/apu/blargg_source.h	84;"	d
BLARGG_COMMON_H	fex/fex/blargg_common.h	6;"	d
BLARGG_COMMON_H	src/apu/blargg_common.h	13;"	d
BLARGG_COMMON_H	src/apu/blargg_common.h	17;"	d
BLARGG_COMMON_H	src/apu/blargg_common.h	6;"	d
BLARGG_COMPILER_HAS_BOOL	src/apu/blargg_common.h	112;"	d
BLARGG_COMPILER_HAS_BOOL	src/apu/blargg_common.h	116;"	d
BLARGG_COMPILER_HAS_BOOL	src/apu/blargg_common.h	121;"	d
BLARGG_CONFIG_H	fex/fex/blargg_config.h	5;"	d
BLARGG_CONFIG_H	src/apu/blargg_config.h	4;"	d
BLARGG_CPU_CISC	fex/fex/blargg_endian.h	12;"	d
BLARGG_CPU_POWERPC	fex/fex/blargg_endian.h	17;"	d
BLARGG_CPU_RISC	fex/fex/blargg_endian.h	18;"	d
BLARGG_CPU_X86	fex/fex/blargg_endian.h	11;"	d
BLARGG_DEF_MIN_MAX	fex/fex/blargg_source.h	76;"	d
BLARGG_DEF_MIN_MAX	src/apu/blargg_source.h	61;"	d
BLARGG_DEPRECATED	fex/fex/blargg_common.h	83;"	d
BLARGG_DEPRECATED	fex/fex/blargg_common.h	87;"	d
BLARGG_DEPRECATED	fex/fex/blargg_common.h	91;"	d
BLARGG_DEPRECATED	src/apu/blargg_common.h	193;"	d
BLARGG_DEPRECATED	src/apu/blargg_common.h	195;"	d
BLARGG_DEPRECATED_TEXT	fex/fex/blargg_common.h	82;"	d
BLARGG_DEPRECATED_TEXT	fex/fex/blargg_common.h	86;"	d
BLARGG_DEPRECATED_TEXT	fex/fex/blargg_common.h	90;"	d
BLARGG_DISABLE_NOTHROW	fex/fex/blargg_common.h	131;"	d
BLARGG_DISABLE_NOTHROW	src/apu/blargg_common.h	80;"	d
BLARGG_ENDIAN_H	fex/fex/blargg_endian.h	5;"	d
BLARGG_ERR	fex/fex/blargg_errors.h	55;"	d
BLARGG_ERRORS_H	fex/fex/blargg_errors.h	5;"	d
BLARGG_ERR_CALLER	fex/fex/blargg_errors.h	65;"	d
BLARGG_ERR_FILE_CORRUPT	fex/fex/blargg_errors.h	78;"	d
BLARGG_ERR_FILE_EOF	fex/fex/blargg_errors.h	74;"	d
BLARGG_ERR_FILE_FEATURE	fex/fex/blargg_errors.h	77;"	d
BLARGG_ERR_FILE_FULL	fex/fex/blargg_errors.h	73;"	d
BLARGG_ERR_FILE_IO	fex/fex/blargg_errors.h	72;"	d
BLARGG_ERR_FILE_MISSING	fex/fex/blargg_errors.h	69;"	d
BLARGG_ERR_FILE_READ	fex/fex/blargg_errors.h	70;"	d
BLARGG_ERR_FILE_TYPE	fex/fex/blargg_errors.h	76;"	d
BLARGG_ERR_FILE_WRITE	fex/fex/blargg_errors.h	71;"	d
BLARGG_ERR_GENERIC	fex/fex/blargg_errors.h	63;"	d
BLARGG_ERR_INTERNAL	fex/fex/blargg_errors.h	66;"	d
BLARGG_ERR_LIMITATION	fex/fex/blargg_errors.h	67;"	d
BLARGG_ERR_MEMORY	fex/fex/blargg_errors.h	64;"	d
BLARGG_ERR_TYPE	fex/fex/blargg_errors.h	60;"	d
BLARGG_EXPORT	fex/fex/blargg_source.h	100;"	d
BLARGG_EXPORT	fex/fex/blargg_source.h	103;"	d
BLARGG_EXPORT	fex/fex/blargg_source.h	105;"	d
BLARGG_LITTLE_ENDIAN	fex/fex/blargg_endian.h	28;"	d
BLARGG_LITTLE_ENDIAN	fex/fex/blargg_endian.h	36;"	d
BLARGG_LITTLE_ENDIAN	fex/fex/blargg_endian.h	45;"	d
BLARGG_LITTLE_ENDIAN	fex/fex/blargg_endian.h	51;"	d
BLARGG_MUTABLE	fex/fex/blargg_common.h	25;"	d
BLARGG_MUTABLE	fex/fex/blargg_common.h	27;"	d
BLARGG_NEW	fex/fex/blargg_common.h	135;"	d
BLARGG_NEW	fex/fex/blargg_common.h	139;"	d
BLARGG_NEW	src/apu/blargg_common.h	83;"	d
BLARGG_NEW	src/apu/blargg_common.h	86;"	d
BLARGG_PURE	fex/fex/blargg_common.h	52;"	d
BLARGG_PURE	src/apu/blargg_common.h	202;"	d
BLARGG_RESTRICT	fex/fex/blargg_common.h	19;"	d
BLARGG_RESTRICT	fex/fex/blargg_common.h	21;"	d
BLARGG_RESTRICT	src/apu/blargg_common.h	21;"	d
BLARGG_RESTRICT	src/apu/blargg_common.h	23;"	d
BLARGG_RETURN_ERR	fex/fex/blargg_source.h	111;"	d
BLARGG_RETURN_ERR	src/apu/blargg_source.h	85;"	d
BLARGG_SOURCE_H	fex/fex/blargg_source.h	8;"	d
BLARGG_SOURCE_H	src/apu/blargg_source.h	8;"	d
BLARGG_STATIC_ASSERT	fex/fex/blargg_common.h	39;"	d
BLARGG_STATIC_ASSERT	fex/fex/blargg_common.h	44;"	d
BLARGG_THROWS	src/apu/blargg_common.h	76;"	d
BLARGG_THROWS	src/apu/blargg_common.h	78;"	d
BLARGG_THROWS_NOTHING	fex/fex/blargg_common.h	126;"	d
BLARGG_THROWS_NOTHING	fex/fex/blargg_common.h	128;"	d
BLDMOD	src/gba/Globals.cpp	/^u16 BLDMOD   = 0x0000;$/;"	v
BLIP_BUFFER_ACCURACY	src/apu/Blip_Buffer.h	148;"	d
BLIP_BUFFER_H	src/apu/Blip_Buffer.h	5;"	d
BLIP_CLAMP	src/apu/Blip_Buffer.h	373;"	d
BLIP_CLAMP_	src/apu/Blip_Buffer.h	367;"	d
BLIP_CLAMP_	src/apu/Blip_Buffer.h	369;"	d
BLIP_FWD	src/apu/Blip_Buffer.h	499;"	d
BLIP_PHASE_BITS	src/apu/Blip_Buffer.h	156;"	d
BLIP_PHASE_BITS	src/apu/Blip_Buffer.h	158;"	d
BLIP_READER_ADJ_	src/apu/Blip_Buffer.h	325;"	d
BLIP_READER_BASS	src/apu/Blip_Buffer.h	302;"	d
BLIP_READER_BEGIN	src/apu/Blip_Buffer.h	297;"	d
BLIP_READER_END	src/apu/Blip_Buffer.h	320;"	d
BLIP_READER_NEXT	src/apu/Blip_Buffer.h	315;"	d
BLIP_READER_NEXT_IDX_	src/apu/Blip_Buffer.h	329;"	d
BLIP_READER_NEXT_RAW_IDX_	src/apu/Blip_Buffer.h	334;"	d
BLIP_READER_READ	src/apu/Blip_Buffer.h	309;"	d
BLIP_READER_READ_RAW	src/apu/Blip_Buffer.h	312;"	d
BLIP_RESTRICT	src/apu/Blip_Buffer.h	289;"	d
BLIP_RESTRICT	src/apu/Blip_Buffer.h	291;"	d
BLIP_REV	src/apu/Blip_Buffer.h	500;"	d
BLUE_MASK555	src/filters/2xSaI.cpp	218;"	d	file:
BLUE_MASK565	src/filters/2xSaI.cpp	214;"	d	file:
BMPSize	src/wx/viewsupt.cpp	/^    void GfxViewer::BMPSize(int w, int h)$/;"	f	class:Viewers::GfxViewer
BOOLOPT	src/wx/opts.cpp	16;"	d	file:
BOOST	fex/fex/blargg_common.h	/^	struct BOOST$/;"	s
BOOST	fex/fex/blargg_common.h	103;"	d
BOOST	src/apu/blargg_common.h	/^	struct BOOST$/;"	s
BOOST	src/apu/blargg_common.h	150;"	d
BOOST	src/apu/blargg_common.h	155;"	d
BOOST_STATIC_ASSERT	fex/fex/blargg_common.h	198;"	d
BOOST_STATIC_ASSERT	src/apu/blargg_common.h	102;"	d
BOOST_STATIC_ASSERT	src/apu/blargg_common.h	97;"	d
BadRequest	src/wx/wxhead.h	39;"	d
Base	fex/7z_C/Ppmd7.h	/^  Byte *Base, *LoUnit, *HiUnit, *Text, *UnitsStart;$/;"	m	struct:__anon6
BasicDrawingPanel	src/wx/drawing.h	/^class BasicDrawingPanel : public DrawingPanel, public wxPanel$/;"	c
BasicDrawingPanel	src/wx/panel.cpp	/^BasicDrawingPanel::BasicDrawingPanel(wxWindow *parent, int _width, int _height)$/;"	f	class:BasicDrawingPanel
BatConfigHandler	src/wx/guiinit.cpp	/^} BatConfigHandler;$/;"	v	typeref:class:BatConfig_t	file:
BatConfig_t	src/wx/guiinit.cpp	/^static class BatConfig_t : public wxEvtHandler$/;"	c	file:
Bcj2_Decode	fex/7z_C/Bcj2.c	/^int Bcj2_Decode($/;"	f
Bilinear	src/filters/2xSaI.cpp	/^static u32 Bilinear (u32 A, u32 B, u32 x)$/;"	f	file:
Bilinear	src/filters/bilinear.cpp	/^void Bilinear(u8 *srcPtr, u32 srcPitch, u8 * \/* deltaPtr *\/,$/;"	f
Bilinear32	src/filters/bilinear.cpp	/^void Bilinear32(u8 *srcPtr, u32 srcPitch, u8 * \/* deltaPtr *\/,$/;"	f
Bilinear4	src/filters/2xSaI.cpp	/^static u32 Bilinear4 (u32 A, u32 B, u32 C, u32 D, u32 x,$/;"	f	file:
BilinearPlus	src/filters/bilinear.cpp	/^void BilinearPlus(u8 *srcPtr, u32 srcPitch, u8 * \/* deltaPtr *\/,$/;"	f
BilinearPlus32	src/filters/bilinear.cpp	/^void BilinearPlus32(u8 *srcPtr, u32 srcPitch, u8 * \/* deltaPtr *\/,$/;"	f
BinSumm	fex/7z_C/Ppmd7.h	/^  UInt16 BinSumm[128][64];$/;"	m	struct:__anon6
Binary_Extractor	fex/fex/Binary_Extractor.cpp	/^Binary_Extractor::Binary_Extractor() :$/;"	f	class:Binary_Extractor
Binary_Extractor	fex/fex/Binary_Extractor.h	/^class Binary_Extractor : public File_Extractor {$/;"	c
BindPairs	fex/7z_C/7z.h	/^  CSzBindPair *BindPairs;$/;"	m	struct:__anon12
BitmapControl	src/win32/BitmapControl.cpp	/^  BitmapControl::BitmapControl()$/;"	f	class:BitmapControl
BitmapControl	src/win32/BitmapControl.h	/^class BitmapControl : public CScrollView$/;"	c
Bits555	src/filters/2xSaImmx.asm	/^Bits555:$/;"	l
Bits565	src/filters/2xSaImmx.asm	/^Bits565:$/;"	l
Blip_Buffer	src/apu/Blip_Buffer.cpp	/^Blip_Buffer::Blip_Buffer()$/;"	f	class:Blip_Buffer
Blip_Buffer	src/apu/Blip_Buffer.h	/^class Blip_Buffer {$/;"	c
Blip_Reader	src/apu/Blip_Buffer.h	/^class Blip_Reader {$/;"	c
Blip_Synth	src/apu/Blip_Buffer.h	/^	Blip_Synth() : impl( impulses, quality ) { }$/;"	f	class:Blip_Synth
Blip_Synth	src/apu/Blip_Buffer.h	/^class Blip_Synth {$/;"	c
Blip_Synth_	src/apu/Blip_Buffer.cpp	/^Blip_Synth_::Blip_Synth_( short* p, int w ) :$/;"	f	class:Blip_Synth_
Blip_Synth_	src/apu/Blip_Buffer.h	/^	class Blip_Synth_ {$/;"	c
Blip_Synth_Fast_	src/apu/Blip_Buffer.cpp	/^Blip_Synth_Fast_::Blip_Synth_Fast_()$/;"	f	class:Blip_Synth_Fast_
Blip_Synth_Fast_	src/apu/Blip_Buffer.h	/^	class Blip_Synth_Fast_ {$/;"	c
BlockStart	src/wx/viewers.cpp	/^	void BlockStart(wxCommandEvent &ev)$/;"	f	class:Viewers::MemViewerBase
Bool	fex/7z_C/Types.h	/^typedef int Bool;$/;"	t
BottomRight	src/win32/WinHelper.h	/^      inline POINT BottomRight() const { POINT pt = { right, bottom }; return pt; }$/;"	f	class:WinHelper::CRect
BreakGroup	src/wx/widgets/wxmisc.cpp	/^void wxFarRadio::BreakGroup() {$/;"	f	class:wxFarRadio
Buf_Create	fex/7z_C/7zBuf.c	/^int Buf_Create(CBuf *p, size_t size, ISzAlloc *alloc)$/;"	f
Buf_Free	fex/7z_C/7zBuf.c	/^void Buf_Free(CBuf *p, ISzAlloc *alloc)$/;"	f
Buf_Init	fex/7z_C/7zBuf.c	/^void Buf_Init(CBuf *p)$/;"	f
Buffer16Size	src/win32/rpi.cpp	/^u32 Buffer16Size = 0;$/;"	v
BugReport	src/win32/BugReport.cpp	/^BugReport::BugReport(CWnd* pParent \/*=NULL*\/)$/;"	f	class:BugReport
BugReport	src/win32/BugReport.h	/^class BugReport : public CDialog$/;"	c
Byte	fex/7z_C/Types.h	/^typedef unsigned char Byte;$/;"	t
C	src/wx/viewers.cpp	/^	wxCheckBox *N, *Z, *C, *V, *I, *F, *T;$/;"	m	class:Viewers::DisassembleViewer	file:
C	src/wx/viewers.cpp	/^	wxCheckBox *Z, *N, *H, *C;$/;"	m	class:Viewers::GBDisassembleViewer	file:
CALC_LEVELS	src/apu/Effects_Buffer.cpp	389;"	d	file:
CASE_BRA_CONV	fex/7z_C/7zDec.c	333;"	d	file:
CASE_TYPE_TAG	src/gba/elf.cpp	149;"	d	file:
CAcceleratorManager	src/win32/AcceleratorManager.cpp	/^CAcceleratorManager::CAcceleratorManager()$/;"	f	class:CAcceleratorManager
CAcceleratorManager	src/win32/AcceleratorManager.h	/^class CAcceleratorManager : public CObject {$/;"	c
CAccelsOb	src/win32/CmdAccelOb.cpp	/^CAccelsOb::CAccelsOb()$/;"	f	class:CAccelsOb
CAccelsOb	src/win32/CmdAccelOb.cpp	/^CAccelsOb::CAccelsOb(BYTE cVirt, WORD wKey, bool bLocked)$/;"	f	class:CAccelsOb
CAccelsOb	src/win32/CmdAccelOb.cpp	/^CAccelsOb::CAccelsOb(CAccelsOb* pFrom)$/;"	f	class:CAccelsOb
CAccelsOb	src/win32/CmdAccelOb.cpp	/^CAccelsOb::CAccelsOb(LPACCEL pACCEL)$/;"	f	class:CAccelsOb
CAccelsOb	src/win32/CmdAccelOb.h	/^class CAccelsOb : public CObject {$/;"	c
CBA_ADD	src/gba/Cheats.cpp	98;"	d	file:
CBA_AND	src/gba/Cheats.cpp	77;"	d	file:
CBA_GT	src/gba/Cheats.cpp	101;"	d	file:
CBA_IF_FALSE	src/gba/Cheats.cpp	76;"	d	file:
CBA_IF_KEYS_PRESSED	src/gba/Cheats.cpp	73;"	d	file:
CBA_IF_TRUE	src/gba/Cheats.cpp	74;"	d	file:
CBA_LT	src/gba/Cheats.cpp	100;"	d	file:
CBA_OR	src/gba/Cheats.cpp	99;"	d	file:
CBA_SLIDE_CODE	src/gba/Cheats.cpp	75;"	d	file:
CBA_SUPER	src/gba/Cheats.cpp	102;"	d	file:
CBuf	fex/7z_C/7zBuf.h	/^} CBuf;$/;"	t	typeref:struct:__anon3
CByteInToLook	fex/7z_C/7zDec.c	/^} CByteInToLook;$/;"	t	typeref:struct:__anon37	file:
CC	src/libretro/Makefile	/^   CC = gcc$/;"	m
CCmdAccelOb	src/win32/CmdAccelOb.cpp	/^CCmdAccelOb::CCmdAccelOb()$/;"	f	class:CCmdAccelOb
CCmdAccelOb	src/win32/CmdAccelOb.cpp	/^CCmdAccelOb::CCmdAccelOb(BYTE cVirt, WORD wIDCommand, WORD wKey, LPCTSTR szCommand, bool bLocked)$/;"	f	class:CCmdAccelOb
CCmdAccelOb	src/win32/CmdAccelOb.cpp	/^CCmdAccelOb::CCmdAccelOb(WORD wIDCommand, LPCTSTR szCommand)$/;"	f	class:CCmdAccelOb
CCmdAccelOb	src/win32/CmdAccelOb.h	/^class CCmdAccelOb : public CObject {$/;"	c
CCriticalSection	src/win32/WinHelper.h	/^      inline CCriticalSection()       { ::InitializeCriticalSection(&m_sect); }$/;"	f	class:WinHelper::CCriticalSection
CCriticalSection	src/win32/WinHelper.h	/^  class CCriticalSection$/;"	c	namespace:WinHelper
CDeferWindowPos	src/win32/WinHelper.h	/^      inline CDeferWindowPos( const int nWindows = 1 ) : m_hdlDef( ::BeginDeferWindowPos( nWindows ) ) {}$/;"	f	class:WinHelper::CDeferWindowPos
CDeferWindowPos	src/win32/WinHelper.h	/^  class CDeferWindowPos$/;"	c	namespace:WinHelper
CDynBuf	fex/7z_C/7zBuf.h	/^} CDynBuf;$/;"	t	typeref:struct:__anon4
CFA_NOT_SET	src/gba/elf.cpp	/^  CFA_NOT_SET,$/;"	e	enum:ELFCfaMode	file:
CFA_REG_OFFSET	src/gba/elf.cpp	/^  CFA_REG_OFFSET$/;"	e	enum:ELFCfaMode	file:
CFVFMT_SD	src/wx/guiinit.cpp	/^    CFVFMT_SD, CFVFMT_UD, CFVFMT_UH$/;"	e	enum:cf_vfmt	file:
CFVFMT_UD	src/wx/guiinit.cpp	/^    CFVFMT_SD, CFVFMT_UD, CFVFMT_UH$/;"	e	enum:cf_vfmt	file:
CFVFMT_UH	src/wx/guiinit.cpp	/^    CFVFMT_SD, CFVFMT_UD, CFVFMT_UH$/;"	e	enum:cf_vfmt	file:
CHAR_PATH_SEPARATOR	fex/7z_C/Types.h	238;"	d
CHAR_PATH_SEPARATOR	fex/7z_C/Types.h	245;"	d
CHEATSEARCH_H	src/gba/CheatSearch.h	2;"	d
CHEATS_16_BIT_WRITE	src/gba/Cheats.cpp	179;"	d	file:
CHEATS_32_BIT_WRITE	src/gba/Cheats.cpp	180;"	d	file:
CHEATS_H	src/gba/Cheats.h	2;"	d
CHEAT_IS_HEX	src/gba/Cheats.cpp	302;"	d	file:
CHEAT_PATCH_ROM_16BIT	src/gba/Cheats.cpp	304;"	d	file:
CHEAT_PATCH_ROM_32BIT	src/gba/Cheats.cpp	307;"	d	file:
CHECK_ALLOC	fex/fex/blargg_source.h	65;"	d
CHECK_ALLOC	fex/fex/blargg_source.h	66;"	d
CHECK_ALLOC	src/apu/blargg_source.h	54;"	d
CHECK_ALLOC	src/apu/blargg_source.h	55;"	d
CHECK_CPUID_IS_SUPPORTED	fex/7z_C/CpuArch.c	46;"	d	file:
CHECK_CPUID_IS_SUPPORTED	fex/7z_C/CpuArch.c	48;"	d	file:
CHECK_PC	src/gba/GBA-arm.cpp	591;"	d	file:
CHECK_SYS_SSE_SUPPORT	fex/7z_C/CpuArch.c	159;"	d	file:
CHECK_SYS_SSE_SUPPORT	fex/7z_C/CpuArch.c	161;"	d	file:
CKeyboardEdit	src/win32/KeyboardEdit.cpp	/^CKeyboardEdit::CKeyboardEdit()$/;"	f	class:CKeyboardEdit
CKeyboardEdit	src/win32/KeyboardEdit.h	/^class CKeyboardEdit : public CEdit$/;"	c
CLC_USE_SYSICONS	src/wx/widgets/wx/webupdatedef.h	13;"	d
CLC_VBAM_USAGE	src/wx/widgets/wx/webupdatedef.h	12;"	d
CLEAR_ARRAY	src/gba/GBA.cpp	556;"	d	file:
CLEAR_BIT	src/gba/CheatSearch.h	37;"	d
CLock	src/win32/WinHelper.h	/^          inline CLock( CCriticalSection &sect ) : m_sect( sect ) { m_sect.Lock(); }$/;"	f	class:WinHelper::CCriticalSection::CLock
CLock	src/win32/WinHelper.h	/^      class CLock$/;"	c	class:WinHelper::CCriticalSection
CLookToRead	fex/7z_C/Types.h	/^} CLookToRead;$/;"	t	typeref:struct:__anon29
CLzma2Dec	fex/7z_C/Lzma2Dec.h	/^} CLzma2Dec;$/;"	t	typeref:struct:__anon34
CLzmaDec	fex/7z_C/LzmaDec.h	/^} CLzmaDec;$/;"	t	typeref:struct:__anon17
CLzmaProb	fex/7z_C/LzmaDec.h	18;"	d
CLzmaProb	fex/7z_C/LzmaDec.h	20;"	d
CLzmaProps	fex/7z_C/LzmaDec.h	/^} CLzmaProps;$/;"	t	typeref:struct:_CLzmaProps
CMAKE_BINARY_DIR	Makefile	/^CMAKE_BINARY_DIR = \/home\/ben\/workspace\/vbam\/code\/trunk$/;"	m
CMAKE_BINARY_DIR	po/Makefile	/^CMAKE_BINARY_DIR = \/home\/ben\/workspace\/vbam\/code\/trunk$/;"	m
CMAKE_BINARY_DIR	po/gvbam/Makefile	/^CMAKE_BINARY_DIR = \/home\/ben\/workspace\/vbam\/code\/trunk$/;"	m
CMAKE_COMMAND	Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	po/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_COMMAND	po/gvbam/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_EDIT_COMMAND	Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	po/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_EDIT_COMMAND	po/gvbam/Makefile	/^CMAKE_EDIT_COMMAND = \/usr\/bin\/ccmake$/;"	m
CMAKE_SOURCE_DIR	Makefile	/^CMAKE_SOURCE_DIR = \/home\/ben\/workspace\/vbam\/code\/trunk$/;"	m
CMAKE_SOURCE_DIR	po/Makefile	/^CMAKE_SOURCE_DIR = \/home\/ben\/workspace\/vbam\/code\/trunk$/;"	m
CMAKE_SOURCE_DIR	po/gvbam/Makefile	/^CMAKE_SOURCE_DIR = \/home\/ben\/workspace\/vbam\/code\/trunk$/;"	m
CMDEN_GB	src/wx/wxvbam.h	/^    CMDEN_GB =  (1<<0), \/\/ GB ROM loaded$/;"	e	enum:__anon55
CMDEN_GBA	src/wx/wxvbam.h	/^    CMDEN_GBA = (1<<1), \/\/ GBA ROM loaded$/;"	e	enum:__anon55
CMDEN_GDB	src/wx/wxvbam.h	/^    CMDEN_GDB = (1<<12), \/\/ gdb connected$/;"	e	enum:__anon55
CMDEN_GPLAY	src/wx/wxvbam.h	/^    CMDEN_GPLAY = (1<<9), \/\/ game playback$/;"	e	enum:__anon55
CMDEN_GREC	src/wx/wxvbam.h	/^    CMDEN_GREC = (1<<7), \/\/ game recording$/;"	e	enum:__anon55
CMDEN_LINK_ANY	src/wx/wxvbam.h	/^    CMDEN_LINK_ANY = (1<<16), \/\/ link enabled$/;"	e	enum:__anon55
CMDEN_NEVER	src/wx/wxvbam.h	/^    CMDEN_NEVER = (1<<31) \/\/ never (for NOOP)$/;"	e	enum:__anon55
CMDEN_NGDB_ANY	src/wx/wxvbam.h	/^    CMDEN_NGDB_ANY = (1<<14), \/\/ gdb not connected$/;"	e	enum:__anon55
CMDEN_NGDB_GBA	src/wx/wxvbam.h	/^    CMDEN_NGDB_GBA = (1<<13), \/\/ gdb not connected$/;"	e	enum:__anon55
CMDEN_NGPLAY	src/wx/wxvbam.h	/^    CMDEN_NGPLAY = (1<<10), \/\/ no game playback$/;"	e	enum:__anon55
CMDEN_NGREC	src/wx/wxvbam.h	/^    CMDEN_NGREC = (1<<8), \/\/ no game recording$/;"	e	enum:__anon55
CMDEN_NREC_ANY	src/wx/wxvbam.h	/^    CMDEN_NREC_ANY = (1<<15), \/\/ not a\/v recording$/;"	e	enum:__anon55
CMDEN_NSREC	src/wx/wxvbam.h	/^    CMDEN_NSREC = (1<<4), \/\/ no sound recording$/;"	e	enum:__anon55
CMDEN_NVREC	src/wx/wxvbam.h	/^    CMDEN_NVREC = (1<<6), \/\/ no video recording$/;"	e	enum:__anon55
CMDEN_REWIND	src/wx/wxvbam.h	/^    CMDEN_REWIND = (1<<2), \/\/ rewind states available$/;"	e	enum:__anon55
CMDEN_SAVST	src/wx/wxvbam.h	/^    CMDEN_SAVST = (1<<11), \/\/ any save states$/;"	e	enum:__anon55
CMDEN_SREC	src/wx/wxvbam.h	/^    CMDEN_SREC = (1<<3), \/\/ sound recording in progress$/;"	e	enum:__anon55
CMDEN_VREC	src/wx/wxvbam.h	/^    CMDEN_VREC = (1<<5),  \/\/ video recording$/;"	e	enum:__anon55
CMN_RD_RS	src/gba/GBA-thumb.cpp	137;"	d	file:
CMT_RE_START	src/wx/wxvbam.cpp	159;"	d	file:
CMapStringToWord	src/win32/AcceleratorManager.h	/^typedef CMap< CString, LPCSTR, WORD, WORD& > CMapStringToWord;$/;"	t
CMapStringToWord	src/win32/Commands.cpp	/^typedef CMap< CString, LPCSTR, WORD, WORD& > CMapStringToWord;$/;"	t	file:
CMapWordToCCmdAccelOb	src/win32/AcceleratorManager.h	/^typedef CMap< WORD, WORD&, CCmdAccelOb*, CCmdAccelOb*& > CMapWordToCCmdAccelOb;$/;"	t
CMyTabCtrl	src/win32/LinkOptions.cpp	/^CMyTabCtrl::CMyTabCtrl(){$/;"	f	class:CMyTabCtrl
CMyTabCtrl	src/win32/LinkOptions.h	/^class CMyTabCtrl : public CTabCtrl {$/;"	c
CNtfsFileTime	fex/7z_C/7z.h	/^} CNtfsFileTime;$/;"	t	typeref:struct:__anon13
COLEV	src/gba/Globals.cpp	/^u16 COLEV    = 0x0000;$/;"	v
COLORTYPE	src/filters/hq/c/hq_base.h	34;"	d
COLORTYPE	src/filters/hq/c/hq_base.h	439;"	d
COLORTYPE	src/filters/hq/c/hq_base.h	49;"	d
COLY	src/gba/Globals.cpp	/^u16 COLY     = 0x0000;$/;"	v
COMMAND	src/gba/RTC.cpp	/^   COMMAND,$/;"	e	enum:RTCSTATE	file:
COMMENT	src/common/memgzio.c	62;"	d	file:
COMM_JOYCNT	src/gba/GBALink.h	31;"	d
COMM_JOYSTAT	src/gba/GBALink.h	36;"	d
COMM_JOY_RECV_H	src/gba/GBALink.h	33;"	d
COMM_JOY_RECV_L	src/gba/GBALink.h	32;"	d
COMM_JOY_TRANS_H	src/gba/GBALink.h	35;"	d
COMM_JOY_TRANS_L	src/gba/GBALink.h	34;"	d
COMM_RCNT	src/gba/GBALink.h	30;"	d
COMM_SIOCNT	src/gba/GBALink.h	23;"	d
COMM_SIODATA32_H	src/gba/GBALink.h	22;"	d
COMM_SIODATA32_L	src/gba/GBALink.h	21;"	d
COMM_SIODATA8	src/gba/GBALink.h	24;"	d
COMM_SIOMLT_SEND	src/gba/GBALink.h	25;"	d
COMM_SIOMULTI0	src/gba/GBALink.h	26;"	d
COMM_SIOMULTI1	src/gba/GBALink.h	27;"	d
COMM_SIOMULTI2	src/gba/GBALink.h	28;"	d
COMM_SIOMULTI3	src/gba/GBALink.h	29;"	d
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	107;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	112;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	119;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	122;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	133;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	13;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	152;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	160;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	165;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	170;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	177;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	194;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	197;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	200;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	24;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	32;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	38;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	44;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	50;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	56;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	70;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	77;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	85;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	88;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	90;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	99;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	104;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	112;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	124;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	127;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	12;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	135;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	154;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	162;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	167;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	170;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	187;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	18;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	190;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	193;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	29;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	37;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	43;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	49;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	55;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	61;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	75;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	82;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	90;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	93;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	95;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	100;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	108;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	114;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	126;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	135;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	154;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	15;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	172;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	180;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	185;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	25;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	33;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	39;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	46;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	52;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	59;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	64;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	72;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	79;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	93;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	105;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	113;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	128;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	137;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	14;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	156;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	173;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	178;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	20;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	30;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	38;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	44;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	51;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	57;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	64;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	69;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	77;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	84;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	98;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	101;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	109;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	115;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	127;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	136;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	16;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	173;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	181;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	186;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	26;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	34;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	40;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	47;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	53;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	60;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	65;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	73;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	80;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	94;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	106;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	114;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	120;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	129;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	138;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	157;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	174;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	179;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	31;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	39;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	45;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	52;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	58;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	65;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	70;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	78;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	99;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	103;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	116;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	129;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	140;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	143;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	156;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	174;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	17;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	182;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	187;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	28;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	35;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	41;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	61;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	66;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	74;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	81;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	95;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	100;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	108;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	121;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	142;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	145;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	158;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	175;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	180;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	22;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	33;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	40;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	46;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	66;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	71;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	79;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	86;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	147;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	20;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	149;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	25;"	d	file:
CONSOLE_OUTPUT	src/gba/GBA-arm.cpp	101;"	d	file:
CONSOLE_OUTPUT	src/gba/GBA-arm.cpp	106;"	d	file:
CONST_CAST	fex/fex/blargg_common.h	72;"	d
CONST_CAST	src/apu/blargg_common.h	31;"	d
CONST_CAST	src/apu/blargg_common.h	34;"	d
CPUCheckDMA	src/gba/GBA.cpp	/^void CPUCheckDMA(int reason, int dmamask)$/;"	f
CPUCleanUp	src/gba/GBA.cpp	/^void CPUCleanUp()$/;"	f
CPUCompareVCOUNT	src/gba/GBA.cpp	/^void CPUCompareVCOUNT()$/;"	f
CPUExportEepromFile	src/gba/GBA.cpp	/^bool CPUExportEepromFile(const char *fileName)$/;"	f
CPUImportEepromFile	src/gba/GBA.cpp	/^bool CPUImportEepromFile(const char *fileName)$/;"	f
CPUInit	src/gba/GBA.cpp	/^void CPUInit(const char *biosFileName, bool useBiosFile)$/;"	f
CPUInterrupt	src/gba/GBA.cpp	/^void CPUInterrupt()$/;"	f
CPUIsELF	src/gba/GBA.cpp	/^bool CPUIsELF(const char *file)$/;"	f
CPUIsGBABios	src/gba/GBA.cpp	/^bool CPUIsGBABios(const char * file)$/;"	f
CPUIsGBAImage	src/gba/GBA.cpp	/^bool CPUIsGBAImage(const char * file)$/;"	f
CPUIsGBBios	src/gb/GB.cpp	/^bool CPUIsGBBios(const char * file)$/;"	f
CPUIsZipFile	src/gba/GBA.cpp	/^bool CPUIsZipFile(const char * file)$/;"	f
CPULoadRom	src/gba/GBA.cpp	/^int CPULoadRom(const char *szFile)$/;"	f
CPULoop	src/gba/GBA.cpp	/^void CPULoop(int ticks)$/;"	f
CPUReadBatteryFile	src/gba/GBA.cpp	/^bool CPUReadBatteryFile(const char *fileName)$/;"	f
CPUReadByte	src/gba/GBAinline.h	/^static inline u8 CPUReadByte(u32 address)$/;"	f
CPUReadByteQuick	src/gba/GBAinline.h	38;"	d
CPUReadByteQuick	src/win32/MemoryViewerDlg.cpp	21;"	d	file:
CPUReadByteQuick	src/win32/VBA.cpp	2603;"	d	file:
CPUReadGSASPSnapshot	src/gba/GBA.cpp	/^bool CPUReadGSASPSnapshot(const char *fileName)$/;"	f
CPUReadGSASnapshot	src/gba/GBA.cpp	/^bool CPUReadGSASnapshot(const char *fileName)$/;"	f
CPUReadHalfWord	src/gba/GBAinline.h	/^static inline u32 CPUReadHalfWord(u32 address)$/;"	f
CPUReadHalfWordQuick	src/gba/GBAinline.h	41;"	d
CPUReadHalfWordQuick	src/win32/MemoryViewerDlg.cpp	25;"	d	file:
CPUReadHalfWordSigned	src/gba/GBAinline.h	/^static inline s16 CPUReadHalfWordSigned(u32 address)$/;"	f
CPUReadMemState	src/gba/GBA.cpp	/^bool CPUReadMemState(char *memory, int available)$/;"	f
CPUReadMemory	src/gba/GBAinline.h	/^static inline u32 CPUReadMemory(u32 address)$/;"	f
CPUReadMemoryQuick	src/gba/GBAinline.h	44;"	d
CPUReadMemoryQuick	src/win32/MemoryViewerDlg.cpp	29;"	d	file:
CPUReadState	src/gba/GBA.cpp	/^bool CPUReadState(const char * file)$/;"	f
CPUReadState	src/gba/GBA.cpp	/^bool CPUReadState(const u8* data, unsigned size)$/;"	f
CPUReadState	src/gba/GBA.cpp	/^static bool CPUReadState(gzFile gzFile)$/;"	f	file:
CPUReset	src/gba/GBA.cpp	/^void CPUReset()$/;"	f
CPUSoftwareInterrupt	src/gba/GBA.cpp	/^void CPUSoftwareInterrupt()$/;"	f
CPUSoftwareInterrupt	src/gba/GBA.cpp	/^void CPUSoftwareInterrupt(int comment)$/;"	f
CPUSwap	src/gba/GBA.cpp	/^static void CPUSwap(u32 *a, u32 *b)$/;"	f	file:
CPUSwap	src/gba/GBA.cpp	/^static void CPUSwap(volatile u32 *a, volatile u32 *b)$/;"	f	file:
CPUSwitchMode	src/gba/GBA.cpp	/^void CPUSwitchMode(int mode, bool saveState)$/;"	f
CPUSwitchMode	src/gba/GBA.cpp	/^void CPUSwitchMode(int mode, bool saveState, bool breakLoop)$/;"	f
CPUUndefinedException	src/gba/GBA.cpp	/^void CPUUndefinedException()$/;"	f
CPUUpdateCPSR	src/gba/GBA.cpp	/^void CPUUpdateCPSR()$/;"	f
CPUUpdateFlags	src/gba/GBA.cpp	/^void CPUUpdateFlags()$/;"	f
CPUUpdateFlags	src/gba/GBA.cpp	/^void CPUUpdateFlags(bool breakLoop)$/;"	f
CPUUpdateRegister	src/gba/GBA.cpp	/^void CPUUpdateRegister(u32 address, u16 value)$/;"	f
CPUUpdateRender	src/gba/GBA.cpp	/^void CPUUpdateRender()$/;"	f
CPUUpdateRenderBuffers	src/gba/GBA.cpp	/^void CPUUpdateRenderBuffers(bool force)$/;"	f
CPUUpdateTicks	src/gba/GBA.cpp	/^inline int CPUUpdateTicks()$/;"	f
CPUUpdateWindow0	src/gba/GBA.cpp	/^void CPUUpdateWindow0()$/;"	f
CPUUpdateWindow1	src/gba/GBA.cpp	/^void CPUUpdateWindow1()$/;"	f
CPUWriteBMPFile	src/gba/GBA.cpp	/^bool CPUWriteBMPFile(const char *fileName)$/;"	f
CPUWriteBatteryFile	src/gba/GBA.cpp	/^bool CPUWriteBatteryFile(const char *fileName)$/;"	f
CPUWriteByte	src/gba/GBAinline.h	/^static inline void CPUWriteByte(u32 address, u8 b)$/;"	f
CPUWriteByteQuick	src/win32/MemoryViewerDlg.cpp	23;"	d	file:
CPUWriteByteQuick	src/wx/viewers.cpp	523;"	d	file:
CPUWriteGSASnapshot	src/gba/GBA.cpp	/^bool CPUWriteGSASnapshot(const char *fileName,$/;"	f
CPUWriteHalfWord	src/gba/GBAinline.h	/^static inline void CPUWriteHalfWord(u32 address, u16 value)$/;"	f
CPUWriteHalfWordQuick	src/win32/MemoryViewerDlg.cpp	27;"	d	file:
CPUWriteHalfWordQuick	src/wx/viewers.cpp	525;"	d	file:
CPUWriteMemState	src/gba/GBA.cpp	/^bool CPUWriteMemState(char *memory, int available)$/;"	f
CPUWriteMemory	src/gba/GBAinline.h	/^static inline void CPUWriteMemory(u32 address, u32 value)$/;"	f
CPUWriteMemoryQuick	src/win32/MemoryViewerDlg.cpp	31;"	d	file:
CPUWriteMemoryQuick	src/wx/viewers.cpp	527;"	d	file:
CPUWritePNGFile	src/gba/GBA.cpp	/^bool CPUWritePNGFile(const char *fileName)$/;"	f
CPUWriteState	src/gba/GBA.cpp	/^bool CPUWriteState(const char *file)$/;"	f
CPUWriteState	src/gba/GBA.cpp	/^static bool CPUWriteState(gzFile gzFile)$/;"	f	file:
CPUWriteState	src/gba/GBA.cpp	/^unsigned int CPUWriteState(u8* data, unsigned size)$/;"	f
CPU_FIRM_AMD	fex/7z_C/CpuArch.h	/^  CPU_FIRM_AMD,$/;"	e	enum:__anon36
CPU_FIRM_INTEL	fex/7z_C/CpuArch.h	/^  CPU_FIRM_INTEL,$/;"	e	enum:__anon36
CPU_FIRM_VIA	fex/7z_C/CpuArch.h	/^  CPU_FIRM_VIA$/;"	e	enum:__anon36
CPU_Is_Aes_Supported	fex/7z_C/CpuArch.c	/^Bool CPU_Is_Aes_Supported()$/;"	f
CPU_Is_InOrder	fex/7z_C/CpuArch.c	/^Bool CPU_Is_InOrder()$/;"	f
CPU_Sys_Is_SSE_Supported	fex/7z_C/CpuArch.c	/^static Bool CPU_Sys_Is_SSE_Supported()$/;"	f	file:
CPoint	src/win32/WinHelper.h	/^      inline CPoint( LPARAM lParam ) { x = LOWORD( lParam ); y = HIWORD(lParam); }$/;"	f	class:WinHelper::CPoint
CPoint	src/win32/WinHelper.h	/^      inline CPoint( const POINT &pt ) { x = pt.x; y = pt.y; }$/;"	f	class:WinHelper::CPoint
CPoint	src/win32/WinHelper.h	/^      inline CPoint( int nX, int nY ) { x = nX; y = nY; }$/;"	f	class:WinHelper::CPoint
CPoint	src/win32/WinHelper.h	/^      inline CPoint() {};$/;"	f	class:WinHelper::CPoint
CPoint	src/win32/WinHelper.h	/^  class CPoint : public tagPOINT$/;"	c	namespace:WinHelper
CPpmd7	fex/7z_C/Ppmd7.h	/^} CPpmd7;$/;"	t	typeref:struct:__anon6
CPpmd7_Context	fex/7z_C/Ppmd7.h	/^} CPpmd7_Context;$/;"	t	typeref:struct:CPpmd7_Context_
CPpmd7_Context_	fex/7z_C/Ppmd7.h	/^typedef struct CPpmd7_Context_$/;"	s
CPpmd7_Context_Ref	fex/7z_C/Ppmd7.h	/^  CPpmd7_Context_Ref;$/;"	t	typeref:struct:CPpmd7_Context_
CPpmd7_Node	fex/7z_C/Ppmd7.c	/^} CPpmd7_Node;$/;"	t	typeref:struct:CPpmd7_Node_	file:
CPpmd7_Node_	fex/7z_C/Ppmd7.c	/^typedef struct CPpmd7_Node_$/;"	s	file:
CPpmd7_Node_Ref	fex/7z_C/Ppmd7.c	/^  CPpmd7_Node_Ref;$/;"	t	typeref:struct:CPpmd7_Node_	file:
CPpmd7z_RangeDec	fex/7z_C/Ppmd7.h	/^} CPpmd7z_RangeDec;$/;"	t	typeref:struct:__anon8
CPpmd7z_RangeEnc	fex/7z_C/Ppmd7.h	/^} CPpmd7z_RangeEnc;$/;"	t	typeref:struct:__anon9
CPpmd_Byte_Ref	fex/7z_C/Ppmd.h	/^  CPpmd_Byte_Ref;$/;"	t
CPpmd_See	fex/7z_C/Ppmd.h	/^} CPpmd_See;$/;"	t	typeref:struct:__anon20
CPpmd_State	fex/7z_C/Ppmd.h	/^} CPpmd_State;$/;"	t	typeref:struct:__anon21
CPpmd_State_Ref	fex/7z_C/Ppmd.h	/^  CPpmd_State_Ref;$/;"	t
CPpmd_Void_Ref	fex/7z_C/Ppmd.h	/^  CPpmd_Void_Ref;$/;"	t
CProb	fex/7z_C/Bcj2.c	7;"	d	file:
CProb	fex/7z_C/Bcj2.c	9;"	d	file:
CRC_FUNC	fex/7z_C/7zCrc.c	/^typedef UInt32 (MY_FAST_CALL *CRC_FUNC)(UInt32 v, const void *data, size_t size, const UInt32 *table);$/;"	t	file:
CRC_GET_DIGEST	fex/7z_C/7zCrc.h	17;"	d
CRC_INIT_VAL	fex/7z_C/7zCrc.h	16;"	d
CRC_NUM_TABLES	fex/7z_C/7zCrc.c	10;"	d	file:
CRC_NUM_TABLES	fex/7z_C/7zCrc.c	12;"	d	file:
CRC_UPDATE_BYTE	fex/7z_C/7zCrc.h	18;"	d
CRC_UPDATE_BYTE_2	fex/7z_C/7zCrc.c	22;"	d	file:
CRC_UPDATE_BYTE_2	fex/7z_C/7zCrcOpt.c	8;"	d	file:
CRect	src/win32/WinHelper.h	/^      inline CRect() {}$/;"	f	class:WinHelper::CRect
CRect	src/win32/WinHelper.h	/^      inline CRect(int xLeft, int yTop, int xRight, int yBottom) { Set( xLeft, yTop, xRight, yBottom ); }$/;"	f	class:WinHelper::CRect
CRect	src/win32/WinHelper.h	/^      inline explicit CRect( const RECT& rhs ) { Set( rhs.left, rhs.top, rhs.right, rhs.bottom );}$/;"	f	class:WinHelper::CRect
CRect	src/win32/WinHelper.h	/^  class CRect : public tagRECT$/;"	c	namespace:WinHelper
CScrollInfo	src/win32/WinHelper.h	/^      CScrollInfo( UINT fPassedMask ) { cbSize = sizeof( tagSCROLLINFO ); fMask = fPassedMask; }$/;"	f	class:WinHelper::CScrollInfo
CScrollInfo	src/win32/WinHelper.h	/^  class CScrollInfo : public tagSCROLLINFO$/;"	c	namespace:WinHelper
CSecToLook	fex/7z_C/Types.h	/^} CSecToLook;$/;"	t	typeref:struct:__anon30
CSecToRead	fex/7z_C/Types.h	/^} CSecToRead;$/;"	t	typeref:struct:__anon31
CSize	src/win32/WinHelper.h	/^      inline CSize() {};$/;"	f	class:WinHelper::CSize
CSize	src/win32/WinHelper.h	/^      inline explicit CSize( const SIZE &size ) { cx = size.cx; cy = size.cy; }$/;"	f	class:WinHelper::CSize
CSize	src/win32/WinHelper.h	/^      inline explicit CSize( long nSizeX, long nSizeY ) { cx = nSizeX; cy = nSizeY; }$/;"	f	class:WinHelper::CSize
CSize	src/win32/WinHelper.h	/^  class CSize : public tagSIZE$/;"	c	namespace:WinHelper
CSzAr	fex/7z_C/7z.h	/^} CSzAr;$/;"	t	typeref:struct:__anon15
CSzArEx	fex/7z_C/7z.h	/^} CSzArEx;$/;"	t	typeref:struct:__anon16
CSzBindPair	fex/7z_C/7z.h	/^} CSzBindPair;$/;"	t	typeref:struct:__anon11
CSzCoderInfo	fex/7z_C/7z.h	/^} CSzCoderInfo;$/;"	t	typeref:struct:__anon10
CSzData	fex/7z_C/7zIn.c	/^}CSzData;$/;"	t	typeref:struct:_CSzState	file:
CSzFileItem	fex/7z_C/7z.h	/^} CSzFileItem;$/;"	t	typeref:struct:__anon14
CSzFolder	fex/7z_C/7z.h	/^} CSzFolder;$/;"	t	typeref:struct:__anon12
CTX	fex/7z_C/Ppmd7.c	27;"	d	file:
CTX_PTR	fex/7z_C/Ppmd7.c	/^typedef CPpmd7_Context * CTX_PTR;$/;"	t	file:
CXX	src/libretro/Makefile	/^   CXX = g++$/;"	m
C_CHECK_PC	src/gba/GBA-arm.cpp	945;"	d	file:
C_FLAG	src/gb/gb.h	4;"	d
C_FLAG	src/gba/Globals.cpp	/^bool C_FLAG = 0;$/;"	v
C_SETCOND_ADD	src/gba/GBA-arm.cpp	722;"	d	file:
C_SETCOND_LOGICAL	src/gba/GBA-arm.cpp	718;"	d	file:
C_SETCOND_SUB	src/gba/GBA-arm.cpp	730;"	d	file:
Cache	fex/7z_C/Ppmd7.h	/^  Byte Cache;$/;"	m	struct:__anon9
CacheSize	fex/7z_C/Ppmd7.h	/^  UInt64 CacheSize;$/;"	m	struct:__anon9
CairoDrawingPanel	src/wx/drawing.h	/^class CairoDrawingPanel : public DrawingPanel, public wxPanel$/;"	c
CairoDrawingPanel	src/wx/panel.cpp	/^CairoDrawingPanel::CairoDrawingPanel(wxWindow *parent, int _width, int _height)$/;"	f	class:CairoDrawingPanel
Callback_File_Reader	fex/fex/Data_Reader.cpp	/^Callback_File_Reader::Callback_File_Reader( callback_t c, long s, void* d ) :$/;"	f	class:Callback_File_Reader
Callback_File_Reader	fex/fex/Data_Reader.h	/^class Callback_File_Reader : public File_Reader {$/;"	c
Callback_Reader	fex/fex/Data_Reader.cpp	/^Callback_Reader::Callback_Reader( callback_t c, long s, void* d ) :$/;"	f	class:Callback_Reader
Callback_Reader	fex/fex/Data_Reader.h	/^class Callback_Reader : public Data_Reader {$/;"	c
CartridgeGB	src/gtk/window.h	/^    CartridgeGB,$/;"	e	enum:VBA::Window::ECartridge
CartridgeGBA	src/gtk/window.h	/^    CartridgeGBA$/;"	e	enum:VBA::Window::ECartridge
CartridgeNone	src/gtk/window.h	/^    CartridgeNone,$/;"	e	enum:VBA::Window::ECartridge
ChangeBMP	src/wx/viewsupt.cpp	/^    void GfxViewer::ChangeBMP()$/;"	f	class:Viewers::GfxViewer
ChangeBackdrop	src/wx/gfxviewers.cpp	/^	void ChangeBackdrop(wxCommandEvent &ev)$/;"	f	class:Viewers::PaletteViewer
ChangeMag	src/wx/sys.cpp	/^void PrintDialog::ChangeMag(wxCommandEvent &evt)$/;"	f	class:PrintDialog
ChangeType	src/wx/guiinit.cpp	/^    void ChangeType(wxCommandEvent &ev)$/;"	f	class:BatConfig_t
Char	src/win32/glfont.h	/^	GLFONTCHAR *Char;$/;"	m	struct:__anon69
CheatCBA	src/gtk/cheatedit.h	/^  CheatCBA,$/;"	e	enum:VBA::ECheatType
CheatEditDialog	src/gtk/cheatedit.cpp	/^CheatEditDialog::CheatEditDialog(GtkDialog* _pstDialog, const Glib::RefPtr<Gtk::Builder>& refBuilder) :$/;"	f	class:VBA::CheatEditDialog
CheatEditDialog	src/gtk/cheatedit.h	/^class CheatEditDialog : public Gtk::Dialog$/;"	c	namespace:VBA
CheatFindFill	src/wx/guiinit.cpp	/^    CheatFindFill() : wxValidator() {}$/;"	f	class:CheatFindFill
CheatFindFill	src/wx/guiinit.cpp	/^    CheatFindFill(const CheatFindFill &e) : wxValidator() {}$/;"	f	class:CheatFindFill
CheatFindFill	src/wx/guiinit.cpp	/^class CheatFindFill : public wxValidator$/;"	c	file:
CheatFind_t	src/wx/guiinit.cpp	/^    CheatFind_t() : wxEvtHandler(), valsrc(0), size(0), op(0), fmt(0), val_s() {}$/;"	f	class:CheatFind_t
CheatFind_t	src/wx/guiinit.cpp	/^static class CheatFind_t : public wxEvtHandler$/;"	c	file:
CheatGG	src/gtk/cheatedit.h	/^  CheatGG$/;"	e	enum:VBA::ECheatType
CheatGS	src/gtk/cheatedit.h	/^  CheatGS,$/;"	e	enum:VBA::ECheatType
CheatGSA	src/gtk/cheatedit.h	/^  CheatGSA,$/;"	e	enum:VBA::ECheatType
CheatGeneric	src/gtk/cheatedit.h	/^  CheatGeneric,$/;"	e	enum:VBA::ECheatType
CheatListCtrl	src/wx/guiinit.cpp	/^class CheatListCtrl : public wxListCtrl$/;"	c	file:
CheatListDialog	src/gtk/cheatlist.cpp	/^CheatListDialog::CheatListDialog(GtkDialog* _pstDialog, const Glib::RefPtr<Gtk::Builder>& refBuilder) :$/;"	f	class:VBA::CheatListDialog
CheatListDialog	src/gtk/cheatlist.h	/^class CheatListDialog : public Gtk::Dialog$/;"	c	namespace:VBA
CheatListFill	src/wx/guiinit.cpp	/^    CheatListFill() : wxValidator() {}$/;"	f	class:CheatListFill
CheatListFill	src/wx/guiinit.cpp	/^    CheatListFill(const CheatListFill &e) : wxValidator() {}$/;"	f	class:CheatListFill
CheatListFill	src/wx/guiinit.cpp	/^class CheatListFill : public wxValidator$/;"	c	file:
CheatList_t	src/wx/guiinit.cpp	/^static class CheatList_t : public wxEvtHandler$/;"	c	file:
CheatSearchBlock	src/gba/CheatSearch.h	/^struct CheatSearchBlock {$/;"	s
CheatSearchData	src/gba/CheatSearch.h	/^struct CheatSearchData {$/;"	s
CheatsData	src/gba/Cheats.h	/^struct CheatsData {$/;"	s
Check	src/wx/guiinit.cpp	/^    void Check(wxListEvent &ev)$/;"	f	class:CheatList_t
Check	src/wx/widgets/checkedlistctrl.cpp	/^void wxCheckedListCtrl::Check(long item, bool checked)$/;"	f	class:wxCheckedListCtrl
CheckAll	src/wx/widgets/checkedlistctrl.cpp	/^void wxCheckedListCtrl::CheckAll(bool check)$/;"	f	class:wxCheckedListCtrl
CheckBit	src/wx/viewers.cpp	/^	void CheckBit(wxCommandEvent &ev)$/;"	f	class:Viewers::IOViewer
CheckConn	src/gba/GBALink.cpp	/^void lclient::CheckConn(void){$/;"	f	class:lclient
CheckFlag	fex/7z_C/CpuArch.c	/^static UInt32 CheckFlag(UInt32 flag)$/;"	f	file:
CheckKey	src/wx/guiinit.cpp	/^    void CheckKey(wxCommandEvent &ev)$/;"	f	class:AccelConfig_t
CheckSupportedFolder	fex/7z_C/7zDec.c	/^static SRes CheckSupportedFolder(const CSzFolder *f)$/;"	f	file:
CleanLocalLink	src/gba/GBALink.cpp	/^void CleanLocalLink()$/;"	f
CleanLocalLink	src/gba/GBALink.h	/^inline void CleanLocalLink() { }$/;"	f
Clear	src/wx/viewers.cpp	/^void LogDialog::Clear(wxCommandEvent &ev)$/;"	f	class:LogDialog
Click	src/wx/viewsupt.cpp	/^    void GfxPanel::Click(wxMouseEvent &ev)$/;"	f	class:Viewers::GfxPanel
ClientInfoDisplay	src/gba/GBALink.h	/^class ClientInfoDisplay {$/;"	c
ClientOKButton	src/wx/guiinit.cpp	/^    void ClientOKButton(wxCommandEvent &ev)$/;"	f	class:NetLink_t
Clone	src/wx/guiinit.cpp	/^    wxObject *Clone() const { return new CheatFindFill(*this); }$/;"	f	class:CheatFindFill
Clone	src/wx/guiinit.cpp	/^    wxObject *Clone() const { return new CheatListFill(*this); }$/;"	f	class:CheatListFill
Clone	src/wx/guiinit.cpp	/^    wxObject *Clone() const { return new GBACtrlEnabler(*this); }$/;"	f	class:GBACtrlEnabler
Clone	src/wx/guiinit.cpp	/^    wxObject *Clone() const { return new IPHostValidator(*this); }$/;"	f	class:IPHostValidator
Clone	src/wx/guiinit.cpp	/^    wxObject *Clone() const { return new PluginEnabler(*this); }$/;"	f	class:PluginEnabler
Clone	src/wx/guiinit.cpp	/^    wxObject *Clone() const { return new PluginListFiller(*this); }$/;"	f	class:PluginListFiller
Clone	src/wx/guiinit.cpp	/^    wxObject *Clone() const { return new ScreenModeList(*this); }$/;"	f	class:ScreenModeList
Clone	src/wx/guiinit.cpp	/^    wxObject *Clone() const { return new SoundConfigLoad(*this); }$/;"	f	class:SoundConfigLoad
Clone	src/wx/widgets/wx/joyedit.h	/^    wxObject *Clone() const { return new wxJoyKeyValidator(val); }$/;"	f	class:wxJoyKeyValidator
Clone	src/wx/widgets/wx/keyedit.h	/^    wxObject *Clone() const { return new wxKeyValidator(val); }$/;"	f	class:wxKeyValidator
Clone	src/wx/widgets/wx/wxmisc.h	/^    wxObject *Clone() const { return new wxBoolEnValidator(*this); }$/;"	f	class:wxBoolEnValidator
Clone	src/wx/widgets/wx/wxmisc.h	/^    wxObject *Clone() const { return new wxBoolIntEnValidator(*this); }$/;"	f	class:wxBoolIntEnValidator
Clone	src/wx/widgets/wx/wxmisc.h	/^    wxObject *Clone() const { return new wxBoolIntValidator(vptr, val, mask); }$/;"	f	class:wxBoolIntValidator
Clone	src/wx/widgets/wx/wxmisc.h	/^    wxObject *Clone() const { return new wxBoolRevEnValidator(*this); }$/;"	f	class:wxBoolRevEnValidator
Clone	src/wx/widgets/wx/wxmisc.h	/^    wxObject *Clone() const { return new wxBoolRevValidator(vptr); }$/;"	f	class:wxBoolRevValidator
Clone	src/wx/widgets/wx/wxmisc.h	/^    wxObject *Clone() const { return new wxColorValidator(*this); }$/;"	f	class:wxColorValidator
Clone	src/wx/widgets/wx/wxmisc.h	/^    wxObject *Clone() const { return new wxFileDirPickerValidator(vptr); }$/;"	f	class:wxFileDirPickerValidator
Close	src/win32/WavWriter.cpp	/^void WavWriter::Close()$/;"	f	class:WavWriter
CloseDlg	src/wx/viewsupt.cpp	/^    void Viewer::CloseDlg(wxCloseEvent &ev)$/;"	f	class:Viewers::Viewer
CloseLink	src/gba/GBALink.cpp	/^void CloseLink(void){$/;"	f
CloseLink	src/gba/GBALink.h	/^inline void CloseLink() { }$/;"	f
Code	fex/7z_C/Ppmd7.h	/^  UInt32 Code;$/;"	m	struct:__anon8
Coders	fex/7z_C/7z.h	/^  CSzCoderInfo *Coders;$/;"	m	struct:__anon12
ColorButton	src/win32/ColorButton.cpp	/^ColorButton::ColorButton()$/;"	f	class:ColorButton
ColorButton	src/win32/ColorButton.h	/^class ColorButton : public CButton$/;"	c
ColorButton	src/wx/guiinit.cpp	/^    void ColorButton(wxCommandEvent &ev)$/;"	f	class:GBColorConfig_t
ColorControl	src/win32/ColorControl.cpp	/^ColorControl::ColorControl()$/;"	f	class:ColorControl
ColorControl	src/win32/ColorControl.h	/^class ColorControl : public CWnd$/;"	c
ColorFormatBGR	src/gtk/window.h	/^    ColorFormatBGR$/;"	e	enum:VBA::Window::EColorFormat
ColorFormatRGB	src/gtk/window.h	/^    ColorFormatRGB,$/;"	e	enum:VBA::Window::EColorFormat
ColorReset	src/wx/guiinit.cpp	/^    void ColorReset(wxCommandEvent &ev)$/;"	f	class:GBColorConfig_t
ColorSel	src/wx/guiinit.cpp	/^    void ColorSel(wxCommandEvent &ev)$/;"	f	class:GBColorConfig_t
ColorView	src/wx/viewsupt.cpp	/^    ColorView::ColorView(wxWindow *parent, wxWindowID id)$/;"	f	class:Viewers::ColorView
ColorView	src/wx/viewsupt.h	/^    class ColorView : public wxControl$/;"	c	namespace:Viewers
CommandSel	src/wx/guiinit.cpp	/^    void CommandSel(wxTreeEvent &ev)$/;"	f	class:AccelConfig_t
CompileUnit	src/gba/elf.h	/^struct CompileUnit {$/;"	s
Config	src/gtk/configfile.cpp	/^namespace Config$/;"	n	namespace:VBA	file:
Config	src/gtk/configfile.h	/^namespace Config$/;"	n	namespace:VBA
Connect	src/win32/AcceleratorManager.cpp	/^void CAcceleratorManager::Connect(CWnd* pWnd, bool bAutoSave)$/;"	f	class:CAcceleratorManager
ConnectStart	src/win32/LinkOptions.cpp	/^    void ConnectStart(const sf::IPAddress& addr)$/;"	f	class:Win32ClientInfoDisplay
Connected	src/win32/LinkOptions.cpp	/^	void Connected()$/;"	f	class:Win32ServerInfoDisplay
Connected	src/win32/LinkOptions.cpp	/^    void Connected()$/;"	f	class:Win32ClientInfoDisplay
CopyKeys	src/win32/Joypad.cpp	/^void CopyKeys(KeyList &Out, KeyList &In)$/;"	f
Count	fex/7z_C/Ppmd.h	/^  Byte Count;  \/* Count to next change of Shift *\/$/;"	m	struct:__anon20
Crc	fex/7z_C/7z.h	/^  UInt32 Crc;$/;"	m	struct:__anon14
CrcCalc	fex/7z_C/7zCrc.c	/^UInt32 MY_FAST_CALL CrcCalc(const void *data, size_t size)$/;"	f
CrcDefined	fex/7z_C/7z.h	/^  Byte CrcDefined;$/;"	m	struct:__anon14
CrcGenerateTable	fex/7z_C/7zCrc.c	/^void MY_FAST_CALL CrcGenerateTable()$/;"	f
CrcUpdate	fex/7z_C/7zCrc.c	/^UInt32 MY_FAST_CALL CrcUpdate(UInt32 v, const void *data, size_t size)$/;"	f
CrcUpdateT1	fex/7z_C/7zCrc.c	/^static UInt32 MY_FAST_CALL CrcUpdateT1(UInt32 v, const void *data, size_t size, const UInt32 *table)$/;"	f	file:
CrcUpdateT4	fex/7z_C/7zCrcOpt.c	/^UInt32 MY_FAST_CALL CrcUpdateT4(UInt32 v, const void *data, size_t size, const UInt32 *table)$/;"	f
CrcUpdateT8	fex/7z_C/7zCrcOpt.c	/^UInt32 MY_FAST_CALL CrcUpdateT8(UInt32 v, const void *data, size_t size, const UInt32 *table)$/;"	f
Create	src/wx/widgets/checkedlistctrl.cpp	/^bool wxCheckedListCtrl::Create(wxWindow* parent, wxWindowID id, const wxPoint& pt,$/;"	f	class:wxCheckedListCtrl
CreateAVIFile	src/win32/AVIWrite.cpp	/^bool AVIWrite::CreateAVIFile( LPCTSTR filename )$/;"	f	class:AVIWrite
CreateAudioStream	src/win32/AVIWrite.cpp	/^bool AVIWrite::CreateAudioStream( WORD channelCount, DWORD sampleRate, WORD sampleBits, HWND parentWnd )$/;"	f	class:AVIWrite
CreateDefaultTable	src/win32/AcceleratorManager.cpp	/^bool CAcceleratorManager::CreateDefaultTable()$/;"	f	class:CAcceleratorManager
CreateEntry	src/win32/AcceleratorManager.cpp	/^bool CAcceleratorManager::CreateEntry(WORD wIDCommand, LPCTSTR szCommand)$/;"	f	class:CAcceleratorManager
CreateSuccessors	fex/7z_C/Ppmd7.c	/^static CTX_PTR CreateSuccessors(CPpmd7 *p, Bool skip)$/;"	f	file:
CreateVideoStream	src/win32/AVIWrite.cpp	/^bool AVIWrite::CreateVideoStream( LONG imageWidth, LONG imageHeight, WORD colorBits, DWORD framesPerSecond, HWND parentWnd )$/;"	f	class:AVIWrite
CtlColor	src/win32/Hyperlink.cpp	/^HBRUSH Hyperlink::CtlColor(CDC* pDC, UINT nCtlColor)$/;"	f	class:Hyperlink
Cx86cpuid	fex/7z_C/CpuArch.h	/^} Cx86cpuid;$/;"	t	typeref:struct:__anon35
D3D_DEBUG_INFO	src/win32/Direct3D.cpp	25;"	d	file:
D3D_DEBUG_INFO	src/win32/FullscreenSettings.h	9;"	d
DAATable	src/gb/GB.cpp	/^u16 DAATable[] = {$/;"	v
DATA	src/gba/RTC.cpp	/^   DATA,$/;"	e	enum:RTCSTATE	file:
DATA_READER_H	fex/fex/Data_Reader.h	5;"	d
DE	src/gb/GB.cpp	/^gbRegister DE;$/;"	v
DEB_BUILD_ARCH_CPU	debian/rules	/^DEB_BUILD_ARCH_CPU ?= $(shell dpkg-architecture -qDEB_BUILD_ARCH_CPU)$/;"	m
DEC	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	324;"	d	file:
DEC	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	317;"	d	file:
DEFAULT_ACCEL	src/win32/CmdAccelOb.cpp	187;"	d	file:
DEFINE_ALU_INSN_C	src/gba/GBA-arm.cpp	1146;"	d	file:
DEFINE_ALU_INSN_NC	src/gba/GBA-arm.cpp	1156;"	d	file:
DEF_MEM_LEVEL	src/common/memgzio.c	27;"	d	file:
DEVICEOF	src/win32/Input.h	12;"	d
DEv	src/wx/viewers.cpp	/^	wxControl *AFv, *BCv, *DEv, *HLv, *SPv, *PCv, *LYv, *IFFv;$/;"	m	class:Viewers::GBDisassembleViewer	file:
DIALOG_SIZER_END	src/win32/ResizeDlg.h	23;"	d
DIALOG_SIZER_ENTRY	src/win32/ResizeDlg.h	22;"	d
DIALOG_SIZER_START	src/win32/ResizeDlg.h	21;"	d
DIEnumDevicesCallback	src/win32/DirectInput.cpp	/^static BOOL CALLBACK DIEnumDevicesCallback(LPCDIDEVICEINSTANCE pInst,$/;"	f	file:
DIEnumDevicesCallback2	src/win32/DirectInput.cpp	/^BOOL CALLBACK DIEnumDevicesCallback2(LPCDIDEVICEINSTANCE pInst,$/;"	f
DIRECT3D_VERSION	src/win32/Direct3D.cpp	27;"	d	file:
DIRECT3D_VERSION	src/win32/FullscreenSettings.h	11;"	d
DIRECT3D_VERSION	src/wx/panel.cpp	1869;"	d	file:
DIRECTINPUT_VERSION	src/win32/DirectInput.cpp	7;"	d	file:
DIRECTSOUND	src/win32/VBA.h	/^	DIRECTSOUND = 0$/;"	e	enum:AUDIO_API
DIRECTSOUND_VERSION	src/win32/DirectSound.cpp	19;"	d	file:
DIRECTSOUND_VERSION	src/wx/dsound.cpp	12;"	d	file:
DIRECT_3D	src/win32/Display.h	/^  DIRECT_3D = 0,$/;"	e	enum:DISPLAY_TYPE
DISPCNT	src/gba/Globals.cpp	/^u16 DISPCNT  = 0x0080;$/;"	v
DISPLAY_TYPE	src/win32/Display.h	/^enum DISPLAY_TYPE {$/;"	g
DISPSTAT	src/gba/Globals.cpp	/^u16 DISPSTAT = 0x0000;$/;"	v
DIS_VIEW_ADDRESS	src/gba/armdis.h	8;"	d
DIS_VIEW_CODE	src/gba/armdis.h	9;"	d
DM0CNT_H	src/gba/Globals.cpp	/^u16 DM0CNT_H = 0x0000;$/;"	v
DM0CNT_L	src/gba/Globals.cpp	/^u16 DM0CNT_L = 0x0000;$/;"	v
DM0DAD_H	src/gba/Globals.cpp	/^u16 DM0DAD_H = 0x0000;$/;"	v
DM0DAD_L	src/gba/Globals.cpp	/^u16 DM0DAD_L = 0x0000;$/;"	v
DM0SAD_H	src/gba/Globals.cpp	/^u16 DM0SAD_H = 0x0000;$/;"	v
DM0SAD_L	src/gba/Globals.cpp	/^u16 DM0SAD_L = 0x0000;$/;"	v
DM1CNT_H	src/gba/Globals.cpp	/^u16 DM1CNT_H = 0x0000;$/;"	v
DM1CNT_L	src/gba/Globals.cpp	/^u16 DM1CNT_L = 0x0000;$/;"	v
DM1DAD_H	src/gba/Globals.cpp	/^u16 DM1DAD_H = 0x0000;$/;"	v
DM1DAD_L	src/gba/Globals.cpp	/^u16 DM1DAD_L = 0x0000;$/;"	v
DM1SAD_H	src/gba/Globals.cpp	/^u16 DM1SAD_H = 0x0000;$/;"	v
DM1SAD_L	src/gba/Globals.cpp	/^u16 DM1SAD_L = 0x0000;$/;"	v
DM2CNT_H	src/gba/Globals.cpp	/^u16 DM2CNT_H = 0x0000;$/;"	v
DM2CNT_L	src/gba/Globals.cpp	/^u16 DM2CNT_L = 0x0000;$/;"	v
DM2DAD_H	src/gba/Globals.cpp	/^u16 DM2DAD_H = 0x0000;$/;"	v
DM2DAD_L	src/gba/Globals.cpp	/^u16 DM2DAD_L = 0x0000;$/;"	v
DM2SAD_H	src/gba/Globals.cpp	/^u16 DM2SAD_H = 0x0000;$/;"	v
DM2SAD_L	src/gba/Globals.cpp	/^u16 DM2SAD_L = 0x0000;$/;"	v
DM3CNT_H	src/gba/Globals.cpp	/^u16 DM3CNT_H = 0x0000;$/;"	v
DM3CNT_L	src/gba/Globals.cpp	/^u16 DM3CNT_L = 0x0000;$/;"	v
DM3DAD_H	src/gba/Globals.cpp	/^u16 DM3DAD_H = 0x0000;$/;"	v
DM3DAD_L	src/gba/Globals.cpp	/^u16 DM3DAD_L = 0x0000;$/;"	v
DM3SAD_H	src/gba/Globals.cpp	/^u16 DM3SAD_H = 0x0000;$/;"	v
DM3SAD_L	src/gba/Globals.cpp	/^u16 DM3SAD_L = 0x0000;$/;"	v
DO1_CRC32	src/libretro/scrc32.cpp	63;"	d	file:
DO2_CRC32	src/libretro/scrc32.cpp	64;"	d	file:
DO4_CRC32	src/libretro/scrc32.cpp	65;"	d	file:
DO8_CRC32	src/libretro/scrc32.cpp	66;"	d	file:
DOT_DIR	src/sdl/SDL.cpp	160;"	d	file:
DSEnumCB	src/wx/dsound.cpp	/^static BOOL CALLBACK DSEnumCB(LPGUID guid, LPCTSTR desc, LPCTSTR drvnam, LPVOID user)$/;"	f	file:
DS_MoveX	src/win32/ResizeDlg.h	10;"	d
DS_MoveY	src/win32/ResizeDlg.h	11;"	d
DS_SizeX	src/win32/ResizeDlg.h	12;"	d
DS_SizeY	src/win32/ResizeDlg.h	13;"	d
DUMMY_ERROR	fex/7z_C/LzmaDec.c	/^  DUMMY_ERROR, \/* unexpected end of input stream *\/$/;"	e	enum:__anon38	file:
DUMMY_LIT	fex/7z_C/LzmaDec.c	/^  DUMMY_LIT,$/;"	e	enum:__anon38	file:
DUMMY_MATCH	fex/7z_C/LzmaDec.c	/^  DUMMY_MATCH,$/;"	e	enum:__anon38	file:
DUMMY_REP	fex/7z_C/LzmaDec.c	/^  DUMMY_REP$/;"	e	enum:__anon38	file:
DW_ATE_boolean	src/gba/elf.h	10;"	d
DW_ATE_signed	src/gba/elf.h	11;"	d
DW_ATE_unsigned	src/gba/elf.h	12;"	d
DW_ATE_unsigned_char	src/gba/elf.h	13;"	d
DW_AT_MIPS_linkage_name	src/gba/elf.cpp	77;"	d	file:
DW_AT_abstract_origin	src/gba/elf.cpp	54;"	d	file:
DW_AT_accessibility	src/gba/elf.cpp	55;"	d	file:
DW_AT_artificial	src/gba/elf.cpp	56;"	d	file:
DW_AT_bit_offset	src/gba/elf.cpp	41;"	d	file:
DW_AT_bit_size	src/gba/elf.cpp	42;"	d	file:
DW_AT_byte_size	src/gba/elf.cpp	40;"	d	file:
DW_AT_compdir	src/gba/elf.cpp	47;"	d	file:
DW_AT_const_value	src/gba/elf.cpp	48;"	d	file:
DW_AT_containing_type	src/gba/elf.cpp	49;"	d	file:
DW_AT_data_member_location	src/gba/elf.cpp	57;"	d	file:
DW_AT_decl_file	src/gba/elf.cpp	58;"	d	file:
DW_AT_decl_line	src/gba/elf.cpp	59;"	d	file:
DW_AT_declaration	src/gba/elf.cpp	60;"	d	file:
DW_AT_encoding	src/gba/elf.cpp	61;"	d	file:
DW_AT_entry_pc	src/gba/elf.cpp	70;"	d	file:
DW_AT_external	src/gba/elf.cpp	62;"	d	file:
DW_AT_frame_base	src/gba/elf.cpp	63;"	d	file:
DW_AT_high_pc	src/gba/elf.cpp	45;"	d	file:
DW_AT_inline	src/gba/elf.cpp	50;"	d	file:
DW_AT_language	src/gba/elf.cpp	46;"	d	file:
DW_AT_location	src/gba/elf.cpp	38;"	d	file:
DW_AT_low_pc	src/gba/elf.cpp	44;"	d	file:
DW_AT_macro_info	src/gba/elf.cpp	64;"	d	file:
DW_AT_name	src/gba/elf.cpp	39;"	d	file:
DW_AT_proc_body	src/gba/elf.cpp	73;"	d	file:
DW_AT_producer	src/gba/elf.cpp	51;"	d	file:
DW_AT_prototyped	src/gba/elf.cpp	52;"	d	file:
DW_AT_ranges	src/gba/elf.cpp	71;"	d	file:
DW_AT_save_offset	src/gba/elf.cpp	74;"	d	file:
DW_AT_sibling	src/gba/elf.cpp	37;"	d	file:
DW_AT_specification	src/gba/elf.cpp	65;"	d	file:
DW_AT_stmt_list	src/gba/elf.cpp	43;"	d	file:
DW_AT_type	src/gba/elf.cpp	66;"	d	file:
DW_AT_upper_bound	src/gba/elf.cpp	53;"	d	file:
DW_AT_user_2002	src/gba/elf.cpp	75;"	d	file:
DW_AT_virtuality	src/gba/elf.cpp	67;"	d	file:
DW_AT_vtable_elem_location	src/gba/elf.cpp	68;"	d	file:
DW_CFA_advance_loc	src/gba/elf.cpp	130;"	d	file:
DW_CFA_advance_loc1	src/gba/elf.cpp	134;"	d	file:
DW_CFA_advance_loc2	src/gba/elf.cpp	135;"	d	file:
DW_CFA_advance_loc4	src/gba/elf.cpp	136;"	d	file:
DW_CFA_def_cfa	src/gba/elf.cpp	144;"	d	file:
DW_CFA_def_cfa_offset	src/gba/elf.cpp	146;"	d	file:
DW_CFA_def_cfa_register	src/gba/elf.cpp	145;"	d	file:
DW_CFA_nop	src/gba/elf.cpp	147;"	d	file:
DW_CFA_offset	src/gba/elf.cpp	131;"	d	file:
DW_CFA_offset_extended	src/gba/elf.cpp	137;"	d	file:
DW_CFA_register	src/gba/elf.cpp	141;"	d	file:
DW_CFA_remember_state	src/gba/elf.cpp	142;"	d	file:
DW_CFA_restore	src/gba/elf.cpp	132;"	d	file:
DW_CFA_restore_extended	src/gba/elf.cpp	138;"	d	file:
DW_CFA_restore_state	src/gba/elf.cpp	143;"	d	file:
DW_CFA_same_value	src/gba/elf.cpp	140;"	d	file:
DW_CFA_set_loc	src/gba/elf.cpp	133;"	d	file:
DW_CFA_undefined	src/gba/elf.cpp	139;"	d	file:
DW_FORM_addr	src/gba/elf.cpp	79;"	d	file:
DW_FORM_block	src/gba/elf.cpp	83;"	d	file:
DW_FORM_block1	src/gba/elf.cpp	84;"	d	file:
DW_FORM_data1	src/gba/elf.cpp	85;"	d	file:
DW_FORM_data2	src/gba/elf.cpp	80;"	d	file:
DW_FORM_data4	src/gba/elf.cpp	81;"	d	file:
DW_FORM_flag	src/gba/elf.cpp	86;"	d	file:
DW_FORM_indirect	src/gba/elf.cpp	93;"	d	file:
DW_FORM_ref4	src/gba/elf.cpp	91;"	d	file:
DW_FORM_ref_addr	src/gba/elf.cpp	90;"	d	file:
DW_FORM_ref_udata	src/gba/elf.cpp	92;"	d	file:
DW_FORM_sdata	src/gba/elf.cpp	87;"	d	file:
DW_FORM_string	src/gba/elf.cpp	82;"	d	file:
DW_FORM_strp	src/gba/elf.cpp	88;"	d	file:
DW_FORM_udata	src/gba/elf.cpp	89;"	d	file:
DW_LNE_define_file	src/gba/elf.cpp	128;"	d	file:
DW_LNE_end_sequence	src/gba/elf.cpp	126;"	d	file:
DW_LNE_set_address	src/gba/elf.cpp	127;"	d	file:
DW_LNS_advance_line	src/gba/elf.cpp	118;"	d	file:
DW_LNS_advance_pc	src/gba/elf.cpp	117;"	d	file:
DW_LNS_const_add_pc	src/gba/elf.cpp	123;"	d	file:
DW_LNS_copy	src/gba/elf.cpp	116;"	d	file:
DW_LNS_extended_op	src/gba/elf.cpp	115;"	d	file:
DW_LNS_fixed_advance_pc	src/gba/elf.cpp	124;"	d	file:
DW_LNS_negate_stmt	src/gba/elf.cpp	121;"	d	file:
DW_LNS_set_basic_block	src/gba/elf.cpp	122;"	d	file:
DW_LNS_set_column	src/gba/elf.cpp	120;"	d	file:
DW_LNS_set_file	src/gba/elf.cpp	119;"	d	file:
DW_OP_addr	src/gba/elf.cpp	95;"	d	file:
DW_OP_fbreg	src/gba/elf.cpp	113;"	d	file:
DW_OP_plus_uconst	src/gba/elf.cpp	96;"	d	file:
DW_OP_reg0	src/gba/elf.cpp	97;"	d	file:
DW_OP_reg1	src/gba/elf.cpp	98;"	d	file:
DW_OP_reg10	src/gba/elf.cpp	107;"	d	file:
DW_OP_reg11	src/gba/elf.cpp	108;"	d	file:
DW_OP_reg12	src/gba/elf.cpp	109;"	d	file:
DW_OP_reg13	src/gba/elf.cpp	110;"	d	file:
DW_OP_reg14	src/gba/elf.cpp	111;"	d	file:
DW_OP_reg15	src/gba/elf.cpp	112;"	d	file:
DW_OP_reg2	src/gba/elf.cpp	99;"	d	file:
DW_OP_reg3	src/gba/elf.cpp	100;"	d	file:
DW_OP_reg4	src/gba/elf.cpp	101;"	d	file:
DW_OP_reg5	src/gba/elf.cpp	102;"	d	file:
DW_OP_reg6	src/gba/elf.cpp	103;"	d	file:
DW_OP_reg7	src/gba/elf.cpp	104;"	d	file:
DW_OP_reg8	src/gba/elf.cpp	105;"	d	file:
DW_OP_reg9	src/gba/elf.cpp	106;"	d	file:
DW_TAG_array_type	src/gba/elf.cpp	13;"	d	file:
DW_TAG_base_type	src/gba/elf.cpp	30;"	d	file:
DW_TAG_compile_unit	src/gba/elf.cpp	21;"	d	file:
DW_TAG_const_type	src/gba/elf.cpp	31;"	d	file:
DW_TAG_enumeration_type	src/gba/elf.cpp	14;"	d	file:
DW_TAG_enumerator	src/gba/elf.cpp	32;"	d	file:
DW_TAG_formal_parameter	src/gba/elf.cpp	15;"	d	file:
DW_TAG_inheritance	src/gba/elf.cpp	27;"	d	file:
DW_TAG_inlined_subroutine	src/gba/elf.cpp	28;"	d	file:
DW_TAG_label	src/gba/elf.cpp	16;"	d	file:
DW_TAG_lexical_block	src/gba/elf.cpp	17;"	d	file:
DW_TAG_member	src/gba/elf.cpp	18;"	d	file:
DW_TAG_pointer_type	src/gba/elf.cpp	19;"	d	file:
DW_TAG_reference_type	src/gba/elf.cpp	20;"	d	file:
DW_TAG_structure_type	src/gba/elf.cpp	22;"	d	file:
DW_TAG_subprogram	src/gba/elf.cpp	33;"	d	file:
DW_TAG_subrange_type	src/gba/elf.cpp	29;"	d	file:
DW_TAG_subroutine_type	src/gba/elf.cpp	23;"	d	file:
DW_TAG_typedef	src/gba/elf.cpp	24;"	d	file:
DW_TAG_union_type	src/gba/elf.cpp	25;"	d	file:
DW_TAG_unspecified_parameters	src/gba/elf.cpp	26;"	d	file:
DW_TAG_variable	src/gba/elf.cpp	34;"	d	file:
DW_TAG_volatile_type	src/gba/elf.cpp	35;"	d	file:
DXDrawingPanel	src/wx/drawing.h	/^class DXDrawingPanel : public DrawingPanel, public wxPanel$/;"	c
DXDrawingPanel	src/wx/panel.cpp	/^DXDrawingPanel::DXDrawingPanel(wxWindow *parent, int _width, int _height)$/;"	f	class:DXDrawingPanel
Data	fex/7z_C/7zIn.c	/^  Byte *Data;$/;"	m	struct:_CSzState	file:
Data_Reader	fex/fex/Data_Reader.h	/^	Data_Reader()                                   : remain_( 0 ) { }$/;"	f	class:Data_Reader
Data_Reader	fex/fex/Data_Reader.h	/^class Data_Reader {$/;"	c
DebugInfo	src/gba/elf.h	/^struct DebugInfo {$/;"	s
DebuggerCommand	src/sdl/debugger.cpp	/^struct DebuggerCommand {$/;"	s	file:
Decode	fex/7z_C/Ppmd7.h	/^  void (*Decode)(void *p, UInt32 start, UInt32 size);$/;"	m	struct:__anon7
DecodeBit	fex/7z_C/Ppmd7.h	/^  UInt32 (*DecodeBit)(void *p, UInt32 size0);$/;"	m	struct:__anon7
Default	src/win32/AcceleratorManager.cpp	/^bool CAcceleratorManager::Default()$/;"	f	class:CAcceleratorManager
DeferWindowPos	src/win32/WinHelper.h	/^      inline HDWP DeferWindowPos( HWND hWnd, HWND hWndInsertAfter , int x, int y, int cx, int cy, UINT uFlags )$/;"	f	class:WinHelper::CDeferWindowPos
DeferWindowPos	src/win32/WinHelper.h	/^      inline HDWP DeferWindowPos( HWND hWnd, HWND hWndInsertAfter, const CRect &rc, UINT uFlags )$/;"	f	class:WinHelper::CDeferWindowPos
DelBorder	src/wx/panel.cpp	/^void GameArea::DelBorder()$/;"	f	class:GameArea
Delete	src/wx/drawing.h	/^    void Delete() { Destroy(); }$/;"	f	class:BasicDrawingPanel
Delete	src/wx/drawing.h	/^    void Delete() { Destroy(); }$/;"	f	class:CairoDrawingPanel
Delete	src/wx/drawing.h	/^    void Delete() { Destroy(); }$/;"	f	class:DXDrawingPanel
Delete	src/wx/drawing.h	/^    void Delete() { Destroy(); }$/;"	f	class:GLDrawingPanel
DeleteAccel	src/win32/AcceleratorManager.cpp	/^bool CAcceleratorManager::DeleteAccel(BYTE cVirt, WORD wIDCommand, WORD wKey)$/;"	f	class:CAcceleratorManager
DeleteAllItems	src/wx/widgets/wx/checkedlistctrl.h	/^	bool DeleteAllItems()$/;"	f	class:wxCheckedListCtrl
DeleteEntry	src/win32/AcceleratorManager.cpp	/^bool CAcceleratorManager::DeleteEntry(LPCTSTR szCommand)$/;"	f	class:CAcceleratorManager
DeleteEntry	src/win32/AcceleratorManager.cpp	/^bool CAcceleratorManager::DeleteEntry(WORD wIDCommand)$/;"	f	class:CAcceleratorManager
DeleteItem	src/wx/widgets/checkedlistctrl.cpp	/^bool wxCheckedListCtrl::DeleteItem(long item)$/;"	f	class:wxCheckedListCtrl
DeleteUserAccels	src/win32/CmdAccelOb.cpp	/^void CCmdAccelOb::DeleteUserAccels()$/;"	f	class:CCmdAccelOb
Deselect	src/wx/guiinit.cpp	/^    void Deselect()$/;"	f	class:CheatFind_t
Detect	src/wx/guiinit.cpp	/^    void Detect(wxCommandEvent &ev)$/;"	f	class:BatConfig_t
DevEnvDir	src/libretro/msvc/msvc-2003-xbox1.bat	/^@set DevEnvDir=%VSINSTALLDIR%$/;"	v
DevEnvDir	src/libretro/msvc/msvc-2010-360.bat	/^@set DevEnvDir=%VSINSTALLDIR%Common7\\IDE\\$/;"	v
DialogData	src/win32/ResizeDlg.cpp	/^struct DialogData       \/\/      dd$/;"	s	file:
DialogSizerSizingItem	src/win32/ResizeDlg.h	/^typedef struct DialogSizerSizingItem    \/\/      sdi$/;"	s
DialogSizerSizingItem	src/win32/ResizeDlg.h	/^} DialogSizerSizingItem;$/;"	t	typeref:struct:DialogSizerSizingItem
Diff	src/filters/hq/c/hq_shared.h	/^inline bool Diff( unsigned int YUV1, unsigned int YUV2 )$/;"	f
DigitalButton	src/wx/widgets/joyedit.cpp	/^int wxJoyKeyTextCtrl::DigitalButton(wxSDLJoyEvent &event)$/;"	f	class:wxJoyKeyTextCtrl
Direct3DDisplay	src/win32/Direct3D.cpp	/^Direct3DDisplay::Direct3DDisplay()$/;"	f	class:Direct3DDisplay
Direct3DDisplay	src/win32/Direct3D.cpp	/^class Direct3DDisplay : public IDisplay {$/;"	c	file:
DirectInput	src/win32/DirectInput.cpp	/^DirectInput::DirectInput()$/;"	f	class:DirectInput
DirectInput	src/win32/DirectInput.cpp	/^class DirectInput : public Input {$/;"	c	file:
DirectSound	src/win32/DirectSound.cpp	/^DirectSound::DirectSound()$/;"	f	class:DirectSound
DirectSound	src/win32/DirectSound.cpp	/^class DirectSound : public SoundDriver$/;"	c	file:
DirectSound	src/wx/dsound.cpp	/^DirectSound::DirectSound()$/;"	f	class:DirectSound
DirectSound	src/wx/dsound.cpp	/^class DirectSound : public SoundDriver$/;"	c	file:
Directories	src/win32/Directories.cpp	/^Directories::Directories(CWnd* pParent \/*=NULL*\/)$/;"	f	class:Directories
Directories	src/win32/Directories.h	/^class Directories : public CDialog$/;"	c
DirectoriesConfigDialog	src/gtk/directoriesconfig.cpp	/^DirectoriesConfigDialog::DirectoriesConfigDialog(Config::Section * _poConfig) :$/;"	f	class:VBA::DirectoriesConfigDialog
DirectoriesConfigDialog	src/gtk/directoriesconfig.h	/^class DirectoriesConfigDialog : public Gtk::Dialog$/;"	c	namespace:VBA
DisList	src/wx/viewsupt.cpp	/^    DisList::DisList() :$/;"	f	class:Viewers::DisList
DisList	src/wx/viewsupt.h	/^    class DisList : public wxPanel$/;"	c	namespace:Viewers
Disable	src/wx/widgets/wxmisc.cpp	/^void wxBoolEnHandler::Disable(wxCommandEvent &ev)$/;"	f	class:wxBoolEnHandler
DisableOpenGL	src/win32/OpenGL.cpp	/^void OpenGLDisplay::DisableOpenGL()$/;"	f	class:OpenGLDisplay
Disassemble	src/win32/Disassemble.cpp	/^Disassemble::Disassemble(CWnd* pParent \/*=NULL*\/)$/;"	f	class:Disassemble
Disassemble	src/win32/Disassemble.h	/^class Disassemble : public ResizeDlg, IUpdateListener$/;"	c
Disassemble	src/wx/viewers.cpp	/^void MainFrame::Disassemble(void)$/;"	f	class:MainFrame
DisassembleViewer	src/wx/viewers.cpp	/^	DisassembleViewer() : Viewer(wxT("Disassemble"))$/;"	f	class:Viewers::DisassembleViewer
DisassembleViewer	src/wx/viewers.cpp	/^    class DisassembleViewer : public Viewer$/;"	c	namespace:Viewers	file:
DispCheckBox	src/wx/viewsupt.h	/^    class DispCheckBox : public wxCheckBox$/;"	c	namespace:Viewers
DisplayConfigDialog	src/gtk/displayconfig.cpp	/^DisplayConfigDialog::DisplayConfigDialog(GtkDialog* _pstDialog, const Glib::RefPtr<Gtk::Builder>& refBuilder) :$/;"	f	class:VBA::DisplayConfigDialog
DisplayConfigDialog	src/gtk/displayconfig.h	/^class DisplayConfigDialog : public Gtk::Dialog$/;"	c	namespace:VBA
DisplayKeyboardString	src/win32/KeyboardEdit.cpp	/^void CKeyboardEdit::DisplayKeyboardString()$/;"	f	class:CKeyboardEdit
DoDataExchange	src/win32/AboutDialog.cpp	/^void AboutDialog::DoDataExchange(CDataExchange* pDX)$/;"	f	class:AboutDialog
DoDataExchange	src/win32/AccelEditor.cpp	/^void AccelEditor::DoDataExchange(CDataExchange* pDX)$/;"	f	class:AccelEditor
DoDataExchange	src/win32/Associate.cpp	/^void Associate::DoDataExchange(CDataExchange* pDX)$/;"	f	class:Associate
DoDataExchange	src/win32/AudioCoreSettingsDlg.cpp	/^void AudioCoreSettingsDlg::DoDataExchange(CDataExchange* pDX)$/;"	f	class:AudioCoreSettingsDlg
DoDataExchange	src/win32/BIOSDialog.cpp	/^void BIOSDialog::DoDataExchange(CDataExchange* pDX)$/;"	f	class:BIOSDialog
DoDataExchange	src/win32/BugReport.cpp	/^void BugReport::DoDataExchange(CDataExchange* pDX)$/;"	f	class:BugReport
DoDataExchange	src/win32/Directories.cpp	/^void Directories::DoDataExchange(CDataExchange* pDX)$/;"	f	class:Directories
DoDataExchange	src/win32/Disassemble.cpp	/^void Disassemble::DoDataExchange(CDataExchange* pDX)$/;"	f	class:Disassemble
DoDataExchange	src/win32/ExportGSASnapshot.cpp	/^void ExportGSASnapshot::DoDataExchange(CDataExchange* pDX)$/;"	f	class:ExportGSASnapshot
DoDataExchange	src/win32/FullscreenSettings.cpp	/^void FullscreenSettings::DoDataExchange(CDataExchange* pDX)$/;"	f	class:FullscreenSettings
DoDataExchange	src/win32/GBACheats.cpp	/^void AddCBACode::DoDataExchange(CDataExchange* pDX)$/;"	f	class:AddCBACode
DoDataExchange	src/win32/GBACheats.cpp	/^void AddCheat::DoDataExchange(CDataExchange* pDX)$/;"	f	class:AddCheat
DoDataExchange	src/win32/GBACheats.cpp	/^void AddCheatCode::DoDataExchange(CDataExchange* pDX)$/;"	f	class:AddCheatCode
DoDataExchange	src/win32/GBACheats.cpp	/^void AddGSACode::DoDataExchange(CDataExchange* pDX)$/;"	f	class:AddGSACode
DoDataExchange	src/win32/GBACheats.cpp	/^void GBACheatList::DoDataExchange(CDataExchange* pDX)$/;"	f	class:GBACheatList
DoDataExchange	src/win32/GBACheats.cpp	/^void GBACheatSearch::DoDataExchange(CDataExchange* pDX)$/;"	f	class:GBACheatSearch
DoDataExchange	src/win32/GBCheatsDlg.cpp	/^void AddGBCheat::DoDataExchange(CDataExchange* pDX)$/;"	f	class:AddGBCheat
DoDataExchange	src/win32/GBCheatsDlg.cpp	/^void AddGBCode::DoDataExchange(CDataExchange* pDX)$/;"	f	class:AddGBCode
DoDataExchange	src/win32/GBCheatsDlg.cpp	/^void GBCheatList::DoDataExchange(CDataExchange* pDX)$/;"	f	class:GBCheatList
DoDataExchange	src/win32/GBCheatsDlg.cpp	/^void GBCheatSearch::DoDataExchange(CDataExchange* pDX)$/;"	f	class:GBCheatSearch
DoDataExchange	src/win32/GBColorDlg.cpp	/^void GBColorDlg::DoDataExchange(CDataExchange* pDX)$/;"	f	class:GBColorDlg
DoDataExchange	src/win32/GBDisassemble.cpp	/^void GBDisassemble::DoDataExchange(CDataExchange* pDX)$/;"	f	class:GBDisassemble
DoDataExchange	src/win32/GBMapView.cpp	/^void GBMapView::DoDataExchange(CDataExchange* pDX)$/;"	f	class:GBMapView
DoDataExchange	src/win32/GBMemoryViewerDlg.cpp	/^void GBMemoryViewerDlg::DoDataExchange(CDataExchange* pDX)$/;"	f	class:GBMemoryViewerDlg
DoDataExchange	src/win32/GBOamView.cpp	/^void GBOamView::DoDataExchange(CDataExchange* pDX)$/;"	f	class:GBOamView
DoDataExchange	src/win32/GBPaletteView.cpp	/^void GBPaletteView::DoDataExchange(CDataExchange* pDX)$/;"	f	class:GBPaletteView
DoDataExchange	src/win32/GBPrinterDlg.cpp	/^void GBPrinterDlg::DoDataExchange(CDataExchange* pDX)$/;"	f	class:GBPrinterDlg
DoDataExchange	src/win32/GBTileView.cpp	/^void GBTileView::DoDataExchange(CDataExchange* pDX)$/;"	f	class:GBTileView
DoDataExchange	src/win32/GDBConnection.cpp	/^void GDBPortDlg::DoDataExchange(CDataExchange* pDX)$/;"	f	class:GDBPortDlg
DoDataExchange	src/win32/GDBConnection.cpp	/^void GDBWaitingDlg::DoDataExchange(CDataExchange* pDX)$/;"	f	class:GDBWaitingDlg
DoDataExchange	src/win32/GSACodeSelect.cpp	/^void GSACodeSelect::DoDataExchange(CDataExchange* pDX)$/;"	f	class:GSACodeSelect
DoDataExchange	src/win32/GameOverrides.cpp	/^void GameOverrides::DoDataExchange(CDataExchange* pDX)$/;"	f	class:GameOverrides
DoDataExchange	src/win32/IOViewer.cpp	/^void IOViewer::DoDataExchange(CDataExchange* pDX)$/;"	f	class:IOViewer
DoDataExchange	src/win32/JoybusOptions.cpp	/^void JoybusOptions::DoDataExchange(CDataExchange* pDX)$/;"	f	class:JoybusOptions
DoDataExchange	src/win32/Joypad.cpp	/^void JoypadConfig::DoDataExchange(CDataExchange* pDX)$/;"	f	class:JoypadConfig
DoDataExchange	src/win32/Joypad.cpp	/^void MotionConfig::DoDataExchange(CDataExchange* pDX)$/;"	f	class:MotionConfig
DoDataExchange	src/win32/LangSelect.cpp	/^void LangSelect::DoDataExchange(CDataExchange* pDX)$/;"	f	class:LangSelect
DoDataExchange	src/win32/LinkOptions.cpp	/^void LinkClient::DoDataExchange(CDataExchange* pDX)$/;"	f	class:LinkClient
DoDataExchange	src/win32/LinkOptions.cpp	/^void LinkGeneral::DoDataExchange(CDataExchange* pDX)$/;"	f	class:LinkGeneral
DoDataExchange	src/win32/LinkOptions.cpp	/^void LinkOptions::DoDataExchange(CDataExchange* pDX)$/;"	f	class:LinkOptions
DoDataExchange	src/win32/LinkOptions.cpp	/^void LinkServer::DoDataExchange(CDataExchange* pDX)$/;"	f	class:LinkServer
DoDataExchange	src/win32/LinkOptions.cpp	/^void ServerWait::DoDataExchange(CDataExchange* pDX)$/;"	f	class:ServerWait
DoDataExchange	src/win32/Logging.cpp	/^void Logging::DoDataExchange(CDataExchange* pDX)$/;"	f	class:Logging
DoDataExchange	src/win32/MapView.cpp	/^void MapView::DoDataExchange(CDataExchange* pDX)$/;"	f	class:MapView
DoDataExchange	src/win32/MaxScale.cpp	/^void MaxScale::DoDataExchange(CDataExchange* pDX)$/;"	f	class:MaxScale
DoDataExchange	src/win32/MemoryViewerAddressSize.cpp	/^void MemoryViewerAddressSize::DoDataExchange(CDataExchange* pDX)$/;"	f	class:MemoryViewerAddressSize
DoDataExchange	src/win32/MemoryViewerDlg.cpp	/^void MemoryViewerDlg::DoDataExchange(CDataExchange* pDX)$/;"	f	class:MemoryViewerDlg
DoDataExchange	src/win32/OALConfig.cpp	/^void OALConfig::DoDataExchange(CDataExchange* pDX)$/;"	f	class:OALConfig
DoDataExchange	src/win32/OamView.cpp	/^void OamView::DoDataExchange(CDataExchange* pDX)$/;"	f	class:OamView
DoDataExchange	src/win32/PaletteView.cpp	/^void PaletteView::DoDataExchange(CDataExchange* pDX)$/;"	f	class:PaletteView
DoDataExchange	src/win32/RewindInterval.cpp	/^void RewindInterval::DoDataExchange(CDataExchange* pDX)$/;"	f	class:RewindInterval
DoDataExchange	src/win32/RomInfo.cpp	/^void RomInfoGB::DoDataExchange(CDataExchange* pDX)$/;"	f	class:RomInfoGB
DoDataExchange	src/win32/RomInfo.cpp	/^void RomInfoGBA::DoDataExchange(CDataExchange* pDX)$/;"	f	class:RomInfoGBA
DoDataExchange	src/win32/SelectPlugin.cpp	/^void SelectPlugin::DoDataExchange(CDataExchange* pDX)$/;"	f	class:SelectPlugin
DoDataExchange	src/win32/Throttle.cpp	/^void Throttle::DoDataExchange(CDataExchange* pDX)$/;"	f	class:Throttle
DoDataExchange	src/win32/TileView.cpp	/^void TileView::DoDataExchange(CDataExchange* pDX)$/;"	f	class:TileView
DoDataExchange	src/win32/XAudio2_Config.cpp	/^void XAudio2_Config::DoDataExchange(CDataExchange* pDX)$/;"	f	class:XAudio2_Config
DoModal	src/win32/FileDlg.cpp	/^int FileDlg::DoModal()$/;"	f	class:FileDlg
DoPrint	src/wx/sys.cpp	/^void PrintDialog::DoPrint(wxCommandEvent&)$/;"	f	class:PrintDialog
DoSave	src/wx/sys.cpp	/^void PrintDialog::DoSave(wxCommandEvent&)$/;"	f	class:PrintDialog
DoSel	src/wx/viewsupt.cpp	/^    void GfxPanel::DoSel(wxMouseEvent &ev, bool force)$/;"	f	class:Viewers::GfxPanel
DoSetAccel	src/wx/wxhead.h	/^static inline void DoSetAccel(wxMenuItem *mi, wxAcceleratorEntry *acc)$/;"	f
DoSetThrottleSel	src/wx/guiinit.cpp	/^    void DoSetThrottleSel(int val)$/;"	f	class:ThrottleCtrl_t
DrawArea	src/wx/panel.cpp	/^void BasicDrawingPanel::DrawArea(wxWindowDC &dc)$/;"	f	class:BasicDrawingPanel
DrawArea	src/wx/panel.cpp	/^void CairoDrawingPanel::DrawArea(wxWindowDC &dc)$/;"	f	class:CairoDrawingPanel
DrawArea	src/wx/panel.cpp	/^void DXDrawingPanel::DrawArea(wxWindowDC &dc)$/;"	f	class:DXDrawingPanel
DrawArea	src/wx/panel.cpp	/^void DrawingPanel::DrawArea(u8 **data)$/;"	f	class:DrawingPanel
DrawArea	src/wx/panel.cpp	/^void GLDrawingPanel::DrawArea(wxWindowDC &dc)$/;"	f	class:GLDrawingPanel
DrawBitmap	src/wx/viewsupt.cpp	/^    void GfxPanel::DrawBitmap(wxPaintEvent &ev)$/;"	f	class:Viewers::GfxPanel
DrawItem	src/win32/ColorButton.cpp	/^void ColorButton::DrawItem(LPDRAWITEMSTRUCT lpDrawItemStruct)$/;"	f	class:ColorButton
DrawItem	src/win32/LinkOptions.cpp	/^void CMyTabCtrl::DrawItem(LPDRAWITEMSTRUCT lpDrawItemStruct)$/;"	f	class:CMyTabCtrl
DrawOSD	src/wx/panel.cpp	/^void DrawingPanel::DrawOSD(wxWindowDC &dc)$/;"	f	class:DrawingPanel
DrawingPanel	src/wx/panel.cpp	/^DrawingPanel::DrawingPanel(int _width, int _height) :$/;"	f	class:DrawingPanel
DrawingPanel	src/wx/wxvbam.h	/^class DrawingPanel : public wxObject$/;"	c
DstH	src/win32/rpi.h	/^	unsigned long	DstH;$/;"	m	struct:__anon66
DstPitch	src/win32/rpi.h	/^	unsigned long	DstPitch;$/;"	m	struct:__anon66
DstPtr	src/win32/rpi.h	/^	void			*DstPtr;$/;"	m	struct:__anon66
DstW	src/win32/rpi.h	/^	unsigned long	DstW;$/;"	m	struct:__anon66
DummySee	fex/7z_C/Ppmd7.h	/^  CPpmd_See DummySee, See[25][16];$/;"	m	struct:__anon6
Dump	src/win32/AcceleratorManager.cpp	/^void CAcceleratorManager::Dump(CDumpContext& dc) const$/;"	f	class:CAcceleratorManager
Dump	src/win32/BitmapControl.cpp	/^void BitmapControl::Dump(CDumpContext& dc) const$/;"	f	class:BitmapControl
Dump	src/win32/CmdAccelOb.cpp	/^void CAccelsOb::Dump(CDumpContext& dc) const$/;"	f	class:CAccelsOb
Dump	src/win32/CmdAccelOb.cpp	/^void CCmdAccelOb::Dump( CDumpContext& dc ) const$/;"	f	class:CCmdAccelOb
ECHO	src/sdl/expr-lex.cpp	573;"	d	file:
ECartridge	src/gtk/window.h	/^  enum ECartridge$/;"	g	class:VBA::Window
ECheatType	src/gtk/cheatedit.h	/^enum ECheatType$/;"	g	namespace:VBA
EColorFormat	src/gtk/window.h	/^  enum EColorFormat$/;"	g	class:VBA::Window
EEPROM_512B	src/libretro/gbaconv/gbaconv.c	/^   EEPROM_512B,$/;"	e	enum:save_type	file:
EEPROM_8K	src/libretro/gbaconv/gbaconv.c	/^   EEPROM_8K,$/;"	e	enum:save_type	file:
EEPROM_H	src/gba/EEprom.h	2;"	d
EEPROM_IDLE	src/gba/EEprom.h	24;"	d
EEPROM_READADDRESS	src/gba/EEprom.h	25;"	d
EEPROM_READDATA	src/gba/EEprom.h	26;"	d
EEPROM_READDATA2	src/gba/EEprom.h	27;"	d
EEPROM_WRITEDATA	src/gba/EEprom.h	28;"	d
EEmulatorType	src/gtk/window.h	/^  enum EEmulatorType$/;"	g	class:VBA::Window
EFFECTS_BUFFER_H	src/apu/Effects_Buffer.h	5;"	d
EFilter	src/gtk/filters.h	/^enum EFilter$/;"	g	namespace:VBA
EFilterDepth	src/gtk/filters.h	/^enum EFilterDepth$/;"	g	namespace:VBA
EFilterIB	src/gtk/filters.h	/^enum EFilterIB$/;"	g	namespace:VBA
EIdEnum	fex/7z_C/7z.h	/^enum EIdEnum$/;"	g
EKey	src/sdl/inputSDL.h	/^enum EKey {$/;"	g
ELFAbbrev	src/gba/elf.h	/^struct ELFAbbrev {$/;"	s
ELFAttr	src/gba/elf.h	/^struct ELFAttr {$/;"	s
ELFBlock	src/gba/elf.h	/^struct ELFBlock {$/;"	s
ELFCfaMode	src/gba/elf.cpp	/^enum ELFCfaMode {$/;"	g	file:
ELFFrameState	src/gba/elf.cpp	/^struct ELFFrameState {$/;"	s	file:
ELFFrameStateRegister	src/gba/elf.cpp	/^struct ELFFrameStateRegister {$/;"	s	file:
ELFFrameStateRegisters	src/gba/elf.cpp	/^struct ELFFrameStateRegisters {$/;"	s	file:
ELFHeader	src/gba/elf.h	/^struct ELFHeader {$/;"	s
ELFProgramHeader	src/gba/elf.h	/^struct ELFProgramHeader {$/;"	s
ELFRegMode	src/gba/elf.cpp	/^enum ELFRegMode {$/;"	g	file:
ELFSectionHeader	src/gba/elf.h	/^struct ELFSectionHeader {$/;"	s
ELFSymbol	src/gba/elf.h	/^struct ELFSymbol {$/;"	s
ELF_H	src/gba/elf.h	2;"	d
ELFcie	src/gba/elf.cpp	/^struct ELFcie {$/;"	s	file:
ELFfde	src/gba/elf.cpp	/^struct ELFfde {$/;"	s	file:
ELIDE_CODE	src/sdl/getopt.c	59;"	d	file:
ELIDE_CODE	src/sdl/getopt1.c	51;"	d	file:
ELzma2State	fex/7z_C/Lzma2Dec.c	/^} ELzma2State;$/;"	t	typeref:enum:__anon5	file:
ELzmaDummy	fex/7z_C/LzmaDec.c	/^} ELzmaDummy;$/;"	t	typeref:enum:__anon38	file:
ELzmaFinishMode	fex/7z_C/LzmaDec.h	/^} ELzmaFinishMode;$/;"	t	typeref:enum:__anon18
ELzmaStatus	fex/7z_C/LzmaDec.h	/^} ELzmaStatus;$/;"	t	typeref:enum:__anon19
EMIT0	src/gba/GBA-arm.cpp	298;"	d	file:
EMIT0	src/gba/GBA-arm.cpp	331;"	d	file:
EMIT1	src/gba/GBA-arm.cpp	299;"	d	file:
EMIT1	src/gba/GBA-arm.cpp	332;"	d	file:
EMIT2	src/gba/GBA-arm.cpp	300;"	d	file:
EMIT2	src/gba/GBA-arm.cpp	333;"	d	file:
ENTRY	fex/fex/fex.cpp	251;"	d	file:
ENTRY	fex/fex/fex.cpp	271;"	d	file:
ENUMOPT	src/wx/opts.cpp	17;"	d	file:
EOB_ACT_CONTINUE_SCAN	src/sdl/expr-lex.cpp	161;"	d	file:
EOB_ACT_END_OF_FILE	src/sdl/expr-lex.cpp	162;"	d	file:
EOB_ACT_LAST_MATCH	src/sdl/expr-lex.cpp	163;"	d	file:
EPad	src/sdl/inputSDL.h	/^enum EPad {$/;"	g
EQUALS	Makefile	/^EQUALS = =$/;"	m
EQUALS	po/Makefile	/^EQUALS = =$/;"	m
EQUALS	po/gvbam/Makefile	/^EQUALS = =$/;"	m
ESaveType	src/gtk/window.h	/^  enum ESaveType$/;"	g	class:VBA::Window
EShowSpeed	src/gtk/window.h	/^  enum EShowSpeed$/;"	g	class:VBA::Window
ESoundStatus	src/gtk/window.h	/^  enum ESoundStatus$/;"	g	class:VBA::Window
ESzSeek	fex/7z_C/Types.h	/^} ESzSeek;$/;"	t	typeref:enum:__anon26
EVT_GFX_CLICK	src/wx/viewsupt.h	312;"	d
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(BugReport, "Report bugs...")$/;"	f
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(CheatsAutoSaveLoad, "Auto save\/load cheats (toggle)")$/;"	f
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(CheatsEnable, "Enable cheats (toggle)")$/;"	f
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(Customize, "Customize UI...")$/;"	f
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(DecreaseVolume, "Decrease volume")$/;"	f
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(EmulatorDirectories, "Directories...")$/;"	f
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(FAQ, "VBA-M support forum")$/;"	f
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(GameBoyAdvanceConfigure, "Game Boy Advance options...")$/;"	f
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(GameBoyConfigure, "Game Boy options...")$/;"	f
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(GeneralConfigure, "General options...")$/;"	f
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(IncreaseVolume, "Increase volume")$/;"	f
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(JoypadAutofireA, "Autofire A (toggle)")$/;"	f
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(JoypadAutofireB, "Autofire B (toggle)")$/;"	f
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(JoypadAutofireL, "Autofire L (toggle)")$/;"	f
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(JoypadAutofireR, "Autofire R (toggle)")$/;"	f
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(JoypadConfigure, "Joypad options...")$/;"	f
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(KeepCheats, "Do not change cheat list (toggle)")$/;"	f
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(KeepSaves, "Do not load battery saves (toggle)")$/;"	f
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(LinkConfigure, "Link options...")$/;"	f
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(LoadGameAutoLoad, "Auto load most recent save (toggle)")$/;"	f
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(Pause, "Pause (toggle)")$/;"	f
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(RecentFreeze, "Freeze recent ROM list (toggle)")$/;"	f
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(RecentReset, "Reset recent ROM list")$/;"	f
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(ToggleFullscreen, "Full screen (toggle)")$/;"	f
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(ToggleSound, "Enable\/disable all sound channels")$/;"	f
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(wxID_ABOUT, "About...")$/;"	f
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(wxID_EXIT, "Exit")$/;"	f
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(wxID_FILE1, "Load recent ROM 1")$/;"	f
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(wxID_FILE10, "Load recent ROM 10")$/;"	f
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(wxID_FILE2, "Load recent ROM 2")$/;"	f
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(wxID_FILE3, "Load recent ROM 3")$/;"	f
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(wxID_FILE4, "Load recent ROM 4")$/;"	f
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(wxID_FILE5, "Load recent ROM 5")$/;"	f
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(wxID_FILE6, "Load recent ROM 6")$/;"	f
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(wxID_FILE7, "Load recent ROM 7")$/;"	f
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(wxID_FILE8, "Load recent ROM 8")$/;"	f
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(wxID_FILE9, "Load recent ROM 9")$/;"	f
EVT_HANDLER	src/wx/cmdevents.cpp	/^EVT_HANDLER(wxID_OPEN, "Open ROM...")$/;"	f
EVT_HANDLER	src/wx/wxvbam.h	69;"	d
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(ChangeFilter, "Change Pixel Filter", CMDEN_NREC_ANY)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(ChangeIFB, "Change Interframe Blending", CMDEN_NREC_ANY)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(CheatsList, "List cheats...", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(CheatsSearch, "Create cheat...", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(DebugGDB, "Wait for GDB connection...", CMDEN_NGDB_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(DebugGDBBreak, "Break into GDB", CMDEN_GDB)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(DebugGDBDisconnect, "Disconnect GDB", CMDEN_GDB)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(DebugGDBLoad, "Load and wait for GDB...", CMDEN_NGDB_ANY)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(DecrGameSlot, "Decrease state slot number", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(DirectSoundA, "Direct Sound A (toggle)", CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(DirectSoundB, "Direct Sound B (toggle)", CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(Disassemble, "Disassemble...", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(DisplayConfigure, "Display options...", CMDEN_NREC_ANY)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(EmulatorSpeedupToggle, "Turbo mode (toggle)", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(ExportBatteryFile, "Export battery file...", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(ExportGamesharkSnapshot, "Export GameShark snapshot...", CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(IOViewer, "I\/O Viewer...", CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(ImportBatteryFile, "Import battery file...", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(ImportGamesharkActionReplaySnapshot,$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(ImportGamesharkCodeFile, "Import GameShark code file...", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(IncrGameSlot, "Increase state slot number", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(IncrGameSlotSave, "Increase state slot number and save", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(LanLink, "Start LAN link", CMDEN_LINK_ANY)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(Load, "Load state...", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(LoadGame01, "Load saved state 1", CMDEN_SAVST)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(LoadGame02, "Load saved state 2", CMDEN_SAVST)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(LoadGame03, "Load saved state 3", CMDEN_SAVST)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(LoadGame04, "Load saved state 4", CMDEN_SAVST)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(LoadGame05, "Load saved state 5", CMDEN_SAVST)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(LoadGame06, "Load saved state 6", CMDEN_SAVST)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(LoadGame07, "Load saved state 7", CMDEN_SAVST)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(LoadGame08, "Load saved state 8", CMDEN_SAVST)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(LoadGame09, "Load saved state 9", CMDEN_SAVST)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(LoadGame10, "Load saved state 10", CMDEN_SAVST)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(LoadGameRecent, "Load most recent save", CMDEN_SAVST)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(LoadGameSlot, "Load current state slot", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(Logging, "Logging...", CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(MapViewer, "Map Viewer...", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(MemoryViewer, "Memory Viewer...", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(NOOP, "Do nothing", CMDEN_NEVER)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(NextFrame, "Next Frame", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(OAMViewer, "OAM Viewer...", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(PaletteViewer, "Palette Viewer...", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(PlayMovieStartPlaying, "Start playing movie...", CMDEN_NGREC|CMDEN_NGPLAY)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(PlayMovieStopPlaying, "Stop playing movie", CMDEN_GPLAY)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(RecordAVIStartRecording, "Start video recording...", CMDEN_NVREC)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(RecordAVIStopRecording, "Stop video recording", CMDEN_VREC)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(RecordMovieStartRecording, "Start game recording...", CMDEN_NGREC)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(RecordMovieStopRecording, "Stop game recording", CMDEN_GREC)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(RecordSoundStartRecording, "Start sound recording...", CMDEN_NSREC)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(RecordSoundStopRecording, "Stop sound recording", CMDEN_SREC)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(Reset, "Reset", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(Rewind, "Rewind", CMDEN_REWIND)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(RomInformation, "ROM information...", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(Save, "Save state as...", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(SaveGame01, "Save state 1", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(SaveGame02, "Save state 2", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(SaveGame03, "Save state 3", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(SaveGame04, "Save state 4", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(SaveGame05, "Save state 5", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(SaveGame06, "Save state 6", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(SaveGame07, "Save state 7", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(SaveGame08, "Save state 8", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(SaveGame09, "Save state 9", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(SaveGame10, "Save state 10", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(SaveGameOldest, "Save state to oldest slot", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(SaveGameSlot, "Save current state slot", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(ScreenCapture, "Screen capture...", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(SoundChannel1, "Sound Channel 1 (toggle)", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(SoundChannel2, "Sound Channel 2 (toggle)", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(SoundChannel3, "Sound Channel 3 (toggle)", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(SoundChannel4, "Sound Channel 4 (toggle)", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(SoundConfigure, "Sound options...", CMDEN_NREC_ANY)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(TileViewer, "Tile Viewer...", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(VideoLayersBG0, "Video layer BG0 (toggle)", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(VideoLayersBG1, "Video layer BG1 (toggle)", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(VideoLayersBG2, "Video layer BG2 (toggle)", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(VideoLayersBG3, "Video layer BG3 (toggle)", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(VideoLayersOBJ, "Video layer OBJ (toggle)", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(VideoLayersOBJWIN, "Video layer OBJWIN (toggle)", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(VideoLayersReset, "Show all video layers", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(VideoLayersWIN0, "Video layer WIN0 (toggle)", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(VideoLayersWIN1, "Video layer WIN1 (toggle)", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/cmdevents.cpp	/^EVT_HANDLER_MASK(wxID_CLOSE, "Close", CMDEN_GB|CMDEN_GBA)$/;"	f
EVT_HANDLER_MASK	src/wx/wxvbam.h	72;"	d
EVT_LIST_ITEM_CHECKED	src/wx/widgets/wx/checkedlistctrl.h	45;"	d
EVT_LIST_ITEM_UNCHECKED	src/wx/widgets/wx/checkedlistctrl.h	52;"	d
EVT_SDLJOY	src/wx/widgets/wx/sdljoy.h	97;"	d
EVideoOutput	src/gtk/window.h	/^  enum EVideoOutput$/;"	g	class:VBA::Window
EXE_NAME	src/sdl/SDL.cpp	436;"	d	file:
EXTERN_C_BEGIN	fex/7z_C/Types.h	15;"	d
EXTERN_C_BEGIN	fex/7z_C/Types.h	18;"	d
EXTERN_C_END	fex/7z_C/Types.h	16;"	d
EXTERN_C_END	fex/7z_C/Types.h	19;"	d
EXTRA_CMAKE_FLAGS	debian/rules	/^EXTRA_CMAKE_FLAGS =$/;"	m
EXTRA_FIELD	src/common/memgzio.c	60;"	d	file:
EXTSYM	src/filters/hq/asm/hq3x_16.asm	/^EXTSYM LUT16to32,RGBtoYUV$/;"	l
EXTSYM	src/filters/hq/asm/hq3x_32.asm	/^EXTSYM LUT16to32,RGBtoYUV$/;"	l
EXTSYM	src/filters/hq/asm/hq4x_16.asm	/^EXTSYM LUT16to32,RGBtoYUV$/;"	l
EXTSYM	src/filters/hq/asm/hq4x_32.asm	/^EXTSYM LUT16to32,RGBtoYUV$/;"	l
Edit	src/wx/guiinit.cpp	/^    void Edit(wxListEvent &ev)$/;"	f	class:CheatList_t
EditCheatCodeColumns	src/gtk/cheatedit.h	/^    EditCheatCodeColumns()$/;"	f	class:VBA::EditCheatCodeColumns
EditCheatCodeColumns	src/gtk/cheatedit.h	/^class EditCheatCodeColumns : public Gtk::TreeModel::ColumnRecord$/;"	c	namespace:VBA
Effects_Buffer	src/apu/Effects_Buffer.cpp	/^Effects_Buffer::Effects_Buffer( int max_bufs, long echo_size_ ) : Multi_Buffer( stereo )$/;"	f	class:Effects_Buffer
Effects_Buffer	src/apu/Effects_Buffer.h	/^class Effects_Buffer : public Multi_Buffer {$/;"	c
Empty	src/win32/WinHelper.h	/^      inline void Empty() { cx = cy = 0; }$/;"	f	class:WinHelper::CSize
Empty	src/win32/WinHelper.h	/^      inline void Empty() { left = right = top = bottom = 0; }$/;"	f	class:WinHelper::CRect
EmulatedSystem	src/System.h	/^struct EmulatedSystem {$/;"	s
EmulatorAuto	src/gtk/window.h	/^    EmulatorAuto,$/;"	e	enum:VBA::Window::EEmulatorType
EmulatorCGB	src/gtk/window.h	/^    EmulatorCGB,$/;"	e	enum:VBA::Window::EEmulatorType
EmulatorGB	src/gtk/window.h	/^    EmulatorGB,$/;"	e	enum:VBA::Window::EEmulatorType
EmulatorGBA	src/gtk/window.h	/^    EmulatorGBA,$/;"	e	enum:VBA::Window::EEmulatorType
EmulatorSGB	src/gtk/window.h	/^    EmulatorSGB,$/;"	e	enum:VBA::Window::EEmulatorType
EmulatorSGB2	src/gtk/window.h	/^    EmulatorSGB2$/;"	e	enum:VBA::Window::EEmulatorType
Enable	src/wx/widgets/checkedlistctrl.cpp	/^void wxCheckedListCtrl::Enable(long item, bool enable)$/;"	f	class:wxCheckedListCtrl
Enable	src/wx/widgets/wx/checkedlistctrl.h	/^	virtual bool Enable(bool enable = true)$/;"	f	class:wxCheckedListCtrl
Enable	src/wx/widgets/wxmisc.cpp	/^void wxBoolEnHandler::Enable(wxCommandEvent &ev)$/;"	f	class:wxBoolEnHandler
EnableAll	src/wx/widgets/checkedlistctrl.cpp	/^void wxCheckedListCtrl::EnableAll(bool enable)$/;"	f	class:wxCheckedListCtrl
EnableOpenGL	src/win32/OpenGL.cpp	/^void OpenGLDisplay::EnableOpenGL()$/;"	f	class:OpenGLDisplay
EnableVal	src/wx/guiinit.cpp	/^    void EnableVal(wxCommandEvent &ev)$/;"	f	class:CheatFind_t
Entry	src/wx/panel.cpp	/^    ExitCode Entry()$/;"	f	class:FilterThread
Enum	src/gba/elf.h	/^struct Enum {$/;"	s
EnumMember	src/gba/elf.h	/^struct EnumMember {$/;"	s
EnumPlugins	src/win32/SelectPlugin.cpp	/^size_t SelectPlugin::EnumPlugins()$/;"	f	class:SelectPlugin
EnumPovsCallback	src/win32/DirectInput.cpp	/^static BOOL CALLBACK EnumPovsCallback( const DIDEVICEOBJECTINSTANCE* pdidoi,$/;"	f	file:
ExportGSASnapshot	src/win32/ExportGSASnapshot.cpp	/^ExportGSASnapshot::ExportGSASnapshot(CString filename, CString title, CWnd* pParent \/*=NULL*\/)$/;"	f	class:ExportGSASnapshot
ExportGSASnapshot	src/win32/ExportGSASnapshot.h	/^class ExportGSASnapshot : public CDialog$/;"	c
F	src/wx/viewers.cpp	/^	wxCheckBox *N, *Z, *C, *V, *I, *F, *T;$/;"	m	class:Viewers::DisassembleViewer	file:
FALSE	src/filters/2xSaImmx.asm	/^FALSE         dd 0x00000000,0x00000000$/;"	d
FALSE	src/win32/glfont.h	17;"	d
FASTCALL	src/win32/WinHelper.h	19;"	d
FEX_FILE_READER	fex/fex/File_Extractor.h	186;"	d
FEX_H	fex/fex/fex.h	5;"	d
FEX_TYPE_LIST	fex/fex/blargg_config.h	21;"	d
FF_2XSAI	src/wx/wxvbam.h	/^    FF_NONE, FF_2XSAI, FF_SUPER2XSAI, FF_SUPEREAGLE, FF_PIXELATE,$/;"	e	enum:filtfunc
FF_ADVMAME	src/wx/wxvbam.h	/^    FF_ADVMAME, FF_BILINEAR, FF_BILINEARPLUS, FF_SCANLINES, FF_TV,$/;"	e	enum:filtfunc
FF_BILINEAR	src/wx/wxvbam.h	/^    FF_ADVMAME, FF_BILINEAR, FF_BILINEARPLUS, FF_SCANLINES, FF_TV,$/;"	e	enum:filtfunc
FF_BILINEARPLUS	src/wx/wxvbam.h	/^    FF_ADVMAME, FF_BILINEAR, FF_BILINEARPLUS, FF_SCANLINES, FF_TV,$/;"	e	enum:filtfunc
FF_HQ2X	src/wx/wxvbam.h	/^    FF_HQ2X, FF_LQ2X, FF_SIMPLE2X, FF_SIMPLE3X, FF_HQ3X, FF_SIMPLE4X,$/;"	e	enum:filtfunc
FF_HQ3X	src/wx/wxvbam.h	/^    FF_HQ2X, FF_LQ2X, FF_SIMPLE2X, FF_SIMPLE3X, FF_HQ3X, FF_SIMPLE4X,$/;"	e	enum:filtfunc
FF_HQ4X	src/wx/wxvbam.h	/^    FF_HQ4X, FF_PLUGIN  \/\/ plugin must always be last$/;"	e	enum:filtfunc
FF_LQ2X	src/wx/wxvbam.h	/^    FF_HQ2X, FF_LQ2X, FF_SIMPLE2X, FF_SIMPLE3X, FF_HQ3X, FF_SIMPLE4X,$/;"	e	enum:filtfunc
FF_NONE	src/wx/wxvbam.h	/^    FF_NONE, FF_2XSAI, FF_SUPER2XSAI, FF_SUPEREAGLE, FF_PIXELATE,$/;"	e	enum:filtfunc
FF_PIXELATE	src/wx/wxvbam.h	/^    FF_NONE, FF_2XSAI, FF_SUPER2XSAI, FF_SUPEREAGLE, FF_PIXELATE,$/;"	e	enum:filtfunc
FF_PLUGIN	src/wx/wxvbam.h	/^    FF_HQ4X, FF_PLUGIN  \/\/ plugin must always be last$/;"	e	enum:filtfunc
FF_SCANLINES	src/wx/wxvbam.h	/^    FF_ADVMAME, FF_BILINEAR, FF_BILINEARPLUS, FF_SCANLINES, FF_TV,$/;"	e	enum:filtfunc
FF_SIMPLE2X	src/wx/wxvbam.h	/^    FF_HQ2X, FF_LQ2X, FF_SIMPLE2X, FF_SIMPLE3X, FF_HQ3X, FF_SIMPLE4X,$/;"	e	enum:filtfunc
FF_SIMPLE3X	src/wx/wxvbam.h	/^    FF_HQ2X, FF_LQ2X, FF_SIMPLE2X, FF_SIMPLE3X, FF_HQ3X, FF_SIMPLE4X,$/;"	e	enum:filtfunc
FF_SIMPLE4X	src/wx/wxvbam.h	/^    FF_HQ2X, FF_LQ2X, FF_SIMPLE2X, FF_SIMPLE3X, FF_HQ3X, FF_SIMPLE4X,$/;"	e	enum:filtfunc
FF_SUPER2XSAI	src/wx/wxvbam.h	/^    FF_NONE, FF_2XSAI, FF_SUPER2XSAI, FF_SUPEREAGLE, FF_PIXELATE,$/;"	e	enum:filtfunc
FF_SUPEREAGLE	src/wx/wxvbam.h	/^    FF_NONE, FF_2XSAI, FF_SUPER2XSAI, FF_SUPEREAGLE, FF_PIXELATE,$/;"	e	enum:filtfunc
FF_TV	src/wx/wxvbam.h	/^    FF_ADVMAME, FF_BILINEAR, FF_BILINEARPLUS, FF_SCANLINES, FF_TV,$/;"	e	enum:filtfunc
FIFOA_H	src/gba/Sound.h	54;"	d
FIFOA_L	src/gba/Sound.h	53;"	d
FIFOB_H	src/gba/Sound.h	56;"	d
FIFOB_L	src/gba/Sound.h	55;"	d
FILEVER	src/AutoBuild.h	25;"	d
FILE_EXTRACTOR_H	fex/fex/File_Extractor.h	5;"	d
FILE_SEP	src/sdl/SDL.cpp	435;"	d	file:
FILTERS_H	src/wx/filters.h	2;"	d
FILTER_2XSAI	src/win32/VBA.h	/^	FILTER_2XSAI, FILTER_SUPER2XSAI, FILTER_SUPEREAGLE, FILTER_LQ2X, FILTER_HQ2X,$/;"	e	enum:pixelFilterType
FILTER_BILINEAR	src/win32/VBA.h	/^	FILTER_BILINEAR, FILTER_BILINEARPLUS, FILTER_MAMESCALE2X,$/;"	e	enum:pixelFilterType
FILTER_BILINEARPLUS	src/win32/VBA.h	/^	FILTER_BILINEAR, FILTER_BILINEARPLUS, FILTER_MAMESCALE2X,$/;"	e	enum:pixelFilterType
FILTER_HQ2X	src/win32/VBA.h	/^	FILTER_2XSAI, FILTER_SUPER2XSAI, FILTER_SUPEREAGLE, FILTER_LQ2X, FILTER_HQ2X,$/;"	e	enum:pixelFilterType
FILTER_HQ3X	src/win32/VBA.h	/^	FILTER_SIMPLE3X, FILTER_HQ3X,$/;"	e	enum:pixelFilterType
FILTER_HQ4X	src/win32/VBA.h	/^	FILTER_SIMPLE4X, FILTER_HQ4X$/;"	e	enum:pixelFilterType
FILTER_LQ2X	src/win32/VBA.h	/^	FILTER_2XSAI, FILTER_SUPER2XSAI, FILTER_SUPEREAGLE, FILTER_LQ2X, FILTER_HQ2X,$/;"	e	enum:pixelFilterType
FILTER_MAMESCALE2X	src/win32/VBA.h	/^	FILTER_BILINEAR, FILTER_BILINEARPLUS, FILTER_MAMESCALE2X,$/;"	e	enum:pixelFilterType
FILTER_NONE	src/win32/VBA.h	/^	FILTER_NONE,$/;"	e	enum:pixelFilterType
FILTER_PIXELATE	src/win32/VBA.h	/^	FILTER_SIMPLE2X, FILTER_PIXELATE, FILTER_TVMODE, FILTER_SCANLINES,$/;"	e	enum:pixelFilterType
FILTER_PLUGIN	src/win32/VBA.h	/^    FILTER_PLUGIN,$/;"	e	enum:pixelFilterType
FILTER_SCANLINES	src/win32/VBA.h	/^	FILTER_SIMPLE2X, FILTER_PIXELATE, FILTER_TVMODE, FILTER_SCANLINES,$/;"	e	enum:pixelFilterType
FILTER_SIMPLE2X	src/win32/VBA.h	/^	FILTER_SIMPLE2X, FILTER_PIXELATE, FILTER_TVMODE, FILTER_SCANLINES,$/;"	e	enum:pixelFilterType
FILTER_SIMPLE3X	src/win32/VBA.h	/^	FILTER_SIMPLE3X, FILTER_HQ3X,$/;"	e	enum:pixelFilterType
FILTER_SIMPLE4X	src/win32/VBA.h	/^	FILTER_SIMPLE4X, FILTER_HQ4X$/;"	e	enum:pixelFilterType
FILTER_SUPER2XSAI	src/win32/VBA.h	/^	FILTER_2XSAI, FILTER_SUPER2XSAI, FILTER_SUPEREAGLE, FILTER_LQ2X, FILTER_HQ2X,$/;"	e	enum:pixelFilterType
FILTER_SUPEREAGLE	src/win32/VBA.h	/^	FILTER_2XSAI, FILTER_SUPER2XSAI, FILTER_SUPEREAGLE, FILTER_LQ2X, FILTER_HQ2X,$/;"	e	enum:pixelFilterType
FILTER_TVMODE	src/win32/VBA.h	/^	FILTER_SIMPLE2X, FILTER_PIXELATE, FILTER_TVMODE, FILTER_SCANLINES,$/;"	e	enum:pixelFilterType
FLASH_128K	src/libretro/gbaconv/gbaconv.c	/^   FLASH_128K,$/;"	e	enum:save_type	file:
FLASH_128K_SZ	src/gba/Flash.h	4;"	d
FLASH_64K	src/libretro/gbaconv/gbaconv.c	/^   FLASH_64K,$/;"	e	enum:save_type	file:
FLASH_AUTOSELECT	src/gba/Flash.cpp	13;"	d	file:
FLASH_CMD_1	src/gba/Flash.cpp	11;"	d	file:
FLASH_CMD_2	src/gba/Flash.cpp	12;"	d	file:
FLASH_CMD_3	src/gba/Flash.cpp	14;"	d	file:
FLASH_CMD_4	src/gba/Flash.cpp	15;"	d	file:
FLASH_CMD_5	src/gba/Flash.cpp	16;"	d	file:
FLASH_ERASE_COMPLETE	src/gba/Flash.cpp	17;"	d	file:
FLASH_H	src/gba/Flash.h	2;"	d
FLASH_PROGRAM	src/gba/Flash.cpp	18;"	d	file:
FLASH_READ_ARRAY	src/gba/Flash.cpp	10;"	d	file:
FLASH_SETBANK	src/gba/Flash.cpp	19;"	d	file:
FLEXINT_H	src/sdl/expr-lex.cpp	30;"	d	file:
FLEX_BETA	src/sdl/expr-lex.cpp	14;"	d	file:
FLEX_SCANNER	src/sdl/expr-lex.cpp	9;"	d	file:
FROM_FIXED	src/apu/Effects_Buffer.cpp	22;"	d	file:
False	fex/7z_C/Types.h	97;"	d
File	src/gtk/configfile.cpp	/^File::File()$/;"	f	class:VBA::Config::File
File	src/gtk/configfile.cpp	/^File::File(const string & _rsFile)$/;"	f	class:VBA::Config::File
File	src/gtk/configfile.h	/^class File : private std::list<Section>$/;"	c	namespace:VBA::Config
FileDlg	src/win32/FileDlg.cpp	/^FileDlg::FileDlg(CWnd *parent, LPCTSTR file, LPCTSTR filter,$/;"	f	class:FileDlg
FileDlg	src/win32/FileDlg.h	/^class FileDlg$/;"	c
FileIndexToFolderIndexMap	fex/7z_C/7z.h	/^  UInt32 *FileIndexToFolderIndexMap;$/;"	m	struct:__anon16
FileNameOffsets	fex/7z_C/7z.h	/^  size_t *FileNameOffsets; \/* in 2-byte steps *\/$/;"	m	struct:__anon16
FileNames	fex/7z_C/7z.h	/^  CBuf FileNames;  \/* UTF-16-LE *\/$/;"	m	struct:__anon16
FileRun	src/win32/MainWnd.cpp	/^bool MainWnd::FileRun()$/;"	f	class:MainWnd
File_Extractor	fex/fex/fex.h	/^typedef fex_t File_Extractor;$/;"	t
File_Reader	fex/fex/Data_Reader.h	/^	File_Reader()                       : size_( 0 ) { }$/;"	f	class:File_Reader
File_Reader	fex/fex/Data_Reader.h	/^class File_Reader : public Data_Reader {$/;"	c
Files	fex/7z_C/7z.h	/^  CSzFileItem *Files;$/;"	m	struct:__anon15
FillDev	src/wx/guiinit.cpp	/^    bool FillDev(int api)$/;"	f	class:SoundConfig_t
Filter	src/gtk/filters.h	/^typedef void (*Filter)(u8 *, u32, u8 *, u8 *, u32, int, int);$/;"	t	namespace:VBA
Filter	src/sdl/filters.h	/^enum Filter { kStretch1x, kStretch2x, k2xSaI, kSuper2xSaI, kSuperEagle, kPixelate,$/;"	g
Filter2xSaI	src/gtk/filters.h	/^  Filter2xSaI,$/;"	e	enum:VBA::EFilter
FilterAdMame2x	src/gtk/filters.h	/^  FilterAdMame2x,$/;"	e	enum:VBA::EFilter
FilterBilinear	src/gtk/filters.h	/^  FilterBilinear,$/;"	e	enum:VBA::EFilter
FilterBilinearPlus	src/gtk/filters.h	/^  FilterBilinearPlus,$/;"	e	enum:VBA::EFilter
FilterDepth16	src/gtk/filters.h	/^  FilterDepth16,$/;"	e	enum:VBA::EFilterDepth
FilterDepth32	src/gtk/filters.h	/^  FilterDepth32$/;"	e	enum:VBA::EFilterDepth
FilterDesc	src/sdl/filters.cpp	/^struct FilterDesc {$/;"	s	file:
FilterEvent	src/wx/wxvbam.cpp	/^int wxvbamApp::FilterEvent(wxEvent &event)$/;"	f	class:wxvbamApp
FilterFunc	src/sdl/filters.h	/^typedef void(*FilterFunc)(u8*, u32, u8*, u8*, u32, int, int);$/;"	t
FilterHq2x	src/gtk/filters.h	/^  FilterHq2x,$/;"	e	enum:VBA::EFilter
FilterIB	src/gtk/filters.h	/^typedef void (*FilterIB)(u8 *, u32, int, int);$/;"	t	namespace:VBA
FilterIBMotionBlur	src/gtk/filters.h	/^  FilterIBMotionBlur,$/;"	e	enum:VBA::EFilterIB
FilterIBNone	src/gtk/filters.h	/^  FilterIBNone = FirstFilterIB,$/;"	e	enum:VBA::EFilterIB
FilterIBSmart	src/gtk/filters.h	/^  FilterIBSmart,$/;"	e	enum:VBA::EFilterIB
FilterLq2x	src/gtk/filters.h	/^  FilterLq2x,$/;"	e	enum:VBA::EFilter
FilterNone	src/gtk/filters.h	/^  FilterNone = FirstFilter,$/;"	e	enum:VBA::EFilter
FilterPixelate	src/gtk/filters.h	/^  FilterPixelate,$/;"	e	enum:VBA::EFilter
FilterScanlines	src/gtk/filters.h	/^  FilterScanlines,$/;"	e	enum:VBA::EFilter
FilterScanlinesTV	src/gtk/filters.h	/^  FilterScanlinesTV,$/;"	e	enum:VBA::EFilter
FilterSuper2xSaI	src/gtk/filters.h	/^  FilterSuper2xSaI,$/;"	e	enum:VBA::EFilter
FilterSuperEagle	src/gtk/filters.h	/^  FilterSuperEagle,$/;"	e	enum:VBA::EFilter
FilterThread	src/wx/panel.cpp	/^    FilterThread() : wxThread(wxTHREAD_JOINABLE), lock(), sig(lock) {}$/;"	f	class:FilterThread
FilterThread	src/wx/panel.cpp	/^class FilterThread : public wxThread$/;"	c	file:
Filters	src/sdl/filters.cpp	/^const FilterDesc Filters[] = {$/;"	v
FirstFilter	src/gtk/filters.h	/^  FirstFilter,$/;"	e	enum:VBA::EFilter
FirstFilterIB	src/gtk/filters.h	/^  FirstFilterIB,$/;"	e	enum:VBA::EFilterIB
Flags	src/win32/rpi.h	/^	unsigned long	Flags;$/;"	m	struct:__anon66
Flags	src/win32/rpi.h	/^	unsigned long	Flags;$/;"	m	struct:__anon67
FlagsEx	src/win32/FileDlg.h	/^  DWORD         FlagsEx;$/;"	m	struct:OPENFILENAMEEX
FolderStartFileIndex	fex/7z_C/7z.h	/^  UInt32 *FolderStartFileIndex;$/;"	m	struct:__anon16
FolderStartPackStreamIndex	fex/7z_C/7z.h	/^  UInt32 *FolderStartPackStreamIndex;$/;"	m	struct:__anon16
Folders	fex/7z_C/7z.h	/^  CSzFolder *Folders;$/;"	m	struct:__anon15
FormatValue	src/wx/guiinit.cpp	/^    void FormatValue(s32 val, wxString &s)$/;"	f	class:CheatFind_t
FoundState	fex/7z_C/Ppmd7.h	/^  CPpmd_State *FoundState;$/;"	m	struct:__anon6
FrameworkDir	src/libretro/msvc/msvc-2010-360.bat	/^@set FrameworkDir=%FrameworkDir32%$/;"	v
FrameworkVersion	src/libretro/msvc/msvc-2010-360.bat	/^@set FrameworkVersion=%FrameworkVersion32%$/;"	v
Free	fex/7z_C/Types.h	/^  void (*Free)(void *p, void *address); \/* address can be 0 *\/$/;"	m	struct:__anon33
FreeList	fex/7z_C/Ppmd7.h	/^  CPpmd_Void_Ref FreeList[PPMD_NUM_INDEXES];$/;"	m	struct:__anon6
Freq	fex/7z_C/Ppmd.h	/^  Byte Freq;$/;"	m	struct:__anon21
FromString	src/wx/widgets/joyedit.cpp	/^bool wxJoyKeyTextCtrl::FromString(const wxString &s, int &mod, int &key, int &joy)$/;"	f	class:wxJoyKeyTextCtrl
FromString	src/wx/widgets/joyedit.cpp	/^wxJoyKeyBinding_v wxJoyKeyTextCtrl::FromString(const wxString &s, wxChar sep)$/;"	f	class:wxJoyKeyTextCtrl
FromString	src/wx/widgets/keyedit.cpp	/^bool wxKeyTextCtrl::FromString(const wxString &s, int &mod, int &key)$/;"	f	class:wxKeyTextCtrl
FromString	src/wx/widgets/keyedit.cpp	/^wxAcceleratorEntry_v wxKeyTextCtrl::FromString(const wxString &s, wxChar sep)$/;"	f	class:wxKeyTextCtrl
FullVol	src/wx/guiinit.cpp	/^    void FullVol(wxCommandEvent &ev)$/;"	f	class:SoundConfig_t
FullscreenSettings	src/win32/FullscreenSettings.cpp	/^FullscreenSettings::FullscreenSettings(CWnd* pParent \/*=NULL*\/)$/;"	f	class:FullscreenSettings
FullscreenSettings	src/win32/FullscreenSettings.h	/^class FullscreenSettings : public CDialog$/;"	c
FuncTable	src/filters/hq/asm/hq3x_16.asm	/^FuncTable$/;"	l
FuncTable	src/filters/hq/asm/hq3x_32.asm	/^FuncTable$/;"	l
FuncTable	src/filters/hq/asm/hq4x_16.asm	/^FuncTable$/;"	l
FuncTable	src/filters/hq/asm/hq4x_32.asm	/^FuncTable$/;"	l
FuncTable2	src/filters/hq/asm/hq3x_16.asm	/^FuncTable2$/;"	l
FuncTable2	src/filters/hq/asm/hq3x_32.asm	/^FuncTable2$/;"	l
Function	src/gba/elf.h	/^struct Function {$/;"	s
FunctionType	src/gba/elf.h	/^struct FunctionType {$/;"	s
GAME_DRAWING_H	src/wx/drawing.h	2;"	d
GBACPU_H	src/gba/GBAcpu.h	2;"	d
GBACheatList	src/win32/GBACheats.cpp	/^GBACheatList::GBACheatList(CWnd* pParent \/*=NULL*\/)$/;"	f	class:GBACheatList
GBACheatList	src/win32/GBACheats.h	/^class GBACheatList : public CDialog$/;"	c
GBACheatSearch	src/win32/GBACheats.cpp	/^GBACheatSearch::GBACheatSearch(CWnd* pParent \/*=NULL*\/)$/;"	f	class:GBACheatSearch
GBACheatSearch	src/win32/GBACheats.h	/^class GBACheatSearch : public CDialog$/;"	c
GBACtrlEnabler	src/wx/guiinit.cpp	/^    GBACtrlEnabler() : wxValidator() {}$/;"	f	class:GBACtrlEnabler
GBACtrlEnabler	src/wx/guiinit.cpp	/^    GBACtrlEnabler(const GBACtrlEnabler &e) : wxValidator() {}$/;"	f	class:GBACtrlEnabler
GBACtrlEnabler	src/wx/guiinit.cpp	/^class GBACtrlEnabler : public wxValidator$/;"	c	file:
GBAHeight	src/wx/wxvbam.h	/^	             GBAWidth = 240, GBAHeight = 160;$/;"	m	class:GameArea
GBAINLINE_H	src/gba/GBAinline.h	2;"	d
GBAMemoryViewer	src/win32/MemoryViewerDlg.cpp	/^GBAMemoryViewer::GBAMemoryViewer()$/;"	f	class:GBAMemoryViewer
GBAMemoryViewer	src/win32/MemoryViewerDlg.h	/^class GBAMemoryViewer : public MemoryViewer {$/;"	c
GBAPaletteViewControl	src/win32/PaletteView.h	/^class GBAPaletteViewControl : public PaletteViewControl {$/;"	c
GBASockClient	src/gba/GBASockClient.cpp	/^GBASockClient::GBASockClient(sf::IPAddress _server_addr)$/;"	f	class:GBASockClient
GBASockClient	src/gba/GBASockClient.h	/^class GBASockClient : public sf::SocketTCP$/;"	c
GBASystem	src/gba/GBA.cpp	/^struct EmulatedSystem GBASystem = {$/;"	v	typeref:struct:EmulatedSystem
GBAWidth	src/wx/wxvbam.h	/^	             GBAWidth = 240, GBAHeight = 160;$/;"	m	class:GameArea
GBA_GBALINK_H	src/gba/GBALink.h	2;"	d
GBA_H	src/gba/GBA.h	2;"	d
GBA_PITCH	src/libretro/libretro.cpp	549;"	d	file:
GBA_PITCH	src/libretro/libretro.cpp	551;"	d	file:
GBCHEATS_H	src/gb/gbCheats.h	2;"	d
GBCHEAT_HEX_VALUE	src/gb/gbCheats.cpp	22;"	d	file:
GBCHEAT_IS_HEX	src/gb/gbCheats.cpp	21;"	d	file:
GBCheatList	src/win32/GBCheatsDlg.cpp	/^GBCheatList::GBCheatList(CWnd* pParent \/*=NULL*\/)$/;"	f	class:GBCheatList
GBCheatList	src/win32/GBCheatsDlg.h	/^class GBCheatList : public CDialog$/;"	c
GBCheatSearch	src/win32/GBCheatsDlg.cpp	/^GBCheatSearch::GBCheatSearch(CWnd* pParent \/*=NULL*\/)$/;"	f	class:GBCheatSearch
GBCheatSearch	src/win32/GBCheatsDlg.h	/^class GBCheatSearch : public CDialog$/;"	c
GBColorConfigHandler	src/wx/guiinit.cpp	/^} GBColorConfigHandler[3];$/;"	v	typeref:class:GBColorConfig_t	file:
GBColorConfig_t	src/wx/guiinit.cpp	/^static class GBColorConfig_t : public wxEvtHandler$/;"	c	file:
GBColorDlg	src/win32/GBColorDlg.cpp	/^GBColorDlg::GBColorDlg(CWnd* pParent \/*=NULL*\/)$/;"	f	class:GBColorDlg
GBColorDlg	src/win32/GBColorDlg.h	/^class GBColorDlg : public CDialog$/;"	c
GBDIV_CLOCK_TICKS	src/gb/GB.cpp	/^int GBDIV_CLOCK_TICKS          = 64;$/;"	v
GBDisassemble	src/win32/GBDisassemble.cpp	/^GBDisassemble::GBDisassemble(CWnd* pParent \/*=NULL*\/)$/;"	f	class:GBDisassemble
GBDisassemble	src/win32/GBDisassemble.h	/^class GBDisassemble : public ResizeDlg, IUpdateListener$/;"	c
GBDisassembleViewer	src/wx/viewers.cpp	/^	GBDisassembleViewer() : Viewer(wxT("GBDisassemble"))$/;"	f	class:Viewers::GBDisassembleViewer
GBDisassembleViewer	src/wx/viewers.cpp	/^    class GBDisassembleViewer : public Viewer$/;"	c	namespace:Viewers	file:
GBGLOBALS_H	src/gb/gbGlobals.h	2;"	d
GBHeight	src/wx/wxvbam.h	/^    static const int GBWidth = 160,  GBHeight = 144,$/;"	m	class:GameArea
GBLCD_MODE_0_CLOCK_TICKS	src/gb/GB.cpp	/^int GBLCD_MODE_0_CLOCK_TICKS   = 51;$/;"	v
GBLCD_MODE_1_CLOCK_TICKS	src/gb/GB.cpp	/^int GBLCD_MODE_1_CLOCK_TICKS   = 1140;$/;"	v
GBLCD_MODE_2_CLOCK_TICKS	src/gb/GB.cpp	/^int GBLCD_MODE_2_CLOCK_TICKS   = 20;$/;"	v
GBLCD_MODE_3_CLOCK_TICKS	src/gb/GB.cpp	/^int GBLCD_MODE_3_CLOCK_TICKS   = 43;$/;"	v
GBLY_INCREMENT_CLOCK_TICKS	src/gb/GB.cpp	/^int GBLY_INCREMENT_CLOCK_TICKS = 114;$/;"	v
GBMEMORY_H	src/gb/gbMemory.h	2;"	d
GBMapView	src/win32/GBMapView.cpp	/^GBMapView::GBMapView(CWnd* pParent \/*=NULL*\/)$/;"	f	class:GBMapView
GBMapView	src/win32/GBMapView.h	/^class GBMapView : public ResizeDlg, IUpdateListener$/;"	c
GBMapViewer	src/wx/gfxviewers.cpp	/^	GBMapViewer() : GfxViewer(wxT("GBMapViewer"), 256, 256)$/;"	f	class:Viewers::GBMapViewer
GBMapViewer	src/wx/gfxviewers.cpp	/^    class GBMapViewer : public GfxViewer$/;"	c	namespace:Viewers	file:
GBMemViewer	src/wx/viewers.cpp	/^	GBMemViewer() : MemViewerBase((u16)~0)$/;"	f	class:Viewers::GBMemViewer
GBMemViewer	src/wx/viewers.cpp	/^    class GBMemViewer : public MemViewerBase$/;"	c	namespace:Viewers	file:
GBMemoryViewer	src/win32/GBMemoryViewerDlg.cpp	/^GBMemoryViewer::GBMemoryViewer()$/;"	f	class:GBMemoryViewer
GBMemoryViewer	src/win32/GBMemoryViewerDlg.h	/^class GBMemoryViewer : public MemoryViewer {$/;"	c
GBMemoryViewerDlg	src/win32/GBMemoryViewerDlg.cpp	/^GBMemoryViewerDlg::GBMemoryViewerDlg(CWnd* pParent \/*=NULL*\/)$/;"	f	class:GBMemoryViewerDlg
GBMemoryViewerDlg	src/win32/GBMemoryViewerDlg.h	/^class GBMemoryViewerDlg : public ResizeDlg, IUpdateListener, IMemoryViewerDlg$/;"	c
GBOAMViewer	src/wx/gfxviewers.cpp	/^	GBOAMViewer() : GfxViewer(wxT("GBOAMViewer"), 8, 16)$/;"	f	class:Viewers::GBOAMViewer
GBOAMViewer	src/wx/gfxviewers.cpp	/^    class GBOAMViewer : public GfxViewer$/;"	c	namespace:Viewers	file:
GBOPCODE	src/gb/gbDis.cpp	/^} GBOPCODE;$/;"	t	typeref:struct:__anon152	file:
GBOamView	src/win32/GBOamView.cpp	/^GBOamView::GBOamView(CWnd* pParent \/*=NULL*\/)$/;"	f	class:GBOamView
GBOamView	src/win32/GBOamView.h	/^class GBOamView : public ResizeDlg, IUpdateListener$/;"	c
GBPRINTER_H	src/gb/gbPrinter.h	2;"	d
GBPaletteView	src/win32/GBPaletteView.cpp	/^GBPaletteView::GBPaletteView(CWnd* pParent \/*=NULL*\/)$/;"	f	class:GBPaletteView
GBPaletteView	src/win32/GBPaletteView.h	/^class GBPaletteView : public ResizeDlg, IUpdateListener$/;"	c
GBPaletteViewControl	src/win32/GBPaletteView.h	/^class GBPaletteViewControl : public PaletteViewControl {$/;"	c
GBPaletteViewer	src/wx/gfxviewers.cpp	/^	GBPaletteViewer() : Viewer(wxT("GBPaletteViewer"))$/;"	f	class:Viewers::GBPaletteViewer
GBPaletteViewer	src/wx/gfxviewers.cpp	/^    class GBPaletteViewer : public Viewer$/;"	c	namespace:Viewers	file:
GBPrinterDlg	src/win32/GBPrinterDlg.cpp	/^GBPrinterDlg::GBPrinterDlg(CWnd* pParent \/*=NULL*\/)$/;"	f	class:GBPrinterDlg
GBPrinterDlg	src/win32/GBPrinterDlg.h	/^class GBPrinterDlg : public CDialog$/;"	c
GBReadMemoryQuick	src/wx/viewers.cpp	535;"	d	file:
GBSAVE_GAME_VERSION	src/gb/GB.cpp	578;"	d	file:
GBSAVE_GAME_VERSION_1	src/gb/GB.cpp	566;"	d	file:
GBSAVE_GAME_VERSION_10	src/gb/GB.cpp	575;"	d	file:
GBSAVE_GAME_VERSION_11	src/gb/GB.cpp	576;"	d	file:
GBSAVE_GAME_VERSION_12	src/gb/GB.cpp	577;"	d	file:
GBSAVE_GAME_VERSION_2	src/gb/GB.cpp	567;"	d	file:
GBSAVE_GAME_VERSION_3	src/gb/GB.cpp	568;"	d	file:
GBSAVE_GAME_VERSION_4	src/gb/GB.cpp	569;"	d	file:
GBSAVE_GAME_VERSION_5	src/gb/GB.cpp	570;"	d	file:
GBSAVE_GAME_VERSION_6	src/gb/GB.cpp	571;"	d	file:
GBSAVE_GAME_VERSION_7	src/gb/GB.cpp	572;"	d	file:
GBSAVE_GAME_VERSION_8	src/gb/GB.cpp	573;"	d	file:
GBSAVE_GAME_VERSION_9	src/gb/GB.cpp	574;"	d	file:
GBSERIAL_CLOCK_TICKS	src/gb/GB.cpp	/^int GBSERIAL_CLOCK_TICKS       = 128;$/;"	v
GBSGB_H	src/gb/gbSGB.h	2;"	d
GBSGB_NONE	src/gb/gbSGB.cpp	14;"	d	file:
GBSGB_PACKET_TIMEOUT	src/gb/gbSGB.cpp	/^int GBSGB_PACKET_TIMEOUT   = 66666;$/;"	v
GBSGB_PACKET_TRANSMIT	src/gb/gbSGB.cpp	16;"	d	file:
GBSGB_RESET	src/gb/gbSGB.cpp	15;"	d	file:
GBSOUND_H	src/gb/gbSound.h	2;"	d
GBSYNCHRONIZE_CLOCK_TICKS	src/gb/GB.cpp	/^int GBSYNCHRONIZE_CLOCK_TICKS  = 52920;$/;"	v
GBSystem	src/gb/GB.cpp	/^struct EmulatedSystem GBSystem = {$/;"	v	typeref:struct:EmulatedSystem
GBTIMER_MODE_0_CLOCK_TICKS	src/gb/GB.cpp	/^int GBTIMER_MODE_0_CLOCK_TICKS = 256;$/;"	v
GBTIMER_MODE_1_CLOCK_TICKS	src/gb/GB.cpp	/^int GBTIMER_MODE_1_CLOCK_TICKS = 4;$/;"	v
GBTIMER_MODE_2_CLOCK_TICKS	src/gb/GB.cpp	/^int GBTIMER_MODE_2_CLOCK_TICKS = 16;$/;"	v
GBTIMER_MODE_3_CLOCK_TICKS	src/gb/GB.cpp	/^int GBTIMER_MODE_3_CLOCK_TICKS = 64;$/;"	v
GBTileView	src/win32/GBTileView.cpp	/^GBTileView::GBTileView(CWnd* pParent \/*=NULL*\/)$/;"	f	class:GBTileView
GBTileView	src/win32/GBTileView.h	/^class GBTileView : public ResizeDlg, IUpdateListener$/;"	c
GBTileViewer	src/wx/gfxviewers.cpp	/^	GBTileViewer() : GfxViewer(wxT("GBTileViewer"), 16*8, 16*8)$/;"	f	class:Viewers::GBTileViewer
GBTileViewer	src/wx/gfxviewers.cpp	/^    class GBTileViewer : public GfxViewer$/;"	c	namespace:Viewers	file:
GBWidth	src/wx/wxvbam.h	/^    static const int GBWidth = 160,  GBHeight = 144,$/;"	m	class:GameArea
GBWriteByteQuick	src/wx/viewers.cpp	529;"	d	file:
GBWriteHalfWordQuick	src/wx/viewers.cpp	531;"	d	file:
GBWriteMemoryQuick	src/wx/viewers.cpp	533;"	d	file:
GB_APU_CUSTOM_STATE	src/apu/blargg_config.h	10;"	d
GB_APU_H	src/apu/Gb_Apu.h	5;"	d
GB_APU_OVERCLOCK	src/apu/Gb_Oscs.h	11;"	d
GB_APU_OVERCLOCK	src/apu/blargg_config.h	8;"	d
GB_H	src/gb/gb.h	2;"	d
GB_OSCS_H	src/apu/Gb_Oscs.h	5;"	d
GB_READ	src/gb/gbDis.cpp	13;"	d	file:
GB_READBYTE_QUICK	src/win32/GBMemoryViewerDlg.cpp	40;"	d	file:
GB_WRITEBYTE_QUICK	src/win32/GBMemoryViewerDlg.cpp	43;"	d	file:
GDBPortDlg	src/win32/GDBConnection.cpp	/^GDBPortDlg::GDBPortDlg(CWnd* pParent \/*=NULL*\/)$/;"	f	class:GDBPortDlg
GDBPortDlg	src/win32/GDBConnection.h	/^class GDBPortDlg : public CDialog$/;"	c
GDBWaitingDlg	src/win32/GDBConnection.cpp	/^GDBWaitingDlg::GDBWaitingDlg(SOCKET s, int p, CWnd* pParent \/*=NULL*\/)$/;"	f	class:GDBWaitingDlg
GDBWaitingDlg	src/win32/GDBConnection.h	/^class GDBWaitingDlg : public CDialog$/;"	c
GETCWD	src/sdl/SDL.cpp	61;"	d	file:
GETCWD	src/sdl/SDL.cpp	64;"	d	file:
GETOPT_INTERFACE_VERSION	src/sdl/getopt.c	55;"	d	file:
GETOPT_INTERFACE_VERSION	src/sdl/getopt1.c	47;"	d	file:
GET_BE16	fex/fex/blargg_endian.h	132;"	d
GET_BE16	fex/fex/blargg_endian.h	165;"	d
GET_BE32	fex/fex/blargg_endian.h	133;"	d
GET_BE32	fex/fex/blargg_endian.h	170;"	d
GET_BIT	fex/7z_C/LzmaDec.c	25;"	d	file:
GET_BIT2	fex/7z_C/LzmaDec.c	22;"	d	file:
GET_BIT2_CHECK	fex/7z_C/LzmaDec.c	52;"	d	file:
GET_BIT_CHECK	fex/7z_C/LzmaDec.c	55;"	d	file:
GET_LE16	fex/fex/blargg_endian.h	127;"	d
GET_LE16	fex/fex/blargg_endian.h	140;"	d
GET_LE16	fex/fex/blargg_endian.h	145;"	d
GET_LE16	fex/fex/blargg_endian.h	155;"	d
GET_LE32	fex/fex/blargg_endian.h	128;"	d
GET_LE32	fex/fex/blargg_endian.h	141;"	d
GET_LE32	fex/fex/blargg_endian.h	146;"	d
GET_LE32	fex/fex/blargg_endian.h	160;"	d
GFX_H	src/gba/GBAGfx.h	2;"	d
GLDrawingPanel	src/wx/drawing.h	/^class GLDrawingPanel : public DrawingPanel, public wxGLCanvas$/;"	c
GLDrawingPanel	src/wx/panel.cpp	/^GLDrawingPanel::GLDrawingPanel(wxWindow *parent, int _width, int _height) :$/;"	f	class:GLDrawingPanel
GLFONT	src/win32/glfont.h	/^} GLFONT;$/;"	t	typeref:struct:__anon69
GLFONTCHAR	src/win32/glfont.h	/^} GLFONTCHAR;$/;"	t	typeref:struct:__anon68
GLOBALS_H	src/gba/Globals.h	2;"	d
GMASK	src/filters/hq/c/hq_implementation.cpp	55;"	d	file:
GMASK	src/filters/hq/c/hq_shared.h	26;"	d
GMASK	src/filters/hq/c/hq_shared.h	43;"	d
GP	src/gba/GBALink.h	14;"	d
GREEN_MASK555	src/filters/2xSaI.cpp	220;"	d	file:
GREEN_MASK565	src/filters/2xSaI.cpp	216;"	d	file:
GSACodeSelect	src/win32/GSACodeSelect.cpp	/^GSACodeSelect::GSACodeSelect(FILE *file, CWnd* pParent \/*=NULL*\/)$/;"	f	class:GSACodeSelect
GSACodeSelect	src/win32/GSACodeSelect.h	/^class GSACodeSelect : public CDialog$/;"	c
GSA_16_BIT_ADD	src/gba/Cheats.cpp	107;"	d	file:
GSA_16_BIT_FILL	src/gba/Cheats.cpp	90;"	d	file:
GSA_16_BIT_GS_WRITE	src/gba/Cheats.cpp	71;"	d	file:
GSA_16_BIT_GS_WRITE2	src/gba/Cheats.cpp	79;"	d	file:
GSA_16_BIT_IF_AND	src/gba/Cheats.cpp	116;"	d	file:
GSA_16_BIT_IF_AND2	src/gba/Cheats.cpp	125;"	d	file:
GSA_16_BIT_IF_AND3	src/gba/Cheats.cpp	163;"	d	file:
GSA_16_BIT_IF_FALSE2	src/gba/Cheats.cpp	95;"	d	file:
GSA_16_BIT_IF_FALSE3	src/gba/Cheats.cpp	148;"	d	file:
GSA_16_BIT_IF_HIGHER_OR_EQ_U	src/gba/Cheats.cpp	173;"	d	file:
GSA_16_BIT_IF_HIGHER_S	src/gba/Cheats.cpp	133;"	d	file:
GSA_16_BIT_IF_HIGHER_S2	src/gba/Cheats.cpp	139;"	d	file:
GSA_16_BIT_IF_HIGHER_S3	src/gba/Cheats.cpp	154;"	d	file:
GSA_16_BIT_IF_HIGHER_U	src/gba/Cheats.cpp	113;"	d	file:
GSA_16_BIT_IF_HIGHER_U2	src/gba/Cheats.cpp	122;"	d	file:
GSA_16_BIT_IF_HIGHER_U3	src/gba/Cheats.cpp	160;"	d	file:
GSA_16_BIT_IF_LOWER_OR_EQ_U	src/gba/Cheats.cpp	172;"	d	file:
GSA_16_BIT_IF_LOWER_S	src/gba/Cheats.cpp	130;"	d	file:
GSA_16_BIT_IF_LOWER_S2	src/gba/Cheats.cpp	136;"	d	file:
GSA_16_BIT_IF_LOWER_S3	src/gba/Cheats.cpp	151;"	d	file:
GSA_16_BIT_IF_LOWER_U	src/gba/Cheats.cpp	110;"	d	file:
GSA_16_BIT_IF_LOWER_U2	src/gba/Cheats.cpp	119;"	d	file:
GSA_16_BIT_IF_LOWER_U3	src/gba/Cheats.cpp	157;"	d	file:
GSA_16_BIT_IF_TRUE2	src/gba/Cheats.cpp	92;"	d	file:
GSA_16_BIT_IF_TRUE3	src/gba/Cheats.cpp	145;"	d	file:
GSA_16_BIT_MIF_FALSE	src/gba/Cheats.cpp	175;"	d	file:
GSA_16_BIT_MIF_HIGHER_OR_EQ_U	src/gba/Cheats.cpp	177;"	d	file:
GSA_16_BIT_MIF_LOWER_OR_EQ_U	src/gba/Cheats.cpp	176;"	d	file:
GSA_16_BIT_MIF_TRUE	src/gba/Cheats.cpp	174;"	d	file:
GSA_16_BIT_POINTER	src/gba/Cheats.cpp	104;"	d	file:
GSA_16_BIT_ROM_PATCH	src/gba/Cheats.cpp	69;"	d	file:
GSA_16_BIT_ROM_PATCH2C	src/gba/Cheats.cpp	81;"	d	file:
GSA_16_BIT_ROM_PATCH2D	src/gba/Cheats.cpp	166;"	d	file:
GSA_16_BIT_ROM_PATCH2E	src/gba/Cheats.cpp	167;"	d	file:
GSA_16_BIT_ROM_PATCH2F	src/gba/Cheats.cpp	168;"	d	file:
GSA_16_BIT_SLIDE	src/gba/Cheats.cpp	83;"	d	file:
GSA_16_BIT_WRITE_IOREGS	src/gba/Cheats.cpp	141;"	d	file:
GSA_32_BIT_ADD	src/gba/Cheats.cpp	108;"	d	file:
GSA_32_BIT_ADD2	src/gba/Cheats.cpp	170;"	d	file:
GSA_32_BIT_GS_WRITE	src/gba/Cheats.cpp	72;"	d	file:
GSA_32_BIT_GS_WRITE2	src/gba/Cheats.cpp	80;"	d	file:
GSA_32_BIT_IF_AND	src/gba/Cheats.cpp	117;"	d	file:
GSA_32_BIT_IF_AND2	src/gba/Cheats.cpp	126;"	d	file:
GSA_32_BIT_IF_AND3	src/gba/Cheats.cpp	164;"	d	file:
GSA_32_BIT_IF_FALSE	src/gba/Cheats.cpp	88;"	d	file:
GSA_32_BIT_IF_FALSE2	src/gba/Cheats.cpp	96;"	d	file:
GSA_32_BIT_IF_FALSE3	src/gba/Cheats.cpp	149;"	d	file:
GSA_32_BIT_IF_HIGHER_S	src/gba/Cheats.cpp	134;"	d	file:
GSA_32_BIT_IF_HIGHER_S2	src/gba/Cheats.cpp	140;"	d	file:
GSA_32_BIT_IF_HIGHER_S3	src/gba/Cheats.cpp	155;"	d	file:
GSA_32_BIT_IF_HIGHER_U	src/gba/Cheats.cpp	114;"	d	file:
GSA_32_BIT_IF_HIGHER_U2	src/gba/Cheats.cpp	123;"	d	file:
GSA_32_BIT_IF_HIGHER_U3	src/gba/Cheats.cpp	161;"	d	file:
GSA_32_BIT_IF_LOWER_S	src/gba/Cheats.cpp	131;"	d	file:
GSA_32_BIT_IF_LOWER_S2	src/gba/Cheats.cpp	137;"	d	file:
GSA_32_BIT_IF_LOWER_S3	src/gba/Cheats.cpp	152;"	d	file:
GSA_32_BIT_IF_LOWER_U	src/gba/Cheats.cpp	111;"	d	file:
GSA_32_BIT_IF_LOWER_U2	src/gba/Cheats.cpp	120;"	d	file:
GSA_32_BIT_IF_LOWER_U3	src/gba/Cheats.cpp	158;"	d	file:
GSA_32_BIT_IF_TRUE	src/gba/Cheats.cpp	86;"	d	file:
GSA_32_BIT_IF_TRUE2	src/gba/Cheats.cpp	93;"	d	file:
GSA_32_BIT_IF_TRUE3	src/gba/Cheats.cpp	146;"	d	file:
GSA_32_BIT_POINTER	src/gba/Cheats.cpp	105;"	d	file:
GSA_32_BIT_SLIDE	src/gba/Cheats.cpp	84;"	d	file:
GSA_32_BIT_SUB2	src/gba/Cheats.cpp	171;"	d	file:
GSA_32_BIT_WRITE_IOREGS	src/gba/Cheats.cpp	142;"	d	file:
GSA_8_BIT_ADD	src/gba/Cheats.cpp	106;"	d	file:
GSA_8_BIT_FILL	src/gba/Cheats.cpp	89;"	d	file:
GSA_8_BIT_GS_WRITE	src/gba/Cheats.cpp	70;"	d	file:
GSA_8_BIT_GS_WRITE2	src/gba/Cheats.cpp	78;"	d	file:
GSA_8_BIT_IF_AND	src/gba/Cheats.cpp	115;"	d	file:
GSA_8_BIT_IF_AND2	src/gba/Cheats.cpp	124;"	d	file:
GSA_8_BIT_IF_AND3	src/gba/Cheats.cpp	162;"	d	file:
GSA_8_BIT_IF_FALSE	src/gba/Cheats.cpp	87;"	d	file:
GSA_8_BIT_IF_FALSE2	src/gba/Cheats.cpp	94;"	d	file:
GSA_8_BIT_IF_FALSE3	src/gba/Cheats.cpp	147;"	d	file:
GSA_8_BIT_IF_HIGHER_S	src/gba/Cheats.cpp	132;"	d	file:
GSA_8_BIT_IF_HIGHER_S2	src/gba/Cheats.cpp	138;"	d	file:
GSA_8_BIT_IF_HIGHER_S3	src/gba/Cheats.cpp	153;"	d	file:
GSA_8_BIT_IF_HIGHER_U	src/gba/Cheats.cpp	112;"	d	file:
GSA_8_BIT_IF_HIGHER_U2	src/gba/Cheats.cpp	121;"	d	file:
GSA_8_BIT_IF_HIGHER_U3	src/gba/Cheats.cpp	159;"	d	file:
GSA_8_BIT_IF_LOWER_S	src/gba/Cheats.cpp	129;"	d	file:
GSA_8_BIT_IF_LOWER_S2	src/gba/Cheats.cpp	135;"	d	file:
GSA_8_BIT_IF_LOWER_S3	src/gba/Cheats.cpp	150;"	d	file:
GSA_8_BIT_IF_LOWER_U	src/gba/Cheats.cpp	109;"	d	file:
GSA_8_BIT_IF_LOWER_U2	src/gba/Cheats.cpp	118;"	d	file:
GSA_8_BIT_IF_LOWER_U3	src/gba/Cheats.cpp	156;"	d	file:
GSA_8_BIT_IF_TRUE	src/gba/Cheats.cpp	85;"	d	file:
GSA_8_BIT_IF_TRUE2	src/gba/Cheats.cpp	91;"	d	file:
GSA_8_BIT_IF_TRUE3	src/gba/Cheats.cpp	144;"	d	file:
GSA_8_BIT_POINTER	src/gba/Cheats.cpp	103;"	d	file:
GSA_8_BIT_SLIDE	src/gba/Cheats.cpp	82;"	d	file:
GSA_ALWAYS	src/gba/Cheats.cpp	127;"	d	file:
GSA_ALWAYS2	src/gba/Cheats.cpp	128;"	d	file:
GSA_ALWAYS3	src/gba/Cheats.cpp	165;"	d	file:
GSA_CODES_ON	src/gba/Cheats.cpp	143;"	d	file:
GSA_GROUP_WRITE	src/gba/Cheats.cpp	169;"	d	file:
GSA_SLOWDOWN	src/gba/Cheats.cpp	97;"	d	file:
GSHIFT1MASK	src/filters/hq/c/hq_implementation.cpp	57;"	d	file:
GSHIFT1MASK	src/filters/hq/c/hq_shared.h	29;"	d
GSHIFT1MASK	src/filters/hq/c/hq_shared.h	45;"	d
GSHIFT2MASK	src/filters/hq/c/hq_implementation.cpp	59;"	d	file:
GSHIFT2MASK	src/filters/hq/c/hq_shared.h	32;"	d
GSHIFT2MASK	src/filters/hq/c/hq_shared.h	47;"	d
GSHIFT3MASK	src/filters/hq/c/hq_implementation.cpp	61;"	d	file:
GSHIFT3MASK	src/filters/hq/c/hq_shared.h	35;"	d
GSHIFT3MASK	src/filters/hq/c/hq_shared.h	49;"	d
GSHIFT4MASK	src/filters/hq/c/hq_implementation.cpp	63;"	d	file:
GSHIFT4MASK	src/filters/hq/c/hq_shared.h	38;"	d
GSHIFT4MASK	src/filters/hq/c/hq_shared.h	51;"	d
GUI	src/gtk/system.cpp	/^inline VBA::Window * GUI()$/;"	f
GZGLFONT_SIZE	src/win32/gzglfont.h	5;"	d
GZIP_EXTRACTOR_H	fex/fex/Gzip_Extractor.h	6;"	d
GZIP_READER_H	fex/fex/Gzip_Reader.h	5;"	d
GameArea	src/wx/panel.cpp	/^GameArea::GameArea()$/;"	f	class:GameArea
GameArea	src/wx/wxvbam.h	/^class GameArea : public wxPanel$/;"	c
GameBoyAdvanceCheatListDialog	src/gtk/gameboyadvancecheatlist.cpp	/^GameBoyAdvanceCheatListDialog::GameBoyAdvanceCheatListDialog(GtkDialog* _pstDialog, const Glib::RefPtr<Gtk::Builder>& refBuilder) :$/;"	f	class:VBA::GameBoyAdvanceCheatListDialog
GameBoyAdvanceCheatListDialog	src/gtk/gameboyadvancecheatlist.h	/^class GameBoyAdvanceCheatListDialog : public CheatListDialog$/;"	c	namespace:VBA
GameBoyAdvanceConfigDialog	src/gtk/gameboyadvanceconfig.cpp	/^GameBoyAdvanceConfigDialog::GameBoyAdvanceConfigDialog(GtkDialog* _pstDialog, const Glib::RefPtr<Gtk::Builder>& refBuilder) :$/;"	f	class:VBA::GameBoyAdvanceConfigDialog
GameBoyAdvanceConfigDialog	src/gtk/gameboyadvanceconfig.h	/^class GameBoyAdvanceConfigDialog : public Gtk::Dialog$/;"	c	namespace:VBA
GameBoyCheatListDialog	src/gtk/gameboycheatlist.cpp	/^GameBoyCheatListDialog::GameBoyCheatListDialog(GtkDialog* _pstDialog, const Glib::RefPtr<Gtk::Builder>& refBuilder) :$/;"	f	class:VBA::GameBoyCheatListDialog
GameBoyCheatListDialog	src/gtk/gameboycheatlist.h	/^class GameBoyCheatListDialog : public CheatListDialog$/;"	c	namespace:VBA
GameBoyConfigDialog	src/gtk/gameboyconfig.cpp	/^GameBoyConfigDialog::GameBoyConfigDialog(GtkDialog* _pstDialog, const Glib::RefPtr<Gtk::Builder>& refBuilder) :$/;"	f	class:VBA::GameBoyConfigDialog
GameBoyConfigDialog	src/gtk/gameboyconfig.h	/^class GameBoyConfigDialog : public Gtk::Dialog$/;"	c	namespace:VBA
GameOverrides	src/win32/GameOverrides.cpp	/^GameOverrides::GameOverrides(CWnd* pParent \/*=NULL*\/)$/;"	f	class:GameOverrides
GameOverrides	src/win32/GameOverrides.h	/^class GameOverrides : public CDialog$/;"	c
Gb_Apu	src/apu/Gb_Apu.cpp	/^Gb_Apu::Gb_Apu()$/;"	f	class:Gb_Apu
Gb_Apu	src/apu/Gb_Apu.h	/^class Gb_Apu {$/;"	c
Gb_Env	src/apu/Gb_Oscs.h	/^	Gb_Env() : env_enabled(false), env_delay(0) {}$/;"	f	class:Gb_Env
Gb_Env	src/apu/Gb_Oscs.h	/^class Gb_Env : public Gb_Osc {$/;"	c
Gb_Noise	src/apu/Gb_Oscs.h	/^class Gb_Noise : public Gb_Env {$/;"	c
Gb_Osc	src/apu/Gb_Oscs.h	/^class Gb_Osc {$/;"	c
Gb_Square	src/apu/Gb_Oscs.h	/^class Gb_Square : public Gb_Env {$/;"	c
Gb_Sweep_Square	src/apu/Gb_Oscs.h	/^class Gb_Sweep_Square : public Gb_Square {$/;"	c
Gb_Wave	src/apu/Gb_Oscs.h	/^class Gb_Wave : public Gb_Osc {$/;"	c
Gba_Pcm	src/gba/Sound.cpp	/^class Gba_Pcm {$/;"	c	file:
Gba_Pcm_Fifo	src/gba/Sound.cpp	/^class Gba_Pcm_Fifo {$/;"	c	file:
GetAccelKey	src/win32/KeyboardEdit.cpp	/^bool CKeyboardEdit::GetAccelKey(WORD& wVirtKey, bool& bCtrl, bool& bAlt, bool& bShift)$/;"	f	class:CKeyboardEdit
GetAddr	src/wx/viewsupt.cpp	/^    u32 MemView::GetAddr()$/;"	f	class:Viewers::MemView
GetAllData	src/win32/LinkOptions.cpp	/^void LinkOptions::GetAllData(LinkGeneral *src)$/;"	f	class:LinkOptions
GetAndRemoveAdditionalState	src/wx/widgets/checkedlistctrl.cpp	/^int wxCheckedListCtrl::GetAndRemoveAdditionalState(long *state, int statemask)$/;"	f	class:wxCheckedListCtrl
GetBe16	fex/7z_C/CpuArch.h	119;"	d
GetBe32	fex/7z_C/CpuArch.h	104;"	d
GetBe64	fex/7z_C/CpuArch.h	105;"	d
GetBgColourFromAdditionalState	src/wx/widgets/checkedlistctrl.cpp	/^wxColour wxCheckedListCtrl::GetBgColourFromAdditionalState(int additionalstate)$/;"	f	class:wxCheckedListCtrl
GetCheckedItemCount	src/wx/widgets/checkedlistctrl.cpp	/^int wxCheckedListCtrl::GetCheckedItemCount() const$/;"	f	class:wxCheckedListCtrl
GetClearable	src/wx/widgets/wx/keyedit.h	/^    bool GetClearable() { return clearable; }$/;"	f	class:wxKeyTextCtrl
GetClickAddress	src/win32/GBMapView.cpp	/^u32 GBMapView::GetClickAddress(int x, int y)$/;"	f	class:GBMapView
GetClickAddress	src/win32/MapView.cpp	/^u32 MapView::GetClickAddress(int x, int y)$/;"	f	class:MapView
GetControlIndex	src/wx/widgets/wx/sdljoy.h	/^    unsigned short GetControlIndex() { return ctrl_idx; }$/;"	f	class:wxSDLJoyEvent
GetControlPrevValue	src/wx/widgets/wx/sdljoy.h	/^    short GetControlPrevValue() { return prev_val; }$/;"	f	class:wxSDLJoyEvent
GetControlType	src/wx/widgets/wx/sdljoy.h	/^    unsigned short GetControlType() { return ctrl_type; }$/;"	f	class:wxSDLJoyEvent
GetControlValue	src/wx/widgets/wx/sdljoy.h	/^    short GetControlValue() { return ctrl_val; }$/;"	f	class:wxSDLJoyEvent
GetDSDevices	src/wx/dsound.cpp	/^bool GetDSDevices(wxArrayString &names, wxArrayString &ids)$/;"	f
GetData	src/win32/CmdAccelOb.cpp	/^DWORD CAccelsOb::GetData()$/;"	f	class:CAccelsOb
GetDevices	src/wx/openal.cpp	/^bool OpenAL::GetDevices(wxArrayString &names, wxArrayString &ids)$/;"	f	class:OpenAL
GetItem	src/wx/widgets/checkedlistctrl.cpp	/^bool wxCheckedListCtrl::GetItem(wxListItem& info) const$/;"	f	class:wxCheckedListCtrl
GetItemImageFromAdditionalState	src/wx/widgets/checkedlistctrl.cpp	/^int wxCheckedListCtrl::GetItemImageFromAdditionalState(int addstate)$/;"	f	class:wxCheckedListCtrl
GetItemLabel	src/wx/wxhead.h	46;"	d
GetItemLabelText	src/wx/wxhead.h	49;"	d
GetItemState	src/wx/widgets/checkedlistctrl.cpp	/^int wxCheckedListCtrl::GetItemState(long item, long stateMask) const$/;"	f	class:wxCheckedListCtrl
GetJoy	src/wx/widgets/wx/sdljoy.h	/^    unsigned short GetJoy() { return joy; }$/;"	f	class:wxSDLJoyEvent
GetKeyEnter	src/wx/widgets/wx/keyedit.h	/^    bool GetKeyEnter() { return keyenter; }$/;"	f	class:wxKeyTextCtrl
GetKeyListName	src/win32/Joypad.cpp	/^CString GetKeyListName(KeyList& Keys)$/;"	f
GetMenuLabel	src/wx/wxhead.h	48;"	d
GetMultikey	src/wx/widgets/wx/keyedit.h	/^    wxChar GetMultikey() { return multikey; }$/;"	f	class:wxKeyTextCtrl
GetNext	src/wx/widgets/wxmisc.cpp	/^wxFarRadio *wxFarRadio::GetNext()$/;"	f	class:wxFarRadio
GetNumJoysticks	src/wx/widgets/wx/sdljoy.h	/^    int GetNumJoysticks() { return njoy; }$/;"	f	class:wxSDLJoy
GetOALDevices	src/wx/openal.cpp	/^bool GetOALDevices(wxArrayString &names, wxArrayString &ids)$/;"	f
GetPageInfo	src/wx/sys.cpp	/^    void GetPageInfo(int *minp, int *maxp, int *pfrom, int *pto) {$/;"	f	class:PrintDialog	file:
GetPanel	src/wx/wxvbam.h	/^    GameArea *GetPanel() { return panel; }$/;"	f	class:MainFrame
GetPathName	src/win32/FileDlg.cpp	/^LPCTSTR FileDlg::GetPathName()$/;"	f	class:FileDlg
GetPluginDesc	src/win32/SelectPlugin.cpp	/^bool SelectPlugin::GetPluginDesc(const char *sRpi, PluginDesc *pDesc)$/;"	f	class:SelectPlugin
GetRGB	src/wx/viewsupt.h	/^	void GetRGB(int &_r, int &_g, int &_b) { _r = r; _g = g; _b = b; }$/;"	f	class:Viewers::ColorView
GetRegKey	src/win32/AcceleratorManager.cpp	/^bool CAcceleratorManager::GetRegKey(HKEY& hRegKey, CString& szRegKey)$/;"	f	class:CAcceleratorManager
GetResult	src/filters/2xSaI.cpp	/^static inline int GetResult (u32 A, u32 B, u32 C, u32 D)$/;"	f	file:
GetResult1	src/filters/2xSaI.cpp	/^static inline int GetResult1 (u32 A, u32 B, u32 C, u32 D,$/;"	f	file:
GetResult1_32	src/filters/2xSaI.cpp	/^static inline int GetResult1_32 (u32 A, u32 B, u32 C, u32 D,$/;"	f	file:
GetResult2	src/filters/2xSaI.cpp	/^static inline int GetResult2 (u32 A, u32 B, u32 C, u32 D,$/;"	f	file:
GetResult2_32	src/filters/2xSaI.cpp	/^static inline int GetResult2_32 (u32 A, u32 B, u32 C, u32 D,$/;"	f	file:
GetSIOMode	src/gba/GBALink.cpp	/^inline int GetSIOMode(u16 siocnt, u16 rcnt)$/;"	f
GetSel	src/wx/viewsupt.h	/^	void GetSel(int &x, int &y) {$/;"	f	class:Viewers::PixView
GetShow	src/wx/guiinit.cpp	1742;"	d	file:
GetString	src/win32/CmdAccelOb.cpp	/^void CAccelsOb::GetString(CString& szBuffer)$/;"	f	class:CAccelsOb
GetStringFromACCEL	src/win32/AcceleratorManager.cpp	/^bool CAcceleratorManager::GetStringFromACCEL(ACCEL* pACCEL, CString& szAccel)$/;"	f	class:CAcceleratorManager
GetStringFromACCEL	src/win32/AcceleratorManager.cpp	/^bool CAcceleratorManager::GetStringFromACCEL(BYTE cVirt, WORD nCode, CString& szAccel)$/;"	f	class:CAcceleratorManager
GetSum	fex/7z_C/7zDec.c	/^static UInt64 GetSum(const UInt64 *values, UInt32 index)$/;"	f	file:
GetTextClickAddress	src/win32/MapView.cpp	/^u32 MapView::GetTextClickAddress(u32 base, int x, int y)$/;"	f	class:MapView
GetThreshold	fex/7z_C/Ppmd7.h	/^  UInt32 (*GetThreshold)(void *p, UInt32 total);$/;"	m	struct:__anon7
GetUi16	fex/7z_C/CpuArch.h	65;"	d
GetUi32	fex/7z_C/CpuArch.h	66;"	d
GetUi64	fex/7z_C/CpuArch.h	67;"	d
GetVSCommonToolsDir	src/libretro/msvc/msvc-2010-360.bat	/^:GetVSCommonToolsDir$/;"	l
GetVSCommonToolsDirHelper32	src/libretro/msvc/msvc-2010-360.bat	/^:GetVSCommonToolsDirHelper32$/;"	l
GetVSCommonToolsDirHelper64	src/libretro/msvc/msvc-2010-360.bat	/^:GetVSCommonToolsDirHelper64$/;"	l
GetValue	src/wx/guiinit.cpp	/^    u32 GetValue()$/;"	f	class:CheatFind_t
GetValue	src/wx/guiinit.cpp	/^    u32 GetValue(int fmt)$/;"	f	class:CheatFind_t
GetValue	src/wx/guiinit.cpp	/^    u32 GetValue(wxString &s, int fmt)$/;"	f	class:CheatFind_t
GetWindow	src/wx/drawing.h	/^    wxWindow *GetWindow() { return this; }$/;"	f	class:BasicDrawingPanel
GetWindow	src/wx/drawing.h	/^    wxWindow *GetWindow() { return this; }$/;"	f	class:CairoDrawingPanel
GetWindow	src/wx/drawing.h	/^    wxWindow *GetWindow() { return this; }$/;"	f	class:DXDrawingPanel
GetWindow	src/wx/drawing.h	/^    wxWindow *GetWindow() { return this; }$/;"	f	class:GLDrawingPanel
GetXA2Devices	src/wx/xaudio2.cpp	/^bool GetXA2Devices(wxArrayString &names, wxArrayString &ids)$/;"	f
GetXA2Devices	src/wx/xaudio2.cpp	/^int GetXA2Devices(IXAudio2 *xa, wxArrayString *names, wxArrayString *ids,$/;"	f
GetXRCDialog	src/wx/cmdevents.cpp	22;"	d	file:
GetXRCDialog	src/wx/guiinit.cpp	41;"	d	file:
GfxPanel	src/wx/viewsupt.h	/^	GfxPanel() : wxPanel(), bm(0), selx(-1), sely(-1) {}$/;"	f	class:Viewers::GfxPanel
GfxPanel	src/wx/viewsupt.h	/^    class GfxPanel : public wxPanel$/;"	c	namespace:Viewers
GfxViewer	src/wx/viewsupt.cpp	/^    GfxViewer::GfxViewer(const wxChar *dname, int maxw, int maxh) :$/;"	f	class:Viewers::GfxViewer
GfxViewer	src/wx/viewsupt.h	/^    class GfxViewer : public Viewer$/;"	c	namespace:Viewers
GlueCount	fex/7z_C/Ppmd7.h	/^  UInt32 GlueCount;$/;"	m	struct:__anon6
GlueFreeBlocks	fex/7z_C/Ppmd7.c	/^static void GlueFreeBlocks(CPpmd7 *p)$/;"	f	file:
Good_Synth	src/apu/Gb_Oscs.h	/^	typedef Blip_Synth<blip_good_quality,1> Good_Synth;$/;"	t	class:Gb_Osc
Goto	src/wx/viewers.cpp	/^	void Goto(u32 addr)$/;"	f	class:Viewers::MemViewerBase
Goto	src/wx/viewers.cpp	/^	void Goto(wxCommandEvent &ev)$/;"	f	class:Viewers::DisassembleViewer
Goto	src/wx/viewers.cpp	/^	void Goto(wxCommandEvent &ev)$/;"	f	class:Viewers::GBDisassembleViewer
GotoEv	src/wx/viewers.cpp	/^	void GotoEv(wxCommandEvent &ev)$/;"	f	class:Viewers::MemViewerBase
GotoPC	src/wx/viewers.cpp	/^	void GotoPC()$/;"	f	class:Viewers::DisassembleViewer
GotoPC	src/wx/viewers.cpp	/^	void GotoPC()$/;"	f	class:Viewers::GBDisassembleViewer
GotoPCEv	src/wx/viewers.cpp	/^	void GotoPCEv(wxCommandEvent &ev)$/;"	f	class:Viewers::DisassembleViewer
GotoPCEv	src/wx/viewers.cpp	/^	void GotoPCEv(wxCommandEvent &ev)$/;"	f	class:Viewers::GBDisassembleViewer
GreenMask	src/filters/2xSaImmx.asm	/^GreenMask     dd 0x07E007E0,0x07E007E0$/;"	d
Gzip_Extractor	fex/fex/Gzip_Extractor.cpp	/^Gzip_Extractor::Gzip_Extractor() :$/;"	f	class:Gzip_Extractor
Gzip_Extractor	fex/fex/Gzip_Extractor.h	/^class Gzip_Extractor : public File_Extractor {$/;"	c
Gzip_File_Reader	fex/fex/Data_Reader.cpp	/^Gzip_File_Reader::Gzip_File_Reader()$/;"	f	class:Gzip_File_Reader
Gzip_File_Reader	fex/fex/Data_Reader.h	/^class Gzip_File_Reader : public File_Reader {$/;"	c
Gzip_Reader	fex/fex/Gzip_Reader.cpp	/^Gzip_Reader::Gzip_Reader()$/;"	f	class:Gzip_Reader
Gzip_Reader	fex/fex/Gzip_Reader.h	/^class Gzip_Reader : public Data_Reader {$/;"	c
H	src/wx/viewers.cpp	/^	wxCheckBox *Z, *N, *H, *C;$/;"	m	class:Viewers::GBDisassembleViewer	file:
HAVE_DECL_GETOPT	src/sdl/SDL.cpp	68;"	d	file:
HAVE_DECL_GETOPT	src/sdl/SDL.cpp	72;"	d	file:
HB2Flag	fex/7z_C/Ppmd7.h	/^  Byte NS2Indx[256], NS2BSIndx[256], HB2Flag[256];$/;"	m	struct:__anon6
HEAD_CRC	src/common/memgzio.c	59;"	d	file:
HEX	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	335;"	d	file:
HEX	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	328;"	d	file:
HL	src/gb/GB.cpp	/^gbRegister HL;$/;"	v
HLv	src/wx/viewers.cpp	/^	wxControl *AFv, *BCv, *DEv, *HLv, *SPv, *PCv, *LYv, *IFFv;$/;"	m	class:Viewers::GBDisassembleViewer	file:
HMODULE	src/win32/rpi.h	13;"	d
H_FLAG	src/gb/gb.h	5;"	d
Handle	src/win32/rpi.h	/^	HMODULE			Handle;$/;"	m	struct:__anon67
HasFocus	src/wx/wxvbam.h	/^    bool HasFocus() { return focused; }$/;"	f	class:MainFrame
HasPage	src/wx/sys.cpp	/^    bool HasPage(int pno) { return pno <= npw * nph; }$/;"	f	class:PrintDialog	file:
HasStream	fex/7z_C/7z.h	/^  Byte HasStream;$/;"	m	struct:__anon14
Height	src/win32/WinHelper.h	/^      inline int Height() const { return bottom - top; }$/;"	f	class:WinHelper::CRect
HiBitsFlag	fex/7z_C/Ppmd7.h	/^  unsigned OrderFall, InitEsc, PrevSuccess, MaxOrder, HiBitsFlag;$/;"	m	struct:__anon6
HiUnit	fex/7z_C/Ppmd7.h	/^  Byte *Base, *LoUnit, *HiUnit, *Text, *UnitsStart;$/;"	m	struct:__anon6
HidePointer	src/wx/panel.cpp	/^void GameArea::HidePointer()$/;"	f	class:GameArea
High	fex/7z_C/7z.h	/^  UInt32 High;$/;"	m	struct:__anon13
HookFunc	src/win32/FileDlg.cpp	/^static UINT_PTR CALLBACK HookFunc(HWND hwnd,$/;"	f	file:
HookFuncOldStyle	src/win32/FileDlg.cpp	/^static UINT_PTR CALLBACK HookFuncOldStyle(HWND hwnd,$/;"	f	file:
Hyperlink	src/win32/Hyperlink.cpp	/^Hyperlink::Hyperlink()$/;"	f	class:Hyperlink
Hyperlink	src/win32/Hyperlink.h	/^class Hyperlink : public CStatic$/;"	c
I	src/gba/GBA.h	/^	u32 I;$/;"	m	union:__anon48
I	src/gba/GBA.h	/^  volatile u32 I;$/;"	m	union:__anon48
I	src/wx/viewers.cpp	/^	wxCheckBox *N, *Z, *C, *V, *I, *F, *T;$/;"	m	class:Viewers::DisassembleViewer	file:
I11	src/filters/hq2x.cpp	101;"	d	file:
I11	src/filters/hq2x.cpp	128;"	d	file:
I11	src/filters/hq2x.cpp	211;"	d	file:
I11	src/filters/hq2x.cpp	238;"	d	file:
I11	src/filters/hq2x.cpp	328;"	d	file:
I11	src/filters/hq2x.cpp	355;"	d	file:
I11	src/filters/hq2x.cpp	438;"	d	file:
I11	src/filters/hq2x.cpp	465;"	d	file:
I1411	src/filters/hq2x.cpp	112;"	d	file:
I1411	src/filters/hq2x.cpp	139;"	d	file:
I1411	src/filters/hq2x.cpp	222;"	d	file:
I1411	src/filters/hq2x.cpp	249;"	d	file:
I1411	src/filters/hq2x.cpp	339;"	d	file:
I1411	src/filters/hq2x.cpp	366;"	d	file:
I1411	src/filters/hq2x.cpp	449;"	d	file:
I1411	src/filters/hq2x.cpp	476;"	d	file:
I151	src/filters/hq2x.cpp	113;"	d	file:
I151	src/filters/hq2x.cpp	140;"	d	file:
I151	src/filters/hq2x.cpp	223;"	d	file:
I151	src/filters/hq2x.cpp	250;"	d	file:
I151	src/filters/hq2x.cpp	340;"	d	file:
I151	src/filters/hq2x.cpp	367;"	d	file:
I151	src/filters/hq2x.cpp	450;"	d	file:
I151	src/filters/hq2x.cpp	477;"	d	file:
I211	src/filters/hq2x.cpp	102;"	d	file:
I211	src/filters/hq2x.cpp	129;"	d	file:
I211	src/filters/hq2x.cpp	212;"	d	file:
I211	src/filters/hq2x.cpp	239;"	d	file:
I211	src/filters/hq2x.cpp	329;"	d	file:
I211	src/filters/hq2x.cpp	356;"	d	file:
I211	src/filters/hq2x.cpp	439;"	d	file:
I211	src/filters/hq2x.cpp	466;"	d	file:
I2223Pixel	src/filters/2xSaImmx.asm	/^I2223Pixel    resb 8$/;"	l
I2333Pixel	src/filters/2xSaImmx.asm	/^I2333Pixel    resb 8$/;"	l
I23Pixel	src/filters/2xSaImmx.asm	/^I23Pixel      resb 8$/;"	l
I2U	fex/7z_C/Ppmd7.c	17;"	d	file:
I31	src/filters/hq2x.cpp	103;"	d	file:
I31	src/filters/hq2x.cpp	130;"	d	file:
I31	src/filters/hq2x.cpp	213;"	d	file:
I31	src/filters/hq2x.cpp	240;"	d	file:
I31	src/filters/hq2x.cpp	330;"	d	file:
I31	src/filters/hq2x.cpp	357;"	d	file:
I31	src/filters/hq2x.cpp	440;"	d	file:
I31	src/filters/hq2x.cpp	467;"	d	file:
I332	src/filters/hq2x.cpp	104;"	d	file:
I332	src/filters/hq2x.cpp	131;"	d	file:
I332	src/filters/hq2x.cpp	214;"	d	file:
I332	src/filters/hq2x.cpp	241;"	d	file:
I332	src/filters/hq2x.cpp	331;"	d	file:
I332	src/filters/hq2x.cpp	358;"	d	file:
I332	src/filters/hq2x.cpp	441;"	d	file:
I332	src/filters/hq2x.cpp	468;"	d	file:
I431	src/filters/hq2x.cpp	105;"	d	file:
I431	src/filters/hq2x.cpp	132;"	d	file:
I431	src/filters/hq2x.cpp	215;"	d	file:
I431	src/filters/hq2x.cpp	242;"	d	file:
I431	src/filters/hq2x.cpp	332;"	d	file:
I431	src/filters/hq2x.cpp	359;"	d	file:
I431	src/filters/hq2x.cpp	442;"	d	file:
I431	src/filters/hq2x.cpp	469;"	d	file:
I521	src/filters/hq2x.cpp	106;"	d	file:
I521	src/filters/hq2x.cpp	133;"	d	file:
I521	src/filters/hq2x.cpp	216;"	d	file:
I521	src/filters/hq2x.cpp	243;"	d	file:
I521	src/filters/hq2x.cpp	333;"	d	file:
I521	src/filters/hq2x.cpp	360;"	d	file:
I521	src/filters/hq2x.cpp	443;"	d	file:
I521	src/filters/hq2x.cpp	470;"	d	file:
I53	src/filters/hq2x.cpp	107;"	d	file:
I53	src/filters/hq2x.cpp	134;"	d	file:
I53	src/filters/hq2x.cpp	217;"	d	file:
I53	src/filters/hq2x.cpp	244;"	d	file:
I53	src/filters/hq2x.cpp	334;"	d	file:
I53	src/filters/hq2x.cpp	361;"	d	file:
I53	src/filters/hq2x.cpp	444;"	d	file:
I53	src/filters/hq2x.cpp	471;"	d	file:
I5556Pixel	src/filters/2xSaImmx.asm	/^I5556Pixel    resb 8$/;"	l
I5666Pixel	src/filters/2xSaImmx.asm	/^I5666Pixel    resb 8$/;"	l
I56Pixel	src/filters/2xSaImmx.asm	/^I56Pixel      resb 8$/;"	l
I611	src/filters/hq2x.cpp	108;"	d	file:
I611	src/filters/hq2x.cpp	135;"	d	file:
I611	src/filters/hq2x.cpp	218;"	d	file:
I611	src/filters/hq2x.cpp	245;"	d	file:
I611	src/filters/hq2x.cpp	335;"	d	file:
I611	src/filters/hq2x.cpp	362;"	d	file:
I611	src/filters/hq2x.cpp	445;"	d	file:
I611	src/filters/hq2x.cpp	472;"	d	file:
I71	src/filters/hq2x.cpp	109;"	d	file:
I71	src/filters/hq2x.cpp	136;"	d	file:
I71	src/filters/hq2x.cpp	219;"	d	file:
I71	src/filters/hq2x.cpp	246;"	d	file:
I71	src/filters/hq2x.cpp	336;"	d	file:
I71	src/filters/hq2x.cpp	363;"	d	file:
I71	src/filters/hq2x.cpp	446;"	d	file:
I71	src/filters/hq2x.cpp	473;"	d	file:
I772	src/filters/hq2x.cpp	110;"	d	file:
I772	src/filters/hq2x.cpp	137;"	d	file:
I772	src/filters/hq2x.cpp	220;"	d	file:
I772	src/filters/hq2x.cpp	247;"	d	file:
I772	src/filters/hq2x.cpp	337;"	d	file:
I772	src/filters/hq2x.cpp	364;"	d	file:
I772	src/filters/hq2x.cpp	447;"	d	file:
I772	src/filters/hq2x.cpp	474;"	d	file:
I97	src/filters/hq2x.cpp	111;"	d	file:
I97	src/filters/hq2x.cpp	138;"	d	file:
I97	src/filters/hq2x.cpp	221;"	d	file:
I97	src/filters/hq2x.cpp	248;"	d	file:
I97	src/filters/hq2x.cpp	338;"	d	file:
I97	src/filters/hq2x.cpp	365;"	d	file:
I97	src/filters/hq2x.cpp	448;"	d	file:
I97	src/filters/hq2x.cpp	475;"	d	file:
IAlloc_Alloc	fex/7z_C/Types.h	233;"	d
IAlloc_Free	fex/7z_C/Types.h	234;"	d
IByteIn	fex/7z_C/Types.h	/^} IByteIn;$/;"	t	typeref:struct:__anon22
IByteOut	fex/7z_C/Types.h	/^} IByteOut;$/;"	t	typeref:struct:__anon23
IC	src/filters/hq2x.cpp	100;"	d	file:
IC	src/filters/hq2x.cpp	127;"	d	file:
IC	src/filters/hq2x.cpp	210;"	d	file:
IC	src/filters/hq2x.cpp	237;"	d	file:
IC	src/filters/hq2x.cpp	327;"	d	file:
IC	src/filters/hq2x.cpp	354;"	d	file:
IC	src/filters/hq2x.cpp	437;"	d	file:
IC	src/filters/hq2x.cpp	464;"	d	file:
ICompressProgress	fex/7z_C/Types.h	/^} ICompressProgress;$/;"	t	typeref:struct:__anon32
IDC_16_BIT	src/win32/resource.h	402;"	d
IDC_16_COLORS	src/win32/resource.h	432;"	d
IDC_1X	src/win32/resource.h	314;"	d
IDC_256_COLORS	src/win32/resource.h	433;"	d
IDC_2X	src/win32/resource.h	317;"	d
IDC_32_BIT	src/win32/resource.h	403;"	d
IDC_3X	src/win32/resource.h	319;"	d
IDC_4X	src/win32/resource.h	321;"	d
IDC_8_BIT	src/win32/resource.h	401;"	d
IDC_ADDRESS	src/win32/resource.h	214;"	d
IDC_ADDRESSES	src/win32/resource.h	399;"	d
IDC_ADD_CHEAT	src/win32/resource.h	164;"	d
IDC_ADD_CODE	src/win32/resource.h	327;"	d
IDC_ADD_CODEBREAKER	src/win32/resource.h	339;"	d
IDC_ADD_GAMESHARK	src/win32/resource.h	170;"	d
IDC_ADD_GG_CHEAT	src/win32/resource.h	308;"	d
IDC_ADD_GSA	src/win32/resource.h	326;"	d
IDC_ADD_GS_CHEAT	src/win32/resource.h	168;"	d
IDC_AGB	src/win32/resource.h	276;"	d
IDC_ALREADY_AFFECTED	src/win32/resource.h	430;"	d
IDC_APPENDMODE	src/win32/resource.h	530;"	d
IDC_APPLY	src/win32/resource.h	378;"	d
IDC_ARM	src/win32/resource.h	460;"	d
IDC_ASSIGN	src/win32/resource.h	427;"	d
IDC_AUTOMATIC	src/win32/resource.h	459;"	d
IDC_AUTO_UPDATE	src/win32/resource.h	462;"	d
IDC_B	src/win32/resource.h	221;"	d
IDC_BANK	src/win32/resource.h	425;"	d
IDC_BANK_0	src/win32/resource.h	502;"	d
IDC_BANK_1	src/win32/resource.h	503;"	d
IDC_BATTERY_DIR	src/win32/resource.h	149;"	d
IDC_BATTERY_DIR_RESET	src/win32/resource.h	188;"	d
IDC_BATTERY_PATH	src/win32/resource.h	160;"	d
IDC_BG0	src/win32/resource.h	355;"	d
IDC_BG1	src/win32/resource.h	357;"	d
IDC_BG2	src/win32/resource.h	359;"	d
IDC_BG3	src/win32/resource.h	361;"	d
IDC_BIN	src/win32/resource.h	278;"	d
IDC_BIT_0	src/win32/resource.h	506;"	d
IDC_BIT_1	src/win32/resource.h	507;"	d
IDC_BIT_10	src/win32/resource.h	522;"	d
IDC_BIT_11	src/win32/resource.h	523;"	d
IDC_BIT_12	src/win32/resource.h	524;"	d
IDC_BIT_13	src/win32/resource.h	525;"	d
IDC_BIT_14	src/win32/resource.h	526;"	d
IDC_BIT_15	src/win32/resource.h	527;"	d
IDC_BIT_2	src/win32/resource.h	509;"	d
IDC_BIT_3	src/win32/resource.h	510;"	d
IDC_BIT_4	src/win32/resource.h	511;"	d
IDC_BIT_5	src/win32/resource.h	513;"	d
IDC_BIT_6	src/win32/resource.h	515;"	d
IDC_BIT_7	src/win32/resource.h	517;"	d
IDC_BIT_8	src/win32/resource.h	519;"	d
IDC_BIT_9	src/win32/resource.h	521;"	d
IDC_BUFFERINFO	src/win32/resource.h	533;"	d
IDC_C	src/win32/resource.h	465;"	d
IDC_CAPTURE_DIR	src/win32/resource.h	154;"	d
IDC_CAPTURE_DIR_RESET	src/win32/resource.h	194;"	d
IDC_CAPTURE_PATH	src/win32/resource.h	166;"	d
IDC_CGB	src/win32/resource.h	285;"	d
IDC_CHANGE_BACKDROP	src/win32/resource.h	398;"	d
IDC_CHARBASE	src/win32/resource.h	412;"	d
IDC_CHARBASE_0	src/win32/resource.h	434;"	d
IDC_CHARBASE_1	src/win32/resource.h	435;"	d
IDC_CHARBASE_2	src/win32/resource.h	436;"	d
IDC_CHARBASE_3	src/win32/resource.h	437;"	d
IDC_CHARBASE_4	src/win32/resource.h	439;"	d
IDC_CHEAT_LIST	src/win32/resource.h	155;"	d
IDC_CHECK1	src/win32/resource.h	550;"	d
IDC_CHECK_UPMIX	src/win32/resource.h	551;"	d
IDC_CLEAR	src/win32/resource.h	480;"	d
IDC_CLEAR_ALL	src/win32/resource.h	541;"	d
IDC_CLINKIP	src/win32/resource.h	832;"	d
IDC_CLINKTCP	src/win32/resource.h	839;"	d
IDC_CLINKUDP	src/win32/resource.h	844;"	d
IDC_CLOSE	src/win32/resource.h	383;"	d
IDC_CODE	src/win32/resource.h	301;"	d
IDC_COLOR	src/win32/resource.h	389;"	d
IDC_COLORS	src/win32/resource.h	409;"	d
IDC_COLOR_BG0	src/win32/resource.h	440;"	d
IDC_COLOR_BG1	src/win32/resource.h	441;"	d
IDC_COLOR_BG2	src/win32/resource.h	443;"	d
IDC_COLOR_BG3	src/win32/resource.h	445;"	d
IDC_COLOR_OB0	src/win32/resource.h	446;"	d
IDC_COLOR_OB1	src/win32/resource.h	447;"	d
IDC_COLOR_OB2	src/win32/resource.h	448;"	d
IDC_COLOR_OB3	src/win32/resource.h	449;"	d
IDC_COMBO1	src/win32/resource.h	565;"	d
IDC_COMBO_COLOR_DEPTH	src/win32/resource.h	545;"	d
IDC_COMBO_DEV	src/win32/resource.h	553;"	d
IDC_COMBO_DEVICE	src/win32/resource.h	549;"	d
IDC_COMBO_PLUGIN	src/win32/resource.h	859;"	d
IDC_COMBO_REFRESH_RATE	src/win32/resource.h	548;"	d
IDC_COMBO_RESOLUTION	src/win32/resource.h	543;"	d
IDC_COMMANDS	src/win32/resource.h	424;"	d
IDC_COMMENT	src/win32/resource.h	520;"	d
IDC_CONTINUE	src/win32/resource.h	151;"	d
IDC_CURRENTS	src/win32/resource.h	426;"	d
IDC_CURRENT_ADDRESS	src/win32/resource.h	490;"	d
IDC_CURRENT_ADDRESS_LABEL	src/win32/resource.h	494;"	d
IDC_C_FLAG	src/win32/resource.h	150;"	d
IDC_DATE	src/win32/resource.h	474;"	d
IDC_DECLICKING	src/win32/resource.h	563;"	d
IDC_DEFAULT	src/win32/resource.h	455;"	d
IDC_DEFAULTS	src/win32/resource.h	8;"	d
IDC_DEFAULT_VOLUME	src/win32/resource.h	562;"	d
IDC_DESC	src/win32/resource.h	305;"	d
IDC_DEVICE	src/win32/resource.h	531;"	d
IDC_DIM	src/win32/resource.h	414;"	d
IDC_DISASSEMBLE	src/win32/resource.h	458;"	d
IDC_DMG	src/win32/resource.h	291;"	d
IDC_DRIVERS	src/win32/resource.h	498;"	d
IDC_ECHO	src/win32/resource.h	558;"	d
IDC_EDIT_BUTTON_A	src/win32/resource.h	120;"	d
IDC_EDIT_BUTTON_B	src/win32/resource.h	122;"	d
IDC_EDIT_BUTTON_GS	src/win32/resource.h	139;"	d
IDC_EDIT_BUTTON_L	src/win32/resource.h	137;"	d
IDC_EDIT_BUTTON_R	src/win32/resource.h	141;"	d
IDC_EDIT_BUTTON_SELECT	src/win32/resource.h	124;"	d
IDC_EDIT_BUTTON_START	src/win32/resource.h	126;"	d
IDC_EDIT_CAPTURE	src/win32/resource.h	135;"	d
IDC_EDIT_DOWN	src/win32/resource.h	114;"	d
IDC_EDIT_KEY	src/win32/resource.h	429;"	d
IDC_EDIT_LEFT	src/win32/resource.h	116;"	d
IDC_EDIT_RIGHT	src/win32/resource.h	118;"	d
IDC_EDIT_SPEED	src/win32/resource.h	133;"	d
IDC_EDIT_UP	src/win32/resource.h	112;"	d
IDC_ENABLE	src/win32/resource.h	267;"	d
IDC_ENABLE_GBA_BIOS	src/win32/resource.h	538;"	d
IDC_ENABLE_GBC_BIOS	src/win32/resource.h	544;"	d
IDC_ENABLE_GB_BIOS	src/win32/resource.h	537;"	d
IDC_ENHANCE_SOUND	src/win32/resource.h	552;"	d
IDC_EQ	src/win32/resource.h	189;"	d
IDC_F	src/win32/resource.h	467;"	d
IDC_FLAGS	src/win32/resource.h	423;"	d
IDC_FLASH_SIZE	src/win32/resource.h	518;"	d
IDC_FLIP	src/win32/resource.h	227;"	d
IDC_FRAME_0	src/win32/resource.h	352;"	d
IDC_FRAME_1	src/win32/resource.h	354;"	d
IDC_FREEZE	src/win32/resource.h	255;"	d
IDC_G	src/win32/resource.h	219;"	d
IDC_GAME_LIST	src/win32/resource.h	336;"	d
IDC_GB	src/win32/resource.h	280;"	d
IDC_GBA	src/win32/resource.h	274;"	d
IDC_GBA_BIOS_PATH	src/win32/resource.h	535;"	d
IDC_GBC	src/win32/resource.h	288;"	d
IDC_GBCROM_DIR	src/win32/resource.h	200;"	d
IDC_GBCROM_PATH	src/win32/resource.h	197;"	d
IDC_GBC_BIOS_PATH	src/win32/resource.h	542;"	d
IDC_GBROM_DIR	src/win32/resource.h	174;"	d
IDC_GBROM_DIR_RESET	src/win32/resource.h	185;"	d
IDC_GBROM_PATH	src/win32/resource.h	177;"	d
IDC_GB_BIOS_PATH	src/win32/resource.h	534;"	d
IDC_GB_PRINTER	src/win32/resource.h	311;"	d
IDC_GE	src/win32/resource.h	203;"	d
IDC_GGADD	src/win32/resource.h	231;"	d
IDC_GGCODE	src/win32/resource.h	228;"	d
IDC_GGDEL	src/win32/resource.h	233;"	d
IDC_GGDESC	src/win32/resource.h	225;"	d
IDC_GGLIST	src/win32/resource.h	235;"	d
IDC_GGQUIT	src/win32/resource.h	239;"	d
IDC_GGRES	src/win32/resource.h	237;"	d
IDC_GO	src/win32/resource.h	400;"	d
IDC_GOPC	src/win32/resource.h	376;"	d
IDC_GSADD	src/win32/resource.h	245;"	d
IDC_GSCODE	src/win32/resource.h	243;"	d
IDC_GSDEL	src/win32/resource.h	247;"	d
IDC_GSDESC	src/win32/resource.h	241;"	d
IDC_GSLIST	src/win32/resource.h	249;"	d
IDC_GSQUIT	src/win32/resource.h	253;"	d
IDC_GSRES	src/win32/resource.h	251;"	d
IDC_GT	src/win32/resource.h	201;"	d
IDC_H	src/win32/resource.h	500;"	d
IDC_HEXADECIMAL	src/win32/resource.h	210;"	d
IDC_I	src/win32/resource.h	468;"	d
IDC_INFO_BUFFER	src/win32/resource.h	556;"	d
IDC_INTERVAL	src/win32/resource.h	505;"	d
IDC_IRQ	src/win32/resource.h	156;"	d
IDC_JOYBUS_ENABLE	src/win32/resource.h	568;"	d
IDC_JOYBUS_HOSTNAME	src/win32/resource.h	567;"	d
IDC_LANG_NAME	src/win32/resource.h	333;"	d
IDC_LANG_STRING	src/win32/resource.h	331;"	d
IDC_LE	src/win32/resource.h	198;"	d
IDC_LINK2P	src/win32/resource.h	827;"	d
IDC_LINK3P	src/win32/resource.h	842;"	d
IDC_LINK4P	src/win32/resource.h	843;"	d
IDC_LINKCONNECT	src/win32/resource.h	834;"	d
IDC_LINKTCP	src/win32/resource.h	828;"	d
IDC_LINKTIMEOUT	src/win32/resource.h	838;"	d
IDC_LINKUDP	src/win32/resource.h	841;"	d
IDC_LINK_LAN	src/win32/resource.h	826;"	d
IDC_LINK_SINGLE	src/win32/resource.h	824;"	d
IDC_LINK_TIMEOUT	src/win32/resource.h	825;"	d
IDC_LOAD	src/win32/resource.h	495;"	d
IDC_LOG	src/win32/resource.h	479;"	d
IDC_LT	src/win32/resource.h	195;"	d
IDC_LY	src/win32/resource.h	529;"	d
IDC_M0	src/win32/resource.h	182;"	d
IDC_M1	src/win32/resource.h	178;"	d
IDC_M2	src/win32/resource.h	175;"	d
IDC_M3	src/win32/resource.h	171;"	d
IDC_M4	src/win32/resource.h	165;"	d
IDC_MAPBASE	src/win32/resource.h	410;"	d
IDC_MAP_VIEW	src/win32/resource.h	368;"	d
IDC_MAP_VIEW_ZOOM	src/win32/resource.h	394;"	d
IDC_MIRRORING	src/win32/resource.h	528;"	d
IDC_MODE	src/win32/resource.h	408;"	d
IDC_MODES	src/win32/resource.h	497;"	d
IDC_MOSAIC	src/win32/resource.h	419;"	d
IDC_N	src/win32/resource.h	463;"	d
IDC_NAME	src/win32/resource.h	512;"	d
IDC_NE	src/win32/resource.h	192;"	d
IDC_NEXT	src/win32/resource.h	148;"	d
IDC_NOTES	src/win32/resource.h	493;"	d
IDC_NUMCOLORS	src/win32/resource.h	416;"	d
IDC_N_FLAG	src/win32/resource.h	145;"	d
IDC_OAM_VIEW	src/win32/resource.h	404;"	d
IDC_OAM_VIEW_ZOOM	src/win32/resource.h	405;"	d
IDC_OAP	src/win32/resource.h	501;"	d
IDC_OLD_VALUE	src/win32/resource.h	167;"	d
IDC_OVERFLOW	src/win32/resource.h	421;"	d
IDC_PALETTE	src/win32/resource.h	411;"	d
IDC_PALETTE_NUM	src/win32/resource.h	230;"	d
IDC_PALETTE_SLIDER	src/win32/resource.h	438;"	d
IDC_PALETTE_VIEW	src/win32/resource.h	370;"	d
IDC_PALETTE_VIEW_OBJ	src/win32/resource.h	372;"	d
IDC_PORT	src/win32/resource.h	470;"	d
IDC_POS	src/win32/resource.h	407;"	d
IDC_PREDEFINED	src/win32/resource.h	508;"	d
IDC_PRIO	src/win32/resource.h	415;"	d
IDC_PRIORITY	src/win32/resource.h	418;"	d
IDC_R	src/win32/resource.h	217;"	d
IDC_R0	src/win32/resource.h	111;"	d
IDC_R1	src/win32/resource.h	113;"	d
IDC_R10	src/win32/resource.h	132;"	d
IDC_R11	src/win32/resource.h	134;"	d
IDC_R12	src/win32/resource.h	136;"	d
IDC_R13	src/win32/resource.h	138;"	d
IDC_R14	src/win32/resource.h	140;"	d
IDC_R15	src/win32/resource.h	142;"	d
IDC_R16	src/win32/resource.h	143;"	d
IDC_R17	src/win32/resource.h	144;"	d
IDC_R2	src/win32/resource.h	115;"	d
IDC_R3	src/win32/resource.h	117;"	d
IDC_R4	src/win32/resource.h	119;"	d
IDC_R5	src/win32/resource.h	121;"	d
IDC_R6	src/win32/resource.h	123;"	d
IDC_R7	src/win32/resource.h	125;"	d
IDC_R8	src/win32/resource.h	127;"	d
IDC_R9	src/win32/resource.h	129;"	d
IDC_REFRESH	src/win32/resource.h	373;"	d
IDC_REFRESH2	src/win32/resource.h	380;"	d
IDC_REMOVE	src/win32/resource.h	262;"	d
IDC_REMOVE_ALL	src/win32/resource.h	264;"	d
IDC_RESET	src/win32/resource.h	428;"	d
IDC_RESTORE	src/win32/resource.h	272;"	d
IDC_ROM_CHECKSUM	src/win32/resource.h	316;"	d
IDC_ROM_COLOR	src/win32/resource.h	300;"	d
IDC_ROM_CRC	src/win32/resource.h	298;"	d
IDC_ROM_DEST_CODE	src/win32/resource.h	310;"	d
IDC_ROM_DEVICE_TYPE	src/win32/resource.h	294;"	d
IDC_ROM_DIR	src/win32/resource.h	146;"	d
IDC_ROM_DIR_RESET	src/win32/resource.h	181;"	d
IDC_ROM_GAME_CODE	src/win32/resource.h	286;"	d
IDC_ROM_LIC_CODE	src/win32/resource.h	313;"	d
IDC_ROM_MAKER_CODE	src/win32/resource.h	289;"	d
IDC_ROM_MAKER_NAME	src/win32/resource.h	303;"	d
IDC_ROM_MAKER_NAME2	src/win32/resource.h	323;"	d
IDC_ROM_PATH	src/win32/resource.h	157;"	d
IDC_ROM_RAM_SIZE	src/win32/resource.h	307;"	d
IDC_ROM_SIZE	src/win32/resource.h	304;"	d
IDC_ROM_TITLE	src/win32/resource.h	283;"	d
IDC_ROM_UNIT_CODE	src/win32/resource.h	292;"	d
IDC_ROM_VERSION	src/win32/resource.h	296;"	d
IDC_ROT	src/win32/resource.h	422;"	d
IDC_RTC	src/win32/resource.h	514;"	d
IDC_SAMPLE_RATE	src/win32/resource.h	566;"	d
IDC_SAVE	src/win32/resource.h	375;"	d
IDC_SAVE_BG	src/win32/resource.h	391;"	d
IDC_SAVE_DIR	src/win32/resource.h	152;"	d
IDC_SAVE_DIR_RESET	src/win32/resource.h	191;"	d
IDC_SAVE_OBJ	src/win32/resource.h	393;"	d
IDC_SAVE_PATH	src/win32/resource.h	163;"	d
IDC_SAVE_TYPE	src/win32/resource.h	516;"	d
IDC_SCROLLBAR	src/win32/resource.h	417;"	d
IDC_SEARCH	src/win32/resource.h	161;"	d
IDC_SELECT_GBA_BIOS_PATH	src/win32/resource.h	540;"	d
IDC_SELECT_GBC_BIOS_PATH	src/win32/resource.h	547;"	d
IDC_SELECT_GB_BIOS_PATH	src/win32/resource.h	539;"	d
IDC_SELECT_GB_BIOS_PATH2	src/win32/resource.h	546;"	d
IDC_SERVERIP	src/win32/resource.h	831;"	d
IDC_SERVERSTART	src/win32/resource.h	830;"	d
IDC_SERVERWAIT	src/win32/resource.h	840;"	d
IDC_SGB	src/win32/resource.h	282;"	d
IDC_SIGNED	src/win32/resource.h	205;"	d
IDC_SIZE2	src/win32/resource.h	420;"	d
IDC_SIZE_16	src/win32/resource.h	183;"	d
IDC_SIZE_32	src/win32/resource.h	186;"	d
IDC_SIZE_8	src/win32/resource.h	179;"	d
IDC_SIZE_CONTROL	src/win32/resource.h	496;"	d
IDC_SKIP_BOOT_LOGO	src/win32/resource.h	536;"	d
IDC_SLIDER2	src/win32/resource.h	560;"	d
IDC_SLIDER_BUFFER	src/win32/resource.h	555;"	d
IDC_SLIDER_BUFFERCOUNT	src/win32/resource.h	532;"	d
IDC_SOUND_FILTERING	src/win32/resource.h	564;"	d
IDC_SOUND_INTERPOLATION	src/win32/resource.h	554;"	d
IDC_SPECIFIC_VALUE	src/win32/resource.h	172;"	d
IDC_SPEEDOFF	src/win32/resource.h	833;"	d
IDC_SPEEDON	src/win32/resource.h	845;"	d
IDC_SPRITE	src/win32/resource.h	406;"	d
IDC_SSPEED	src/win32/resource.h	829;"	d
IDC_START	src/win32/resource.h	158;"	d
IDC_STATIC1	src/win32/resource.h	451;"	d
IDC_STATIC2	src/win32/resource.h	452;"	d
IDC_STATIC3	src/win32/resource.h	453;"	d
IDC_STATIC4	src/win32/resource.h	454;"	d
IDC_STEREO	src/win32/resource.h	559;"	d
IDC_STRETCH	src/win32/resource.h	444;"	d
IDC_SURROUND	src/win32/resource.h	557;"	d
IDC_T	src/win32/resource.h	469;"	d
IDC_TAB1	src/win32/resource.h	823;"	d
IDC_THROTTLE	src/win32/resource.h	499;"	d
IDC_THUMB	src/win32/resource.h	461;"	d
IDC_TILE	src/win32/resource.h	413;"	d
IDC_TILE_NUM	src/win32/resource.h	224;"	d
IDC_TILE_NUMBER	src/win32/resource.h	483;"	d
IDC_TILE_VIEW	src/win32/resource.h	431;"	d
IDC_TIMER	src/win32/resource.h	504;"	d
IDC_TITLE	src/win32/resource.h	488;"	d
IDC_TRANSLATION_BY	src/win32/resource.h	329;"	d
IDC_TRANSLATOR_URL	src/win32/resource.h	450;"	d
IDC_T_FLAG	src/win32/resource.h	159;"	d
IDC_UNSIGNED	src/win32/resource.h	207;"	d
IDC_UPDATE	src/win32/resource.h	222;"	d
IDC_URL	src/win32/resource.h	442;"	d
IDC_USER1	src/win32/resource.h	456;"	d
IDC_USER2	src/win32/resource.h	457;"	d
IDC_V	src/win32/resource.h	466;"	d
IDC_VALUE	src/win32/resource.h	212;"	d
IDC_VERBOSE_AGBPRINT	src/win32/resource.h	489;"	d
IDC_VERBOSE_AGBPRINT2	src/win32/resource.h	491;"	d
IDC_VERBOSE_DMA0	src/win32/resource.h	481;"	d
IDC_VERBOSE_DMA1	src/win32/resource.h	482;"	d
IDC_VERBOSE_DMA2	src/win32/resource.h	484;"	d
IDC_VERBOSE_DMA3	src/win32/resource.h	486;"	d
IDC_VERBOSE_ILLEGAL_READ	src/win32/resource.h	478;"	d
IDC_VERBOSE_ILLEGAL_WRITE	src/win32/resource.h	477;"	d
IDC_VERBOSE_SOUNDOUTPUT	src/win32/resource.h	492;"	d
IDC_VERBOSE_SWI	src/win32/resource.h	475;"	d
IDC_VERBOSE_UNALIGNED_ACCESS	src/win32/resource.h	476;"	d
IDC_VERBOSE_UNDEFINED	src/win32/resource.h	487;"	d
IDC_VERSION	src/win32/resource.h	472;"	d
IDC_VERSION2	src/win32/resource.h	473;"	d
IDC_VIEWER	src/win32/resource.h	397;"	d
IDC_VOLUME	src/win32/resource.h	561;"	d
IDC_VSCROLL	src/win32/resource.h	471;"	d
IDC_V_FLAG	src/win32/resource.h	153;"	d
IDC_XY	src/win32/resource.h	485;"	d
IDC_Z	src/win32/resource.h	464;"	d
IDC_Z_FLAG	src/win32/resource.h	147;"	d
IDD	src/win32/AboutDialog.h	/^	enum { IDD = IDD_ABOUT };$/;"	e	enum:AboutDialog::__anon109
IDD	src/win32/AccelEditor.h	/^  enum { IDD = IDD_ACCEL_EDITOR };$/;"	e	enum:AccelEditor::__anon82
IDD	src/win32/Associate.h	/^  enum { IDD = IDD_ASSOCIATIONS };$/;"	e	enum:Associate::__anon64
IDD	src/win32/AudioCoreSettingsDlg.h	/^	enum { IDD = IDD_AUDIO_CORE_SETTINGS };$/;"	e	enum:AudioCoreSettingsDlg::__anon101
IDD	src/win32/BIOSDialog.h	/^	enum { IDD = IDD_BIOS };$/;"	e	enum:BIOSDialog::__anon65
IDD	src/win32/BugReport.h	/^  enum { IDD = IDD_BUG_REPORT };$/;"	e	enum:BugReport::__anon116
IDD	src/win32/Directories.h	/^	enum { IDD = IDD_DIRECTORIES };$/;"	e	enum:Directories::__anon84
IDD	src/win32/Disassemble.h	/^  enum { IDD = IDD_DISASSEMBLE };$/;"	e	enum:Disassemble::__anon103
IDD	src/win32/ExportGSASnapshot.h	/^  enum { IDD = IDD_EXPORT_SPS };$/;"	e	enum:ExportGSASnapshot::__anon122
IDD	src/win32/FullscreenSettings.h	/^	enum { IDD = IDD_FULLSCREEN };$/;"	e	enum:FullscreenSettings::__anon83
IDD	src/win32/GBACheats.h	/^  enum { IDD = IDD_ADD_CHEAT };$/;"	e	enum:AddCheat::__anon111
IDD	src/win32/GBACheats.h	/^  enum { IDD = IDD_ADD_CHEAT_DLG };$/;"	e	enum:AddCBACode::__anon114
IDD	src/win32/GBACheats.h	/^  enum { IDD = IDD_ADD_CHEAT_DLG };$/;"	e	enum:AddCheatCode::__anon115
IDD	src/win32/GBACheats.h	/^  enum { IDD = IDD_ADD_CHEAT_DLG };$/;"	e	enum:AddGSACode::__anon113
IDD	src/win32/GBACheats.h	/^  enum { IDD = IDD_CHEATS };$/;"	e	enum:GBACheatSearch::__anon110
IDD	src/win32/GBACheats.h	/^  enum { IDD = IDD_CHEAT_LIST };$/;"	e	enum:GBACheatList::__anon112
IDD	src/win32/GBCheatsDlg.h	/^  enum { IDD = IDD_ADD_CHEAT };$/;"	e	enum:AddGBCheat::__anon78
IDD	src/win32/GBCheatsDlg.h	/^  enum { IDD = IDD_ADD_CHEAT_DLG };$/;"	e	enum:AddGBCode::__anon80
IDD	src/win32/GBCheatsDlg.h	/^  enum { IDD = IDD_CHEATS };$/;"	e	enum:GBCheatSearch::__anon77
IDD	src/win32/GBCheatsDlg.h	/^  enum { IDD = IDD_GB_CHEAT_LIST };$/;"	e	enum:GBCheatList::__anon79
IDD	src/win32/GBColorDlg.h	/^	enum { IDD = IDD_GB_COLORS };$/;"	e	enum:GBColorDlg::__anon99
IDD	src/win32/GBDisassemble.h	/^  enum { IDD = IDD_GB_DISASSEMBLE };$/;"	e	enum:GBDisassemble::__anon85
IDD	src/win32/GBMapView.h	/^  enum { IDD = IDD_GB_MAP_VIEW };$/;"	e	enum:GBMapView::__anon117
IDD	src/win32/GBMemoryViewerDlg.h	/^  enum { IDD = IDD_MEM_VIEWER };$/;"	e	enum:GBMemoryViewerDlg::__anon88
IDD	src/win32/GBOamView.h	/^  enum { IDD = IDD_GB_OAM_VIEW };$/;"	e	enum:GBOamView::__anon92
IDD	src/win32/GBPaletteView.h	/^  enum { IDD = IDD_GB_PALETTE_VIEW };$/;"	e	enum:GBPaletteView::__anon98
IDD	src/win32/GBPrinterDlg.h	/^  enum { IDD = IDD_GB_PRINTER };$/;"	e	enum:GBPrinterDlg::__anon104
IDD	src/win32/GBTileView.h	/^  enum { IDD = IDD_GB_TILE_VIEWER };$/;"	e	enum:GBTileView::__anon81
IDD	src/win32/GDBConnection.h	/^  enum { IDD = IDD_GDB_PORT };$/;"	e	enum:GDBPortDlg::__anon119
IDD	src/win32/GDBConnection.h	/^  enum { IDD = IDD_GDB_WAITING };$/;"	e	enum:GDBWaitingDlg::__anon120
IDD	src/win32/GSACodeSelect.h	/^  enum { IDD = IDD_CODE_SELECT };$/;"	e	enum:GSACodeSelect::__anon125
IDD	src/win32/GameOverrides.h	/^	enum { IDD = IDD_GAME_OVERRIDES };$/;"	e	enum:GameOverrides::__anon123
IDD	src/win32/IOViewer.h	/^	enum { IDD = IDD_IO_VIEWER };$/;"	e	enum:IOViewer::__anon91
IDD	src/win32/JoybusOptions.h	/^	enum { IDD = IDD_JOYBUS_DIALOG };$/;"	e	enum:JoybusOptions::__anon124
IDD	src/win32/Joypad.h	/^  enum { IDD = IDD_CONFIG };$/;"	e	enum:JoypadConfig::__anon72
IDD	src/win32/Joypad.h	/^  enum { IDD = IDD_MOTION_CONFIG };$/;"	e	enum:MotionConfig::__anon73
IDD	src/win32/LangSelect.h	/^  enum { IDD = IDD_LANG_SELECT };$/;"	e	enum:LangSelect::__anon74
IDD	src/win32/LinkOptions.h	/^	enum { IDD = IDD_LINKTAB };$/;"	e	enum:LinkOptions::__anon94
IDD	src/win32/LinkOptions.h	/^	enum { IDD = IDD_LINKTAB1 };$/;"	e	enum:LinkGeneral::__anon93
IDD	src/win32/LinkOptions.h	/^	enum { IDD = IDD_LINKTAB2 };$/;"	e	enum:LinkServer::__anon95
IDD	src/win32/LinkOptions.h	/^	enum { IDD = IDD_LINKTAB3 };$/;"	e	enum:LinkClient::__anon96
IDD	src/win32/LinkOptions.h	/^	enum { IDD = IDD_SERVERWAIT };$/;"	e	enum:ServerWait::__anon97
IDD	src/win32/Logging.h	/^	enum { IDD = IDD_LOGGING };$/;"	e	enum:Logging::__anon106
IDD	src/win32/MapView.h	/^  enum { IDD = IDD_MAP_VIEW };$/;"	e	enum:MapView::__anon121
IDD	src/win32/MaxScale.h	/^	enum { IDD = IDD_MAX_SCALE };$/;"	e	enum:MaxScale::__anon118
IDD	src/win32/MemoryViewerAddressSize.h	/^  enum { IDD = IDD_ADDR_SIZE };$/;"	e	enum:MemoryViewerAddressSize::__anon90
IDD	src/win32/MemoryViewerDlg.h	/^  enum { IDD = IDD_MEM_VIEWER };$/;"	e	enum:MemoryViewerDlg::__anon108
IDD	src/win32/OALConfig.h	/^	enum { IDD = IDD_OAL_CONFIG };$/;"	e	enum:OALConfig::__anon105
IDD	src/win32/OamView.h	/^  enum { IDD = IDD_OAM_VIEW };$/;"	e	enum:OamView::__anon89
IDD	src/win32/PaletteView.h	/^  enum { IDD = IDD_PALETTE_VIEW };$/;"	e	enum:PaletteView::__anon62
IDD	src/win32/RewindInterval.h	/^  enum { IDD = IDD_REWIND_INTERVAL };$/;"	e	enum:RewindInterval::__anon100
IDD	src/win32/RomInfo.h	/^  enum { IDD = IDD_GBA_ROM_INFO };$/;"	e	enum:RomInfoGBA::__anon76
IDD	src/win32/RomInfo.h	/^  enum { IDD = IDD_GB_ROM_INFO };$/;"	e	enum:RomInfoGB::__anon75
IDD	src/win32/SelectPlugin.h	/^	enum { IDD = IDD_SELECT_PLUGIN };$/;"	e	enum:SelectPlugin::__anon107
IDD	src/win32/Throttle.h	/^  enum { IDD = IDD_THROTTLE };$/;"	e	enum:Throttle::__anon102
IDD	src/win32/TileView.h	/^  enum { IDD = IDD_TILE_VIEWER };$/;"	e	enum:TileView::__anon86
IDD	src/win32/XAudio2_Config.h	/^	enum { IDD = IDD_XAUDIO2_CONFIG };$/;"	e	enum:XAudio2_Config::__anon60
IDD_ABOUT	src/win32/resource.h	58;"	d
IDD_ACCEL_EDITOR	src/win32/resource.h	82;"	d
IDD_ADDR_SIZE	src/win32/resource.h	90;"	d
IDD_ADD_CHEAT	src/win32/resource.h	61;"	d
IDD_ADD_CHEAT_DLG	src/win32/resource.h	72;"	d
IDD_ASSOCIATIONS	src/win32/resource.h	67;"	d
IDD_AUDIO_CORE_SETTINGS	src/win32/resource.h	109;"	d
IDD_BIOS	src/win32/resource.h	106;"	d
IDD_CHEATS	src/win32/resource.h	60;"	d
IDD_CHEAT_LIST	src/win32/resource.h	66;"	d
IDD_CODE_SELECT	src/win32/resource.h	76;"	d
IDD_CONFIG	src/win32/resource.h	63;"	d
IDD_DEBUG	src/win32/resource.h	56;"	d
IDD_DIRECTORIES	src/win32/resource.h	62;"	d
IDD_DISASSEMBLE	src/win32/resource.h	85;"	d
IDD_EXPORT_SPS	src/win32/resource.h	89;"	d
IDD_FULLSCREEN	src/win32/resource.h	107;"	d
IDD_GAME_OVERRIDES	src/win32/resource.h	102;"	d
IDD_GBA_ROM_INFO	src/win32/resource.h	69;"	d
IDD_GB_CHEAT_LIST	src/win32/resource.h	71;"	d
IDD_GB_COLORS	src/win32/resource.h	84;"	d
IDD_GB_DISASSEMBLE	src/win32/resource.h	93;"	d
IDD_GB_MAP_VIEW	src/win32/resource.h	96;"	d
IDD_GB_OAM_VIEW	src/win32/resource.h	94;"	d
IDD_GB_PALETTE_VIEW	src/win32/resource.h	97;"	d
IDD_GB_PRINTER	src/win32/resource.h	73;"	d
IDD_GB_ROM_INFO	src/win32/resource.h	70;"	d
IDD_GB_TILE_VIEWER	src/win32/resource.h	95;"	d
IDD_GDB_PORT	src/win32/resource.h	86;"	d
IDD_GDB_WAITING	src/win32/resource.h	87;"	d
IDD_GG	src/win32/resource.h	65;"	d
IDD_GS	src/win32/resource.h	64;"	d
IDD_IO_VIEWER	src/win32/resource.h	100;"	d
IDD_JOYBUS_DIALOG	src/win32/resource.h	110;"	d
IDD_LANG_SELECT	src/win32/resource.h	75;"	d
IDD_LINKTAB	src/win32/resource.h	819;"	d
IDD_LINKTAB1	src/win32/resource.h	818;"	d
IDD_LINKTAB2	src/win32/resource.h	820;"	d
IDD_LINKTAB3	src/win32/resource.h	821;"	d
IDD_LOGGING	src/win32/resource.h	88;"	d
IDD_MAP_VIEW	src/win32/resource.h	78;"	d
IDD_MAX_SCALE	src/win32/resource.h	101;"	d
IDD_MEM_VIEWER	src/win32/resource.h	80;"	d
IDD_MODES	src/win32/resource.h	91;"	d
IDD_MODE_CONFIRM	src/win32/resource.h	98;"	d
IDD_MOTION_CONFIG	src/win32/resource.h	74;"	d
IDD_OAL_CONFIG	src/win32/resource.h	105;"	d
IDD_OAM_VIEW	src/win32/resource.h	81;"	d
IDD_OPENDLG	src/win32/resource.h	77;"	d
IDD_PALETTE_VIEW	src/win32/resource.h	79;"	d
IDD_REGISTERS	src/win32/resource.h	55;"	d
IDD_REWIND_INTERVAL	src/win32/resource.h	99;"	d
IDD_SELECT	src/win32/resource.h	103;"	d
IDD_SELECT_PLUGIN	src/win32/resource.h	104;"	d
IDD_SERVERWAIT	src/win32/resource.h	822;"	d
IDD_THROTTLE	src/win32/resource.h	92;"	d
IDD_TILE_VIEWER	src/win32/resource.h	83;"	d
IDD_XAUDIO2_CONFIG	src/win32/resource.h	108;"	d
IDI_MAINICON	src/win32/resource.h	54;"	d
IDLE	src/gba/RTC.cpp	/^   IDLE = 0,$/;"	e	enum:RTCSTATE	file:
IDR_ACCELERATOR	src/win32/resource.h	59;"	d
IDR_GB_PRINTER	src/win32/resource.h	68;"	d
IDR_MENU	src/win32/resource.h	57;"	d
IDS_ACK_NOT_RECEIVED	src/win32/resource.h	365;"	d
IDS_ADDRESS	src/win32/resource.h	279;"	d
IDS_ADD_CBA_CODE	src/win32/resource.h	349;"	d
IDS_ADD_CHEAT_CODE	src/win32/resource.h	287;"	d
IDS_ADD_GG_CODE	src/win32/resource.h	297;"	d
IDS_ADD_GSA_CODE	src/win32/resource.h	335;"	d
IDS_ADD_GS_CODE	src/win32/resource.h	299;"	d
IDS_AUTOFIRE_A	src/win32/resource.h	256;"	d
IDS_AUTOFIRE_A_DISABLED	src/win32/resource.h	254;"	d
IDS_AUTOFIRE_B	src/win32/resource.h	258;"	d
IDS_AUTOFIRE_B_DISABLED	src/win32/resource.h	257;"	d
IDS_AUTOFIRE_L	src/win32/resource.h	260;"	d
IDS_AUTOFIRE_L_DISABLED	src/win32/resource.h	259;"	d
IDS_AUTOFIRE_R	src/win32/resource.h	263;"	d
IDS_AUTOFIRE_R_DISABLED	src/win32/resource.h	261;"	d
IDS_AVI_CANNOT_CREATE_AUDIO	src/win32/resource.h	573;"	d
IDS_AVI_CANNOT_CREATE_AVI	src/win32/resource.h	571;"	d
IDS_AVI_CANNOT_CREATE_VIDEO	src/win32/resource.h	572;"	d
IDS_AVI_CANNOT_WRITE_AUDIO	src/win32/resource.h	575;"	d
IDS_AVI_CANNOT_WRITE_VIDEO	src/win32/resource.h	574;"	d
IDS_BAD_ZIP_FILE	src/win32/resource.h	12;"	d
IDS_BUG_REPORT	src/win32/resource.h	386;"	d
IDS_CANNOT_CREATESOUNDBUFFER	src/win32/resource.h	196;"	d
IDS_CANNOT_CREATESOUNDBUFFER_SEC	src/win32/resource.h	202;"	d
IDS_CANNOT_CREATE_DIRECTSOUND	src/win32/resource.h	190;"	d
IDS_CANNOT_IMPORT_SNAPSHOT_FOR	src/win32/resource.h	39;"	d
IDS_CANNOT_LOAD_SGM	src/win32/resource.h	6;"	d
IDS_CANNOT_LOAD_SGM_FOR	src/win32/resource.h	25;"	d
IDS_CANNOT_OPEN_FILE	src/win32/resource.h	11;"	d
IDS_CANNOT_PLAY_PRIMARY	src/win32/resource.h	204;"	d
IDS_CANNOT_SETCOOPERATIVELEVEL	src/win32/resource.h	193;"	d
IDS_CANNOT_SETFORMAT_PRIMARY	src/win32/resource.h	199;"	d
IDS_CBA_CODE_WARNING	src/win32/resource.h	45;"	d
IDS_CHEATS_DISABLED	src/win32/resource.h	582;"	d
IDS_CHEATS_ENABLED	src/win32/resource.h	583;"	d
IDS_CODE	src/win32/resource.h	290;"	d
IDS_CODES_WILL_BE_LOST	src/win32/resource.h	347;"	d
IDS_COM_FAILURE	src/win32/resource.h	577;"	d
IDS_CONFIRM_ACTION	src/win32/resource.h	346;"	d
IDS_DESCRIPTION	src/win32/resource.h	293;"	d
IDS_DIRECTX_7_REQUIRED	src/win32/resource.h	162;"	d
IDS_DISABLING_EMULATION_ONLY	src/win32/resource.h	176;"	d
IDS_DISABLING_VIDEO_MEMORY	src/win32/resource.h	169;"	d
IDS_EEPROM_NOT_SUPPORTED	src/win32/resource.h	367;"	d
IDS_END_OF_MOVIE	src/win32/resource.h	388;"	d
IDS_ERROR	src/win32/resource.h	229;"	d
IDS_ERROR_BINDING	src/win32/resource.h	362;"	d
IDS_ERROR_CREATING_FILE	src/win32/resource.h	21;"	d
IDS_ERROR_CREATING_SOCKET	src/win32/resource.h	364;"	d
IDS_ERROR_DISP_COLOR	src/win32/resource.h	334;"	d
IDS_ERROR_LISTENING	src/win32/resource.h	363;"	d
IDS_ERROR_NOT_GBA_IMAGE	src/win32/resource.h	366;"	d
IDS_ERROR_ON_ENDDOC	src/win32/resource.h	226;"	d
IDS_ERROR_ON_ENDPAGE	src/win32/resource.h	223;"	d
IDS_ERROR_ON_STARTDOC	src/win32/resource.h	216;"	d
IDS_ERROR_ON_STARTPAGE	src/win32/resource.h	218;"	d
IDS_ERROR_OPENING_IMAGE	src/win32/resource.h	14;"	d
IDS_ERROR_OPENING_IMAGE_FROM	src/win32/resource.h	26;"	d
IDS_ERROR_PRINTING_ON_STRETCH	src/win32/resource.h	220;"	d
IDS_ERROR_READING_IMAGE	src/win32/resource.h	15;"	d
IDS_ERROR_READING_IMAGE_FROM	src/win32/resource.h	27;"	d
IDS_FAILED_TO_GET_LOCINFO	src/win32/resource.h	315;"	d
IDS_FAILED_TO_LOAD_LIBRARY	src/win32/resource.h	312;"	d
IDS_FAILED_TO_OPEN_FILE	src/win32/resource.h	180;"	d
IDS_FAILED_TO_READ_RTC	src/win32/resource.h	23;"	d
IDS_FAILED_TO_READ_SGM	src/win32/resource.h	22;"	d
IDS_FAILED_TO_READ_ZIP_DIR	src/win32/resource.h	184;"	d
IDS_FILTER_AVI	src/win32/resource.h	374;"	d
IDS_FILTER_BIOS	src/win32/resource.h	320;"	d
IDS_FILTER_CHEAT_LIST	src/win32/resource.h	328;"	d
IDS_FILTER_COMPRESSED_FILES	src/win32/resource.h	53;"	d
IDS_FILTER_DUMP	src/win32/resource.h	369;"	d
IDS_FILTER_GBAROM	src/win32/resource.h	322;"	d
IDS_FILTER_GBCROM	src/win32/resource.h	576;"	d
IDS_FILTER_GBROM	src/win32/resource.h	353;"	d
IDS_FILTER_GBS	src/win32/resource.h	342;"	d
IDS_FILTER_GCF	src/win32/resource.h	343;"	d
IDS_FILTER_GSVSPS	src/win32/resource.h	396;"	d
IDS_FILTER_INI	src/win32/resource.h	381;"	d
IDS_FILTER_PAL	src/win32/resource.h	356;"	d
IDS_FILTER_PNG	src/win32/resource.h	330;"	d
IDS_FILTER_SAV	src/win32/resource.h	340;"	d
IDS_FILTER_SGM	src/win32/resource.h	325;"	d
IDS_FILTER_SPC	src/win32/resource.h	348;"	d
IDS_FILTER_SPS	src/win32/resource.h	337;"	d
IDS_FILTER_VMV	src/win32/resource.h	384;"	d
IDS_FILTER_WAV	src/win32/resource.h	350;"	d
IDS_GSA_CODE_WARNING	src/win32/resource.h	43;"	d
IDS_INVALID_ADDRESS	src/win32/resource.h	209;"	d
IDS_INVALID_BIOS_FILE_SIZE	src/win32/resource.h	17;"	d
IDS_INVALID_CBA_CODE	src/win32/resource.h	44;"	d
IDS_INVALID_CHEAT_CODE	src/win32/resource.h	18;"	d
IDS_INVALID_CHEAT_CODE_ADDRESS	src/win32/resource.h	35;"	d
IDS_INVALID_CHEAT_TO_REMOVE	src/win32/resource.h	34;"	d
IDS_INVALID_GAMEGENIE_CODE	src/win32/resource.h	33;"	d
IDS_INVALID_GAMESHARK_CODE	src/win32/resource.h	32;"	d
IDS_INVALID_GSA_CODE	src/win32/resource.h	38;"	d
IDS_INVALID_INTERVAL_VALUE	src/win32/resource.h	390;"	d
IDS_INVALID_THROTTLE_VALUE	src/win32/resource.h	379;"	d
IDS_JOY_BUTTON	src/win32/resource.h	240;"	d
IDS_JOY_DOWN	src/win32/resource.h	238;"	d
IDS_JOY_LEFT	src/win32/resource.h	232;"	d
IDS_JOY_RIGHT	src/win32/resource.h	234;"	d
IDS_JOY_UP	src/win32/resource.h	236;"	d
IDS_LOADED_BATTERY	src/win32/resource.h	273;"	d
IDS_LOADED_CHEATS	src/win32/resource.h	332;"	d
IDS_LOADED_STATE	src/win32/resource.h	268;"	d
IDS_LOADED_STATE_N	src/win32/resource.h	269;"	d
IDS_MAXIMUM_NUMBER_OF_CHEATS	src/win32/resource.h	31;"	d
IDS_MISALIGNED_HALFWORD	src/win32/resource.h	211;"	d
IDS_MISALIGNED_WORD	src/win32/resource.h	213;"	d
IDS_MOVIE_PLAY	src/win32/resource.h	395;"	d
IDS_NEW_VALUE	src/win32/resource.h	284;"	d
IDS_NONE	src/win32/resource.h	309;"	d
IDS_NO_IMAGE_ON_ZIP	src/win32/resource.h	13;"	d
IDS_NUMBER_CANNOT_BE_EMPTY	src/win32/resource.h	208;"	d
IDS_OAL_NODEVICE	src/win32/resource.h	569;"	d
IDS_OAL_NODLL	src/win32/resource.h	570;"	d
IDS_OLD_VALUE	src/win32/resource.h	281;"	d
IDS_OUT_OF_MEMORY	src/win32/resource.h	46;"	d
IDS_POCKET_PRINTER	src/win32/resource.h	302;"	d
IDS_REGISTRY	src/win32/resource.h	392;"	d
IDS_RESET	src/win32/resource.h	252;"	d
IDS_SAVE_GAME_NOT_USING_BIOS	src/win32/resource.h	7;"	d
IDS_SAVE_GAME_USING_BIOS	src/win32/resource.h	9;"	d
IDS_SAVE_WILL_BE_LOST	src/win32/resource.h	345;"	d
IDS_SCREEN_CAPTURE	src/win32/resource.h	277;"	d
IDS_SEARCH_PRODUCED_NO_RESULTS	src/win32/resource.h	360;"	d
IDS_SEARCH_PRODUCED_TOO_MANY	src/win32/resource.h	206;"	d
IDS_SELECT_AVI_NAME	src/win32/resource.h	377;"	d
IDS_SELECT_BATTERY_DIR	src/win32/resource.h	244;"	d
IDS_SELECT_BATTERY_FILE	src/win32/resource.h	341;"	d
IDS_SELECT_BIOS_FILE	src/win32/resource.h	250;"	d
IDS_SELECT_CAPTURE_DIR	src/win32/resource.h	248;"	d
IDS_SELECT_CAPTURE_NAME	src/win32/resource.h	275;"	d
IDS_SELECT_CHEAT_LIST_NAME	src/win32/resource.h	318;"	d
IDS_SELECT_CODE_FILE	src/win32/resource.h	344;"	d
IDS_SELECT_DUMP_FILE	src/win32/resource.h	371;"	d
IDS_SELECT_MOVIE_NAME	src/win32/resource.h	385;"	d
IDS_SELECT_PALETTE_NAME	src/win32/resource.h	358;"	d
IDS_SELECT_ROM	src/win32/resource.h	265;"	d
IDS_SELECT_ROM_DIR	src/win32/resource.h	242;"	d
IDS_SELECT_SAVE_DIR	src/win32/resource.h	246;"	d
IDS_SELECT_SAVE_GAME_NAME	src/win32/resource.h	266;"	d
IDS_SELECT_SKIN_FILE	src/win32/resource.h	382;"	d
IDS_SELECT_SNAPSHOT_FILE	src/win32/resource.h	338;"	d
IDS_SELECT_WAV_NAME	src/win32/resource.h	351;"	d
IDS_SETTING_WILL_BE_EFFECTIVE	src/win32/resource.h	173;"	d
IDS_STATUS	src/win32/resource.h	295;"	d
IDS_TOOLTIP_DECLICKING	src/win32/resource.h	52;"	d
IDS_TOOLTIP_DEFAULT_VOLUME	src/win32/resource.h	48;"	d
IDS_TOOLTIP_ENHANCE_SOUND	src/win32/resource.h	50;"	d
IDS_TOOLTIP_SURROUND	src/win32/resource.h	51;"	d
IDS_UNKNOWN	src/win32/resource.h	306;"	d
IDS_UNKNOWN_ARM_OPCDOE	src/win32/resource.h	19;"	d
IDS_UNKNOWN_CARTRIDGE_TYPE	src/win32/resource.h	30;"	d
IDS_UNKNOWN_THUMB_OPCODE	src/win32/resource.h	20;"	d
IDS_UNSUPPORTED_ARM_MODE	src/win32/resource.h	41;"	d
IDS_UNSUPPORTED_BIOS_FUNCTION	src/win32/resource.h	16;"	d
IDS_UNSUPPORTED_CHEAT_LIST_TYPE	src/win32/resource.h	37;"	d
IDS_UNSUPPORTED_CHEAT_LIST_VERSION	src/win32/resource.h	36;"	d
IDS_UNSUPPORTED_CODE_FILE	src/win32/resource.h	42;"	d
IDS_UNSUPPORTED_FILE_TYPE	src/win32/resource.h	187;"	d
IDS_UNSUPPORTED_GAMESHARK_CODE	src/win32/resource.h	49;"	d
IDS_UNSUPPORTED_MOVIE_VERSION	src/win32/resource.h	387;"	d
IDS_UNSUPPORTED_RAM_SIZE	src/win32/resource.h	29;"	d
IDS_UNSUPPORTED_ROM_SIZE	src/win32/resource.h	28;"	d
IDS_UNSUPPORTED_SAVE_TYPE	src/win32/resource.h	10;"	d
IDS_UNSUPPORTED_SNAPSHOT_FILE	src/win32/resource.h	40;"	d
IDS_UNSUPPORTED_VBA_SGM	src/win32/resource.h	5;"	d
IDS_UNSUPPORTED_VB_SGM	src/win32/resource.h	24;"	d
IDS_VALUE_CANNOT_BE_EMPTY	src/win32/resource.h	215;"	d
IDS_WRONG_GAMESHARK_CODE	src/win32/resource.h	47;"	d
IDS_WROTE_STATE	src/win32/resource.h	270;"	d
IDS_WROTE_STATE_N	src/win32/resource.h	271;"	d
IDS_XAUDIO2_CANNOT_CREATE_MASTERINGVOICE	src/win32/resource.h	579;"	d
IDS_XAUDIO2_CANNOT_CREATE_SOURCEVOICE	src/win32/resource.h	580;"	d
IDS_XAUDIO2_CANNOT_ENUMERATE_DEVICES	src/win32/resource.h	581;"	d
IDS_XAUDIO2_FAILURE	src/win32/resource.h	578;"	d
ID_AUDIO_CORE_SETTINGS	src/win32/resource.h	877;"	d
ID_CANCEL	src/win32/resource.h	130;"	d
ID_CHEATS_ADDCHEAT	src/win32/resource.h	612;"	d
ID_CHEATS_ADDCHEATCODE	src/win32/resource.h	668;"	d
ID_CHEATS_AUTOMATICSAVELOADCHEATS	src/win32/resource.h	679;"	d
ID_CHEATS_CHEATLIST	src/win32/resource.h	659;"	d
ID_CHEATS_DISABLECHEATS	src/win32/resource.h	798;"	d
ID_CHEATS_GAMEBOY	src/win32/resource.h	642;"	d
ID_CHEATS_LOADCHEATLIST	src/win32/resource.h	678;"	d
ID_CHEATS_SAVECHEATLIST	src/win32/resource.h	677;"	d
ID_CHEATS_SEARCHFORCHEATS	src/win32/resource.h	611;"	d
ID_DEBUG_NEXTFRAME	src/win32/resource.h	698;"	d
ID_EMULATOR_BIOSFILES	src/win32/resource.h	869;"	d
ID_EMULATOR_LOADSTATESHOULD	src/win32/resource.h	873;"	d
ID_FILE_EXIT	src/win32/resource.h	585;"	d
ID_FILE_EXPORT_BATTERYFILE	src/win32/resource.h	683;"	d
ID_FILE_EXPORT_GAMESHARKSNAPSHOT	src/win32/resource.h	719;"	d
ID_FILE_EXPORT_SETTINGSTOINI	src/win32/resource.h	756;"	d
ID_FILE_IMPORT_BATTERYFILE	src/win32/resource.h	681;"	d
ID_FILE_IMPORT_GAMESHARKCODEFILE	src/win32/resource.h	682;"	d
ID_FILE_IMPORT_GAMESHARKSNAPSHOT	src/win32/resource.h	680;"	d
ID_FILE_LOAD	src/win32/resource.h	602;"	d
ID_FILE_LOADGAME_AUTOLOADMOSTRECENT	src/win32/resource.h	797;"	d
ID_FILE_LOADGAME_MOSTRECENT	src/win32/resource.h	795;"	d
ID_FILE_LOADGAME_SLOT1	src/win32/resource.h	625;"	d
ID_FILE_LOADGAME_SLOT10	src/win32/resource.h	634;"	d
ID_FILE_LOADGAME_SLOT2	src/win32/resource.h	626;"	d
ID_FILE_LOADGAME_SLOT3	src/win32/resource.h	627;"	d
ID_FILE_LOADGAME_SLOT4	src/win32/resource.h	628;"	d
ID_FILE_LOADGAME_SLOT5	src/win32/resource.h	629;"	d
ID_FILE_LOADGAME_SLOT6	src/win32/resource.h	630;"	d
ID_FILE_LOADGAME_SLOT7	src/win32/resource.h	631;"	d
ID_FILE_LOADGAME_SLOT8	src/win32/resource.h	632;"	d
ID_FILE_LOADGAME_SLOT9	src/win32/resource.h	633;"	d
ID_FILE_OPEN_GB	src/win32/resource.h	697;"	d
ID_FILE_OPEN_GBA	src/win32/resource.h	878;"	d
ID_FILE_OPEN_GBC	src/win32/resource.h	870;"	d
ID_FILE_PAUSE	src/win32/resource.h	882;"	d
ID_FILE_RECENT_FREEZE	src/win32/resource.h	718;"	d
ID_FILE_RECENT_RESET	src/win32/resource.h	676;"	d
ID_FILE_RESET	src/win32/resource.h	601;"	d
ID_FILE_ROMINFORMATION	src/win32/resource.h	667;"	d
ID_FILE_SAVEGAME_OLDESTSLOT	src/win32/resource.h	796;"	d
ID_FILE_SAVEGAME_SLOT1	src/win32/resource.h	615;"	d
ID_FILE_SAVEGAME_SLOT10	src/win32/resource.h	624;"	d
ID_FILE_SAVEGAME_SLOT2	src/win32/resource.h	616;"	d
ID_FILE_SAVEGAME_SLOT3	src/win32/resource.h	617;"	d
ID_FILE_SAVEGAME_SLOT4	src/win32/resource.h	618;"	d
ID_FILE_SAVEGAME_SLOT5	src/win32/resource.h	619;"	d
ID_FILE_SAVEGAME_SLOT6	src/win32/resource.h	620;"	d
ID_FILE_SAVEGAME_SLOT7	src/win32/resource.h	621;"	d
ID_FILE_SAVEGAME_SLOT8	src/win32/resource.h	622;"	d
ID_FILE_SAVEGAME_SLOT9	src/win32/resource.h	623;"	d
ID_FILE_SCREENCAPTURE	src/win32/resource.h	671;"	d
ID_FILE_TOGGLEMENU	src/win32/resource.h	792;"	d
ID_HELP_ABOUT	src/win32/resource.h	584;"	d
ID_HELP_BUGREPORT	src/win32/resource.h	789;"	d
ID_HELP_FAQ	src/win32/resource.h	790;"	d
ID_HELP_GNUPUBLICLICENSE	src/win32/resource.h	803;"	d
ID_LOADGAME_DONOTCHANGEBATTERYSAVE	src/win32/resource.h	874;"	d
ID_LOADGAME_DONOTCHANGECHEATLIST	src/win32/resource.h	880;"	d
ID_Menu	src/win32/resource.h	847;"	d
ID_Menu40375	src/win32/resource.h	884;"	d
ID_OK	src/win32/resource.h	128;"	d
ID_OPTIONS_EMULATOR_AGBPRINT	src/win32/resource.h	777;"	d
ID_OPTIONS_EMULATOR_ASSOCIATE	src/win32/resource.h	665;"	d
ID_OPTIONS_EMULATOR_AUTOMATICALLYAPPLYPATCHFILES	src/win32/resource.h	732;"	d
ID_OPTIONS_EMULATOR_BMPFORMAT	src/win32/resource.h	702;"	d
ID_OPTIONS_EMULATOR_DIRECTORIES	src/win32/resource.h	883;"	d
ID_OPTIONS_EMULATOR_DISABLESTATUSMESSAGES	src/win32/resource.h	669;"	d
ID_OPTIONS_EMULATOR_GAMEOVERRIDES	src/win32/resource.h	802;"	d
ID_OPTIONS_EMULATOR_PAUSEWHENINACTIVE	src/win32/resource.h	686;"	d
ID_OPTIONS_EMULATOR_PNGFORMAT	src/win32/resource.h	701;"	d
ID_OPTIONS_EMULATOR_REALTIMECLOCK	src/win32/resource.h	778;"	d
ID_OPTIONS_EMULATOR_REMOVEINTROSGBA	src/win32/resource.h	846;"	d
ID_OPTIONS_EMULATOR_REWIND	src/win32/resource.h	786;"	d
ID_OPTIONS_EMULATOR_REWINDINTERVAL	src/win32/resource.h	791;"	d
ID_OPTIONS_EMULATOR_SAVETYPE_AUTOMATIC	src/win32/resource.h	725;"	d
ID_OPTIONS_EMULATOR_SAVETYPE_DETECTNOW	src/win32/resource.h	881;"	d
ID_OPTIONS_EMULATOR_SAVETYPE_EEPROM	src/win32/resource.h	726;"	d
ID_OPTIONS_EMULATOR_SAVETYPE_EEPROMSENSOR	src/win32/resource.h	729;"	d
ID_OPTIONS_EMULATOR_SAVETYPE_FLASH	src/win32/resource.h	728;"	d
ID_OPTIONS_EMULATOR_SAVETYPE_FLASH1M	src/win32/resource.h	731;"	d
ID_OPTIONS_EMULATOR_SAVETYPE_FLASH512K	src/win32/resource.h	730;"	d
ID_OPTIONS_EMULATOR_SAVETYPE_NONE	src/win32/resource.h	793;"	d
ID_OPTIONS_EMULATOR_SAVETYPE_SRAM	src/win32/resource.h	727;"	d
ID_OPTIONS_EMULATOR_SELECTBIOSFILE	src/win32/resource.h	610;"	d
ID_OPTIONS_EMULATOR_SHOWSPEED_DETAILED	src/win32/resource.h	745;"	d
ID_OPTIONS_EMULATOR_SHOWSPEED_NONE	src/win32/resource.h	743;"	d
ID_OPTIONS_EMULATOR_SHOWSPEED_PERCENTAGE	src/win32/resource.h	744;"	d
ID_OPTIONS_EMULATOR_SHOWSPEED_TRANSPARENT	src/win32/resource.h	746;"	d
ID_OPTIONS_EMULATOR_SKIPBIOS	src/win32/resource.h	788;"	d
ID_OPTIONS_EMULATOR_SPEEDHACK	src/win32/resource.h	714;"	d
ID_OPTIONS_EMULATOR_SPEEDUPTOGGLE	src/win32/resource.h	715;"	d
ID_OPTIONS_EMULATOR_STORESETTINGSINREGISTRY	src/win32/resource.h	755;"	d
ID_OPTIONS_EMULATOR_SYNCHRONIZE	src/win32/resource.h	600;"	d
ID_OPTIONS_EMULATOR_USEBIOSFILE	src/win32/resource.h	609;"	d
ID_OPTIONS_FILTER16BIT_ADVANCEMAMESCALE2X	src/win32/resource.h	716;"	d
ID_OPTIONS_FILTER16BIT_MOTIONBLUREXPERIMENTAL	src/win32/resource.h	685;"	d
ID_OPTIONS_FILTER16BIT_PIXELATEEXPERIMENTAL	src/win32/resource.h	684;"	d
ID_OPTIONS_FILTER16BIT_SIMPLE2X	src/win32/resource.h	717;"	d
ID_OPTIONS_FILTER_2XSAI	src/win32/resource.h	655;"	d
ID_OPTIONS_FILTER_BILINEAR	src/win32/resource.h	735;"	d
ID_OPTIONS_FILTER_BILINEARPLUS	src/win32/resource.h	736;"	d
ID_OPTIONS_FILTER_DISABLEMMX	src/win32/resource.h	666;"	d
ID_OPTIONS_FILTER_HQ2X	src/win32/resource.h	800;"	d
ID_OPTIONS_FILTER_HQ3X	src/win32/resource.h	809;"	d
ID_OPTIONS_FILTER_HQ4X	src/win32/resource.h	810;"	d
ID_OPTIONS_FILTER_INTERFRAMEBLENDING_MOTIONBLUR	src/win32/resource.h	738;"	d
ID_OPTIONS_FILTER_INTERFRAMEBLENDING_NONE	src/win32/resource.h	737;"	d
ID_OPTIONS_FILTER_INTERFRAMEBLENDING_SMART	src/win32/resource.h	739;"	d
ID_OPTIONS_FILTER_LQ2X	src/win32/resource.h	801;"	d
ID_OPTIONS_FILTER_NORMAL	src/win32/resource.h	654;"	d
ID_OPTIONS_FILTER_PLUGIN	src/win32/resource.h	857;"	d
ID_OPTIONS_FILTER_SCANLINES	src/win32/resource.h	764;"	d
ID_OPTIONS_FILTER_SIMPLE3X	src/win32/resource.h	807;"	d
ID_OPTIONS_FILTER_SIMPLE4X	src/win32/resource.h	808;"	d
ID_OPTIONS_FILTER_SUPER2XSAI	src/win32/resource.h	656;"	d
ID_OPTIONS_FILTER_SUPEREAGLE	src/win32/resource.h	657;"	d
ID_OPTIONS_FILTER_TVMODE	src/win32/resource.h	658;"	d
ID_OPTIONS_FRAMESKIP_AUTOMATIC	src/win32/resource.h	742;"	d
ID_OPTIONS_FRAMESKIP_THROTTLE_100	src/win32/resource.h	763;"	d
ID_OPTIONS_FRAMESKIP_THROTTLE_150	src/win32/resource.h	759;"	d
ID_OPTIONS_FRAMESKIP_THROTTLE_200	src/win32/resource.h	760;"	d
ID_OPTIONS_FRAMESKIP_THROTTLE_25	src/win32/resource.h	761;"	d
ID_OPTIONS_FRAMESKIP_THROTTLE_50	src/win32/resource.h	758;"	d
ID_OPTIONS_FRAMESKIP_THROTTLE_NOTHROTTLE	src/win32/resource.h	757;"	d
ID_OPTIONS_FRAMESKIP_THROTTLE_OTHER	src/win32/resource.h	762;"	d
ID_OPTIONS_GAMEBOY_AUTOMATIC	src/win32/resource.h	635;"	d
ID_OPTIONS_GAMEBOY_BORDER	src/win32/resource.h	614;"	d
ID_OPTIONS_GAMEBOY_BORDERAUTOMATIC	src/win32/resource.h	785;"	d
ID_OPTIONS_GAMEBOY_CGB	src/win32/resource.h	636;"	d
ID_OPTIONS_GAMEBOY_COLORS	src/win32/resource.h	707;"	d
ID_OPTIONS_GAMEBOY_GAMEBOYCOLORS	src/win32/resource.h	641;"	d
ID_OPTIONS_GAMEBOY_GB	src/win32/resource.h	639;"	d
ID_OPTIONS_GAMEBOY_GBA	src/win32/resource.h	637;"	d
ID_OPTIONS_GAMEBOY_PRINTER	src/win32/resource.h	675;"	d
ID_OPTIONS_GAMEBOY_REALCOLORS	src/win32/resource.h	640;"	d
ID_OPTIONS_GAMEBOY_SGB	src/win32/resource.h	638;"	d
ID_OPTIONS_GAMEBOY_SGB2	src/win32/resource.h	779;"	d
ID_OPTIONS_JOYBUS	src/win32/resource.h	885;"	d
ID_OPTIONS_JOYPAD	src/win32/resource.h	599;"	d
ID_OPTIONS_JOYPAD_AUTOFIRE_A	src/win32/resource.h	660;"	d
ID_OPTIONS_JOYPAD_AUTOFIRE_B	src/win32/resource.h	661;"	d
ID_OPTIONS_JOYPAD_AUTOFIRE_L	src/win32/resource.h	662;"	d
ID_OPTIONS_JOYPAD_AUTOFIRE_R	src/win32/resource.h	663;"	d
ID_OPTIONS_JOYPAD_CONFIGURE_1	src/win32/resource.h	747;"	d
ID_OPTIONS_JOYPAD_CONFIGURE_2	src/win32/resource.h	748;"	d
ID_OPTIONS_JOYPAD_CONFIGURE_3	src/win32/resource.h	749;"	d
ID_OPTIONS_JOYPAD_CONFIGURE_4	src/win32/resource.h	750;"	d
ID_OPTIONS_JOYPAD_DEFAULTJOYPAD_1	src/win32/resource.h	751;"	d
ID_OPTIONS_JOYPAD_DEFAULTJOYPAD_2	src/win32/resource.h	752;"	d
ID_OPTIONS_JOYPAD_DEFAULTJOYPAD_3	src/win32/resource.h	753;"	d
ID_OPTIONS_JOYPAD_DEFAULTJOYPAD_4	src/win32/resource.h	754;"	d
ID_OPTIONS_JOYPAD_MOTIONCONFIGURE	src/win32/resource.h	670;"	d
ID_OPTIONS_LANGUAGE_ENGLISH	src/win32/resource.h	673;"	d
ID_OPTIONS_LANGUAGE_OTHER	src/win32/resource.h	674;"	d
ID_OPTIONS_LANGUAGE_SYSTEM	src/win32/resource.h	672;"	d
ID_OPTIONS_LINK_ENABLE	src/win32/resource.h	849;"	d
ID_OPTIONS_LINK_LOG	src/win32/resource.h	836;"	d
ID_OPTIONS_LINK_OPTIONS	src/win32/resource.h	835;"	d
ID_OPTIONS_LINK_WIRELESSADAPTER	src/win32/resource.h	837;"	d
ID_OPTIONS_PRIORITY_ABOVENORMAL	src/win32/resource.h	649;"	d
ID_OPTIONS_PRIORITY_BELOWNORMAL	src/win32/resource.h	651;"	d
ID_OPTIONS_PRIORITY_HIGHEST	src/win32/resource.h	648;"	d
ID_OPTIONS_PRIORITY_NORMAL	src/win32/resource.h	650;"	d
ID_OPTIONS_SELECT_PLUGIN	src/win32/resource.h	858;"	d
ID_OPTIONS_SOUND_11KHZ	src/win32/resource.h	643;"	d
ID_OPTIONS_SOUND_22KHZ	src/win32/resource.h	644;"	d
ID_OPTIONS_SOUND_44KHZ	src/win32/resource.h	645;"	d
ID_OPTIONS_SOUND_CHANNEL1	src/win32/resource.h	605;"	d
ID_OPTIONS_SOUND_CHANNEL2	src/win32/resource.h	606;"	d
ID_OPTIONS_SOUND_CHANNEL3	src/win32/resource.h	607;"	d
ID_OPTIONS_SOUND_CHANNEL4	src/win32/resource.h	608;"	d
ID_OPTIONS_SOUND_DIRECTSOUNDA	src/win32/resource.h	603;"	d
ID_OPTIONS_SOUND_DIRECTSOUNDB	src/win32/resource.h	604;"	d
ID_OPTIONS_SOUND_HARDWAREACCELERATION	src/win32/resource.h	804;"	d
ID_OPTIONS_SOUND_PCMINTERPOLATION_CUBIC	src/win32/resource.h	815;"	d
ID_OPTIONS_SOUND_PCMINTERPOLATION_FIR	src/win32/resource.h	816;"	d
ID_OPTIONS_SOUND_PCMINTERPOLATION_LIBRESAMPLE	src/win32/resource.h	817;"	d
ID_OPTIONS_SOUND_PCMINTERPOLATION_LINEAR	src/win32/resource.h	814;"	d
ID_OPTIONS_SOUND_PCMINTERPOLATION_NONE	src/win32/resource.h	813;"	d
ID_OPTIONS_SOUND_STARTRECORDING	src/win32/resource.h	687;"	d
ID_OPTIONS_SOUND_STOPRECORDING	src/win32/resource.h	688;"	d
ID_OPTIONS_SPEED	src/win32/resource.h	866;"	d
ID_OPTIONS_UI	src/win32/resource.h	853;"	d
ID_OPTIONS_VIDEO_DDRAWEMULATIONONLY	src/win32/resource.h	646;"	d
ID_OPTIONS_VIDEO_DDRAWUSEVIDEOMEMORY	src/win32/resource.h	647;"	d
ID_OPTIONS_VIDEO_DISABLESFX	src/win32/resource.h	613;"	d
ID_OPTIONS_VIDEO_FRAMESKIP_0	src/win32/resource.h	586;"	d
ID_OPTIONS_VIDEO_FRAMESKIP_1	src/win32/resource.h	587;"	d
ID_OPTIONS_VIDEO_FRAMESKIP_2	src/win32/resource.h	588;"	d
ID_OPTIONS_VIDEO_FRAMESKIP_3	src/win32/resource.h	589;"	d
ID_OPTIONS_VIDEO_FRAMESKIP_4	src/win32/resource.h	590;"	d
ID_OPTIONS_VIDEO_FRAMESKIP_5	src/win32/resource.h	591;"	d
ID_OPTIONS_VIDEO_FRAMESKIP_6	src/win32/resource.h	721;"	d
ID_OPTIONS_VIDEO_FRAMESKIP_7	src/win32/resource.h	722;"	d
ID_OPTIONS_VIDEO_FRAMESKIP_8	src/win32/resource.h	723;"	d
ID_OPTIONS_VIDEO_FRAMESKIP_9	src/win32/resource.h	724;"	d
ID_OPTIONS_VIDEO_FULLSCREEN	src/win32/resource.h	740;"	d
ID_OPTIONS_VIDEO_FULLSCREEN1024X768	src/win32/resource.h	805;"	d
ID_OPTIONS_VIDEO_FULLSCREEN1280X1024	src/win32/resource.h	806;"	d
ID_OPTIONS_VIDEO_FULLSCREEN320X240	src/win32/resource.h	652;"	d
ID_OPTIONS_VIDEO_FULLSCREEN640X480	src/win32/resource.h	653;"	d
ID_OPTIONS_VIDEO_FULLSCREEN800X600	src/win32/resource.h	720;"	d
ID_OPTIONS_VIDEO_FULLSCREENMAXSCALE	src/win32/resource.h	799;"	d
ID_OPTIONS_VIDEO_FULLSCREENSTRETCHTOFIT	src/win32/resource.h	664;"	d
ID_OPTIONS_VIDEO_LAYERS_BG0	src/win32/resource.h	689;"	d
ID_OPTIONS_VIDEO_LAYERS_BG1	src/win32/resource.h	690;"	d
ID_OPTIONS_VIDEO_LAYERS_BG2	src/win32/resource.h	691;"	d
ID_OPTIONS_VIDEO_LAYERS_BG3	src/win32/resource.h	692;"	d
ID_OPTIONS_VIDEO_LAYERS_OBJ	src/win32/resource.h	693;"	d
ID_OPTIONS_VIDEO_LAYERS_OBJWIN	src/win32/resource.h	696;"	d
ID_OPTIONS_VIDEO_LAYERS_RESET	src/win32/resource.h	879;"	d
ID_OPTIONS_VIDEO_LAYERS_WIN0	src/win32/resource.h	694;"	d
ID_OPTIONS_VIDEO_LAYERS_WIN1	src/win32/resource.h	695;"	d
ID_OPTIONS_VIDEO_RENDERMETHOD_DIRECT3D	src/win32/resource.h	767;"	d
ID_OPTIONS_VIDEO_RENDERMETHOD_DIRECTDRAW	src/win32/resource.h	766;"	d
ID_OPTIONS_VIDEO_RENDERMETHOD_GDI	src/win32/resource.h	765;"	d
ID_OPTIONS_VIDEO_RENDERMETHOD_OPENGL	src/win32/resource.h	768;"	d
ID_OPTIONS_VIDEO_RENDEROPTIONS_D3DANISOTROPIC	src/win32/resource.h	772;"	d
ID_OPTIONS_VIDEO_RENDEROPTIONS_D3DBILINEAR	src/win32/resource.h	770;"	d
ID_OPTIONS_VIDEO_RENDEROPTIONS_D3DNOFILTER	src/win32/resource.h	769;"	d
ID_OPTIONS_VIDEO_RENDEROPTIONS_D3DTRILINEAR	src/win32/resource.h	771;"	d
ID_OPTIONS_VIDEO_RENDEROPTIONS_GLANISOTROPIC	src/win32/resource.h	848;"	d
ID_OPTIONS_VIDEO_RENDEROPTIONS_GLBILINEAR	src/win32/resource.h	774;"	d
ID_OPTIONS_VIDEO_RENDEROPTIONS_GLNEAREST	src/win32/resource.h	773;"	d
ID_OPTIONS_VIDEO_RENDEROPTIONS_GLPOLYGONS	src/win32/resource.h	851;"	d
ID_OPTIONS_VIDEO_RENDEROPTIONS_GLQUADS	src/win32/resource.h	776;"	d
ID_OPTIONS_VIDEO_RENDEROPTIONS_GLTRIANGLE	src/win32/resource.h	775;"	d
ID_OPTIONS_VIDEO_TRIPLEBUFFERING	src/win32/resource.h	741;"	d
ID_OPTIONS_VIDEO_VSYNC	src/win32/resource.h	592;"	d
ID_OPTIONS_VIDEO_X1	src/win32/resource.h	593;"	d
ID_OPTIONS_VIDEO_X2	src/win32/resource.h	594;"	d
ID_OPTIONS_VIDEO_X3	src/win32/resource.h	595;"	d
ID_OPTIONS_VIDEO_X4	src/win32/resource.h	596;"	d
ID_OPTIONS_VIDEO_X5	src/win32/resource.h	597;"	d
ID_OPTIONS_VIDEO_X6	src/win32/resource.h	598;"	d
ID_OUTPUTAPI_CONFIGURATION	src/win32/resource.h	863;"	d
ID_OUTPUTAPI_CONFIGURATION40363	src/win32/resource.h	875;"	d
ID_OUTPUTAPI_DIRECTSOUND	src/win32/resource.h	860;"	d
ID_OUTPUTAPI_OALCONFIGURATION	src/win32/resource.h	864;"	d
ID_OUTPUTAPI_OPENAL	src/win32/resource.h	861;"	d
ID_OUTPUTAPI_SOFTWAREMIXING	src/win32/resource.h	862;"	d
ID_OUTPUTAPI_XAUDIO2	src/win32/resource.h	871;"	d
ID_OUTPUTAPI_XAUDIO2CONFIG	src/win32/resource.h	876;"	d
ID_PIXELFILTER_MULTI	src/win32/resource.h	872;"	d
ID_PRINT	src/win32/resource.h	324;"	d
ID_RENDERAPI_D3DMOTIONBLUR	src/win32/resource.h	868;"	d
ID_RENDERAPI_FILTER	src/win32/resource.h	865;"	d
ID_RENDERAPI_MOTIONBLUR	src/win32/resource.h	867;"	d
ID_RENDERAPI_VERTEX	src/win32/resource.h	850;"	d
ID_SAVE	src/win32/resource.h	131;"	d
ID_SKIN_SELECT	src/win32/resource.h	856;"	d
ID_SKIN_USE	src/win32/resource.h	855;"	d
ID_SYSTEM_MINIMIZE	src/win32/resource.h	780;"	d
ID_TOOLS_CUSTOMIZE	src/win32/resource.h	705;"	d
ID_TOOLS_DEBUG_BREAK	src/win32/resource.h	712;"	d
ID_TOOLS_DEBUG_DISCONNECT	src/win32/resource.h	711;"	d
ID_TOOLS_DEBUG_GDB	src/win32/resource.h	709;"	d
ID_TOOLS_DEBUG_LOADANDWAIT	src/win32/resource.h	710;"	d
ID_TOOLS_DISASSEMBLE	src/win32/resource.h	708;"	d
ID_TOOLS_IOVIEWER	src/win32/resource.h	794;"	d
ID_TOOLS_LOGGING	src/win32/resource.h	713;"	d
ID_TOOLS_MAPVIEW	src/win32/resource.h	699;"	d
ID_TOOLS_MEMORYVIEWER	src/win32/resource.h	703;"	d
ID_TOOLS_OAMVIEWER	src/win32/resource.h	704;"	d
ID_TOOLS_PALETTEVIEW	src/win32/resource.h	700;"	d
ID_TOOLS_PLAY_STARTMOVIEPLAYING	src/win32/resource.h	783;"	d
ID_TOOLS_PLAY_STOPMOVIEPLAYING	src/win32/resource.h	784;"	d
ID_TOOLS_RECORD_STARTAVIRECORDING	src/win32/resource.h	733;"	d
ID_TOOLS_RECORD_STARTMOVIERECORDING	src/win32/resource.h	781;"	d
ID_TOOLS_RECORD_STOPAVIRECORDING	src/win32/resource.h	734;"	d
ID_TOOLS_RECORD_STOPMOVIERECORDING	src/win32/resource.h	782;"	d
ID_TOOLS_REWIND	src/win32/resource.h	787;"	d
ID_TOOLS_TILEVIEWER	src/win32/resource.h	706;"	d
ID_USERINTERFACE_SKIN	src/win32/resource.h	854;"	d
ID_VIDEO_FULL	src/win32/resource.h	812;"	d
ID_VIDEO_SKIN	src/win32/resource.h	852;"	d
ID_VIDEO_WINDOWED	src/win32/resource.h	811;"	d
ID_VOID_MAIN	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	9;"	d	file:
IDisplay	src/win32/Display.h	/^  IDisplay() {};$/;"	f	class:IDisplay
IDisplay	src/win32/Display.h	/^class IDisplay {$/;"	c
IE	src/gba/Globals.cpp	/^u16 IE       = 0x0000;$/;"	v
IF	src/gba/Globals.cpp	/^u16 IF       = 0x0000;$/;"	v
IFBFilter	src/sdl/filters.h	/^enum IFBFilter { kIFBNone, kIBMotionBlur, kIBSmart, kInvalidIFBFilter };$/;"	g
IFBFilterDesc	src/sdl/filters.cpp	/^struct IFBFilterDesc {$/;"	s	file:
IFBFilterFunc	src/sdl/filters.h	/^typedef void(*IFBFilterFunc)(u8*, u32, int, int);$/;"	t
IFBFilters	src/sdl/filters.cpp	/^const IFBFilterDesc IFBFilters[] = {$/;"	v
IFB_MOTION_BLUR	src/wx/wxvbam.h	/^    IFB_NONE, IFB_SMART, IFB_MOTION_BLUR$/;"	e	enum:ifbfunc
IFB_NONE	src/wx/wxvbam.h	/^    IFB_NONE, IFB_SMART, IFB_MOTION_BLUR$/;"	e	enum:ifbfunc
IFB_SMART	src/wx/wxvbam.h	/^    IFB_NONE, IFB_SMART, IFB_MOTION_BLUR$/;"	e	enum:ifbfunc
IFF	src/gb/GB.cpp	/^u16 IFF = 0;$/;"	v
IFFv	src/wx/viewers.cpp	/^	wxControl *AFv, *BCv, *DEv, *HLv, *SPv, *PCv, *LYv, *IFFv;$/;"	m	class:Viewers::GBDisassembleViewer	file:
IF_BIT_0	fex/7z_C/Bcj2.c	29;"	d	file:
IF_BIT_0	fex/7z_C/LzmaDec.c	19;"	d	file:
IF_BIT_0_CHECK	fex/7z_C/LzmaDec.c	49;"	d	file:
ILookInStream	fex/7z_C/Types.h	/^} ILookInStream;$/;"	t	typeref:struct:__anon28
IMAGE_GB	src/Util.h	/^  IMAGE_GB      = 1$/;"	e	enum:IMAGE_TYPE
IMAGE_GBA	src/Util.h	/^  IMAGE_GBA     = 0,$/;"	e	enum:IMAGE_TYPE
IMAGE_TYPE	src/Util.h	/^enum IMAGE_TYPE {$/;"	g
IMAGE_UNKNOWN	src/Util.h	/^  IMAGE_UNKNOWN = -1,$/;"	e	enum:IMAGE_TYPE
IME	src/gba/Globals.cpp	/^u16 IME      = 0x0000;$/;"	v
IMemoryViewerDlg	src/win32/MemoryViewer.h	/^class IMemoryViewerDlg {$/;"	c
INCDIRS	src/libretro/Makefile	/^INCDIRS := -I$(VBA_DIR)$/;"	m
INCLUDE	src/libretro/msvc/msvc-2003-xbox1.bat	/^@set INCLUDE=%MSVCDir%\\ATLMFC\\INCLUDE;%MSVCDir%\\INCLUDE;%FrameworkSDKDir%\\include;%INCLUDE%;%XDK%\\xbox\\include$/;"	v
INCLUDE	src/libretro/msvc/msvc-2010-360.bat	/^@if exist "%VCINSTALLDIR%ATLMFC\\INCLUDE" set INCLUDE=%VCINSTALLDIR%ATLMFC\\INCLUDE;%INCLUDE%$/;"	v
INCLUDE	src/libretro/msvc/msvc-2010-360.bat	/^@if exist "%VCINSTALLDIR%INCLUDE" set INCLUDE=%VCINSTALLDIR%INCLUDE;%INCLUDE%$/;"	v
INCREMENT_VERSION	src/AutoBuild.h	24;"	d
INITIAL	src/sdl/expr-lex.cpp	488;"	d	file:
INSN_REGPARM	src/gba/GBAcpu.h	11;"	d
INSN_REGPARM	src/gba/GBAcpu.h	16;"	d
INSN_REGPARM	src/gba/GBAcpu.h	9;"	d
INT16_C	src/libretro/msvc/msvc-2003-xbox1/stdint.h	229;"	d
INT16_MAX	src/libretro/msvc/msvc-2003-xbox1/stdint.h	133;"	d
INT16_MAX	src/sdl/expr-lex.cpp	72;"	d	file:
INT16_MIN	src/libretro/msvc/msvc-2003-xbox1/stdint.h	132;"	d
INT16_MIN	src/sdl/expr-lex.cpp	63;"	d	file:
INT32_C	src/libretro/msvc/msvc-2003-xbox1/stdint.h	230;"	d
INT32_MAX	src/libretro/msvc/msvc-2003-xbox1/stdint.h	135;"	d
INT32_MAX	src/sdl/expr-lex.cpp	75;"	d	file:
INT32_MIN	src/libretro/msvc/msvc-2003-xbox1/stdint.h	134;"	d
INT32_MIN	src/sdl/expr-lex.cpp	66;"	d	file:
INT64_C	src/libretro/msvc/msvc-2003-xbox1/stdint.h	231;"	d
INT64_MAX	src/libretro/msvc/msvc-2003-xbox1/stdint.h	137;"	d
INT64_MIN	src/libretro/msvc/msvc-2003-xbox1/stdint.h	136;"	d
INT8_C	src/libretro/msvc/msvc-2003-xbox1/stdint.h	228;"	d
INT8_MAX	src/libretro/msvc/msvc-2003-xbox1/stdint.h	131;"	d
INT8_MAX	src/sdl/expr-lex.cpp	69;"	d	file:
INT8_MIN	src/libretro/msvc/msvc-2003-xbox1/stdint.h	130;"	d
INT8_MIN	src/sdl/expr-lex.cpp	60;"	d	file:
INTERPOLATE	src/filters/2xSaI.cpp	/^static inline u32 INTERPOLATE (u32 A, u32 B)$/;"	f	file:
INTERP_16_MASK_1	src/filters/interp.h	51;"	d
INTERP_16_MASK_2	src/filters/interp.h	52;"	d
INTERP_32_MASK_1	src/filters/interp.h	132;"	d
INTERP_32_MASK_2	src/filters/interp.h	133;"	d
INTERP_U_LIMIT	src/filters/interp.h	217;"	d
INTERP_V_LIMIT	src/filters/interp.h	218;"	d
INTERP_Y_LIMIT	src/filters/interp.h	216;"	d
INTMAX_C	src/libretro/msvc/msvc-2003-xbox1/stdint.h	239;"	d
INTMAX_MAX	src/libretro/msvc/msvc-2003-xbox1/stdint.h	184;"	d
INTMAX_MIN	src/libretro/msvc/msvc-2003-xbox1/stdint.h	183;"	d
INTOPT	src/wx/opts.cpp	15;"	d	file:
INTPTR_MAX	src/libretro/msvc/msvc-2003-xbox1/stdint.h	174;"	d
INTPTR_MAX	src/libretro/msvc/msvc-2003-xbox1/stdint.h	178;"	d
INTPTR_MIN	src/libretro/msvc/msvc-2003-xbox1/stdint.h	173;"	d
INTPTR_MIN	src/libretro/msvc/msvc-2003-xbox1/stdint.h	177;"	d
INT_16_BIT_WRITE	src/gba/Cheats.cpp	67;"	d	file:
INT_32_BIT_WRITE	src/gba/Cheats.cpp	68;"	d	file:
INT_8_BIT_WRITE	src/gba/Cheats.cpp	66;"	d	file:
INT_FAST16_MAX	src/libretro/msvc/msvc-2003-xbox1/stdint.h	161;"	d
INT_FAST16_MIN	src/libretro/msvc/msvc-2003-xbox1/stdint.h	160;"	d
INT_FAST32_MAX	src/libretro/msvc/msvc-2003-xbox1/stdint.h	163;"	d
INT_FAST32_MIN	src/libretro/msvc/msvc-2003-xbox1/stdint.h	162;"	d
INT_FAST64_MAX	src/libretro/msvc/msvc-2003-xbox1/stdint.h	165;"	d
INT_FAST64_MIN	src/libretro/msvc/msvc-2003-xbox1/stdint.h	164;"	d
INT_FAST8_MAX	src/libretro/msvc/msvc-2003-xbox1/stdint.h	159;"	d
INT_FAST8_MIN	src/libretro/msvc/msvc-2003-xbox1/stdint.h	158;"	d
INT_LEAST16_MAX	src/libretro/msvc/msvc-2003-xbox1/stdint.h	147;"	d
INT_LEAST16_MIN	src/libretro/msvc/msvc-2003-xbox1/stdint.h	146;"	d
INT_LEAST32_MAX	src/libretro/msvc/msvc-2003-xbox1/stdint.h	149;"	d
INT_LEAST32_MIN	src/libretro/msvc/msvc-2003-xbox1/stdint.h	148;"	d
INT_LEAST64_MAX	src/libretro/msvc/msvc-2003-xbox1/stdint.h	151;"	d
INT_LEAST64_MIN	src/libretro/msvc/msvc-2003-xbox1/stdint.h	150;"	d
INT_LEAST8_MAX	src/libretro/msvc/msvc-2003-xbox1/stdint.h	145;"	d
INT_LEAST8_MIN	src/libretro/msvc/msvc-2003-xbox1/stdint.h	144;"	d
IOData	src/win32/IOViewerRegs.h	/^struct IOData {$/;"	s
IOData	src/wx/ioregs.h	/^struct IOData {$/;"	s
IOViewer	src/win32/IOViewer.cpp	/^IOViewer::IOViewer(CWnd* pParent \/*=NULL*\/)$/;"	f	class:IOViewer
IOViewer	src/win32/IOViewer.h	/^class IOViewer : public ResizeDlg, IUpdateListener$/;"	c
IOViewer	src/wx/viewers.cpp	/^	IOViewer() : Viewer(wxT("IOViewer"))$/;"	f	class:Viewers::IOViewer
IOViewer	src/wx/viewers.cpp	/^    class IOViewer : public Viewer$/;"	c	namespace:Viewers	file:
IOViewer	src/wx/viewers.cpp	/^void MainFrame::IOViewer()$/;"	f	class:MainFrame
IPHostValidator	src/wx/guiinit.cpp	/^    IPHostValidator(const IPHostValidator &e) : wxValidator(), valp(e.valp) {}$/;"	f	class:IPHostValidator
IPHostValidator	src/wx/guiinit.cpp	/^    IPHostValidator(wxString *v) : wxValidator(), valp(v) {}$/;"	f	class:IPHostValidator
IPHostValidator	src/wx/guiinit.cpp	/^class IPHostValidator : public wxValidator$/;"	c	file:
IP_LINK_PORT	src/gba/GBALink.cpp	38;"	d	file:
IPpmd7_RangeDec	fex/7z_C/Ppmd7.h	/^} IPpmd7_RangeDec;$/;"	t	typeref:struct:__anon7
IRQTicks	src/gba/GBA.cpp	/^int IRQTicks = 0;$/;"	v
IS_BCJ2	fex/7z_C/7zDec.c	267;"	d	file:
IS_BIT_SET	src/gba/CheatSearch.h	40;"	d
IS_MAIN_METHOD	fex/7z_C/7zDec.c	/^static Bool IS_MAIN_METHOD(UInt32 m)$/;"	f	file:
IS_SUPPORTED_CODER	fex/7z_C/7zDec.c	/^static Bool IS_SUPPORTED_CODER(const CSzCoderInfo *c)$/;"	f	file:
ISeekInStream	fex/7z_C/Types.h	/^} ISeekInStream;$/;"	t	typeref:struct:__anon27
ISeqInStream	fex/7z_C/Types.h	/^} ISeqInStream;$/;"	t	typeref:struct:__anon24
ISeqOutStream	fex/7z_C/Types.h	/^} ISeqOutStream;$/;"	t	typeref:struct:__anon25
ISzAlloc	fex/7z_C/Types.h	/^} ISzAlloc;$/;"	t	typeref:struct:__anon33
IUpdateListener	src/win32/IUpdate.h	/^class IUpdateListener {$/;"	c
InIndex	fex/7z_C/7z.h	/^  UInt32 InIndex;$/;"	m	struct:__anon11
Indx2Units	fex/7z_C/Ppmd7.h	/^  Byte Indx2Units[PPMD_NUM_INDEXES];$/;"	m	struct:__anon6
Inflate	src/win32/WinHelper.h	/^      inline void Inflate( int cx, int cy )$/;"	f	class:WinHelper::CRect
Init	src/filters/interframe.cpp	/^static void Init()$/;"	f	file:
Init	src/gba/GBALink.cpp	/^bool lclient::Init(sf::IPAddress addr, ClientInfoDisplay *cid){$/;"	f	class:lclient
Init	src/gba/GBALink.cpp	/^bool lserver::Init(ServerInfoDisplay *sid){$/;"	f	class:lserver
Init	src/wx/guiinit.cpp	/^    void Init(wxShowEvent &ev)$/;"	f	class:AccelConfig_t
Init	src/wx/guiinit.cpp	/^    void Init(wxShowEvent &ev)$/;"	f	class:ThrottleCtrl_t
Init	src/wx/panel.cpp	/^void GLDrawingPanel::Init()$/;"	f	class:GLDrawingPanel
Init	src/wx/widgets/checkedlistctrl.cpp	/^bool wxCheckedListCtrl::Init()$/;"	f	class:wxCheckedListCtrl
InitBMP	src/wx/viewsupt.cpp	/^    bool PixView::InitBMP(int w, int h, ColorView *cv)$/;"	f	class:Viewers::PixView
InitCommands	src/win32/AccelEditor.cpp	/^void AccelEditor::InitCommands()$/;"	f	class:AccelEditor
InitEsc	fex/7z_C/Ppmd7.h	/^  unsigned OrderFall, InitEsc, PrevSuccess, MaxOrder, HiBitsFlag;$/;"	m	struct:__anon6
InitInstance	src/win32/VBA.cpp	/^BOOL VBA::InitInstance()$/;"	f	class:VBA
InitLUTs	src/filters/hq/asm/hq3x32.cpp	/^void InitLUTs(void)$/;"	f
InitLink	src/gba/GBALink.cpp	/^bool InitLink()$/;"	f
InitLink	src/gba/GBALink.h	/^inline bool InitLink() { return true; }$/;"	f
InitMore	src/wx/guiinit.cpp	/^bool MainFrame::InitMore(void)$/;"	f	class:MainFrame
InitRL	fex/7z_C/Ppmd7.h	/^  Int32 RunLength, InitRL; \/* must be 32-bit at least *\/$/;"	m	struct:__anon6
Init_2xSaI	src/filters/2xSaI.cpp	/^int Init_2xSaI(u32 BitFormat)$/;"	f
Init_2xSaIMMX	src/filters/2xSaImmx.asm	/^Init_2xSaIMMX:$/;"	l
Input	src/win32/Input.h	/^  Input() {};$/;"	f	class:Input
Input	src/win32/Input.h	/^class Input {$/;"	c
InsertItem	src/wx/widgets/checkedlistctrl.cpp	/^long wxCheckedListCtrl::InsertItem( long index, const wxString& label, int WXUNUSED(imageIndex) )$/;"	f	class:wxCheckedListCtrl
InsertItem	src/wx/widgets/checkedlistctrl.cpp	/^long wxCheckedListCtrl::InsertItem(wxListItem &info)$/;"	f	class:wxCheckedListCtrl
InsertNode	fex/7z_C/Ppmd7.c	/^static void InsertNode(CPpmd7 *p, void *node, unsigned indx)$/;"	f	file:
Int16	fex/7z_C/Types.h	/^typedef short Int16;$/;"	t
Int32	fex/7z_C/Types.h	/^typedef int Int32;$/;"	t
Int32	fex/7z_C/Types.h	/^typedef long Int32;$/;"	t
Int64	fex/7z_C/Types.h	/^typedef __int64 Int64;$/;"	t
Int64	fex/7z_C/Types.h	/^typedef long Int64;$/;"	t
Int64	fex/7z_C/Types.h	/^typedef long long int Int64;$/;"	t
IntEnd	src/win32/glfont.h	/^	int IntStart, IntEnd;$/;"	m	struct:__anon69
IntStart	src/win32/glfont.h	/^	int IntStart, IntEnd;$/;"	m	struct:__anon69
InterframeCleanup	src/filters/interframe.cpp	/^void InterframeCleanup()$/;"	f
Interp1	src/filters/hq/c/hq_base.h	36;"	d
Interp1	src/filters/hq/c/hq_base.h	442;"	d
Interp1	src/filters/hq/c/hq_base.h	51;"	d
Interp1_16	src/filters/hq/c/hq_shared.h	268;"	d
Interp1_32	src/filters/hq/c/hq_shared.h	78;"	d
Interp2	src/filters/hq/c/hq_base.h	37;"	d
Interp2	src/filters/hq/c/hq_base.h	443;"	d
Interp2	src/filters/hq/c/hq_base.h	52;"	d
Interp2_16	src/filters/hq/c/hq_shared.h	288;"	d
Interp2_32	src/filters/hq/c/hq_shared.h	98;"	d
Interp3	src/filters/hq/c/hq_base.h	38;"	d
Interp3	src/filters/hq/c/hq_base.h	444;"	d
Interp3	src/filters/hq/c/hq_base.h	53;"	d
Interp3_16	src/filters/hq/c/hq_shared.h	310;"	d
Interp3_32	src/filters/hq/c/hq_shared.h	120;"	d
Interp4	src/filters/hq/c/hq_base.h	39;"	d
Interp4	src/filters/hq/c/hq_base.h	445;"	d
Interp4	src/filters/hq/c/hq_base.h	54;"	d
Interp4_16	src/filters/hq/c/hq_shared.h	330;"	d
Interp4_32	src/filters/hq/c/hq_shared.h	140;"	d
Interp5	src/filters/hq/c/hq_base.h	40;"	d
Interp5	src/filters/hq/c/hq_base.h	446;"	d
Interp5	src/filters/hq/c/hq_base.h	55;"	d
Interp5_16	src/filters/hq/c/hq_shared.h	343;"	d
Interp5_32	src/filters/hq/c/hq_shared.h	153;"	d
Interp6	src/filters/hq/c/hq_base.h	41;"	d
Interp6	src/filters/hq/c/hq_base.h	447;"	d
Interp6	src/filters/hq/c/hq_base.h	56;"	d
Interp6_16	src/filters/hq/c/hq_shared.h	363;"	d
Interp6_32	src/filters/hq/c/hq_shared.h	173;"	d
Interp7	src/filters/hq/c/hq_base.h	42;"	d
Interp7	src/filters/hq/c/hq_base.h	448;"	d
Interp7	src/filters/hq/c/hq_base.h	57;"	d
Interp7_16	src/filters/hq/c/hq_shared.h	385;"	d
Interp7_32	src/filters/hq/c/hq_shared.h	195;"	d
Interp8	src/filters/hq/c/hq_base.h	43;"	d
Interp8	src/filters/hq/c/hq_base.h	449;"	d
Interp8	src/filters/hq/c/hq_base.h	58;"	d
Interp8_16	src/filters/hq/c/hq_shared.h	407;"	d
Interp8_32	src/filters/hq/c/hq_shared.h	217;"	d
Intersect	src/win32/WinHelper.h	/^      inline bool Intersect( const RECT &rc ) const { return ( rc.left < right && rc.right > left && rc.top < bottom && rc.bottom > top ); }$/;"	f	class:WinHelper::CRect
IsAltPressed	src/win32/WinHelper.h	/^  inline bool IsAltPressed()$/;"	f	namespace:WinHelper
IsAnti	fex/7z_C/7z.h	/^  Byte IsAnti;$/;"	m	struct:__anon14
IsAutoSave	src/win32/AcceleratorManager.h	/^  bool IsAutoSave() {return m_bAutoSave;}$/;"	f	class:CAcceleratorManager
IsChecked	src/wx/widgets/wx/checkedlistctrl.h	/^	bool IsChecked(long item) const$/;"	f	class:wxCheckedListCtrl
IsControlPressed	src/win32/WinHelper.h	/^  inline bool IsControlPressed()$/;"	f	namespace:WinHelper
IsDefaultTableAvailable	src/win32/AcceleratorManager.h	/^  bool IsDefaultTableAvailable() {return m_bDefaultTable;}$/;"	f	class:CAcceleratorManager
IsDir	fex/7z_C/7z.h	/^  Byte IsDir;$/;"	m	struct:__anon14
IsEmpty	src/win32/WinHelper.h	/^      inline bool IsEmpty() const { return left == 0 && right == 0 && top == 0 && bottom == 0 ? true : false; }$/;"	f	class:WinHelper::CRect
IsEnabled	src/wx/widgets/wx/checkedlistctrl.h	/^	bool IsEnabled() const$/;"	f	class:wxCheckedListCtrl
IsEnabled	src/wx/widgets/wx/checkedlistctrl.h	/^	bool IsEnabled(long item) const$/;"	f	class:wxCheckedListCtrl
IsEqual	src/win32/CmdAccelOb.cpp	/^bool CAccelsOb::IsEqual(WORD wKey, bool bCtrl, bool bAlt, bool bShift)$/;"	f	class:CAccelsOb
IsFullScreen	src/wx/wxvbam.h	/^    bool IsFullScreen() { return fullscreen; }$/;"	f	class:GameArea
IsJ	fex/7z_C/Bcj2.c	13;"	d	file:
IsJcc	fex/7z_C/Bcj2.c	12;"	d	file:
IsMapStringCommandsEmpty	src/win32/AcceleratorManager.h	/^  bool IsMapStringCommandsEmpty() {$/;"	f	class:CAcceleratorManager
IsMatch	fex/7z_C/LzmaDec.c	94;"	d	file:
IsPaused	src/wx/wxvbam.h	/^    bool IsPaused(bool incendental = false)$/;"	f	class:MainFrame
IsRecording	src/common/ffmpeg.h	/^    bool IsRecording() { return oc != NULL; }$/;"	f	class:MediaRecorder
IsRecording	src/wx/wxvbam.h	/^    bool IsRecording() { return snd_rec.IsRecording() || vid_rec.IsRecording(); }$/;"	f	class:GameArea
IsRep	fex/7z_C/LzmaDec.c	95;"	d	file:
IsRep0Long	fex/7z_C/LzmaDec.c	99;"	d	file:
IsRepG0	fex/7z_C/LzmaDec.c	96;"	d	file:
IsRepG1	fex/7z_C/LzmaDec.c	97;"	d	file:
IsRepG2	fex/7z_C/LzmaDec.c	98;"	d	file:
IsShiftPressed	src/win32/WinHelper.h	/^  inline bool IsShiftPressed()$/;"	f	namespace:WinHelper
IsTabEnabled	src/win32/LinkOptions.cpp	/^BOOL CMyTabCtrl::IsTabEnabled(int iTab)$/;"	f	class:CMyTabCtrl
JOYBUS	src/gba/GBALink.h	13;"	d
JOYCNT_INT_ENABLE	src/gba/GBALink.h	44;"	d
JOYCNT_RECV_COMPLETE	src/gba/GBALink.h	42;"	d
JOYCNT_RESET	src/gba/GBALink.h	41;"	d
JOYCNT_SEND_COMPLETE	src/gba/GBALink.h	43;"	d
JOYCONFIG_MESSAGE	src/win32/Input.h	5;"	d
JOYEVT_H	src/wx/widgets/wx/sdljoy.h	2;"	d
JOYPAD	src/win32/Input.h	10;"	d
JOYPADS	src/win32/Input.h	6;"	d
JOYSTAT_RECV	src/gba/GBALink.h	38;"	d
JOYSTAT_SEND	src/gba/GBALink.h	39;"	d
JOY_CMD_READ	src/gba/GBALink.h	/^	JOY_CMD_READ	= 0x14,$/;"	e	enum:__anon44
JOY_CMD_RESET	src/gba/GBALink.h	/^	JOY_CMD_RESET	= 0xff,$/;"	e	enum:__anon44
JOY_CMD_STATUS	src/gba/GBALink.h	/^	JOY_CMD_STATUS	= 0x00,$/;"	e	enum:__anon44
JOY_CMD_WRITE	src/gba/GBALink.h	/^	JOY_CMD_WRITE	= 0x15		$/;"	e	enum:__anon44
JoyBusConnect	src/gba/GBALink.cpp	/^void JoyBusConnect()$/;"	f
JoyBusConnect	src/gba/GBALink.h	/^inline void JoyBusConnect() { }$/;"	f
JoyBusShutdown	src/gba/GBALink.cpp	/^void JoyBusShutdown()$/;"	f
JoyBusShutdown	src/gba/GBALink.h	/^inline void JoyBusShutdown() { }$/;"	f
JoyBusUpdate	src/gba/GBALink.cpp	/^void JoyBusUpdate(int ticks)$/;"	f
JoyBusUpdate	src/gba/GBALink.h	/^inline void JoyBusUpdate(int) { }$/;"	f
JoyPadConfigHandler	src/wx/guiinit.cpp	/^} JoyPadConfigHandler[4];$/;"	v	typeref:class:JoyPadConfig_t	file:
JoyPadConfig_t	src/wx/guiinit.cpp	/^static class JoyPadConfig_t : public wxEvtHandler$/;"	c	file:
JoybusOptions	src/win32/JoybusOptions.cpp	/^JoybusOptions::JoybusOptions(CWnd* pParent \/*=NULL*\/)$/;"	f	class:JoybusOptions
JoybusOptions	src/win32/JoybusOptions.h	/^class JoybusOptions : public CDialog$/;"	c
JoypadConfig	src/win32/Joypad.cpp	/^JoypadConfig::JoypadConfig(int w, CWnd* pParent \/*=NULL*\/)$/;"	f	class:JoypadConfig
JoypadConfig	src/win32/Joypad.h	/^class JoypadConfig : public CDialog$/;"	c
JoypadConfigButtons	src/wx/guiinit.cpp	/^    void JoypadConfigButtons(wxCommandEvent &ev) {$/;"	f	class:JoyPadConfig_t
JoypadConfigDialog	src/gtk/joypadconfig.cpp	/^JoypadConfigDialog::JoypadConfigDialog(Config::Section * _poConfig) :$/;"	f	class:VBA::JoypadConfigDialog
JoypadConfigDialog	src/gtk/joypadconfig.h	/^class JoypadConfigDialog : public Gtk::Dialog$/;"	c	namespace:VBA
JoypadEditControl	src/win32/Joypad.cpp	/^JoypadEditControl::JoypadEditControl()$/;"	f	class:JoypadEditControl
JoypadEditControl	src/win32/Joypad.h	/^class JoypadEditControl : public CEdit$/;"	c
KEYDOWN	src/win32/DirectInput.cpp	277;"	d	file:
KEYM_A	src/wx/wxvbam.h	540;"	d
KEYM_AUTO_A	src/wx/wxvbam.h	557;"	d
KEYM_AUTO_B	src/wx/wxvbam.h	558;"	d
KEYM_B	src/wx/wxvbam.h	541;"	d
KEYM_CAPTURE	src/wx/wxvbam.h	551;"	d
KEYM_DOWN	src/wx/wxvbam.h	547;"	d
KEYM_GS	src/wx/wxvbam.h	552;"	d
KEYM_L	src/wx/wxvbam.h	549;"	d
KEYM_LEFT	src/wx/wxvbam.h	545;"	d
KEYM_MOTION_DOWN	src/wx/wxvbam.h	560;"	d
KEYM_MOTION_LEFT	src/wx/wxvbam.h	561;"	d
KEYM_MOTION_RIGHT	src/wx/wxvbam.h	562;"	d
KEYM_MOTION_UP	src/wx/wxvbam.h	559;"	d
KEYM_R	src/wx/wxvbam.h	548;"	d
KEYM_RIGHT	src/wx/wxvbam.h	544;"	d
KEYM_SELECT	src/wx/wxvbam.h	542;"	d
KEYM_SPEED	src/wx/wxvbam.h	550;"	d
KEYM_START	src/wx/wxvbam.h	543;"	d
KEYM_UP	src/wx/wxvbam.h	546;"	d
KEYOF	src/win32/Input.h	13;"	d
KEYS_PER_PAD	src/win32/Input.h	8;"	d
KEY_BUTTON_A	src/sdl/inputSDL.h	/^    KEY_BUTTON_A,$/;"	e	enum:EKey
KEY_BUTTON_A	src/win32/Input.h	/^  KEY_BUTTON_A, KEY_BUTTON_B,$/;"	e	enum:__anon63
KEY_BUTTON_AUTO_A	src/sdl/inputSDL.h	/^    KEY_BUTTON_AUTO_A,$/;"	e	enum:EKey
KEY_BUTTON_AUTO_B	src/sdl/inputSDL.h	/^    KEY_BUTTON_AUTO_B$/;"	e	enum:EKey
KEY_BUTTON_B	src/sdl/inputSDL.h	/^    KEY_BUTTON_B,$/;"	e	enum:EKey
KEY_BUTTON_B	src/win32/Input.h	/^  KEY_BUTTON_A, KEY_BUTTON_B,$/;"	e	enum:__anon63
KEY_BUTTON_CAPTURE	src/sdl/inputSDL.h	/^    KEY_BUTTON_CAPTURE,$/;"	e	enum:EKey
KEY_BUTTON_CAPTURE	src/win32/Input.h	/^  KEY_BUTTON_SPEED, KEY_BUTTON_CAPTURE,$/;"	e	enum:__anon63
KEY_BUTTON_GS	src/win32/Input.h	/^  KEY_BUTTON_GS$/;"	e	enum:__anon63
KEY_BUTTON_L	src/sdl/inputSDL.h	/^    KEY_BUTTON_L,$/;"	e	enum:EKey
KEY_BUTTON_L	src/win32/Input.h	/^  KEY_BUTTON_L, KEY_BUTTON_R,$/;"	e	enum:__anon63
KEY_BUTTON_R	src/sdl/inputSDL.h	/^    KEY_BUTTON_R,$/;"	e	enum:EKey
KEY_BUTTON_R	src/win32/Input.h	/^  KEY_BUTTON_L, KEY_BUTTON_R,$/;"	e	enum:__anon63
KEY_BUTTON_SELECT	src/sdl/inputSDL.h	/^    KEY_BUTTON_SELECT,$/;"	e	enum:EKey
KEY_BUTTON_SELECT	src/win32/Input.h	/^  KEY_BUTTON_START, KEY_BUTTON_SELECT,$/;"	e	enum:__anon63
KEY_BUTTON_SPEED	src/sdl/inputSDL.h	/^    KEY_BUTTON_SPEED,$/;"	e	enum:EKey
KEY_BUTTON_SPEED	src/win32/Input.h	/^  KEY_BUTTON_SPEED, KEY_BUTTON_CAPTURE,$/;"	e	enum:__anon63
KEY_BUTTON_START	src/sdl/inputSDL.h	/^    KEY_BUTTON_START,$/;"	e	enum:EKey
KEY_BUTTON_START	src/win32/Input.h	/^  KEY_BUTTON_START, KEY_BUTTON_SELECT,$/;"	e	enum:__anon63
KEY_DOWN	src/sdl/inputSDL.h	/^    KEY_DOWN,$/;"	e	enum:EKey
KEY_DOWN	src/win32/Input.h	/^  KEY_UP, KEY_DOWN,$/;"	e	enum:__anon63
KEY_LEFT	src/sdl/inputSDL.h	/^    KEY_LEFT,$/;"	e	enum:EKey
KEY_LEFT	src/win32/Input.h	/^  KEY_LEFT, KEY_RIGHT,$/;"	e	enum:__anon63
KEY_RIGHT	src/sdl/inputSDL.h	/^    KEY_RIGHT,$/;"	e	enum:EKey
KEY_RIGHT	src/win32/Input.h	/^  KEY_LEFT, KEY_RIGHT,$/;"	e	enum:__anon63
KEY_UP	src/sdl/inputSDL.h	/^    KEY_UP,$/;"	e	enum:EKey
KEY_UP	src/win32/Input.h	/^  KEY_UP, KEY_DOWN,$/;"	e	enum:__anon63
KONST	src/gba/GBA-arm.cpp	301;"	d	file:
KONST	src/gba/GBA-arm.cpp	334;"	d	file:
K_fCpuSpeed	src/win32/VBA.cpp	/^  float					K_fCpuSpeed = 100.0f; \/\/ was 98.0f before, but why?$/;"	m	namespace:Sm60FPS	file:
K_fDT	src/win32/VBA.cpp	/^  float					K_fDT = 1000.0f \/ K_fTargetFps;$/;"	m	namespace:Sm60FPS	file:
K_fTargetFps	src/win32/VBA.cpp	/^  float					K_fTargetFps = 60.0f * K_fCpuSpeed \/ 100;$/;"	m	namespace:Sm60FPS	file:
KeyEvent	src/wx/viewsupt.cpp	/^    void MemView::KeyEvent(wxKeyEvent &ev)$/;"	f	class:Viewers::MemView
KeyList	src/win32/Input.h	/^typedef CList<LONG_PTR,LONG_PTR> KeyList;$/;"	t
KeyNotFound	src/gtk/configfile.h	/^  KeyNotFound(const std::string & _rsSection, const std::string & _rsKey) :$/;"	f	class:VBA::Config::KeyNotFound
KeyNotFound	src/gtk/configfile.h	/^class KeyNotFound : public NotFound$/;"	c	namespace:VBA::Config
KeySel	src/wx/guiinit.cpp	/^    void KeySel(wxCommandEvent &ev)$/;"	f	class:AccelConfig_t
LABEL	src/gba/GBA-arm.cpp	309;"	d	file:
LABEL	src/gba/GBA-arm.cpp	339;"	d	file:
LABELREF	src/gba/GBA-arm.cpp	310;"	d	file:
LABELREF	src/gba/GBA-arm.cpp	340;"	d	file:
LANLINKDATA	src/gba/GBALink.h	/^} LANLINKDATA;$/;"	t	typeref:struct:__anon46
LDM_ALL	src/gba/GBA-arm.cpp	2090;"	d	file:
LDM_ALL_2	src/gba/GBA-arm.cpp	2116;"	d	file:
LDM_ALL_2B	src/gba/GBA-arm.cpp	2130;"	d	file:
LDM_HIGH	src/gba/GBA-arm.cpp	2053;"	d	file:
LDM_HIGH_2	src/gba/GBA-arm.cpp	2061;"	d	file:
LDM_LOW	src/gba/GBA-arm.cpp	2044;"	d	file:
LDM_REG	src/gba/GBA-arm.cpp	1974;"	d	file:
LDR	src/gba/GBA-arm.cpp	1563;"	d	file:
LDRSTR_INIT	src/gba/GBA-arm.cpp	1548;"	d	file:
LDR_POSTDEC	src/gba/GBA-arm.cpp	1593;"	d	file:
LDR_POSTINC	src/gba/GBA-arm.cpp	1595;"	d	file:
LDR_PREDEC	src/gba/GBA-arm.cpp	1597;"	d	file:
LDR_PREDEC_WB	src/gba/GBA-arm.cpp	1599;"	d	file:
LDR_PREINC	src/gba/GBA-arm.cpp	1601;"	d	file:
LDR_PREINC_WB	src/gba/GBA-arm.cpp	1603;"	d	file:
LIB	src/libretro/msvc/msvc-2003-xbox1.bat	/^@set LIB=%MSVCDir%\\ATLMFC\\LIB;%MSVCDir%\\LIB;%MSVCDir%\\PlatformSDK\\lib;%XDK%\\lib;%XDK%\\xbox\\lib;%LIB%$/;"	v
LIB	src/libretro/msvc/msvc-2010-360.bat	/^@if exist "%VCINSTALLDIR%ATLMFC\\LIB" set LIB=%VCINSTALLDIR%ATLMFC\\LIB;%LIB%$/;"	v
LIB	src/libretro/msvc/msvc-2010-360.bat	/^@if exist "%VCINSTALLDIR%LIB" set LIB=%VCINSTALLDIR%LIB;%LIB%$/;"	v
LIBPATH	src/libretro/msvc/msvc-2010-360.bat	/^@if exist "%VCINSTALLDIR%ATLMFC\\LIB" set LIBPATH=%VCINSTALLDIR%ATLMFC\\LIB;%LIBPATH%$/;"	v
LIBPATH	src/libretro/msvc/msvc-2010-360.bat	/^@if exist "%VCINSTALLDIR%LIB" set LIBPATH=%VCINSTALLDIR%LIB;%LIBPATH%$/;"	v
LIBPATH	src/libretro/msvc/msvc-2010-360.bat	/^@set LIBPATH=%FrameworkDir%%Framework35Version%;%LIBPATH%$/;"	v
LIBPATH	src/libretro/msvc/msvc-2010-360.bat	/^@set LIBPATH=%FrameworkDir%%FrameworkVersion%;%LIBPATH%$/;"	v
LIBRETRO_H__	src/libretro/libretro.h	2;"	d
LIBS	src/libretro/Makefile	/^LIBS :=$/;"	m
LIKELY	src/gba/GBAcpu.h	13;"	d
LIKELY	src/gba/GBAcpu.h	17;"	d
LINKDATA	src/gba/GBALink.h	/^} LINKDATA;$/;"	t	typeref:struct:__anon45
LIRCConfigInfo	src/sdl/SDL.cpp	/^static struct lirc_config *LIRCConfigInfo;$/;"	v	typeref:struct:lirc_config	file:
LIRCEnabled	src/sdl/SDL.cpp	/^bool LIRCEnabled = false;$/;"	v
LIRCfd	src/sdl/SDL.cpp	/^int  LIRCfd = 0;$/;"	v
LOAD	src/gb/gbSound.cpp	249;"	d	file:
LOAD	src/gba/Sound.cpp	592;"	d	file:
LOAD_C_FLAG_NO	src/gba/GBA-arm.cpp	398;"	d	file:
LOAD_C_FLAG_YES	src/gba/GBA-arm.cpp	397;"	d	file:
LOCAL_ARM_MODE	src/libretro/jni/Android.mk	/^LOCAL_ARM_MODE := arm$/;"	m
LOCAL_CFLAGS	src/libretro/jni/Android.mk	/^LOCAL_CFLAGS = -O3 -DINLINE=inline -DHAVE_STDINT_H -DHAVE_INTTYPES_H -DLSB_FIRST -D__LIBRETRO__ -DFINAL_VERSION -DC_CORE -DUSE_GBA_ONLY -DNO_LINK -DFRONTEND_SUPPORTS_RGB565 -DTILED_RENDERING$/;"	m
LOCAL_C_INCLUDES	src/libretro/jni/Android.mk	/^LOCAL_C_INCLUDES = $(VBADIR)$/;"	m
LOCAL_LINK_NAME	src/gba/GBALink.cpp	37;"	d	file:
LOCAL_MODULE	src/libretro/jni/Android.mk	/^LOCAL_MODULE    := libretro$/;"	m
LOCAL_PATH	src/libretro/jni/Android.mk	/^LOCAL_PATH := $(call my-dir)$/;"	m
LOCAL_SRC_FILES	src/libretro/jni/Android.mk	/^LOCAL_SRC_FILES    = $(VBADIR)\/gba\/agbprint.cpp \\$/;"	m
LOCATION_memory	src/gba/elf.h	/^  LOCATION_memory,$/;"	e	enum:LocationType
LOCATION_register	src/gba/elf.h	/^  LOCATION_register,$/;"	e	enum:LocationType
LOCATION_value	src/gba/elf.h	/^  LOCATION_value$/;"	e	enum:LocationType
LPALBUFFERDATA	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALBUFFERDATA)( ALuint bid, ALenum format, const ALvoid* data, ALsizei size, ALsizei freq );$/;"	t
LPALCCLOSEDEVICE	src/win32/LoadOAL.h	/^typedef ALCboolean     (ALCAPIENTRY *LPALCCLOSEDEVICE)( ALCdevice *device );$/;"	t
LPALCCLOSEDEVICE	src/wx/openal.h	/^typedef ALCboolean     (ALC_APIENTRY *LPALCCLOSEDEVICE)( ALCdevice *device );$/;"	t
LPALCCREATECONTEXT	src/win32/LoadOAL.h	/^typedef ALCcontext *   (ALCAPIENTRY *LPALCCREATECONTEXT) (ALCdevice *device, const ALCint *attrlist);$/;"	t
LPALCCREATECONTEXT	src/wx/openal.h	/^typedef ALCcontext *   (ALC_APIENTRY *LPALCCREATECONTEXT) (ALCdevice *device, const ALCint *attrlist);$/;"	t
LPALCDESTROYCONTEXT	src/win32/LoadOAL.h	/^typedef void           (ALCAPIENTRY *LPALCDESTROYCONTEXT)( ALCcontext *context );$/;"	t
LPALCDESTROYCONTEXT	src/wx/openal.h	/^typedef void           (ALC_APIENTRY *LPALCDESTROYCONTEXT)( ALCcontext *context );$/;"	t
LPALCGETCONTEXTSDEVICE	src/win32/LoadOAL.h	/^typedef ALCdevice *    (ALCAPIENTRY *LPALCGETCONTEXTSDEVICE)( ALCcontext *context );$/;"	t
LPALCGETCURRENTCONTEXT	src/win32/LoadOAL.h	/^typedef ALCcontext *   (ALCAPIENTRY *LPALCGETCURRENTCONTEXT)( ALCvoid );$/;"	t
LPALCGETENUMVALUE	src/win32/LoadOAL.h	/^typedef ALCenum        (ALCAPIENTRY *LPALCGETENUMVALUE)(ALCdevice *device, const ALCchar *enumname );$/;"	t
LPALCGETERROR	src/win32/LoadOAL.h	/^typedef ALCenum        (ALCAPIENTRY *LPALCGETERROR)( ALCdevice *device );$/;"	t
LPALCGETINTEGERV	src/win32/LoadOAL.h	/^typedef void           (ALCAPIENTRY *LPALCGETINTEGERV)( ALCdevice *device, ALCenum param, ALCsizei size, ALCint *dest );$/;"	t
LPALCGETPROCADDRESS	src/win32/LoadOAL.h	/^typedef void *         (ALCAPIENTRY *LPALCGETPROCADDRESS)(ALCdevice *device, const ALCchar *funcname );$/;"	t
LPALCGETSTRING	src/win32/LoadOAL.h	/^typedef const ALCchar* (ALCAPIENTRY *LPALCGETSTRING)( ALCdevice *device, ALCenum param );$/;"	t
LPALCGETSTRING	src/wx/openal.h	/^typedef const ALCchar* (ALC_APIENTRY *LPALCGETSTRING)( ALCdevice *device, ALCenum param );$/;"	t
LPALCISEXTENSIONPRESENT	src/win32/LoadOAL.h	/^typedef ALCboolean     (ALCAPIENTRY *LPALCISEXTENSIONPRESENT)( ALCdevice *device, const ALCchar *extname );$/;"	t
LPALCISEXTENSIONPRESENT	src/wx/openal.h	/^typedef ALCboolean     (ALC_APIENTRY *LPALCISEXTENSIONPRESENT)( ALCdevice *device, const ALCchar *extname );$/;"	t
LPALCMAKECONTEXTCURRENT	src/win32/LoadOAL.h	/^typedef ALCboolean     (ALCAPIENTRY *LPALCMAKECONTEXTCURRENT)( ALCcontext *context );$/;"	t
LPALCMAKECONTEXTCURRENT	src/wx/openal.h	/^typedef ALCboolean     (ALC_APIENTRY *LPALCMAKECONTEXTCURRENT)( ALCcontext *context );$/;"	t
LPALCOPENDEVICE	src/win32/LoadOAL.h	/^typedef ALCdevice *    (ALCAPIENTRY *LPALCOPENDEVICE)( const ALCchar *devicename );$/;"	t
LPALCOPENDEVICE	src/wx/openal.h	/^typedef ALCdevice *    (ALC_APIENTRY *LPALCOPENDEVICE)( const ALCchar *devicename );$/;"	t
LPALCPROCESSCONTEXT	src/win32/LoadOAL.h	/^typedef void           (ALCAPIENTRY *LPALCPROCESSCONTEXT)( ALCcontext *context );$/;"	t
LPALCSUSPENDCONTEXT	src/win32/LoadOAL.h	/^typedef void           (ALCAPIENTRY *LPALCSUSPENDCONTEXT)( ALCcontext *context );$/;"	t
LPALDELETEBUFFERS	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALDELETEBUFFERS)( ALsizei n, const ALuint* buffers );$/;"	t
LPALDELETESOURCES	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALDELETESOURCES)( ALsizei n, const ALuint* sources );$/;"	t
LPALDISABLE	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALDISABLE)( ALenum capability );$/;"	t
LPALDISTANCEMODEL	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALDISTANCEMODEL)( ALenum distanceModel );$/;"	t
LPALDOPPLERFACTOR	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALDOPPLERFACTOR)( ALfloat value );$/;"	t
LPALDOPPLERVELOCITY	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALDOPPLERVELOCITY)( ALfloat value );$/;"	t
LPALENABLE	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALENABLE)( ALenum capability );$/;"	t
LPALGENBUFFERS	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALGENBUFFERS)( ALsizei n, ALuint* buffers );$/;"	t
LPALGENSOURCES	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALGENSOURCES)( ALsizei n, ALuint* sources );$/;"	t
LPALGETBOOLEAN	src/win32/LoadOAL.h	/^typedef ALboolean      (ALAPIENTRY *LPALGETBOOLEAN)( ALenum param );$/;"	t
LPALGETBOOLEANV	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALGETBOOLEANV)( ALenum param, ALboolean* data );$/;"	t
LPALGETBUFFERF	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALGETBUFFERF)( ALuint bid, ALenum param, ALfloat* value );$/;"	t
LPALGETBUFFERI	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALGETBUFFERI)( ALuint bid, ALenum param, ALint* value );$/;"	t
LPALGETDOUBLE	src/win32/LoadOAL.h	/^typedef ALdouble       (ALAPIENTRY *LPALGETDOUBLE)( ALenum param );$/;"	t
LPALGETDOUBLEV	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALGETDOUBLEV)( ALenum param, ALdouble* data );$/;"	t
LPALGETENUMVALUE	src/win32/LoadOAL.h	/^typedef ALenum         (ALAPIENTRY *LPALGETENUMVALUE)( const ALchar* ename );$/;"	t
LPALGETERROR	src/win32/LoadOAL.h	/^typedef ALenum         (ALAPIENTRY *LPALGETERROR)( void );$/;"	t
LPALGETFLOAT	src/win32/LoadOAL.h	/^typedef ALfloat        (ALAPIENTRY *LPALGETFLOAT)( ALenum param );$/;"	t
LPALGETFLOATV	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALGETFLOATV)( ALenum param, ALfloat* data );$/;"	t
LPALGETINTEGER	src/win32/LoadOAL.h	/^typedef ALint          (ALAPIENTRY *LPALGETINTEGER)( ALenum param );$/;"	t
LPALGETINTEGERV	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALGETINTEGERV)( ALenum param, ALint* data );$/;"	t
LPALGETLISTENER3F	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALGETLISTENER3F)( ALenum param, ALfloat *value1, ALfloat *value2, ALfloat *value3 );$/;"	t
LPALGETLISTENERF	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALGETLISTENERF)( ALenum param, ALfloat* value );$/;"	t
LPALGETLISTENERFV	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALGETLISTENERFV)( ALenum param, ALfloat* values );$/;"	t
LPALGETLISTENERI	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALGETLISTENERI)( ALenum param, ALint* value );$/;"	t
LPALGETPROCADDRESS	src/win32/LoadOAL.h	/^typedef void*          (ALAPIENTRY *LPALGETPROCADDRESS)( const ALchar* fname );$/;"	t
LPALGETSOURCE3F	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALGETSOURCE3F)( ALuint sid, ALenum param, ALfloat* value1, ALfloat* value2, ALfloat* value3);$/;"	t
LPALGETSOURCEF	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALGETSOURCEF)( ALuint sid, ALenum param, ALfloat* value );$/;"	t
LPALGETSOURCEFV	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALGETSOURCEFV)( ALuint sid, ALenum param, ALfloat* values );$/;"	t
LPALGETSOURCEI	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALGETSOURCEI)( ALuint sid, ALenum param, ALint* value );$/;"	t
LPALGETSTRING	src/win32/LoadOAL.h	/^typedef const ALchar*  (ALAPIENTRY *LPALGETSTRING)( ALenum param );$/;"	t
LPALISBUFFER	src/win32/LoadOAL.h	/^typedef ALboolean      (ALAPIENTRY *LPALISBUFFER)( ALuint bid );$/;"	t
LPALISENABLED	src/win32/LoadOAL.h	/^typedef ALboolean      (ALAPIENTRY *LPALISENABLED)( ALenum capability );$/;"	t
LPALISEXTENSIONPRESENT	src/win32/LoadOAL.h	/^typedef ALboolean      (ALAPIENTRY *LPALISEXTENSIONPRESENT)(const ALchar* extname );$/;"	t
LPALISSOURCE	src/win32/LoadOAL.h	/^typedef ALboolean      (ALAPIENTRY *LPALISSOURCE)( ALuint sid );$/;"	t
LPALLISTENER3F	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALLISTENER3F)( ALenum param, ALfloat value1, ALfloat value2, ALfloat value3 );$/;"	t
LPALLISTENERF	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALLISTENERF)( ALenum param, ALfloat value );$/;"	t
LPALLISTENERFV	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALLISTENERFV)( ALenum param, const ALfloat* values );$/;"	t
LPALLISTENERI	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALLISTENERI)( ALenum param, ALint value );$/;"	t
LPALSOURCE3F	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALSOURCE3F)( ALuint sid, ALenum param, ALfloat value1, ALfloat value2, ALfloat value3 );$/;"	t
LPALSOURCEF	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALSOURCEF)( ALuint sid, ALenum param, ALfloat value);$/;"	t
LPALSOURCEFV	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALSOURCEFV)( ALuint sid, ALenum param, const ALfloat* values );$/;"	t
LPALSOURCEI	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALSOURCEI)( ALuint sid, ALenum param, ALint value);$/;"	t
LPALSOURCEPAUSE	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALSOURCEPAUSE)( ALuint sid );$/;"	t
LPALSOURCEPAUSEV	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALSOURCEPAUSEV)( ALsizei ns, const ALuint *sids );$/;"	t
LPALSOURCEPLAY	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALSOURCEPLAY)( ALuint sid );$/;"	t
LPALSOURCEPLAYV	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALSOURCEPLAYV)( ALsizei ns, const ALuint *sids );$/;"	t
LPALSOURCEQUEUEBUFFERS	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALSOURCEQUEUEBUFFERS)(ALuint sid, ALsizei numEntries, const ALuint *bids );$/;"	t
LPALSOURCEREWIND	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALSOURCEREWIND)( ALuint sid );$/;"	t
LPALSOURCEREWINDV	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALSOURCEREWINDV)( ALsizei ns, const ALuint *sids );$/;"	t
LPALSOURCESTOP	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALSOURCESTOP)( ALuint sid );$/;"	t
LPALSOURCESTOPV	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALSOURCESTOPV)( ALsizei ns, const ALuint *sids );$/;"	t
LPALSOURCEUNQUEUEBUFFERS	src/win32/LoadOAL.h	/^typedef void           (ALAPIENTRY *LPALSOURCEUNQUEUEBUFFERS)(ALuint sid, ALsizei numEntries, ALuint *bids );$/;"	t
LPOPENALFNTABLE	src/win32/LoadOAL.h	/^} OPENALFNTABLE, *LPOPENALFNTABLE;$/;"	t	typeref:struct:__anon61
LUT16to32	src/filters/hq/asm/hq3x32.cpp	/^unsigned int   LUT16to32[65536];$/;"	v
LYv	src/wx/viewers.cpp	/^	wxControl *AFv, *BCv, *DEv, *HLv, *SPv, *PCv, *LYv, *IFFv;$/;"	m	class:Viewers::GBDisassembleViewer	file:
LZMA2_CONTROL_COPY_NO_RESET	fex/7z_C/Lzma2Dec.c	29;"	d	file:
LZMA2_CONTROL_COPY_RESET_DIC	fex/7z_C/Lzma2Dec.c	30;"	d	file:
LZMA2_CONTROL_EOF	fex/7z_C/Lzma2Dec.c	31;"	d	file:
LZMA2_CONTROL_LZMA	fex/7z_C/Lzma2Dec.c	28;"	d	file:
LZMA2_DIC_SIZE_FROM_PROP	fex/7z_C/Lzma2Dec.c	39;"	d	file:
LZMA2_GET_LZMA_MODE	fex/7z_C/Lzma2Dec.c	35;"	d	file:
LZMA2_IS_THERE_PROP	fex/7z_C/Lzma2Dec.c	36;"	d	file:
LZMA2_IS_UNCOMPRESSED_STATE	fex/7z_C/Lzma2Dec.c	33;"	d	file:
LZMA2_LCLP_MAX	fex/7z_C/Lzma2Dec.c	38;"	d	file:
LZMA2_STATE_CONTROL	fex/7z_C/Lzma2Dec.c	/^  LZMA2_STATE_CONTROL,$/;"	e	enum:__anon5	file:
LZMA2_STATE_DATA	fex/7z_C/Lzma2Dec.c	/^  LZMA2_STATE_DATA,$/;"	e	enum:__anon5	file:
LZMA2_STATE_DATA_CONT	fex/7z_C/Lzma2Dec.c	/^  LZMA2_STATE_DATA_CONT,$/;"	e	enum:__anon5	file:
LZMA2_STATE_ERROR	fex/7z_C/Lzma2Dec.c	/^  LZMA2_STATE_ERROR$/;"	e	enum:__anon5	file:
LZMA2_STATE_FINISHED	fex/7z_C/Lzma2Dec.c	/^  LZMA2_STATE_FINISHED,$/;"	e	enum:__anon5	file:
LZMA2_STATE_PACK0	fex/7z_C/Lzma2Dec.c	/^  LZMA2_STATE_PACK0,$/;"	e	enum:__anon5	file:
LZMA2_STATE_PACK1	fex/7z_C/Lzma2Dec.c	/^  LZMA2_STATE_PACK1,$/;"	e	enum:__anon5	file:
LZMA2_STATE_PROP	fex/7z_C/Lzma2Dec.c	/^  LZMA2_STATE_PROP,$/;"	e	enum:__anon5	file:
LZMA2_STATE_UNPACK0	fex/7z_C/Lzma2Dec.c	/^  LZMA2_STATE_UNPACK0,$/;"	e	enum:__anon5	file:
LZMA2_STATE_UNPACK1	fex/7z_C/Lzma2Dec.c	/^  LZMA2_STATE_UNPACK1,$/;"	e	enum:__anon5	file:
LZMA_BASE_SIZE	fex/7z_C/LzmaDec.c	107;"	d	file:
LZMA_DIC_MIN	fex/7z_C/LzmaDec.c	116;"	d	file:
LZMA_FINISH_ANY	fex/7z_C/LzmaDec.h	/^  LZMA_FINISH_ANY,   \/* finish at any point *\/$/;"	e	enum:__anon18
LZMA_FINISH_END	fex/7z_C/LzmaDec.h	/^  LZMA_FINISH_END    \/* block must be finished at the end *\/$/;"	e	enum:__anon18
LZMA_LIT_SIZE	fex/7z_C/LzmaDec.c	108;"	d	file:
LZMA_PROPS_SIZE	fex/7z_C/LzmaDec.h	26;"	d
LZMA_REQUIRED_INPUT_MAX	fex/7z_C/LzmaDec.h	48;"	d
LZMA_STATUS_FINISHED_WITH_MARK	fex/7z_C/LzmaDec.h	/^  LZMA_STATUS_FINISHED_WITH_MARK,          \/* stream was finished with end mark. *\/$/;"	e	enum:__anon19
LZMA_STATUS_MAYBE_FINISHED_WITHOUT_MARK	fex/7z_C/LzmaDec.h	/^  LZMA_STATUS_MAYBE_FINISHED_WITHOUT_MARK  \/* there is probability that stream was finished without end mark *\/$/;"	e	enum:__anon19
LZMA_STATUS_NEEDS_MORE_INPUT	fex/7z_C/LzmaDec.h	/^  LZMA_STATUS_NEEDS_MORE_INPUT,            \/* you must provide more input bytes *\/$/;"	e	enum:__anon19
LZMA_STATUS_NOT_FINISHED	fex/7z_C/LzmaDec.h	/^  LZMA_STATUS_NOT_FINISHED,                \/* stream was not finished *\/$/;"	e	enum:__anon19
LZMA_STATUS_NOT_SPECIFIED	fex/7z_C/LzmaDec.h	/^  LZMA_STATUS_NOT_SPECIFIED,               \/* use main error code instead *\/$/;"	e	enum:__anon19
LangSelect	src/win32/LangSelect.cpp	/^LangSelect::LangSelect(CWnd* pParent \/*=NULL*\/)$/;"	f	class:LangSelect
LangSelect	src/win32/LangSelect.h	/^class LangSelect : public CDialog$/;"	c
LastFilter	src/gtk/filters.h	/^  LastFilter = FilterLq2x$/;"	e	enum:VBA::EFilter
LastFilterIB	src/gtk/filters.h	/^  LastFilterIB = FilterIBMotionBlur$/;"	e	enum:VBA::EFilterIB
LenChoice	fex/7z_C/LzmaDec.c	70;"	d	file:
LenChoice2	fex/7z_C/LzmaDec.c	71;"	d	file:
LenCoder	fex/7z_C/LzmaDec.c	103;"	d	file:
LenHigh	fex/7z_C/LzmaDec.c	74;"	d	file:
LenLow	fex/7z_C/LzmaDec.c	72;"	d	file:
LenMid	fex/7z_C/LzmaDec.c	73;"	d	file:
Lib	src/wx/openal.cpp	/^	static wxDynamicLibrary Lib;$/;"	m	class:OpenAL	file:
Lib	src/wx/openal.cpp	/^wxDynamicLibrary OpenAL::Lib;$/;"	m	class:OpenAL	file:
Line	src/gtk/configfile.cpp	/^Line::Line(const string & _rsKey, const string & _rsValue) :$/;"	f	class:VBA::Config::Line
Line	src/gtk/configfile.h	/^class Line$/;"	c	namespace:VBA::Config
LineInfo	src/gba/elf.h	/^struct LineInfo {$/;"	s
LineInfoItem	src/gba/elf.h	/^struct LineInfoItem {$/;"	s
LinkClient	src/win32/LinkOptions.cpp	/^LinkClient::LinkClient(CWnd* pParent \/*=NULL*\/)$/;"	f	class:LinkClient
LinkClient	src/win32/LinkOptions.h	/^class LinkClient : public CDialog$/;"	c
LinkClientThread	src/gba/GBALink.cpp	/^void LinkClientThread(void *_cid){$/;"	f
LinkGeneral	src/win32/LinkOptions.cpp	/^LinkGeneral::LinkGeneral(CWnd* pParent \/*=NULL*\/)$/;"	f	class:LinkGeneral
LinkGeneral	src/win32/LinkOptions.h	/^class LinkGeneral : public CDialog$/;"	c
LinkOptions	src/win32/LinkOptions.cpp	/^LinkOptions::LinkOptions(CWnd* pParent \/*=NULL*\/)$/;"	f	class:LinkOptions
LinkOptions	src/win32/LinkOptions.h	/^class LinkOptions : public CDialog$/;"	c
LinkServer	src/win32/LinkOptions.cpp	/^LinkServer::LinkServer(CWnd* pParent \/*=NULL*\/)$/;"	f	class:LinkServer
LinkServer	src/win32/LinkOptions.h	/^class LinkServer : public CDialog$/;"	c
LinkServerThread	src/gba/GBALink.cpp	/^void LinkServerThread(void *_sid){$/;"	f
LinkUpdate	src/gba/GBALink.cpp	/^void LinkUpdate(int ticks)$/;"	f
LinkUpdate	src/gba/GBALink.h	/^inline void LinkUpdate(int) { }$/;"	f
ListCheatCodeColumns	src/gtk/cheatlist.h	/^    ListCheatCodeColumns()$/;"	f	class:VBA::ListCheatCodeColumns
ListCheatCodeColumns	src/gtk/cheatlist.h	/^class ListCheatCodeColumns : public Gtk::TreeModel::ColumnRecord$/;"	c	namespace:VBA
Literal	fex/7z_C/LzmaDec.c	105;"	d	file:
LoUnit	fex/7z_C/Ppmd7.h	/^  Byte *Base, *LoUnit, *HiUnit, *Text, *UnitsStart;$/;"	m	struct:__anon6
Load	src/win32/AcceleratorManager.cpp	/^bool CAcceleratorManager::Load()$/;"	f	class:CAcceleratorManager
Load	src/win32/AcceleratorManager.cpp	/^bool CAcceleratorManager::Load(HKEY hRegKey, LPCTSTR szRegKey)$/;"	f	class:CAcceleratorManager
Load	src/wx/viewers.cpp	/^	void Load(wxCommandEvent &ev)$/;"	f	class:Viewers::MemViewerBase
LoadGame	src/wx/panel.cpp	/^void GameArea::LoadGame(const wxString &name)$/;"	f	class:GameArea
LoadIcon16x16	src/win32/WinHelper.h	/^  inline HICON LoadIcon16x16( HINSTANCE hInst, UINT uID )$/;"	f	namespace:WinHelper
LoadOAL	src/wx/openal.cpp	/^bool OpenAL::LoadOAL()$/;"	f	class:OpenAL
LoadOAL10Library	src/win32/LoadOAL.cpp	/^ALboolean LoadOAL10Library(char *szOALFullPathName, LPOPENALFNTABLE lpOALFnTable)$/;"	f
LoadState	src/wx/panel.cpp	/^bool GameArea::LoadState()$/;"	f	class:GameArea
LoadState	src/wx/panel.cpp	/^bool GameArea::LoadState(const wxFileName &fname)$/;"	f	class:GameArea
LoadState	src/wx/panel.cpp	/^bool GameArea::LoadState(int slot)$/;"	f	class:GameArea
LoadXRCDialog	src/wx/guiinit.cpp	2316;"	d	file:
LoadXRCViewer	src/wx/viewsupt.h	57;"	d
LocationType	src/gba/elf.h	/^enum LocationType {$/;"	g
Lock	src/win32/WinHelper.h	/^      inline void Lock()                      { ::EnterCriticalSection(&m_sect); }$/;"	f	class:WinHelper::CCriticalSection
LogDialog	src/wx/viewers.cpp	/^LogDialog::LogDialog()$/;"	f	class:LogDialog
LogDialog	src/wx/wxvbam.h	/^class LogDialog : public wxDialog$/;"	c
Logging	src/win32/Logging.cpp	/^Logging::Logging(CWnd* pParent \/*=NULL*\/)$/;"	f	class:Logging
Logging	src/win32/Logging.h	/^class Logging : public ResizeDlg$/;"	c
Look	fex/7z_C/Types.h	/^  SRes (*Look)(void *p, const void **buf, size_t *size);$/;"	m	struct:__anon28
LookInStream_LookRead	fex/7z_C/7zStream.c	/^SRes LookInStream_LookRead(ILookInStream *stream, void *buf, size_t *size)$/;"	f
LookInStream_Read	fex/7z_C/7zStream.c	/^SRes LookInStream_Read(ILookInStream *stream, void *buf, size_t size)$/;"	f
LookInStream_Read2	fex/7z_C/7zStream.c	/^SRes LookInStream_Read2(ILookInStream *stream, void *buf, size_t size, SRes errorType)$/;"	f
LookInStream_SeekTo	fex/7z_C/7zStream.c	/^SRes LookInStream_SeekTo(ILookInStream *stream, UInt64 offset)$/;"	f
LookToRead_BUF_SIZE	fex/7z_C/Types.h	190;"	d
LookToRead_CreateVTable	fex/7z_C/7zStream.c	/^void LookToRead_CreateVTable(CLookToRead *p, int lookahead)$/;"	f
LookToRead_Init	fex/7z_C/7zStream.c	/^void LookToRead_Init(CLookToRead *p)$/;"	f
LookToRead_Look_Exact	fex/7z_C/7zStream.c	/^static SRes LookToRead_Look_Exact(void *pp, const void **buf, size_t *size)$/;"	f	file:
LookToRead_Look_Lookahead	fex/7z_C/7zStream.c	/^static SRes LookToRead_Look_Lookahead(void *pp, const void **buf, size_t *size)$/;"	f	file:
LookToRead_Read	fex/7z_C/7zStream.c	/^static SRes LookToRead_Read(void *pp, void *buf, size_t *size)$/;"	f	file:
LookToRead_Seek	fex/7z_C/7zStream.c	/^static SRes LookToRead_Seek(void *pp, Int64 *pos, ESzSeek origin)$/;"	f	file:
LookToRead_Skip	fex/7z_C/7zStream.c	/^static SRes LookToRead_Skip(void *pp, size_t offset)$/;"	f	file:
Low	fex/7z_C/7z.h	/^  UInt32 Low;$/;"	m	struct:__anon13
Low	fex/7z_C/Ppmd7.h	/^  UInt64 Low;$/;"	m	struct:__anon9
LowerMinSize	src/wx/panel.cpp	/^void GameArea::LowerMinSize()$/;"	f	class:GameArea
Lzma2Dec_Allocate	fex/7z_C/Lzma2Dec.c	/^SRes Lzma2Dec_Allocate(CLzma2Dec *p, Byte prop, ISzAlloc *alloc)$/;"	f
Lzma2Dec_AllocateProbs	fex/7z_C/Lzma2Dec.c	/^SRes Lzma2Dec_AllocateProbs(CLzma2Dec *p, Byte prop, ISzAlloc *alloc)$/;"	f
Lzma2Dec_Construct	fex/7z_C/Lzma2Dec.h	27;"	d
Lzma2Dec_DecodeToBuf	fex/7z_C/Lzma2Dec.c	/^SRes Lzma2Dec_DecodeToBuf(CLzma2Dec *p, Byte *dest, SizeT *destLen, const Byte *src, SizeT *srcLen, ELzmaFinishMode finishMode, ELzmaStatus *status)$/;"	f
Lzma2Dec_DecodeToDic	fex/7z_C/Lzma2Dec.c	/^SRes Lzma2Dec_DecodeToDic(CLzma2Dec *p, SizeT dicLimit,$/;"	f
Lzma2Dec_Free	fex/7z_C/Lzma2Dec.h	29;"	d
Lzma2Dec_FreeProbs	fex/7z_C/Lzma2Dec.h	28;"	d
Lzma2Dec_GetOldProps	fex/7z_C/Lzma2Dec.c	/^static SRes Lzma2Dec_GetOldProps(Byte prop, Byte *props)$/;"	f	file:
Lzma2Dec_Init	fex/7z_C/Lzma2Dec.c	/^void Lzma2Dec_Init(CLzma2Dec *p)$/;"	f
Lzma2Dec_UpdateState	fex/7z_C/Lzma2Dec.c	/^static ELzma2State Lzma2Dec_UpdateState(CLzma2Dec *p, Byte b)$/;"	f	file:
Lzma2Decode	fex/7z_C/Lzma2Dec.c	/^SRes Lzma2Decode(Byte *dest, SizeT *destLen, const Byte *src, SizeT *srcLen,$/;"	f
LzmaDec_Allocate	fex/7z_C/LzmaDec.c	/^SRes LzmaDec_Allocate(CLzmaDec *p, const Byte *props, unsigned propsSize, ISzAlloc *alloc)$/;"	f
LzmaDec_AllocateProbs	fex/7z_C/LzmaDec.c	/^SRes LzmaDec_AllocateProbs(CLzmaDec *p, const Byte *props, unsigned propsSize, ISzAlloc *alloc)$/;"	f
LzmaDec_AllocateProbs2	fex/7z_C/LzmaDec.c	/^static SRes LzmaDec_AllocateProbs2(CLzmaDec *p, const CLzmaProps *propNew, ISzAlloc *alloc)$/;"	f	file:
LzmaDec_Construct	fex/7z_C/LzmaDec.h	71;"	d
LzmaDec_DecodeReal	fex/7z_C/LzmaDec.c	/^static int MY_FAST_CALL LzmaDec_DecodeReal(CLzmaDec *p, SizeT limit, const Byte *bufLimit)$/;"	f	file:
LzmaDec_DecodeReal2	fex/7z_C/LzmaDec.c	/^static int MY_FAST_CALL LzmaDec_DecodeReal2(CLzmaDec *p, SizeT limit, const Byte *bufLimit)$/;"	f	file:
LzmaDec_DecodeToBuf	fex/7z_C/LzmaDec.c	/^SRes LzmaDec_DecodeToBuf(CLzmaDec *p, Byte *dest, SizeT *destLen, const Byte *src, SizeT *srcLen, ELzmaFinishMode finishMode, ELzmaStatus *status)$/;"	f
LzmaDec_DecodeToDic	fex/7z_C/LzmaDec.c	/^SRes LzmaDec_DecodeToDic(CLzmaDec *p, SizeT dicLimit, const Byte *src, SizeT *srcLen,$/;"	f
LzmaDec_Free	fex/7z_C/LzmaDec.c	/^void LzmaDec_Free(CLzmaDec *p, ISzAlloc *alloc)$/;"	f
LzmaDec_FreeDict	fex/7z_C/LzmaDec.c	/^static void LzmaDec_FreeDict(CLzmaDec *p, ISzAlloc *alloc)$/;"	f	file:
LzmaDec_FreeProbs	fex/7z_C/LzmaDec.c	/^void LzmaDec_FreeProbs(CLzmaDec *p, ISzAlloc *alloc)$/;"	f
LzmaDec_Init	fex/7z_C/LzmaDec.c	/^void LzmaDec_Init(CLzmaDec *p)$/;"	f
LzmaDec_InitDicAndState	fex/7z_C/LzmaDec.c	/^void LzmaDec_InitDicAndState(CLzmaDec *p, Bool initDic, Bool initState)$/;"	f
LzmaDec_InitRc	fex/7z_C/LzmaDec.c	/^static void LzmaDec_InitRc(CLzmaDec *p, const Byte *data)$/;"	f	file:
LzmaDec_InitStateReal	fex/7z_C/LzmaDec.c	/^static void LzmaDec_InitStateReal(CLzmaDec *p)$/;"	f	file:
LzmaDec_TryDummy	fex/7z_C/LzmaDec.c	/^static ELzmaDummy LzmaDec_TryDummy(const CLzmaDec *p, const Byte *buf, SizeT inSize)$/;"	f	file:
LzmaDec_UpdateWithUncompressed	fex/7z_C/Lzma2Dec.c	/^static void LzmaDec_UpdateWithUncompressed(CLzmaDec *p, const Byte *src, SizeT size)$/;"	f	file:
LzmaDec_WriteRem	fex/7z_C/LzmaDec.c	/^static void MY_FAST_CALL LzmaDec_WriteRem(CLzmaDec *p, SizeT limit)$/;"	f	file:
LzmaDecode	fex/7z_C/LzmaDec.c	/^SRes LzmaDecode(Byte *dest, SizeT *destLen, const Byte *src, SizeT *srcLen,$/;"	f
LzmaProps_Decode	fex/7z_C/LzmaDec.c	/^SRes LzmaProps_Decode(CLzmaProps *p, const Byte *data, unsigned size)$/;"	f
LzmaProps_GetNumProbs	fex/7z_C/LzmaDec.c	110;"	d	file:
MAPVIRTKEYS	src/win32/CmdAccelOb.h	/^} MAPVIRTKEYS, *PMAPVIRTKEYS;$/;"	t	typeref:struct:tagMAPVIRTKEYS
MASK	fex/7z_C/Ppmd7Dec.c	77;"	d	file:
MASTER_CODE	src/gba/Cheats.cpp	178;"	d	file:
MAX_CHEATS	src/sdl/SDL.cpp	240;"	d	file:
MAX_FREQ	fex/7z_C/Ppmd7.c	12;"	d	file:
MAX_VOLUME	src/win32/AudioCoreSettingsDlg.cpp	7;"	d	file:
MDL	src/filters/hq2x.cpp	125;"	d	file:
MDL	src/filters/hq2x.cpp	208;"	d	file:
MDL	src/filters/hq2x.cpp	235;"	d	file:
MDL	src/filters/hq2x.cpp	325;"	d	file:
MDL	src/filters/hq2x.cpp	352;"	d	file:
MDL	src/filters/hq2x.cpp	435;"	d	file:
MDL	src/filters/hq2x.cpp	462;"	d	file:
MDL	src/filters/hq2x.cpp	98;"	d	file:
MDR	src/filters/hq2x.cpp	124;"	d	file:
MDR	src/filters/hq2x.cpp	207;"	d	file:
MDR	src/filters/hq2x.cpp	234;"	d	file:
MDR	src/filters/hq2x.cpp	324;"	d	file:
MDR	src/filters/hq2x.cpp	351;"	d	file:
MDR	src/filters/hq2x.cpp	434;"	d	file:
MDR	src/filters/hq2x.cpp	461;"	d	file:
MDR	src/filters/hq2x.cpp	97;"	d	file:
MEMFILE	src/common/memgzio.c	/^} MEMFILE;$/;"	t	typeref:struct:_MemFile	file:
MEMGZIO_H	src/common/memgzio.h	2;"	d
MIN	src/common/Patch.cpp	106;"	d	file:
MIN_VOLUME	src/win32/AudioCoreSettingsDlg.cpp	6;"	d	file:
MODECHANGE_NO	src/gba/GBA-arm.cpp	1143;"	d	file:
MODECHANGE_YES	src/gba/GBA-arm.cpp	1144;"	d	file:
MOD_KEYS	src/sdl/SDL.cpp	1231;"	d	file:
MOD_NOALT	src/sdl/SDL.cpp	1233;"	d	file:
MOD_NOCTRL	src/sdl/SDL.cpp	1232;"	d	file:
MOD_NOSHIFT	src/sdl/SDL.cpp	1234;"	d	file:
MOSAIC	src/gba/Globals.cpp	/^u16 MOSAIC   = 0x0000;$/;"	v
MOTION	src/win32/Input.h	9;"	d
MOTION_KEYS	src/win32/Input.h	7;"	d
MRET_ERR_BUFSIZE	src/common/ffmpeg.h	/^    MRET_ERR_BUFSIZE \/\/ buffer overflow (fatal)$/;"	e	enum:MediaRet
MRET_ERR_FERR	src/common/ffmpeg.h	/^    MRET_ERR_FERR, \/\/ error writing output file$/;"	e	enum:MediaRet
MRET_ERR_FMTGUESS	src/common/ffmpeg.h	/^    MRET_ERR_FMTGUESS, \/\/ can't guess format from file name$/;"	e	enum:MediaRet
MRET_ERR_NOCODEC	src/common/ffmpeg.h	/^    MRET_ERR_NOCODEC, \/\/ error opening codec$/;"	e	enum:MediaRet
MRET_ERR_NOMEM	src/common/ffmpeg.h	/^    MRET_ERR_NOMEM, \/\/ error allocating buffers or structures$/;"	e	enum:MediaRet
MRET_ERR_RECORDING	src/common/ffmpeg.h	/^    MRET_ERR_RECORDING, \/\/ attempt to start recording when already doing it$/;"	e	enum:MediaRet
MRET_OK	src/common/ffmpeg.h	/^    MRET_OK, \/\/ no errors$/;"	e	enum:MediaRet
MSG_BAD_ZIP_FILE	src/NLS.h	9;"	d
MSG_CANNOT_IMPORT_SNAPSHOT_FOR	src/NLS.h	36;"	d
MSG_CANNOT_LOAD_SGM	src/NLS.h	4;"	d
MSG_CANNOT_LOAD_SGM_FOR	src/NLS.h	22;"	d
MSG_CANNOT_OPEN_FILE	src/NLS.h	8;"	d
MSG_CBA_CODE_WARNING	src/NLS.h	42;"	d
MSG_ERROR_CREATING_FILE	src/NLS.h	18;"	d
MSG_ERROR_OPENING_IMAGE	src/NLS.h	11;"	d
MSG_ERROR_OPENING_IMAGE_FROM	src/NLS.h	23;"	d
MSG_ERROR_READING_IMAGE	src/NLS.h	12;"	d
MSG_ERROR_READING_IMAGE_FROM	src/NLS.h	24;"	d
MSG_FAILED_TO_READ_RTC	src/NLS.h	20;"	d
MSG_FAILED_TO_READ_SGM	src/NLS.h	19;"	d
MSG_GBA_CODE_WARNING	src/NLS.h	40;"	d
MSG_INVALID_BIOS_FILE_SIZE	src/NLS.h	14;"	d
MSG_INVALID_CBA_CODE	src/NLS.h	41;"	d
MSG_INVALID_CHEAT_CODE	src/NLS.h	15;"	d
MSG_INVALID_CHEAT_CODE_ADDRESS	src/NLS.h	32;"	d
MSG_INVALID_CHEAT_TO_REMOVE	src/NLS.h	31;"	d
MSG_INVALID_GAMEGENIE_CODE	src/NLS.h	30;"	d
MSG_INVALID_GAMESHARK_CODE	src/NLS.h	29;"	d
MSG_INVALID_GSA_CODE	src/NLS.h	35;"	d
MSG_MAXIMUM_NUMBER_OF_CHEATS	src/NLS.h	28;"	d
MSG_NO_IMAGE_ON_ZIP	src/NLS.h	10;"	d
MSG_OUT_OF_MEMORY	src/NLS.h	43;"	d
MSG_SAVE_GAME_NOT_USING_BIOS	src/NLS.h	5;"	d
MSG_SAVE_GAME_USING_BIOS	src/NLS.h	6;"	d
MSG_UNKNOWN_ARM_OPCODE	src/NLS.h	16;"	d
MSG_UNKNOWN_CARTRIDGE_TYPE	src/NLS.h	27;"	d
MSG_UNKNOWN_THUMB_OPCODE	src/NLS.h	17;"	d
MSG_UNSUPPORTED_ARM_MODE	src/NLS.h	38;"	d
MSG_UNSUPPORTED_BIOS_FUNCTION	src/NLS.h	13;"	d
MSG_UNSUPPORTED_CHEAT_LIST_TYPE	src/NLS.h	34;"	d
MSG_UNSUPPORTED_CHEAT_LIST_VERSION	src/NLS.h	33;"	d
MSG_UNSUPPORTED_CODE_FILE	src/NLS.h	39;"	d
MSG_UNSUPPORTED_GAMESHARK_CODE	src/NLS.h	45;"	d
MSG_UNSUPPORTED_RAM_SIZE	src/NLS.h	26;"	d
MSG_UNSUPPORTED_ROM_SIZE	src/NLS.h	25;"	d
MSG_UNSUPPORTED_SAVE_TYPE	src/NLS.h	7;"	d
MSG_UNSUPPORTED_SNAPSHOT_FILE	src/NLS.h	37;"	d
MSG_UNSUPPORTED_VBA_SGM	src/NLS.h	3;"	d
MSG_UNSUPPORTED_VB_SGM	src/NLS.h	21;"	d
MSG_WRONG_GAMESHARK_CODE	src/NLS.h	44;"	d
MSVCDir	src/libretro/msvc/msvc-2003-xbox1.bat	/^@set MSVCDir=%VCINSTALLDIR%\\VC7$/;"	v
MTime	fex/7z_C/7z.h	/^  CNtfsFileTime MTime;$/;"	m	struct:__anon14
MTimeDefined	fex/7z_C/7z.h	/^  Byte MTimeDefined;$/;"	m	struct:__anon14
MUL	src/filters/hq2x.cpp	126;"	d	file:
MUL	src/filters/hq2x.cpp	209;"	d	file:
MUL	src/filters/hq2x.cpp	236;"	d	file:
MUL	src/filters/hq2x.cpp	326;"	d	file:
MUL	src/filters/hq2x.cpp	353;"	d	file:
MUL	src/filters/hq2x.cpp	436;"	d	file:
MUL	src/filters/hq2x.cpp	463;"	d	file:
MUL	src/filters/hq2x.cpp	99;"	d	file:
MULTIPLAYER	src/gba/GBALink.h	9;"	d
MULTI_BUFFER_H	src/apu/Multi_Buffer.h	5;"	d
MUL_INSN	src/gba/GBA-arm.cpp	1244;"	d	file:
MUR	src/filters/hq2x.cpp	123;"	d	file:
MUR	src/filters/hq2x.cpp	206;"	d	file:
MUR	src/filters/hq2x.cpp	233;"	d	file:
MUR	src/filters/hq2x.cpp	323;"	d	file:
MUR	src/filters/hq2x.cpp	350;"	d	file:
MUR	src/filters/hq2x.cpp	433;"	d	file:
MUR	src/filters/hq2x.cpp	460;"	d	file:
MUR	src/filters/hq2x.cpp	96;"	d	file:
MY_ALLOC	fex/7z_C/7zIn.c	176;"	d	file:
MY_CDECL	fex/7z_C/Types.h	114;"	d
MY_CDECL	fex/7z_C/Types.h	119;"	d
MY_CPU_32BIT	fex/7z_C/CpuArch.h	36;"	d
MY_CPU_64BIT	fex/7z_C/CpuArch.h	24;"	d
MY_CPU_AMD64	fex/7z_C/CpuArch.h	20;"	d
MY_CPU_ARM_LE	fex/7z_C/CpuArch.h	40;"	d
MY_CPU_BE	fex/7z_C/CpuArch.h	56;"	d
MY_CPU_IA64_LE	fex/7z_C/CpuArch.h	44;"	d
MY_CPU_LE	fex/7z_C/CpuArch.h	52;"	d
MY_CPU_LE_UNALIGN	fex/7z_C/CpuArch.h	48;"	d
MY_CPU_X86	fex/7z_C/CpuArch.h	28;"	d
MY_CPU_X86_OR_AMD64	fex/7z_C/CpuArch.h	32;"	d
MY_FAST_CALL	fex/7z_C/Types.h	115;"	d
MY_FAST_CALL	fex/7z_C/Types.h	120;"	d
MY_NO_INLINE	fex/7z_C/Types.h	109;"	d
MY_NO_INLINE	fex/7z_C/Types.h	111;"	d
MY_STD_CALL	fex/7z_C/Types.h	101;"	d
MY_STD_CALL	fex/7z_C/Types.h	103;"	d
MacOpenFile	src/wx/wxvbam.h	/^    void MacOpenFile(const wxString&f) { pending_load = f; };$/;"	f	class:wxvbamApp
MainFrame	src/wx/wxvbam.cpp	/^MainFrame::MainFrame() : wxFrame(), did_link_init(false), focused(false),$/;"	f	class:MainFrame
MainFrame	src/wx/wxvbam.h	/^class MainFrame : public wxFrame$/;"	c
MainWnd	src/win32/MainWnd.cpp	/^MainWnd::MainWnd()$/;"	f	class:MainWnd
MainWnd	src/win32/MainWnd.h	/^class MainWnd : public CWnd$/;"	c
MakeInstanceFilename	src/gba/GBALink.cpp	/^const char *MakeInstanceFilename(const char *Input)$/;"	f
MapView	src/win32/MapView.cpp	/^MapView::MapView(CWnd* pParent \/*=NULL*\/)$/;"	f	class:MapView
MapView	src/win32/MapView.h	/^class MapView : public ResizeDlg, IUpdateListener$/;"	c
MapViewer	src/wx/gfxviewers.cpp	/^	MapViewer() : GfxViewer(wxT("MapViewer"), 1024, 1024)$/;"	f	class:Viewers::MapViewer
MapViewer	src/wx/gfxviewers.cpp	/^    class MapViewer : public GfxViewer$/;"	c	namespace:Viewers	file:
MapViewer	src/wx/gfxviewers.cpp	/^void MainFrame::MapViewer()$/;"	f	class:MainFrame
Mask1	src/filters/2xSaImmx.asm	/^Mask1         resb 8$/;"	l
Mask2	src/filters/2xSaImmx.asm	/^Mask2         resb 8$/;"	l
Mask26	src/filters/2xSaImmx.asm	/^Mask26        resb 8$/;"	l
Mask26b	src/filters/2xSaImmx.asm	/^Mask26b       resb 8$/;"	l
Mask35	src/filters/2xSaImmx.asm	/^Mask35        resb 8$/;"	l
Mask35b	src/filters/2xSaImmx.asm	/^Mask35b       resb 8$/;"	l
MaxContext	fex/7z_C/Ppmd7.h	/^  CPpmd7_Context *MinContext, *MaxContext;$/;"	m	struct:__anon6
MaxOrder	fex/7z_C/Ppmd7.h	/^  unsigned OrderFall, InitEsc, PrevSuccess, MaxOrder, HiBitsFlag;$/;"	m	struct:__anon6
MaxScale	src/win32/MaxScale.cpp	/^MaxScale::MaxScale(CWnd* pParent \/*=NULL*\/)$/;"	f	class:MaxScale
MaxScale	src/win32/MaxScale.h	/^class MaxScale : public CDialog$/;"	c
Med_Synth	src/apu/Gb_Oscs.h	/^	typedef Blip_Synth<blip_med_quality ,1> Med_Synth;$/;"	t	class:Gb_Osc
MediaRecorder	src/common/ffmpeg.cpp	/^MediaRecorder::MediaRecorder() : oc(0), vid_st(0), aud_st(0), video_buf(0),$/;"	f	class:MediaRecorder
MediaRecorder	src/common/ffmpeg.h	/^class MediaRecorder$/;"	c
MediaRet	src/common/ffmpeg.h	/^enum MediaRet {$/;"	g
MemLoad	src/wx/viewers.cpp	/^	void MemLoad(wxString &name, u32 addr, u32 len)$/;"	f	class:Viewers::GBMemViewer
MemLoad	src/wx/viewers.cpp	/^	void MemLoad(wxString &name, u32 addr, u32 len)$/;"	f	class:Viewers::MemViewer
MemSave	src/wx/viewers.cpp	/^	void MemSave(wxString &name, u32 addr, u32 len)$/;"	f	class:Viewers::GBMemViewer
MemSave	src/wx/viewers.cpp	/^	void MemSave(wxString &name, u32 addr, u32 len)$/;"	f	class:Viewers::MemViewer
MemView	src/wx/viewsupt.cpp	/^    MemView::MemView() :$/;"	f	class:Viewers::MemView
MemView	src/wx/viewsupt.h	/^    class MemView : public wxPanel$/;"	c	namespace:Viewers
MemViewer	src/wx/viewers.cpp	/^	MemViewer() : MemViewerBase(~0)$/;"	f	class:Viewers::MemViewer
MemViewer	src/wx/viewers.cpp	/^    class MemViewer : public MemViewerBase$/;"	c	namespace:Viewers	file:
MemViewer	src/wx/viewers.cpp	/^void MainFrame::MemViewer()$/;"	f	class:MainFrame
MemViewerBase	src/wx/viewers.cpp	/^	MemViewerBase(u32 max) : Viewer(wxT("MemViewer"))$/;"	f	class:Viewers::MemViewerBase
MemViewerBase	src/wx/viewers.cpp	/^    class MemViewerBase : public Viewer$/;"	c	namespace:Viewers	file:
Mem_File_Reader	fex/fex/Data_Reader.cpp	/^Mem_File_Reader::Mem_File_Reader( const void* p, long s ) :$/;"	f	class:Mem_File_Reader
Mem_File_Reader	fex/fex/Data_Reader.h	/^class Mem_File_Reader : public File_Reader {$/;"	c
Member	src/gba/elf.h	/^struct Member {$/;"	s
MemoryViewer	src/win32/MemoryViewer.cpp	/^MemoryViewer::MemoryViewer()$/;"	f	class:MemoryViewer
MemoryViewer	src/win32/MemoryViewer.h	/^class MemoryViewer : public CWnd$/;"	c
MemoryViewerAddressSize	src/win32/MemoryViewerAddressSize.cpp	/^MemoryViewerAddressSize::MemoryViewerAddressSize(u32 a, int s, CWnd* pParent \/*=NULL*\/)$/;"	f	class:MemoryViewerAddressSize
MemoryViewerAddressSize	src/win32/MemoryViewerAddressSize.h	/^class MemoryViewerAddressSize : public CDialog$/;"	c
MemoryViewerDlg	src/win32/MemoryViewerDlg.cpp	/^MemoryViewerDlg::MemoryViewerDlg(CWnd* pParent \/*=NULL*\/)$/;"	f	class:MemoryViewerDlg
MemoryViewerDlg	src/win32/MemoryViewerDlg.h	/^class MemoryViewerDlg : public ResizeDlg, IUpdateListener, IMemoryViewerDlg$/;"	c
MenuPopped	src/wx/wxvbam.cpp	/^void MainFrame::MenuPopped(wxMenuEvent &evt)$/;"	f	class:MainFrame
MethodID	fex/7z_C/7z.h	/^  UInt64 MethodID;$/;"	m	struct:__anon10
MinContext	fex/7z_C/Ppmd7.h	/^  CPpmd7_Context *MinContext, *MaxContext;$/;"	m	struct:__anon6
ModalPause	src/wx/wxvbam.h	/^    ModalPause() { wxGetApp().frame->StartModal(); }$/;"	f	class:ModalPause
ModalPause	src/wx/wxvbam.h	/^class ModalPause$/;"	c
Modev	src/wx/viewers.cpp	/^	wxControl *regv[17], *Modev;$/;"	m	class:Viewers::DisassembleViewer	file:
Mono_Buffer	src/apu/Multi_Buffer.cpp	/^Mono_Buffer::Mono_Buffer() : Multi_Buffer( 1 )$/;"	f	class:Mono_Buffer
Mono_Buffer	src/apu/Multi_Buffer.h	/^class Mono_Buffer : public Multi_Buffer {$/;"	c
MotionBlurIB	src/filters/interframe.cpp	/^void MotionBlurIB(u8 *srcPtr, u32 srcPitch, int width, int height)$/;"	f
MotionBlurIB	src/filters/interframe.cpp	/^void MotionBlurIB(u8 *srcPtr, u32 srcPitch, int width, int starty, int height)$/;"	f
MotionBlurIB32	src/filters/interframe.cpp	/^void MotionBlurIB32(u8 *srcPtr, u32 srcPitch, int width, int height)$/;"	f
MotionBlurIB32	src/filters/interframe.cpp	/^void MotionBlurIB32(u8 *srcPtr, u32 srcPitch, int width, int starty, int height)$/;"	f
MotionBlurIB32_MMX	src/filters/interframe.cpp	/^static void MotionBlurIB32_MMX(u8 *srcPtr, u32 srcPitch, int width, int starty, int height)$/;"	f	file:
MotionBlurIB_MMX	src/filters/interframe.cpp	/^static void MotionBlurIB_MMX(u8 *srcPtr, u32 srcPitch, int width, int starty, int height)$/;"	f	file:
MotionConfig	src/win32/Joypad.cpp	/^MotionConfig::MotionConfig(CWnd* pParent \/*=NULL*\/)$/;"	f	class:MotionConfig
MotionConfig	src/win32/Joypad.h	/^class MotionConfig : public CDialog$/;"	c
MouseEvent	src/wx/viewsupt.cpp	/^    void MemView::MouseEvent(wxMouseEvent &ev)$/;"	f	class:Viewers::MemView
MouseEvent	src/wx/viewsupt.h	/^	void MouseEvent(wxMouseEvent &ev) {}$/;"	f	class:Viewers::DisList
MouseEvent	src/wx/viewsupt.h	/^	void MouseEvent(wxMouseEvent &ev) {}$/;"	f	class:Viewers::DispCheckBox
MouseEvent	src/wx/wxvbam.h	/^    void MouseEvent(wxMouseEvent &) { ShowPointer(); }$/;"	f	class:GameArea
MouseMove	src/wx/viewsupt.cpp	/^    void GfxPanel::MouseMove(wxMouseEvent &ev)$/;"	f	class:Viewers::GfxPanel
MoveSB	src/wx/viewsupt.cpp	/^    void DisList::MoveSB()$/;"	f	class:Viewers::DisList
MoveSB	src/wx/viewsupt.cpp	/^    void MemView::MoveSB()$/;"	f	class:Viewers::MemView
MoveView	src/wx/viewsupt.cpp	/^    void DisList::MoveView(wxScrollEvent &ev)$/;"	f	class:Viewers::DisList
MoveView	src/wx/viewsupt.cpp	/^    void MemView::MoveView(wxScrollEvent &ev)$/;"	f	class:Viewers::MemView
Multi_Buffer	src/apu/Multi_Buffer.cpp	/^Multi_Buffer::Multi_Buffer( int spf ) : samples_per_frame_( spf )$/;"	f	class:Multi_Buffer
Multi_Buffer	src/apu/Multi_Buffer.h	/^class Multi_Buffer {$/;"	c
MyCPUID	fex/7z_C/CpuArch.c	/^static void MyCPUID(UInt32 function, UInt32 *a, UInt32 *b, UInt32 *c, UInt32 *d)$/;"	f	file:
MyMem12Cpy	fex/7z_C/Ppmd7.c	256;"	d	file:
MyPlugInfo	src/win32/rpi.cpp	/^static RENDER_PLUGIN_INFO MyPlugInfo;$/;"	v	file:
MyPlugOutput	src/win32/rpi.cpp	/^static RENDER_PLUGIN_OUTP MyPlugOutput;$/;"	v	file:
N	src/wx/viewers.cpp	/^	wxCheckBox *N, *Z, *C, *V, *I, *F, *T;$/;"	m	class:Viewers::DisassembleViewer	file:
N	src/wx/viewers.cpp	/^	wxCheckBox *Z, *N, *H, *C;$/;"	m	class:Viewers::GBDisassembleViewer	file:
NEG	src/gba/GBA-arm.cpp	109;"	d	file:
NEG	src/gba/GBA-thumb.cpp	76;"	d	file:
NEWSYM	src/filters/hq/asm/hq3x_16.asm	/^NEWSYM hq3x_16$/;"	l
NEWSYM	src/filters/hq/asm/hq3x_32.asm	/^NEWSYM hq3x_32$/;"	l
NEWSYM	src/filters/hq/asm/hq4x_16.asm	/^NEWSYM hq4x_16$/;"	l
NEWSYM	src/filters/hq/asm/hq4x_32.asm	/^NEWSYM hq4x_32$/;"	l
NODE	fex/7z_C/Ppmd7.c	53;"	d	file:
NODE	fex/7z_C/Ppmd7.c	55;"	d	file:
NONOPTION_P	src/sdl/getopt.c	544;"	d	file:
NORMAL32	src/gba/GBALink.h	11;"	d
NORMAL8	src/gba/GBALink.h	10;"	d
NORMALIZE	fex/7z_C/Bcj2.c	27;"	d	file:
NORMALIZE	fex/7z_C/LzmaDec.c	17;"	d	file:
NORMALIZE_CHECK	fex/7z_C/LzmaDec.c	47;"	d	file:
NR10	src/gb/gbSound.h	35;"	d
NR10	src/gba/Sound.cpp	15;"	d	file:
NR11	src/gb/gbSound.h	36;"	d
NR11	src/gba/Sound.cpp	16;"	d	file:
NR12	src/gb/gbSound.h	37;"	d
NR12	src/gba/Sound.cpp	17;"	d	file:
NR13	src/gb/gbSound.h	38;"	d
NR13	src/gba/Sound.cpp	18;"	d	file:
NR14	src/gb/gbSound.h	39;"	d
NR14	src/gba/Sound.cpp	19;"	d	file:
NR21	src/gb/gbSound.h	40;"	d
NR21	src/gba/Sound.cpp	20;"	d	file:
NR22	src/gb/gbSound.h	41;"	d
NR22	src/gba/Sound.cpp	21;"	d	file:
NR23	src/gb/gbSound.h	42;"	d
NR23	src/gba/Sound.cpp	22;"	d	file:
NR24	src/gb/gbSound.h	43;"	d
NR24	src/gba/Sound.cpp	23;"	d	file:
NR30	src/gb/gbSound.h	44;"	d
NR30	src/gba/Sound.cpp	24;"	d	file:
NR31	src/gb/gbSound.h	45;"	d
NR31	src/gba/Sound.cpp	25;"	d	file:
NR32	src/gb/gbSound.h	46;"	d
NR32	src/gba/Sound.cpp	26;"	d	file:
NR33	src/gb/gbSound.h	47;"	d
NR33	src/gba/Sound.cpp	27;"	d	file:
NR34	src/gb/gbSound.h	48;"	d
NR34	src/gba/Sound.cpp	28;"	d	file:
NR41	src/gb/gbSound.h	49;"	d
NR41	src/gba/Sound.cpp	29;"	d	file:
NR42	src/gb/gbSound.h	50;"	d
NR42	src/gba/Sound.cpp	30;"	d	file:
NR43	src/gb/gbSound.h	51;"	d
NR43	src/gba/Sound.cpp	31;"	d	file:
NR44	src/gb/gbSound.h	52;"	d
NR44	src/gba/Sound.cpp	32;"	d	file:
NR50	src/gb/gbSound.h	53;"	d
NR50	src/gba/Sound.cpp	33;"	d	file:
NR51	src/gb/gbSound.h	54;"	d
NR51	src/gba/Sound.cpp	34;"	d	file:
NR52	src/gb/gbSound.h	55;"	d
NR52	src/gba/Sound.cpp	35;"	d	file:
NS2BSIndx	fex/7z_C/Ppmd7.h	/^  Byte NS2Indx[256], NS2BSIndx[256], HB2Flag[256];$/;"	m	struct:__anon6
NS2Indx	fex/7z_C/Ppmd7.h	/^  Byte NS2Indx[256], NS2BSIndx[256], HB2Flag[256];$/;"	m	struct:__anon6
NU	fex/7z_C/Ppmd7.c	/^  UInt16 NU;$/;"	m	struct:CPpmd7_Node_	file:
NULL	src/sdl/getopt1.c	65;"	d	file:
NUM_CODER_STREAMS_MAX	fex/7z_C/7zIn.c	15;"	d	file:
NUM_FOLDER_CODERS_MAX	fex/7z_C/7zIn.c	14;"	d	file:
NUM_IOREGS	src/wx/ioregs.h	2072;"	d
NUM_KEYS	src/wx/opts.h	4;"	d
NUM_REWINDS	src/wx/wxvbam.h	371;"	d
N_	src/NLS.h	1;"	d
N_	src/gba/GBALink.cpp	50;"	d	file:
N_	src/gtk/intl.h	27;"	d
N_FLAG	src/gb/gb.h	6;"	d
N_FLAG	src/gba/Globals.cpp	/^bool N_FLAG = 0;$/;"	v
Name	src/win32/rpi.h	/^	char			Name[60];$/;"	m	struct:__anon67
NetConnect	src/wx/guiinit.cpp	/^    void NetConnect(wxCommandEvent &ev)$/;"	f	class:NetLink_t
NetLink_t	src/wx/guiinit.cpp	/^    NetLink_t() : n_players(2) {}$/;"	f	class:NetLink_t
NetLink_t	src/wx/guiinit.cpp	/^static class NetLink_t : public wxEvtHandler$/;"	c	file:
Next	fex/7z_C/Ppmd7.c	/^  CPpmd7_Node_Ref Next; \/* must be at offset >= 4 *\/$/;"	m	struct:CPpmd7_Node_	file:
Next	src/wx/viewers.cpp	/^	void Next(wxCommandEvent &ev)$/;"	f	class:Viewers::DisassembleViewer
Next	src/wx/viewers.cpp	/^	void Next(wxCommandEvent &ev)$/;"	f	class:Viewers::GBDisassembleViewer
Next	src/wx/widgets/wx/wxmisc.h	/^    wxFarRadio *Next;$/;"	m	class:wxFarRadio
NextContext	fex/7z_C/Ppmd7.c	/^static void NextContext(CPpmd7 *p)$/;"	f	file:
NextEnabledTab	src/win32/LinkOptions.cpp	/^int CMyTabCtrl::NextEnabledTab(int iCurrentTab, BOOL bWrap)$/;"	f	class:CMyTabCtrl
Node	src/sdl/exprNode.h	/^struct Node {$/;"	s
NotFound	src/gtk/configfile.h	/^  NotFound() {}$/;"	f	class:VBA::Config::NotFound
NotFound	src/gtk/configfile.h	/^class NotFound$/;"	c	namespace:VBA::Config
Notify	src/wx/widgets/sdljoy.cpp	/^void wxSDLJoy::Notify()$/;"	f	class:wxSDLJoy
NumBindPairs	fex/7z_C/7z.h	/^  UInt32 NumBindPairs;$/;"	m	struct:__anon12
NumCoders	fex/7z_C/7z.h	/^  UInt32 NumCoders;$/;"	m	struct:__anon12
NumFiles	fex/7z_C/7z.h	/^  UInt32 NumFiles;$/;"	m	struct:__anon15
NumFolders	fex/7z_C/7z.h	/^  UInt32 NumFolders;$/;"	m	struct:__anon15
NumInStreams	fex/7z_C/7z.h	/^  UInt32 NumInStreams;$/;"	m	struct:__anon10
NumOutStreams	fex/7z_C/7z.h	/^  UInt32 NumOutStreams;$/;"	m	struct:__anon10
NumPackStreams	fex/7z_C/7z.h	/^  UInt32 NumPackStreams;$/;"	m	struct:__anon12
NumPackStreams	fex/7z_C/7z.h	/^  UInt32 NumPackStreams;$/;"	m	struct:__anon15
NumStats	fex/7z_C/Ppmd7.h	/^  UInt16 NumStats;$/;"	m	struct:CPpmd7_Context_
NumUnpackStreams	fex/7z_C/7z.h	/^  UInt32 NumUnpackStreams;$/;"	m	struct:__anon12
OALConfig	src/win32/OALConfig.cpp	/^OALConfig::OALConfig(CWnd* pParent \/*=NULL*\/)$/;"	f	class:OALConfig
OALConfig	src/win32/OALConfig.h	/^class OALConfig : public CDialog$/;"	c
OAMViewer	src/wx/gfxviewers.cpp	/^	OAMViewer() : GfxViewer(wxT("OAMViewer"), 64, 64)$/;"	f	class:Viewers::OAMViewer
OAMViewer	src/wx/gfxviewers.cpp	/^    class OAMViewer : public GfxViewer$/;"	c	namespace:Viewers	file:
OAMViewer	src/wx/gfxviewers.cpp	/^void MainFrame::OAMViewer()$/;"	f	class:MainFrame
OBJS	src/libretro/Makefile	/^OBJS := $(VBA_COBJ) $(VBA_CXXOBJ) $(UTIL_OBJS) libretro.o UtilRetro.o SoundRetro.o scrc32.o$/;"	m
OFFSET_ASR	src/gba/GBA-arm.cpp	1512;"	d	file:
OFFSET_IMM	src/gba/GBA-arm.cpp	1501;"	d	file:
OFFSET_IMM8	src/gba/GBA-arm.cpp	1503;"	d	file:
OFFSET_LSL	src/gba/GBA-arm.cpp	1507;"	d	file:
OFFSET_LSR	src/gba/GBA-arm.cpp	1509;"	d	file:
OFFSET_REG	src/gba/GBA-arm.cpp	1505;"	d	file:
OFFSET_ROR	src/gba/GBA-arm.cpp	1521;"	d	file:
ONE	src/filters/2xSaImmx.asm	/^ONE           dd 0x00010001,0x00010001$/;"	d
ONE_STATE	fex/7z_C/Ppmd7.c	29;"	d	file:
ONLOAD_CMDEN	src/wx/wxvbam.h	106;"	d
OPENALFNTABLE	src/win32/LoadOAL.h	/^} OPENALFNTABLE, *LPOPENALFNTABLE;$/;"	t	typeref:struct:__anon61
OPENALFNTABLE	src/wx/openal.h	/^struct OPENALFNTABLE {$/;"	s
OPENAL_SOUND	src/win32/VBA.h	/^	, OPENAL_SOUND = 1$/;"	e	enum:AUDIO_API
OPENFILENAMEEX	src/win32/FileDlg.h	/^struct OPENFILENAMEEX : public OPENFILENAME {$/;"	s
OPENGL	src/win32/Display.h	/^  OPENGL = 1$/;"	e	enum:DISPLAY_TYPE
OP_ADC	src/gba/GBA-arm.cpp	620;"	d	file:
OP_ADC	src/gba/GBA-arm.cpp	993;"	d	file:
OP_ADCS	src/gba/GBA-arm.cpp	1000;"	d	file:
OP_ADCS	src/gba/GBA-arm.cpp	624;"	d	file:
OP_ADD	src/gba/GBA-arm.cpp	616;"	d	file:
OP_ADD	src/gba/GBA-arm.cpp	983;"	d	file:
OP_ADDS	src/gba/GBA-arm.cpp	619;"	d	file:
OP_ADDS	src/gba/GBA-arm.cpp	990;"	d	file:
OP_AND	src/gba/GBA-arm.cpp	600;"	d	file:
OP_AND	src/gba/GBA-arm.cpp	947;"	d	file:
OP_ANDS	src/gba/GBA-arm.cpp	603;"	d	file:
OP_ANDS	src/gba/GBA-arm.cpp	952;"	d	file:
OP_BIC	src/gba/GBA-arm.cpp	1063;"	d	file:
OP_BIC	src/gba/GBA-arm.cpp	656;"	d	file:
OP_BICS	src/gba/GBA-arm.cpp	1068;"	d	file:
OP_BICS	src/gba/GBA-arm.cpp	660;"	d	file:
OP_CMN	src/gba/GBA-arm.cpp	1040;"	d	file:
OP_CMN	src/gba/GBA-arm.cpp	646;"	d	file:
OP_CMP	src/gba/GBA-arm.cpp	1033;"	d	file:
OP_CMP	src/gba/GBA-arm.cpp	643;"	d	file:
OP_EOR	src/gba/GBA-arm.cpp	604;"	d	file:
OP_EOR	src/gba/GBA-arm.cpp	955;"	d	file:
OP_EORS	src/gba/GBA-arm.cpp	607;"	d	file:
OP_EORS	src/gba/GBA-arm.cpp	960;"	d	file:
OP_LDR	src/gba/GBA-arm.cpp	1537;"	d	file:
OP_LDRB	src/gba/GBA-arm.cpp	1539;"	d	file:
OP_LDRH	src/gba/GBA-arm.cpp	1538;"	d	file:
OP_LDRSB	src/gba/GBA-arm.cpp	1541;"	d	file:
OP_LDRSH	src/gba/GBA-arm.cpp	1540;"	d	file:
OP_MLA	src/gba/GBA-arm.cpp	1267;"	d	file:
OP_MLAL	src/gba/GBA-arm.cpp	1274;"	d	file:
OP_MOV	src/gba/GBA-arm.cpp	1055;"	d	file:
OP_MOV	src/gba/GBA-arm.cpp	653;"	d	file:
OP_MOVS	src/gba/GBA-arm.cpp	1060;"	d	file:
OP_MOVS	src/gba/GBA-arm.cpp	655;"	d	file:
OP_MUL	src/gba/GBA-arm.cpp	1265;"	d	file:
OP_MULL	src/gba/GBA-arm.cpp	1269;"	d	file:
OP_MVN	src/gba/GBA-arm.cpp	1071;"	d	file:
OP_MVN	src/gba/GBA-arm.cpp	661;"	d	file:
OP_MVNS	src/gba/GBA-arm.cpp	1076;"	d	file:
OP_MVNS	src/gba/GBA-arm.cpp	664;"	d	file:
OP_ORR	src/gba/GBA-arm.cpp	1047;"	d	file:
OP_ORR	src/gba/GBA-arm.cpp	649;"	d	file:
OP_ORRS	src/gba/GBA-arm.cpp	1052;"	d	file:
OP_ORRS	src/gba/GBA-arm.cpp	652;"	d	file:
OP_RSB	src/gba/GBA-arm.cpp	612;"	d	file:
OP_RSB	src/gba/GBA-arm.cpp	973;"	d	file:
OP_RSBS	src/gba/GBA-arm.cpp	615;"	d	file:
OP_RSBS	src/gba/GBA-arm.cpp	980;"	d	file:
OP_RSC	src/gba/GBA-arm.cpp	1013;"	d	file:
OP_RSC	src/gba/GBA-arm.cpp	631;"	d	file:
OP_RSCS	src/gba/GBA-arm.cpp	1020;"	d	file:
OP_RSCS	src/gba/GBA-arm.cpp	636;"	d	file:
OP_SBC	src/gba/GBA-arm.cpp	1003;"	d	file:
OP_SBC	src/gba/GBA-arm.cpp	625;"	d	file:
OP_SBCS	src/gba/GBA-arm.cpp	1010;"	d	file:
OP_SBCS	src/gba/GBA-arm.cpp	630;"	d	file:
OP_SMLAL	src/gba/GBA-arm.cpp	1283;"	d	file:
OP_SMULL	src/gba/GBA-arm.cpp	1282;"	d	file:
OP_STR	src/gba/GBA-arm.cpp	1534;"	d	file:
OP_STRB	src/gba/GBA-arm.cpp	1536;"	d	file:
OP_STRH	src/gba/GBA-arm.cpp	1535;"	d	file:
OP_SUB	src/gba/GBA-arm.cpp	608;"	d	file:
OP_SUB	src/gba/GBA-arm.cpp	963;"	d	file:
OP_SUBS	src/gba/GBA-arm.cpp	611;"	d	file:
OP_SUBS	src/gba/GBA-arm.cpp	970;"	d	file:
OP_TEQ	src/gba/GBA-arm.cpp	1028;"	d	file:
OP_TEQ	src/gba/GBA-arm.cpp	640;"	d	file:
OP_TST	src/gba/GBA-arm.cpp	1023;"	d	file:
OP_TST	src/gba/GBA-arm.cpp	637;"	d	file:
OP_UMLAL	src/gba/GBA-arm.cpp	1281;"	d	file:
OP_UMULL	src/gba/GBA-arm.cpp	1280;"	d	file:
ORIG_NAME	src/common/memgzio.c	61;"	d	file:
OSD_TIME	src/wx/wxvbam.h	299;"	d
OS_CODE	src/common/memgzio.c	31;"	d	file:
OamView	src/win32/OamView.cpp	/^OamView::OamView(CWnd* pParent \/*=NULL*\/)$/;"	f	class:OamView
OamView	src/win32/OamView.h	/^class OamView : public ResizeDlg, IUpdateListener$/;"	c
Object	src/gba/elf.h	/^struct Object {$/;"	s
Offset	src/win32/WinHelper.h	/^      inline void Offset( int cx, int cy )$/;"	f	class:WinHelper::CRect
On16Bit	src/win32/GBMemoryViewerDlg.cpp	/^void GBMemoryViewerDlg::On16Bit()$/;"	f	class:GBMemoryViewerDlg
On16Bit	src/win32/MemoryViewerDlg.cpp	/^void MemoryViewerDlg::On16Bit()$/;"	f	class:MemoryViewerDlg
On16Colors	src/win32/TileView.cpp	/^void TileView::On16Colors()$/;"	f	class:TileView
On1x	src/win32/GBPrinterDlg.cpp	/^void GBPrinterDlg::On1x()$/;"	f	class:GBPrinterDlg
On256Colors	src/win32/TileView.cpp	/^void TileView::On256Colors()$/;"	f	class:TileView
On2x	src/win32/GBPrinterDlg.cpp	/^void GBPrinterDlg::On2x()$/;"	f	class:GBPrinterDlg
On32Bit	src/win32/GBMemoryViewerDlg.cpp	/^void GBMemoryViewerDlg::On32Bit()$/;"	f	class:GBMemoryViewerDlg
On32Bit	src/win32/MemoryViewerDlg.cpp	/^void MemoryViewerDlg::On32Bit()$/;"	f	class:MemoryViewerDlg
On3x	src/win32/GBPrinterDlg.cpp	/^void GBPrinterDlg::On3x()$/;"	f	class:GBPrinterDlg
On4x	src/win32/GBPrinterDlg.cpp	/^void GBPrinterDlg::On4x()$/;"	f	class:GBPrinterDlg
On8Bit	src/win32/GBMemoryViewerDlg.cpp	/^void GBMemoryViewerDlg::On8Bit()$/;"	f	class:GBMemoryViewerDlg
On8Bit	src/win32/MemoryViewerDlg.cpp	/^void MemoryViewerDlg::On8Bit()$/;"	f	class:MemoryViewerDlg
OnActivate	src/win32/MainWnd.cpp	/^void MainWnd::OnActivate(UINT nState, CWnd* pWndOther, BOOL bMinimized)$/;"	f	class:MainWnd
OnActivate	src/wx/wxvbam.cpp	/^void MainFrame::OnActivate(wxActivateEvent &event)$/;"	f	class:MainFrame
OnAddCheat	src/win32/GBACheats.cpp	/^void GBACheatList::OnAddCheat()$/;"	f	class:GBACheatList
OnAddCheat	src/win32/GBACheats.cpp	/^void GBACheatSearch::OnAddCheat()$/;"	f	class:GBACheatSearch
OnAddCheat	src/win32/GBCheatsDlg.cpp	/^void GBCheatSearch::OnAddCheat()$/;"	f	class:GBCheatSearch
OnAddCode	src/win32/GBACheats.cpp	/^void GBACheatList::OnAddCode()$/;"	f	class:GBACheatList
OnAddCodebreaker	src/win32/GBACheats.cpp	/^void GBACheatList::OnAddCodebreaker()$/;"	f	class:GBACheatList
OnAddGameshark	src/win32/GBACheats.cpp	/^void GBACheatList::OnAddGameshark()$/;"	f	class:GBACheatList
OnAddGgCheat	src/win32/GBCheatsDlg.cpp	/^void GBCheatList::OnAddGgCheat()$/;"	f	class:GBCheatList
OnAddGsCheat	src/win32/GBCheatsDlg.cpp	/^void GBCheatList::OnAddGsCheat()$/;"	f	class:GBCheatList
OnApply	src/win32/IOViewer.cpp	/^void IOViewer::OnApply()$/;"	f	class:IOViewer
OnArm	src/win32/Disassemble.cpp	/^void Disassemble::OnArm()$/;"	f	class:Disassemble
OnAssign	src/win32/AccelEditor.cpp	/^void AccelEditor::OnAssign()$/;"	f	class:AccelEditor
OnAudioCoreSettings	src/win32/MainWndOptions.cpp	/^void MainWnd::OnAudioCoreSettings()$/;"	f	class:MainWnd
OnAutoUpdate	src/win32/Disassemble.cpp	/^void Disassemble::OnAutoUpdate()$/;"	f	class:Disassemble
OnAutoUpdate	src/win32/GBDisassemble.cpp	/^void GBDisassemble::OnAutoUpdate()$/;"	f	class:GBDisassemble
OnAutoUpdate	src/win32/GBMapView.cpp	/^void GBMapView::OnAutoUpdate()$/;"	f	class:GBMapView
OnAutoUpdate	src/win32/GBMemoryViewerDlg.cpp	/^void GBMemoryViewerDlg::OnAutoUpdate()$/;"	f	class:GBMemoryViewerDlg
OnAutoUpdate	src/win32/GBOamView.cpp	/^void GBOamView::OnAutoUpdate()$/;"	f	class:GBOamView
OnAutoUpdate	src/win32/GBPaletteView.cpp	/^void GBPaletteView::OnAutoUpdate()$/;"	f	class:GBPaletteView
OnAutoUpdate	src/win32/GBTileView.cpp	/^void GBTileView::OnAutoUpdate()$/;"	f	class:GBTileView
OnAutoUpdate	src/win32/IOViewer.cpp	/^void IOViewer::OnAutoUpdate()$/;"	f	class:IOViewer
OnAutoUpdate	src/win32/MapView.cpp	/^void MapView::OnAutoUpdate()$/;"	f	class:MapView
OnAutoUpdate	src/win32/MemoryViewerDlg.cpp	/^void MemoryViewerDlg::OnAutoUpdate()$/;"	f	class:MemoryViewerDlg
OnAutoUpdate	src/win32/OamView.cpp	/^void OamView::OnAutoUpdate()$/;"	f	class:OamView
OnAutoUpdate	src/win32/PaletteView.cpp	/^void PaletteView::OnAutoUpdate()$/;"	f	class:PaletteView
OnAutoUpdate	src/win32/TileView.cpp	/^void TileView::OnAutoUpdate()$/;"	f	class:TileView
OnAutomatic	src/win32/Disassemble.cpp	/^void Disassemble::OnAutomatic()$/;"	f	class:Disassemble
OnBank0	src/win32/GBMapView.cpp	/^void GBMapView::OnBank0()$/;"	f	class:GBMapView
OnBank0	src/win32/GBTileView.cpp	/^void GBTileView::OnBank0()$/;"	f	class:GBTileView
OnBank1	src/win32/GBMapView.cpp	/^void GBMapView::OnBank1()$/;"	f	class:GBMapView
OnBank1	src/win32/GBTileView.cpp	/^void GBTileView::OnBank1()$/;"	f	class:GBTileView
OnBatteryDir	src/win32/Directories.cpp	/^void Directories::OnBatteryDir()$/;"	f	class:Directories
OnBg0	src/win32/GBMapView.cpp	/^void GBMapView::OnBg0()$/;"	f	class:GBMapView
OnBg0	src/win32/MapView.cpp	/^void MapView::OnBg0()$/;"	f	class:MapView
OnBg1	src/win32/GBMapView.cpp	/^void GBMapView::OnBg1()$/;"	f	class:GBMapView
OnBg1	src/win32/MapView.cpp	/^void MapView::OnBg1()$/;"	f	class:MapView
OnBg2	src/win32/MapView.cpp	/^void MapView::OnBg2()$/;"	f	class:MapView
OnBg3	src/win32/MapView.cpp	/^void MapView::OnBg3()$/;"	f	class:MapView
OnBnClickedAppendmode	src/win32/Joypad.cpp	/^void JoypadConfig::OnBnClickedAppendmode()$/;"	f	class:JoypadConfig
OnBnClickedAppendmode	src/win32/Joypad.cpp	/^void MotionConfig::OnBnClickedAppendmode()$/;"	f	class:MotionConfig
OnBnClickedChangeBackdrop	src/win32/PaletteView.cpp	/^void PaletteView::OnBnClickedChangeBackdrop()$/;"	f	class:PaletteView
OnBnClickedClearAll	src/win32/Joypad.cpp	/^void JoypadConfig::OnBnClickedClearAll()$/;"	f	class:JoypadConfig
OnBnClickedDefaultVolume	src/win32/AudioCoreSettingsDlg.cpp	/^void AudioCoreSettingsDlg::OnBnClickedDefaultVolume()$/;"	f	class:AudioCoreSettingsDlg
OnBnClickedJoybusEnable	src/win32/JoybusOptions.cpp	/^void JoybusOptions::OnBnClickedJoybusEnable()$/;"	f	class:JoybusOptions
OnBnClickedOk	src/win32/JoybusOptions.cpp	/^void JoybusOptions::OnBnClickedOk()$/;"	f	class:JoybusOptions
OnBnClickedSelectGbBiosPath	src/win32/BIOSDialog.cpp	/^void BIOSDialog::OnBnClickedSelectGbBiosPath()$/;"	f	class:BIOSDialog
OnBnClickedSelectGbaBiosPath	src/win32/BIOSDialog.cpp	/^void BIOSDialog::OnBnClickedSelectGbaBiosPath()$/;"	f	class:BIOSDialog
OnBnClickedSelectGbcBiosPath	src/win32/BIOSDialog.cpp	/^void BIOSDialog::OnBnClickedSelectGbcBiosPath()$/;"	f	class:BIOSDialog
OnCancel	src/win32/AccelEditor.cpp	/^void AccelEditor::OnCancel()$/;"	f	class:AccelEditor
OnCancel	src/win32/Associate.cpp	/^void Associate::OnCancel()$/;"	f	class:Associate
OnCancel	src/win32/Directories.cpp	/^void Directories::OnCancel()$/;"	f	class:Directories
OnCancel	src/win32/ExportGSASnapshot.cpp	/^void ExportGSASnapshot::OnCancel()$/;"	f	class:ExportGSASnapshot
OnCancel	src/win32/GBACheats.cpp	/^void AddCBACode::OnCancel()$/;"	f	class:AddCBACode
OnCancel	src/win32/GBACheats.cpp	/^void AddCheat::OnCancel()$/;"	f	class:AddCheat
OnCancel	src/win32/GBACheats.cpp	/^void AddCheatCode::OnCancel()$/;"	f	class:AddCheatCode
OnCancel	src/win32/GBACheats.cpp	/^void AddGSACode::OnCancel()$/;"	f	class:AddGSACode
OnCancel	src/win32/GBCheatsDlg.cpp	/^void AddGBCheat::OnCancel()$/;"	f	class:AddGBCheat
OnCancel	src/win32/GBCheatsDlg.cpp	/^void AddGBCode::OnCancel()$/;"	f	class:AddGBCode
OnCancel	src/win32/GBColorDlg.cpp	/^void GBColorDlg::OnCancel()$/;"	f	class:GBColorDlg
OnCancel	src/win32/GDBConnection.cpp	/^void GDBPortDlg::OnCancel()$/;"	f	class:GDBPortDlg
OnCancel	src/win32/GDBConnection.cpp	/^void GDBWaitingDlg::OnCancel()$/;"	f	class:GDBWaitingDlg
OnCancel	src/win32/GSACodeSelect.cpp	/^void GSACodeSelect::OnCancel()$/;"	f	class:GSACodeSelect
OnCancel	src/win32/GameOverrides.cpp	/^void GameOverrides::OnCancel()$/;"	f	class:GameOverrides
OnCancel	src/win32/Joypad.cpp	/^void JoypadConfig::OnCancel()$/;"	f	class:JoypadConfig
OnCancel	src/win32/Joypad.cpp	/^void MotionConfig::OnCancel()$/;"	f	class:MotionConfig
OnCancel	src/win32/LangSelect.cpp	/^void LangSelect::OnCancel()$/;"	f	class:LangSelect
OnCancel	src/win32/LinkOptions.cpp	/^void LinkOptions::OnCancel()$/;"	f	class:LinkOptions
OnCancel	src/win32/LinkOptions.cpp	/^void ServerWait::OnCancel()$/;"	f	class:ServerWait
OnCancel	src/win32/MaxScale.cpp	/^void MaxScale::OnCancel()$/;"	f	class:MaxScale
OnCancel	src/win32/MemoryViewerAddressSize.cpp	/^void MemoryViewerAddressSize::OnCancel()$/;"	f	class:MemoryViewerAddressSize
OnCancel	src/win32/RewindInterval.cpp	/^void RewindInterval::OnCancel()$/;"	f	class:RewindInterval
OnCancel	src/win32/SelectPlugin.cpp	/^void SelectPlugin::OnCancel()$/;"	f	class:SelectPlugin
OnCancel	src/win32/Throttle.cpp	/^void Throttle::OnCancel()$/;"	f	class:Throttle
OnCaptureDir	src/win32/Directories.cpp	/^void Directories::OnCaptureDir()$/;"	f	class:Directories
OnCbnSelchangeComboColorDepth	src/win32/FullscreenSettings.cpp	/^void FullscreenSettings::OnCbnSelchangeComboColorDepth()$/;"	f	class:FullscreenSettings
OnCbnSelchangeComboDevice	src/win32/FullscreenSettings.cpp	/^void FullscreenSettings::OnCbnSelchangeComboDevice()$/;"	f	class:FullscreenSettings
OnCbnSelchangeComboResolution	src/win32/FullscreenSettings.cpp	/^void FullscreenSettings::OnCbnSelchangeComboResolution()$/;"	f	class:FullscreenSettings
OnChangeSprite	src/win32/GBOamView.cpp	/^void GBOamView::OnChangeSprite()$/;"	f	class:GBOamView
OnChangeSprite	src/win32/OamView.cpp	/^void OamView::OnChangeSprite()$/;"	f	class:OamView
OnChar	src/win32/Joypad.cpp	/^void JoypadConfig::OnChar(UINT nChar, UINT nRepCnt, UINT nFlags)$/;"	f	class:JoypadConfig
OnCharbase0	src/win32/GBTileView.cpp	/^void GBTileView::OnCharbase0()$/;"	f	class:GBTileView
OnCharbase0	src/win32/TileView.cpp	/^void TileView::OnCharbase0()$/;"	f	class:TileView
OnCharbase1	src/win32/GBTileView.cpp	/^void GBTileView::OnCharbase1()$/;"	f	class:GBTileView
OnCharbase1	src/win32/TileView.cpp	/^void TileView::OnCharbase1()$/;"	f	class:TileView
OnCharbase2	src/win32/TileView.cpp	/^void TileView::OnCharbase2()$/;"	f	class:TileView
OnCharbase3	src/win32/TileView.cpp	/^void TileView::OnCharbase3()$/;"	f	class:TileView
OnCharbase4	src/win32/TileView.cpp	/^void TileView::OnCharbase4()$/;"	f	class:TileView
OnCheatsAutomaticsaveloadcheats	src/win32/MainWndCheats.cpp	/^void MainWnd::OnCheatsAutomaticsaveloadcheats()$/;"	f	class:MainWnd
OnCheatsCheatlist	src/win32/MainWndCheats.cpp	/^void MainWnd::OnCheatsCheatlist()$/;"	f	class:MainWnd
OnCheatsDisablecheats	src/win32/MainWndCheats.cpp	/^void MainWnd::OnCheatsDisablecheats()$/;"	f	class:MainWnd
OnCheatsLoadcheatlist	src/win32/MainWndCheats.cpp	/^void MainWnd::OnCheatsLoadcheatlist()$/;"	f	class:MainWnd
OnCheatsSavecheatlist	src/win32/MainWndCheats.cpp	/^void MainWnd::OnCheatsSavecheatlist()$/;"	f	class:MainWnd
OnCheatsSearchforcheats	src/win32/MainWndCheats.cpp	/^void MainWnd::OnCheatsSearchforcheats()$/;"	f	class:MainWnd
OnClear	src/win32/Logging.cpp	/^void Logging::OnClear()$/;"	f	class:Logging
OnClicked	src/win32/Hyperlink.cpp	/^void Hyperlink::OnClicked()$/;"	f	class:Hyperlink
OnClose	src/win32/Disassemble.cpp	/^void Disassemble::OnClose()$/;"	f	class:Disassemble
OnClose	src/win32/GBDisassemble.cpp	/^void GBDisassemble::OnClose()$/;"	f	class:GBDisassemble
OnClose	src/win32/GBMapView.cpp	/^void GBMapView::OnClose()$/;"	f	class:GBMapView
OnClose	src/win32/GBMemoryViewerDlg.cpp	/^void GBMemoryViewerDlg::OnClose()$/;"	f	class:GBMemoryViewerDlg
OnClose	src/win32/GBOamView.cpp	/^void GBOamView::OnClose()$/;"	f	class:GBOamView
OnClose	src/win32/GBPaletteView.cpp	/^void GBPaletteView::OnClose()$/;"	f	class:GBPaletteView
OnClose	src/win32/GBTileView.cpp	/^void GBTileView::OnClose()$/;"	f	class:GBTileView
OnClose	src/win32/GDBConnection.cpp	/^void GDBPortDlg::OnClose()$/;"	f	class:GDBPortDlg
OnClose	src/win32/GDBConnection.cpp	/^void GDBWaitingDlg::OnClose()$/;"	f	class:GDBWaitingDlg
OnClose	src/win32/IOViewer.cpp	/^void IOViewer::OnClose()$/;"	f	class:IOViewer
OnClose	src/win32/Logging.cpp	/^void Logging::OnClose()$/;"	f	class:Logging
OnClose	src/win32/MainWnd.cpp	/^void MainWnd::OnClose()$/;"	f	class:MainWnd
OnClose	src/win32/MapView.cpp	/^void MapView::OnClose()$/;"	f	class:MapView
OnClose	src/win32/MemoryViewerDlg.cpp	/^void MemoryViewerDlg::OnClose()$/;"	f	class:MemoryViewerDlg
OnClose	src/win32/OamView.cpp	/^void OamView::OnClose()$/;"	f	class:OamView
OnClose	src/win32/PaletteView.cpp	/^void PaletteView::OnClose()$/;"	f	class:PaletteView
OnClose	src/win32/TileView.cpp	/^void TileView::OnClose()$/;"	f	class:TileView
OnCmdLineParsed	src/wx/wxvbam.cpp	/^bool wxvbamApp::OnCmdLineParsed(wxCmdLineParser &cl)$/;"	f	class:wxvbamApp
OnColInfo	src/win32/GBMapView.cpp	/^LRESULT GBMapView::OnColInfo(WPARAM wParam, LPARAM)$/;"	f	class:GBMapView
OnColInfo	src/win32/GBOamView.cpp	/^LRESULT GBOamView::OnColInfo(WPARAM wParam, LPARAM lParam)$/;"	f	class:GBOamView
OnColInfo	src/win32/GBTileView.cpp	/^LRESULT GBTileView::OnColInfo(WPARAM wParam, LPARAM)$/;"	f	class:GBTileView
OnColInfo	src/win32/MapView.cpp	/^LRESULT MapView::OnColInfo(WPARAM wParam, LPARAM lParam)$/;"	f	class:MapView
OnColInfo	src/win32/OamView.cpp	/^LRESULT OamView::OnColInfo(WPARAM wParam, LPARAM lParam)$/;"	f	class:OamView
OnColInfo	src/win32/TileView.cpp	/^LRESULT TileView::OnColInfo(WPARAM wParam, LPARAM)$/;"	f	class:TileView
OnColorClicked	src/win32/GBColorDlg.cpp	/^void GBColorDlg::OnColorClicked(UINT id)$/;"	f	class:GBColorDlg
OnContextMenu	src/win32/MainWnd.cpp	/^void MainWnd::OnContextMenu(CWnd* pWnd, CPoint point)$/;"	f	class:MainWnd
OnCopy	src/win32/BugReport.cpp	/^void BugReport::OnCopy()$/;"	f	class:BugReport
OnDebugNextframe	src/win32/MainWndTools.cpp	/^void MainWnd::OnDebugNextframe()$/;"	f	class:MainWnd
OnDefault	src/win32/GBColorDlg.cpp	/^void GBColorDlg::OnDefault()$/;"	f	class:GBColorDlg
OnDefaultDeviceChanged	src/win32/XAudio2.cpp	/^	HRESULT STDMETHODCALLTYPE OnDefaultDeviceChanged( EDataFlow flow, ERole role, LPCWSTR pwstrDeviceId )$/;"	f	class:XAudio2_Device_Notifier
OnDefaultDeviceChanged	src/wx/xaudio2.cpp	/^	HRESULT STDMETHODCALLTYPE OnDefaultDeviceChanged( EDataFlow flow, ERole role, LPCWSTR pwstrDeviceId )$/;"	f	class:XAudio2_Device_Notifier
OnDefaults	src/win32/GameOverrides.cpp	/^void GameOverrides::OnDefaults()$/;"	f	class:GameOverrides
OnDestroy	src/win32/Joypad.cpp	/^void JoypadConfig::OnDestroy()$/;"	f	class:JoypadConfig
OnDestroy	src/win32/Joypad.cpp	/^void MotionConfig::OnDestroy()$/;"	f	class:MotionConfig
OnDeviceAdded	src/win32/XAudio2.cpp	/^	HRESULT STDMETHODCALLTYPE OnDeviceAdded( LPCWSTR pwstrDeviceId ) { return S_OK; }$/;"	f	class:XAudio2_Device_Notifier
OnDeviceAdded	src/wx/xaudio2.cpp	/^	HRESULT STDMETHODCALLTYPE OnDeviceAdded( LPCWSTR pwstrDeviceId ) { return S_OK; }$/;"	f	class:XAudio2_Device_Notifier
OnDeviceRemoved	src/win32/XAudio2.cpp	/^	HRESULT STDMETHODCALLTYPE OnDeviceRemoved( LPCWSTR pwstrDeviceId ) { return S_OK; }$/;"	f	class:XAudio2_Device_Notifier
OnDeviceRemoved	src/wx/xaudio2.cpp	/^	HRESULT STDMETHODCALLTYPE OnDeviceRemoved( LPCWSTR pwstrDeviceId ) { return S_OK; }$/;"	f	class:XAudio2_Device_Notifier
OnDeviceStateChanged	src/win32/XAudio2.cpp	/^	HRESULT STDMETHODCALLTYPE OnDeviceStateChanged( LPCWSTR pwstrDeviceId, DWORD dwNewState ) { return S_OK; }$/;"	f	class:XAudio2_Device_Notifier
OnDeviceStateChanged	src/wx/xaudio2.cpp	/^	HRESULT STDMETHODCALLTYPE OnDeviceStateChanged( LPCWSTR pwstrDeviceId, DWORD dwNewState ) { return S_OK; }$/;"	f	class:XAudio2_Device_Notifier
OnDraw	src/win32/BitmapControl.cpp	/^void BitmapControl::OnDraw(CDC* dc)$/;"	f	class:BitmapControl
OnDrawText	src/win32/LinkOptions.cpp	/^void CMyTabCtrl::OnDrawText(CDC& dc, CRect rc,$/;"	f	class:CMyTabCtrl
OnDropFile	src/wx/wxvbam.cpp	/^void MainFrame::OnDropFile(wxDropFilesEvent &event)$/;"	f	class:MainFrame
OnDropFiles	src/win32/MainWnd.cpp	/^void MainWnd::OnDropFiles(HDROP hDropInfo)$/;"	f	class:MainWnd
OnEditInput	src/win32/MemoryViewer.cpp	/^bool MemoryViewer::OnEditInput(UINT c)$/;"	f	class:MemoryViewer
OnEmulatorBiosfiles	src/win32/MainWndOptions.cpp	/^void MainWnd::OnEmulatorBiosfiles()$/;"	f	class:MainWnd
OnEnable	src/win32/GBACheats.cpp	/^void GBACheatList::OnEnable()$/;"	f	class:GBACheatList
OnEnable	src/win32/GBCheatsDlg.cpp	/^void GBCheatList::OnEnable()$/;"	f	class:GBCheatList
OnEnterSizeMove	src/win32/MainWnd.cpp	/^void MainWnd::OnEnterSizeMove()$/;"	f	class:MainWnd
OnEraseBkgnd	src/win32/BitmapControl.cpp	/^BOOL BitmapControl::OnEraseBkgnd(CDC* pDC)$/;"	f	class:BitmapControl
OnEraseBkgnd	src/win32/ColorControl.cpp	/^BOOL ColorControl::OnEraseBkgnd(CDC* pDC)$/;"	f	class:ColorControl
OnEraseBkgnd	src/win32/Hyperlink.cpp	/^BOOL Hyperlink::OnEraseBkgnd(CDC* pDC)$/;"	f	class:Hyperlink
OnEraseBkgnd	src/win32/MemoryViewer.cpp	/^BOOL MemoryViewer::OnEraseBkgnd(CDC* pDC)$/;"	f	class:MemoryViewer
OnEraseBkgnd	src/win32/PaletteViewControl.cpp	/^BOOL PaletteViewControl::OnEraseBkgnd(CDC* pDC)$/;"	f	class:PaletteViewControl
OnEraseBkgnd	src/win32/ZoomControl.cpp	/^BOOL ZoomControl::OnEraseBkgnd(CDC* pDC)$/;"	f	class:ZoomControl
OnErrspaceLog	src/win32/Logging.cpp	/^void Logging::OnErrspaceLog()$/;"	f	class:Logging
OnFileClose	src/win32/MainWndFile.cpp	/^void MainWnd::OnFileClose()$/;"	f	class:MainWnd
OnFileExit	src/win32/MainWndFile.cpp	/^void MainWnd::OnFileExit()$/;"	f	class:MainWnd
OnFileExportBatteryfile	src/win32/MainWndFile.cpp	/^void MainWnd::OnFileExportBatteryfile()$/;"	f	class:MainWnd
OnFileExportGamesharksnapshot	src/win32/MainWndFile.cpp	/^void MainWnd::OnFileExportGamesharksnapshot()$/;"	f	class:MainWnd
OnFileImportBatteryfile	src/win32/MainWndFile.cpp	/^void MainWnd::OnFileImportBatteryfile()$/;"	f	class:MainWnd
OnFileImportGamesharkcodefile	src/win32/MainWndFile.cpp	/^void MainWnd::OnFileImportGamesharkcodefile()$/;"	f	class:MainWnd
OnFileImportGamesharksnapshot	src/win32/MainWndFile.cpp	/^void MainWnd::OnFileImportGamesharksnapshot()$/;"	f	class:MainWnd
OnFileLoad	src/win32/MainWndFile.cpp	/^void MainWnd::OnFileLoad()$/;"	f	class:MainWnd
OnFileLoadSlot	src/win32/MainWndFile.cpp	/^BOOL MainWnd::OnFileLoadSlot(UINT nID)$/;"	f	class:MainWnd
OnFileLoadgameAutoloadmostrecent	src/win32/MainWndFile.cpp	/^void MainWnd::OnFileLoadgameAutoloadmostrecent()$/;"	f	class:MainWnd
OnFileLoadgameMostrecent	src/win32/MainWndFile.cpp	/^void MainWnd::OnFileLoadgameMostrecent()$/;"	f	class:MainWnd
OnFileOpenGB	src/win32/MainWndFile.cpp	/^void MainWnd::OnFileOpenGB()$/;"	f	class:MainWnd
OnFileOpenGBA	src/win32/MainWndFile.cpp	/^void MainWnd::OnFileOpenGBA()$/;"	f	class:MainWnd
OnFileOpenGBC	src/win32/MainWndFile.cpp	/^void MainWnd::OnFileOpenGBC()$/;"	f	class:MainWnd
OnFilePause	src/win32/MainWndFile.cpp	/^void MainWnd::OnFilePause()$/;"	f	class:MainWnd
OnFileRecentFile	src/win32/MainWndFile.cpp	/^BOOL MainWnd::OnFileRecentFile(UINT nID)$/;"	f	class:MainWnd
OnFileRecentFreeze	src/win32/MainWndFile.cpp	/^void MainWnd::OnFileRecentFreeze()$/;"	f	class:MainWnd
OnFileRecentReset	src/win32/MainWndFile.cpp	/^void MainWnd::OnFileRecentReset()$/;"	f	class:MainWnd
OnFileReset	src/win32/MainWndFile.cpp	/^void MainWnd::OnFileReset()$/;"	f	class:MainWnd
OnFileRominformation	src/win32/MainWndFile.cpp	/^void MainWnd::OnFileRominformation()$/;"	f	class:MainWnd
OnFileSave	src/win32/MainWndFile.cpp	/^void MainWnd::OnFileSave()$/;"	f	class:MainWnd
OnFileSaveSlot	src/win32/MainWndFile.cpp	/^BOOL MainWnd::OnFileSaveSlot(UINT nID)$/;"	f	class:MainWnd
OnFileSavegameOldestslot	src/win32/MainWndFile.cpp	/^void MainWnd::OnFileSavegameOldestslot()$/;"	f	class:MainWnd
OnFileScreencapture	src/win32/MainWndFile.cpp	/^void MainWnd::OnFileScreencapture()$/;"	f	class:MainWnd
OnFileTogglemenu	src/win32/MainWndFile.cpp	/^void MainWnd::OnFileTogglemenu()$/;"	f	class:MainWnd
OnFrame0	src/win32/MapView.cpp	/^void MapView::OnFrame0()$/;"	f	class:MapView
OnFrame1	src/win32/MapView.cpp	/^void MapView::OnFrame1()$/;"	f	class:MapView
OnGbcromDir	src/win32/Directories.cpp	/^void Directories::OnGbcromDir()$/;"	f	class:Directories
OnGbromDir	src/win32/Directories.cpp	/^void Directories::OnGbromDir()$/;"	f	class:Directories
OnGetDlgCode	src/win32/MemoryViewer.cpp	/^UINT MemoryViewer::OnGetDlgCode()$/;"	f	class:MemoryViewer
OnGetItemText	src/wx/guiinit.cpp	/^wxString CheatListCtrl::OnGetItemText(long item, long column) const$/;"	f	class:CheatListCtrl
OnGetdispinfoCheatList	src/win32/GBACheats.cpp	/^void GBACheatSearch::OnGetdispinfoCheatList(NMHDR* pNMHDR, LRESULT* pResult)$/;"	f	class:GBACheatSearch
OnGetdispinfoCheatList	src/win32/GBCheatsDlg.cpp	/^void GBCheatSearch::OnGetdispinfoCheatList(NMHDR* pNMHDR, LRESULT* pResult)$/;"	f	class:GBCheatSearch
OnGo	src/win32/Disassemble.cpp	/^void Disassemble::OnGo()$/;"	f	class:Disassemble
OnGo	src/win32/GBDisassemble.cpp	/^void GBDisassemble::OnGo()$/;"	f	class:GBDisassemble
OnGo	src/win32/GBMemoryViewerDlg.cpp	/^void GBMemoryViewerDlg::OnGo()$/;"	f	class:GBMemoryViewerDlg
OnGo	src/win32/MemoryViewerDlg.cpp	/^void MemoryViewerDlg::OnGo()$/;"	f	class:MemoryViewerDlg
OnGopc	src/win32/Disassemble.cpp	/^void Disassemble::OnGopc()$/;"	f	class:Disassemble
OnGopc	src/win32/GBDisassemble.cpp	/^void GBDisassemble::OnGopc()$/;"	f	class:GBDisassemble
OnHScroll	src/win32/GBOamView.cpp	/^void GBOamView::OnHScroll(UINT nSBCode, UINT nPos, CScrollBar* pScrollBar)$/;"	f	class:GBOamView
OnHScroll	src/win32/GBTileView.cpp	/^void GBTileView::OnHScroll(UINT nSBCode, UINT nPos, CScrollBar* pScrollBar)$/;"	f	class:GBTileView
OnHScroll	src/win32/OALConfig.cpp	/^void OALConfig::OnHScroll(UINT nSBCode, UINT nPos, CScrollBar* pScrollBar)$/;"	f	class:OALConfig
OnHScroll	src/win32/OamView.cpp	/^void OamView::OnHScroll(UINT nSBCode, UINT nPos, CScrollBar* pScrollBar)$/;"	f	class:OamView
OnHScroll	src/win32/TileView.cpp	/^void TileView::OnHScroll(UINT nSBCode, UINT nPos, CScrollBar* pScrollBar)$/;"	f	class:TileView
OnHScroll	src/win32/XAudio2_Config.cpp	/^void XAudio2_Config::OnHScroll(UINT nSBCode, UINT nPos, CScrollBar* pScrollBar)$/;"	f	class:XAudio2_Config
OnHelpAbout	src/win32/MainWndHelp.cpp	/^void MainWnd::OnHelpAbout()$/;"	f	class:MainWnd
OnHelpBugreport	src/win32/MainWndHelp.cpp	/^void MainWnd::OnHelpBugreport()$/;"	f	class:MainWnd
OnHelpFaq	src/win32/MainWndHelp.cpp	/^void MainWnd::OnHelpFaq()$/;"	f	class:MainWnd
OnHelpGnupubliclicense	src/win32/MainWndHelp.cpp	/^void MainWnd::OnHelpGnupubliclicense()$/;"	f	class:MainWnd
OnIdle	src/win32/VBA.cpp	/^BOOL VBA::OnIdle(LONG lCount)$/;"	f	class:VBA
OnIdle	src/wx/panel.cpp	/^void GameArea::OnIdle(wxIdleEvent &event)$/;"	f	class:GameArea
OnInit	src/wx/wxvbam.cpp	/^bool wxvbamApp::OnInit()$/;"	f	class:wxvbamApp
OnInitCmdLine	src/wx/wxvbam.cpp	/^void wxvbamApp::OnInitCmdLine(wxCmdLineParser &cl)$/;"	f	class:wxvbamApp
OnInitDialog	src/win32/AboutDialog.cpp	/^BOOL AboutDialog::OnInitDialog()$/;"	f	class:AboutDialog
OnInitDialog	src/win32/AccelEditor.cpp	/^BOOL AccelEditor::OnInitDialog()$/;"	f	class:AccelEditor
OnInitDialog	src/win32/Associate.cpp	/^BOOL Associate::OnInitDialog()$/;"	f	class:Associate
OnInitDialog	src/win32/AudioCoreSettingsDlg.cpp	/^BOOL AudioCoreSettingsDlg::OnInitDialog()$/;"	f	class:AudioCoreSettingsDlg
OnInitDialog	src/win32/BugReport.cpp	/^BOOL BugReport::OnInitDialog()$/;"	f	class:BugReport
OnInitDialog	src/win32/Directories.cpp	/^BOOL Directories::OnInitDialog()$/;"	f	class:Directories
OnInitDialog	src/win32/Disassemble.cpp	/^BOOL Disassemble::OnInitDialog()$/;"	f	class:Disassemble
OnInitDialog	src/win32/ExportGSASnapshot.cpp	/^BOOL ExportGSASnapshot::OnInitDialog()$/;"	f	class:ExportGSASnapshot
OnInitDialog	src/win32/FullscreenSettings.cpp	/^BOOL FullscreenSettings::OnInitDialog()$/;"	f	class:FullscreenSettings
OnInitDialog	src/win32/GBACheats.cpp	/^BOOL AddCBACode::OnInitDialog()$/;"	f	class:AddCBACode
OnInitDialog	src/win32/GBACheats.cpp	/^BOOL AddCheat::OnInitDialog()$/;"	f	class:AddCheat
OnInitDialog	src/win32/GBACheats.cpp	/^BOOL AddCheatCode::OnInitDialog()$/;"	f	class:AddCheatCode
OnInitDialog	src/win32/GBACheats.cpp	/^BOOL AddGSACode::OnInitDialog()$/;"	f	class:AddGSACode
OnInitDialog	src/win32/GBACheats.cpp	/^BOOL GBACheatList::OnInitDialog()$/;"	f	class:GBACheatList
OnInitDialog	src/win32/GBACheats.cpp	/^BOOL GBACheatSearch::OnInitDialog()$/;"	f	class:GBACheatSearch
OnInitDialog	src/win32/GBCheatsDlg.cpp	/^BOOL AddGBCheat::OnInitDialog()$/;"	f	class:AddGBCheat
OnInitDialog	src/win32/GBCheatsDlg.cpp	/^BOOL AddGBCode::OnInitDialog()$/;"	f	class:AddGBCode
OnInitDialog	src/win32/GBCheatsDlg.cpp	/^BOOL GBCheatList::OnInitDialog()$/;"	f	class:GBCheatList
OnInitDialog	src/win32/GBCheatsDlg.cpp	/^BOOL GBCheatSearch::OnInitDialog()$/;"	f	class:GBCheatSearch
OnInitDialog	src/win32/GBColorDlg.cpp	/^BOOL GBColorDlg::OnInitDialog()$/;"	f	class:GBColorDlg
OnInitDialog	src/win32/GBDisassemble.cpp	/^BOOL GBDisassemble::OnInitDialog()$/;"	f	class:GBDisassemble
OnInitDialog	src/win32/GBMapView.cpp	/^BOOL GBMapView::OnInitDialog()$/;"	f	class:GBMapView
OnInitDialog	src/win32/GBMemoryViewerDlg.cpp	/^BOOL GBMemoryViewerDlg::OnInitDialog()$/;"	f	class:GBMemoryViewerDlg
OnInitDialog	src/win32/GBOamView.cpp	/^BOOL GBOamView::OnInitDialog()$/;"	f	class:GBOamView
OnInitDialog	src/win32/GBPaletteView.cpp	/^BOOL GBPaletteView::OnInitDialog()$/;"	f	class:GBPaletteView
OnInitDialog	src/win32/GBPrinterDlg.cpp	/^BOOL GBPrinterDlg::OnInitDialog()$/;"	f	class:GBPrinterDlg
OnInitDialog	src/win32/GBTileView.cpp	/^BOOL GBTileView::OnInitDialog()$/;"	f	class:GBTileView
OnInitDialog	src/win32/GDBConnection.cpp	/^BOOL GDBPortDlg::OnInitDialog()$/;"	f	class:GDBPortDlg
OnInitDialog	src/win32/GDBConnection.cpp	/^BOOL GDBWaitingDlg::OnInitDialog()$/;"	f	class:GDBWaitingDlg
OnInitDialog	src/win32/GSACodeSelect.cpp	/^BOOL GSACodeSelect::OnInitDialog()$/;"	f	class:GSACodeSelect
OnInitDialog	src/win32/GameOverrides.cpp	/^BOOL GameOverrides::OnInitDialog()$/;"	f	class:GameOverrides
OnInitDialog	src/win32/IOViewer.cpp	/^BOOL IOViewer::OnInitDialog()$/;"	f	class:IOViewer
OnInitDialog	src/win32/JoybusOptions.cpp	/^BOOL JoybusOptions::OnInitDialog()$/;"	f	class:JoybusOptions
OnInitDialog	src/win32/Joypad.cpp	/^BOOL JoypadConfig::OnInitDialog()$/;"	f	class:JoypadConfig
OnInitDialog	src/win32/Joypad.cpp	/^BOOL MotionConfig::OnInitDialog()$/;"	f	class:MotionConfig
OnInitDialog	src/win32/LangSelect.cpp	/^BOOL LangSelect::OnInitDialog()$/;"	f	class:LangSelect
OnInitDialog	src/win32/LinkOptions.cpp	/^BOOL LinkClient::OnInitDialog()$/;"	f	class:LinkClient
OnInitDialog	src/win32/LinkOptions.cpp	/^BOOL LinkGeneral::OnInitDialog(){$/;"	f	class:LinkGeneral
OnInitDialog	src/win32/LinkOptions.cpp	/^BOOL LinkOptions::OnInitDialog(){$/;"	f	class:LinkOptions
OnInitDialog	src/win32/LinkOptions.cpp	/^BOOL LinkServer::OnInitDialog()$/;"	f	class:LinkServer
OnInitDialog	src/win32/Logging.cpp	/^BOOL Logging::OnInitDialog()$/;"	f	class:Logging
OnInitDialog	src/win32/MapView.cpp	/^BOOL MapView::OnInitDialog()$/;"	f	class:MapView
OnInitDialog	src/win32/MaxScale.cpp	/^BOOL MaxScale::OnInitDialog()$/;"	f	class:MaxScale
OnInitDialog	src/win32/MemoryViewerAddressSize.cpp	/^BOOL MemoryViewerAddressSize::OnInitDialog()$/;"	f	class:MemoryViewerAddressSize
OnInitDialog	src/win32/MemoryViewerDlg.cpp	/^BOOL MemoryViewerDlg::OnInitDialog()$/;"	f	class:MemoryViewerDlg
OnInitDialog	src/win32/OALConfig.cpp	/^BOOL OALConfig::OnInitDialog()$/;"	f	class:OALConfig
OnInitDialog	src/win32/OamView.cpp	/^BOOL OamView::OnInitDialog()$/;"	f	class:OamView
OnInitDialog	src/win32/PaletteView.cpp	/^BOOL PaletteView::OnInitDialog()$/;"	f	class:PaletteView
OnInitDialog	src/win32/RewindInterval.cpp	/^BOOL RewindInterval::OnInitDialog()$/;"	f	class:RewindInterval
OnInitDialog	src/win32/RomInfo.cpp	/^BOOL RomInfoGB::OnInitDialog()$/;"	f	class:RomInfoGB
OnInitDialog	src/win32/RomInfo.cpp	/^BOOL RomInfoGBA::OnInitDialog()$/;"	f	class:RomInfoGBA
OnInitDialog	src/win32/SelectPlugin.cpp	/^BOOL SelectPlugin::OnInitDialog()$/;"	f	class:SelectPlugin
OnInitDialog	src/win32/Throttle.cpp	/^BOOL Throttle::OnInitDialog()$/;"	f	class:Throttle
OnInitDialog	src/win32/TileView.cpp	/^BOOL TileView::OnInitDialog()$/;"	f	class:TileView
OnInitDialog	src/win32/XAudio2_Config.cpp	/^BOOL XAudio2_Config::OnInitDialog()$/;"	f	class:XAudio2_Config
OnInitMenu	src/win32/MainWnd.cpp	/^void MainWnd::OnInitMenu(CMenu* pMenu)$/;"	f	class:MainWnd
OnInitMenuPopup	src/win32/MainWnd.cpp	/^void MainWnd::OnInitMenuPopup(CMenu* pMenu, UINT nIndex, BOOL bSysMenu)$/;"	f	class:MainWnd
OnInitialUpdate	src/win32/BitmapControl.cpp	/^void BitmapControl::OnInitialUpdate()$/;"	f	class:BitmapControl
OnItemchangedCheatList	src/win32/GBACheats.cpp	/^void GBACheatList::OnItemchangedCheatList(NMHDR* pNMHDR, LRESULT* pResult)$/;"	f	class:GBACheatList
OnItemchangedCheatList	src/win32/GBACheats.cpp	/^void GBACheatSearch::OnItemchangedCheatList(NMHDR* pNMHDR, LRESULT* pResult)$/;"	f	class:GBACheatSearch
OnItemchangedCheatList	src/win32/GBCheatsDlg.cpp	/^void GBCheatList::OnItemchangedCheatList(NMHDR* pNMHDR, LRESULT* pResult)$/;"	f	class:GBCheatList
OnItemchangedCheatList	src/win32/GBCheatsDlg.cpp	/^void GBCheatSearch::OnItemchangedCheatList(NMHDR* pNMHDR, LRESULT* pResult)$/;"	f	class:GBCheatSearch
OnJoy	src/wx/widgets/joyedit.cpp	/^void wxJoyKeyTextCtrl::OnJoy(wxSDLJoyEvent &event)$/;"	f	class:wxJoyKeyTextCtrl
OnJoyConfig	src/win32/Joypad.cpp	/^LRESULT JoypadEditControl::OnJoyConfig(WPARAM wParam, LPARAM lParam)$/;"	f	class:JoypadEditControl
OnKeyDown	src/win32/MemoryViewer.cpp	/^void MemoryViewer::OnKeyDown(UINT nChar, UINT nRepCnt, UINT nFlags)$/;"	f	class:MemoryViewer
OnKeyDown	src/wx/panel.cpp	/^void GameArea::OnKeyDown(wxKeyEvent &ev)$/;"	f	class:GameArea
OnKeyDown	src/wx/widgets/keyedit.cpp	/^void wxKeyTextCtrl::OnKeyDown(wxKeyEvent &event)$/;"	f	class:wxKeyTextCtrl
OnKeyUp	src/wx/panel.cpp	/^void GameArea::OnKeyUp(wxKeyEvent &ev)$/;"	f	class:GameArea
OnKeyUp	src/wx/widgets/keyedit.cpp	/^void wxKeyTextCtrl::OnKeyUp(wxKeyEvent &event)$/;"	f	class:wxKeyTextCtrl
OnKillFocus	src/win32/MemoryViewer.cpp	/^void MemoryViewer::OnKillFocus(CWnd* pNewWnd)$/;"	f	class:MemoryViewer
OnLButtonDown	src/win32/BitmapControl.cpp	/^void BitmapControl::OnLButtonDown(UINT nFlags, CPoint pt)$/;"	f	class:BitmapControl
OnLButtonDown	src/win32/MemoryViewer.cpp	/^void MemoryViewer::OnLButtonDown(UINT nFlags, CPoint point)$/;"	f	class:MemoryViewer
OnLButtonDown	src/win32/PaletteViewControl.cpp	/^void PaletteViewControl::OnLButtonDown(UINT nFlags, CPoint point)$/;"	f	class:PaletteViewControl
OnLButtonDown	src/win32/ZoomControl.cpp	/^void ZoomControl::OnLButtonDown(UINT nFlags, CPoint point)$/;"	f	class:ZoomControl
OnLinkConnect	src/win32/LinkOptions.cpp	/^void LinkClient::OnLinkConnect()$/;"	f	class:LinkClient
OnLinkOptions	src/win32/MainWndOptions.cpp	/^void MainWnd::OnLinkOptions() { }$/;"	f	class:MainWnd
OnLinkOptions	src/win32/MainWndOptions.cpp	/^void MainWnd::OnLinkOptions()$/;"	f	class:MainWnd
OnLoad	src/win32/GBMemoryViewerDlg.cpp	/^void GBMemoryViewerDlg::OnLoad()$/;"	f	class:GBMemoryViewerDlg
OnLoad	src/win32/MemoryViewerDlg.cpp	/^void MemoryViewerDlg::OnLoad()$/;"	f	class:MemoryViewerDlg
OnLoadgameDonotchangebatterysave	src/win32/MainWndFile.cpp	/^void MainWnd::OnLoadgameDonotchangebatterysave()$/;"	f	class:MainWnd
OnLoadgameDonotchangecheatlist	src/win32/MainWndFile.cpp	/^void MainWnd::OnLoadgameDonotchangecheatlist()$/;"	f	class:MainWnd
OnMapInfo	src/win32/GBMapView.cpp	/^LRESULT GBMapView::OnMapInfo(WPARAM wParam, LPARAM lParam)$/;"	f	class:GBMapView
OnMapInfo	src/win32/GBOamView.cpp	/^LRESULT GBOamView::OnMapInfo(WPARAM, LPARAM lParam)$/;"	f	class:GBOamView
OnMapInfo	src/win32/GBTileView.cpp	/^LRESULT GBTileView::OnMapInfo(WPARAM wParam, LPARAM lParam)$/;"	f	class:GBTileView
OnMapInfo	src/win32/MapView.cpp	/^LRESULT MapView::OnMapInfo(WPARAM wParam, LPARAM lParam)$/;"	f	class:MapView
OnMapInfo	src/win32/OamView.cpp	/^LRESULT OamView::OnMapInfo(WPARAM wParam, LPARAM lParam)$/;"	f	class:OamView
OnMapInfo	src/win32/TileView.cpp	/^LRESULT TileView::OnMapInfo(WPARAM wParam, LPARAM lParam)$/;"	f	class:TileView
OnMaxtextLog	src/win32/Logging.cpp	/^void Logging::OnMaxtextLog()$/;"	f	class:Logging
OnMenu	src/wx/wxvbam.cpp	/^void MainFrame::OnMenu(wxContextMenuEvent &event)$/;"	f	class:MainFrame
OnMouseEvent	src/wx/widgets/checkedlistctrl.cpp	/^void wxCheckedListCtrl::OnMouseEvent(wxMouseEvent& event)$/;"	f	class:wxCheckedListCtrl
OnMouseMove	src/win32/Hyperlink.cpp	/^void Hyperlink::OnMouseMove(UINT nFlags, CPoint point)$/;"	f	class:Hyperlink
OnMouseMove	src/win32/MainWnd.cpp	/^void MainWnd::OnMouseMove(UINT nFlags, CPoint point)$/;"	f	class:MainWnd
OnMove	src/win32/MainWnd.cpp	/^void MainWnd::OnMove(int x, int y)$/;"	f	class:MainWnd
OnMoving	src/win32/MainWnd.cpp	/^void MainWnd::OnMoving(UINT fwSide, LPRECT pRect)$/;"	f	class:MainWnd
OnMySysCommand	src/win32/MainWnd.cpp	/^LRESULT MainWnd::OnMySysCommand(WPARAM wParam, LPARAM lParam)$/;"	f	class:MainWnd
OnNMDblclkCheatList	src/win32/GBCheatsDlg.cpp	/^void GBCheatList::OnNMDblclkCheatList(NMHDR *pNMHDR, LRESULT *pResult)$/;"	f	class:GBCheatList
OnNcLButtonDown	src/win32/MainWnd.cpp	/^void MainWnd::OnNcLButtonDown(UINT nHitTest, CPoint point)$/;"	f	class:MainWnd
OnNcRButtonDown	src/win32/MainWnd.cpp	/^void MainWnd::OnNcRButtonDown(UINT nHitTest, CPoint point)$/;"	f	class:MainWnd
OnNext	src/win32/Disassemble.cpp	/^void Disassemble::OnNext()$/;"	f	class:Disassemble
OnNext	src/win32/GBDisassemble.cpp	/^void GBDisassemble::OnNext()$/;"	f	class:GBDisassemble
OnNumberType	src/win32/GBACheats.cpp	/^void AddCheat::OnNumberType(UINT id)$/;"	f	class:AddCheat
OnNumberType	src/win32/GBACheats.cpp	/^void GBACheatSearch::OnNumberType(UINT id)$/;"	f	class:GBACheatSearch
OnNumberType	src/win32/GBCheatsDlg.cpp	/^void AddGBCheat::OnNumberType(UINT id)$/;"	f	class:AddGBCheat
OnNumberType	src/win32/GBCheatsDlg.cpp	/^void GBCheatSearch::OnNumberType(UINT id)$/;"	f	class:GBCheatSearch
OnOK	src/win32/Directories.cpp	/^void Directories::OnOK()$/;"	f	class:Directories
OnOK	src/win32/FullscreenSettings.cpp	/^void FullscreenSettings::OnOK()$/;"	f	class:FullscreenSettings
OnOK	src/win32/GameOverrides.cpp	/^void GameOverrides::OnOK()$/;"	f	class:GameOverrides
OnOK	src/win32/SelectPlugin.cpp	/^void SelectPlugin::OnOK()$/;"	f	class:SelectPlugin
OnOk	src/win32/AccelEditor.cpp	/^void AccelEditor::OnOk()$/;"	f	class:AccelEditor
OnOk	src/win32/Associate.cpp	/^void Associate::OnOk()$/;"	f	class:Associate
OnOk	src/win32/BugReport.cpp	/^void BugReport::OnOk()$/;"	f	class:BugReport
OnOk	src/win32/ExportGSASnapshot.cpp	/^void ExportGSASnapshot::OnOk()$/;"	f	class:ExportGSASnapshot
OnOk	src/win32/GBACheats.cpp	/^void AddCBACode::OnOk()$/;"	f	class:AddCBACode
OnOk	src/win32/GBACheats.cpp	/^void AddCheat::OnOk()$/;"	f	class:AddCheat
OnOk	src/win32/GBACheats.cpp	/^void AddCheatCode::OnOk()$/;"	f	class:AddCheatCode
OnOk	src/win32/GBACheats.cpp	/^void AddGSACode::OnOk()$/;"	f	class:AddGSACode
OnOk	src/win32/GBACheats.cpp	/^void GBACheatList::OnOk()$/;"	f	class:GBACheatList
OnOk	src/win32/GBACheats.cpp	/^void GBACheatSearch::OnOk()$/;"	f	class:GBACheatSearch
OnOk	src/win32/GBCheatsDlg.cpp	/^void AddGBCheat::OnOk()$/;"	f	class:AddGBCheat
OnOk	src/win32/GBCheatsDlg.cpp	/^void AddGBCode::OnOk()$/;"	f	class:AddGBCode
OnOk	src/win32/GBCheatsDlg.cpp	/^void GBCheatList::OnOk()$/;"	f	class:GBCheatList
OnOk	src/win32/GBCheatsDlg.cpp	/^void GBCheatSearch::OnOk()$/;"	f	class:GBCheatSearch
OnOk	src/win32/GBColorDlg.cpp	/^void GBColorDlg::OnOk()$/;"	f	class:GBColorDlg
OnOk	src/win32/GBPrinterDlg.cpp	/^void GBPrinterDlg::OnOk()$/;"	f	class:GBPrinterDlg
OnOk	src/win32/GDBConnection.cpp	/^void GDBPortDlg::OnOk()$/;"	f	class:GDBPortDlg
OnOk	src/win32/GSACodeSelect.cpp	/^void GSACodeSelect::OnOk()$/;"	f	class:GSACodeSelect
OnOk	src/win32/Joypad.cpp	/^void JoypadConfig::OnOk()$/;"	f	class:JoypadConfig
OnOk	src/win32/Joypad.cpp	/^void MotionConfig::OnOk()$/;"	f	class:MotionConfig
OnOk	src/win32/LangSelect.cpp	/^void LangSelect::OnOk()$/;"	f	class:LangSelect
OnOk	src/win32/LinkOptions.cpp	/^void LinkOptions::OnOk()$/;"	f	class:LinkOptions
OnOk	src/win32/Logging.cpp	/^void Logging::OnOk()$/;"	f	class:Logging
OnOk	src/win32/MaxScale.cpp	/^void MaxScale::OnOk()$/;"	f	class:MaxScale
OnOk	src/win32/MemoryViewerAddressSize.cpp	/^void MemoryViewerAddressSize::OnOk()$/;"	f	class:MemoryViewerAddressSize
OnOk	src/win32/RewindInterval.cpp	/^void RewindInterval::OnOk()$/;"	f	class:RewindInterval
OnOk	src/win32/RomInfo.cpp	/^void RomInfoGB::OnOk()$/;"	f	class:RomInfoGB
OnOk	src/win32/RomInfo.cpp	/^void RomInfoGBA::OnOk()$/;"	f	class:RomInfoGBA
OnOk	src/win32/Throttle.cpp	/^void Throttle::OnOk()$/;"	f	class:Throttle
OnOptionVideoSize	src/win32/MainWndOptions.cpp	/^BOOL MainWnd::OnOptionVideoSize(UINT nID)$/;"	f	class:MainWnd
OnOptionsEmulatorAgbprint	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsEmulatorAgbprint()$/;"	f	class:MainWnd
OnOptionsEmulatorAssociate	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsEmulatorAssociate()$/;"	f	class:MainWnd
OnOptionsEmulatorAutomaticallyApplyPatchFiles	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsEmulatorAutomaticallyApplyPatchFiles()$/;"	f	class:MainWnd
OnOptionsEmulatorBmpformat	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsEmulatorBmpformat()$/;"	f	class:MainWnd
OnOptionsEmulatorDirectories	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsEmulatorDirectories()$/;"	f	class:MainWnd
OnOptionsEmulatorDisablestatusmessages	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsEmulatorDisablestatusmessages()$/;"	f	class:MainWnd
OnOptionsEmulatorGameoverrides	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsEmulatorGameoverrides()$/;"	f	class:MainWnd
OnOptionsEmulatorPausewheninactive	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsEmulatorPausewheninactive()$/;"	f	class:MainWnd
OnOptionsEmulatorPngformat	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsEmulatorPngformat()$/;"	f	class:MainWnd
OnOptionsEmulatorRealtimeclock	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsEmulatorRealtimeclock()$/;"	f	class:MainWnd
OnOptionsEmulatorRewindinterval	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsEmulatorRewindinterval()$/;"	f	class:MainWnd
OnOptionsEmulatorSavetypeAutomatic	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsEmulatorSavetypeAutomatic()$/;"	f	class:MainWnd
OnOptionsEmulatorSavetypeDetectNow	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsEmulatorSavetypeDetectNow()$/;"	f	class:MainWnd
OnOptionsEmulatorSavetypeEeprom	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsEmulatorSavetypeEeprom()$/;"	f	class:MainWnd
OnOptionsEmulatorSavetypeEepromsensor	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsEmulatorSavetypeEepromsensor()$/;"	f	class:MainWnd
OnOptionsEmulatorSavetypeFlash	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsEmulatorSavetypeFlash()$/;"	f	class:MainWnd
OnOptionsEmulatorSavetypeFlash1m	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsEmulatorSavetypeFlash1m()$/;"	f	class:MainWnd
OnOptionsEmulatorSavetypeFlash512k	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsEmulatorSavetypeFlash512k()$/;"	f	class:MainWnd
OnOptionsEmulatorSavetypeNone	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsEmulatorSavetypeNone()$/;"	f	class:MainWnd
OnOptionsEmulatorSavetypeSram	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsEmulatorSavetypeSram()$/;"	f	class:MainWnd
OnOptionsEmulatorShowSpeed	src/win32/MainWndOptions.cpp	/^BOOL MainWnd::OnOptionsEmulatorShowSpeed(UINT nID)$/;"	f	class:MainWnd
OnOptionsEmulatorSpeeduptoggle	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsEmulatorSpeeduptoggle()$/;"	f	class:MainWnd
OnOptionsEmulatorSynchronize	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsEmulatorSynchronize()$/;"	f	class:MainWnd
OnOptionsFilter	src/win32/MainWndOptions.cpp	/^BOOL MainWnd::OnOptionsFilter(UINT nID)$/;"	f	class:MainWnd
OnOptionsFilterDisablemmx	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsFilterDisablemmx()$/;"	f	class:MainWnd
OnOptionsFilterIFB	src/win32/MainWndOptions.cpp	/^BOOL MainWnd::OnOptionsFilterIFB(UINT nID)$/;"	f	class:MainWnd
OnOptionsFrameskip	src/win32/MainWndOptions.cpp	/^BOOL MainWnd::OnOptionsFrameskip(UINT nID)$/;"	f	class:MainWnd
OnOptionsFrameskipAutomatic	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsFrameskipAutomatic() $/;"	f	class:MainWnd
OnOptionsFrameskipThrottle100	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsFrameskipThrottle100()$/;"	f	class:MainWnd
OnOptionsFrameskipThrottle150	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsFrameskipThrottle150()$/;"	f	class:MainWnd
OnOptionsFrameskipThrottle200	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsFrameskipThrottle200()$/;"	f	class:MainWnd
OnOptionsFrameskipThrottle25	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsFrameskipThrottle25()$/;"	f	class:MainWnd
OnOptionsFrameskipThrottle50	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsFrameskipThrottle50()$/;"	f	class:MainWnd
OnOptionsFrameskipThrottleNothrottle	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsFrameskipThrottleNothrottle()$/;"	f	class:MainWnd
OnOptionsFrameskipThrottleOther	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsFrameskipThrottleOther()$/;"	f	class:MainWnd
OnOptionsGameboyAutomatic	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsGameboyAutomatic()$/;"	f	class:MainWnd
OnOptionsGameboyBorder	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsGameboyBorder()$/;"	f	class:MainWnd
OnOptionsGameboyBorderAutomatic	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsGameboyBorderAutomatic()$/;"	f	class:MainWnd
OnOptionsGameboyCgb	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsGameboyCgb()$/;"	f	class:MainWnd
OnOptionsGameboyColors	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsGameboyColors()$/;"	f	class:MainWnd
OnOptionsGameboyGameboycolors	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsGameboyGameboycolors()$/;"	f	class:MainWnd
OnOptionsGameboyGb	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsGameboyGb()$/;"	f	class:MainWnd
OnOptionsGameboyGba	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsGameboyGba()$/;"	f	class:MainWnd
OnOptionsGameboyPrinter	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsGameboyPrinter()$/;"	f	class:MainWnd
OnOptionsGameboyRealcolors	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsGameboyRealcolors()$/;"	f	class:MainWnd
OnOptionsGameboySgb	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsGameboySgb()$/;"	f	class:MainWnd
OnOptionsGameboySgb2	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsGameboySgb2()$/;"	f	class:MainWnd
OnOptionsJoybus	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsJoybus() { }$/;"	f	class:MainWnd
OnOptionsJoybus	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsJoybus()$/;"	f	class:MainWnd
OnOptionsJoypadAutofire	src/win32/MainWndOptions.cpp	/^BOOL MainWnd::OnOptionsJoypadAutofire(UINT nID)$/;"	f	class:MainWnd
OnOptionsJoypadConfigure1	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsJoypadConfigure1()$/;"	f	class:MainWnd
OnOptionsJoypadConfigure2	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsJoypadConfigure2()$/;"	f	class:MainWnd
OnOptionsJoypadConfigure3	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsJoypadConfigure3()$/;"	f	class:MainWnd
OnOptionsJoypadConfigure4	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsJoypadConfigure4()$/;"	f	class:MainWnd
OnOptionsJoypadDefault	src/win32/MainWndOptions.cpp	/^BOOL MainWnd::OnOptionsJoypadDefault(UINT nID)$/;"	f	class:MainWnd
OnOptionsJoypadMotionconfigure	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsJoypadMotionconfigure()$/;"	f	class:MainWnd
OnOptionsLanguageEnglish	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsLanguageEnglish()$/;"	f	class:MainWnd
OnOptionsLanguageOther	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsLanguageOther()$/;"	f	class:MainWnd
OnOptionsLanguageSystem	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsLanguageSystem()$/;"	f	class:MainWnd
OnOptionsLinkEnable	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsLinkEnable() { }$/;"	f	class:MainWnd
OnOptionsLinkEnable	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsLinkEnable()$/;"	f	class:MainWnd
OnOptionsLinkRFU	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsLinkRFU() { }$/;"	f	class:MainWnd
OnOptionsLinkRFU	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsLinkRFU()$/;"	f	class:MainWnd
OnOptionsPriority	src/win32/MainWndOptions.cpp	/^BOOL MainWnd::OnOptionsPriority(UINT nID)$/;"	f	class:MainWnd
OnOptionsSelectPlugin	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsSelectPlugin()$/;"	f	class:MainWnd
OnOptionsSoundChannel1	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsSoundChannel1()$/;"	f	class:MainWnd
OnOptionsSoundChannel2	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsSoundChannel2()$/;"	f	class:MainWnd
OnOptionsSoundChannel3	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsSoundChannel3()$/;"	f	class:MainWnd
OnOptionsSoundChannel4	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsSoundChannel4()$/;"	f	class:MainWnd
OnOptionsSoundDirectsounda	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsSoundDirectsounda()$/;"	f	class:MainWnd
OnOptionsSoundDirectsoundb	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsSoundDirectsoundb()$/;"	f	class:MainWnd
OnOptionsSoundHardwareacceleration	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsSoundHardwareacceleration()$/;"	f	class:MainWnd
OnOptionsSoundStartrecording	src/win32/MainWndTools.cpp	/^void MainWnd::OnOptionsSoundStartrecording()$/;"	f	class:MainWnd
OnOptionsSoundStoprecording	src/win32/MainWndTools.cpp	/^void MainWnd::OnOptionsSoundStoprecording()$/;"	f	class:MainWnd
OnOptionsVideoDisablesfx	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsVideoDisablesfx()$/;"	f	class:MainWnd
OnOptionsVideoFullscreen	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsVideoFullscreen()$/;"	f	class:MainWnd
OnOptionsVideoFullscreenmaxscale	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsVideoFullscreenmaxscale()$/;"	f	class:MainWnd
OnOptionsVideoFullscreenstretchtofit	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsVideoFullscreenstretchtofit()$/;"	f	class:MainWnd
OnOptionsVideoRendermethodDirect3d	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsVideoRendermethodDirect3d()$/;"	f	class:MainWnd
OnOptionsVideoRendermethodOpengl	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsVideoRendermethodOpengl()$/;"	f	class:MainWnd
OnOptionsVideoRenderoptionsD3dbilinear	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsVideoRenderoptionsD3dbilinear()$/;"	f	class:MainWnd
OnOptionsVideoRenderoptionsD3dnofilter	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsVideoRenderoptionsD3dnofilter()$/;"	f	class:MainWnd
OnOptionsVideoRenderoptionsGlbilinear	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsVideoRenderoptionsGlbilinear()$/;"	f	class:MainWnd
OnOptionsVideoRenderoptionsGlnearest	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsVideoRenderoptionsGlnearest()$/;"	f	class:MainWnd
OnOptionsVideoTriplebuffering	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsVideoTriplebuffering()$/;"	f	class:MainWnd
OnOptionsVideoVsync	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOptionsVideoVsync()$/;"	f	class:MainWnd
OnOutputapiDirectsound	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOutputapiDirectsound()$/;"	f	class:MainWnd
OnOutputapiOalconfiguration	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOutputapiOalconfiguration()$/;"	f	class:MainWnd
OnOutputapiOpenal	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOutputapiOpenal()$/;"	f	class:MainWnd
OnOutputapiXaudio2	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOutputapiXaudio2()$/;"	f	class:MainWnd
OnOutputapiXaudio2config	src/win32/MainWndOptions.cpp	/^void MainWnd::OnOutputapiXaudio2config()$/;"	f	class:MainWnd
OnPaint	src/win32/ColorControl.cpp	/^void ColorControl::OnPaint()$/;"	f	class:ColorControl
OnPaint	src/win32/GBPrinterDlg.cpp	/^void GBPrinterDlg::OnPaint()$/;"	f	class:GBPrinterDlg
OnPaint	src/win32/MainWnd.cpp	/^void MainWnd::OnPaint()$/;"	f	class:MainWnd
OnPaint	src/win32/MemoryViewer.cpp	/^void MemoryViewer::OnPaint()$/;"	f	class:MemoryViewer
OnPaint	src/win32/PaletteViewControl.cpp	/^void PaletteViewControl::OnPaint()$/;"	f	class:PaletteViewControl
OnPaint	src/win32/ZoomControl.cpp	/^void ZoomControl::OnPaint()$/;"	f	class:ZoomControl
OnPalInfo	src/win32/GBPaletteView.cpp	/^LRESULT GBPaletteView::OnPalInfo(WPARAM wParam, LPARAM lParam)$/;"	f	class:GBPaletteView
OnPalInfo	src/win32/PaletteView.cpp	/^LRESULT PaletteView::OnPalInfo(WPARAM wParam, LPARAM lParam)$/;"	f	class:PaletteView
OnPixelfilterMultiThreading	src/win32/MainWndOptions.cpp	/^void MainWnd::OnPixelfilterMultiThreading()$/;"	f	class:MainWnd
OnPreparePrinting	src/wx/sys.cpp	/^void PrintDialog::OnPreparePrinting()$/;"	f	class:PrintDialog
OnPrint	src/win32/GBPrinterDlg.cpp	/^void GBPrinterDlg::OnPrint()$/;"	f	class:GBPrinterDlg
OnPrintPage	src/wx/sys.cpp	/^bool PrintDialog::OnPrintPage(int pno)$/;"	f	class:PrintDialog
OnPropertyValueChanged	src/win32/XAudio2.cpp	/^	HRESULT STDMETHODCALLTYPE OnPropertyValueChanged( LPCWSTR pwstrDeviceId, const PROPERTYKEY key ) { return S_OK; }$/;"	f	class:XAudio2_Device_Notifier
OnPropertyValueChanged	src/wx/xaudio2.cpp	/^	HRESULT STDMETHODCALLTYPE OnPropertyValueChanged( LPCWSTR pwstrDeviceId, const PROPERTYKEY key ) { return S_OK; }$/;"	f	class:XAudio2_Device_Notifier
OnRadio1	src/win32/LinkOptions.cpp	/^void LinkGeneral::OnRadio1()$/;"	f	class:LinkGeneral
OnRadio2	src/win32/LinkOptions.cpp	/^void LinkGeneral::OnRadio2()$/;"	f	class:LinkGeneral
OnRefresh	src/win32/Disassemble.cpp	/^void Disassemble::OnRefresh()$/;"	f	class:Disassemble
OnRefresh	src/win32/GBDisassemble.cpp	/^void GBDisassemble::OnRefresh()$/;"	f	class:GBDisassemble
OnRefresh	src/win32/GBMapView.cpp	/^void GBMapView::OnRefresh()$/;"	f	class:GBMapView
OnRefresh	src/win32/GBMemoryViewerDlg.cpp	/^void GBMemoryViewerDlg::OnRefresh()$/;"	f	class:GBMemoryViewerDlg
OnRefresh	src/win32/IOViewer.cpp	/^void IOViewer::OnRefresh()$/;"	f	class:IOViewer
OnRefresh	src/win32/MapView.cpp	/^void MapView::OnRefresh()$/;"	f	class:MapView
OnRefresh	src/win32/MemoryViewerDlg.cpp	/^void MemoryViewerDlg::OnRefresh()$/;"	f	class:MemoryViewerDlg
OnRefresh2	src/win32/GBPaletteView.cpp	/^void GBPaletteView::OnRefresh2()$/;"	f	class:GBPaletteView
OnRefresh2	src/win32/PaletteView.cpp	/^void PaletteView::OnRefresh2()$/;"	f	class:PaletteView
OnRemove	src/win32/AccelEditor.cpp	/^void AccelEditor::OnRemove()$/;"	f	class:AccelEditor
OnRemove	src/win32/GBACheats.cpp	/^void GBACheatList::OnRemove()$/;"	f	class:GBACheatList
OnRemove	src/win32/GBCheatsDlg.cpp	/^void GBCheatList::OnRemove()$/;"	f	class:GBCheatList
OnRemoveAll	src/win32/GBACheats.cpp	/^void GBACheatList::OnRemoveAll()$/;"	f	class:GBACheatList
OnRemoveAll	src/win32/GBCheatsDlg.cpp	/^void GBCheatList::OnRemoveAll()$/;"	f	class:GBCheatList
OnRenderapiD3dmotionblur	src/win32/MainWndOptions.cpp	/^void MainWnd::OnRenderapiD3dmotionblur()$/;"	f	class:MainWnd
OnReset	src/win32/AccelEditor.cpp	/^void AccelEditor::OnReset()$/;"	f	class:AccelEditor
OnReset	src/win32/GBColorDlg.cpp	/^void GBColorDlg::OnReset()$/;"	f	class:GBColorDlg
OnRestore	src/win32/GBACheats.cpp	/^void GBACheatList::OnRestore()$/;"	f	class:GBACheatList
OnRomDir	src/win32/Directories.cpp	/^void Directories::OnRomDir()$/;"	f	class:Directories
OnSDLJoy	src/wx/panel.cpp	/^void GameArea::OnSDLJoy(wxSDLJoyEvent &ev)$/;"	f	class:GameArea
OnSave	src/win32/GBMapView.cpp	/^void GBMapView::OnSave()$/;"	f	class:GBMapView
OnSave	src/win32/GBMemoryViewerDlg.cpp	/^void GBMemoryViewerDlg::OnSave()$/;"	f	class:GBMemoryViewerDlg
OnSave	src/win32/GBPrinterDlg.cpp	/^void GBPrinterDlg::OnSave()$/;"	f	class:GBPrinterDlg
OnSave	src/win32/GBTileView.cpp	/^void GBTileView::OnSave()$/;"	f	class:GBTileView
OnSave	src/win32/Logging.cpp	/^void Logging::OnSave()$/;"	f	class:Logging
OnSave	src/win32/MapView.cpp	/^void MapView::OnSave()$/;"	f	class:MapView
OnSave	src/win32/MemoryViewerDlg.cpp	/^void MemoryViewerDlg::OnSave()$/;"	f	class:MemoryViewerDlg
OnSave	src/win32/OamView.cpp	/^void OamView::OnSave()$/;"	f	class:OamView
OnSave	src/win32/TileView.cpp	/^void TileView::OnSave()$/;"	f	class:TileView
OnSaveBg	src/win32/GBPaletteView.cpp	/^void GBPaletteView::OnSaveBg()$/;"	f	class:GBPaletteView
OnSaveBg	src/win32/PaletteView.cpp	/^void PaletteView::OnSaveBg()$/;"	f	class:PaletteView
OnSaveDir	src/win32/Directories.cpp	/^void Directories::OnSaveDir()$/;"	f	class:Directories
OnSaveObj	src/win32/GBPaletteView.cpp	/^void GBPaletteView::OnSaveObj()$/;"	f	class:GBPaletteView
OnSaveObj	src/win32/PaletteView.cpp	/^void PaletteView::OnSaveObj()$/;"	f	class:PaletteView
OnSearch	src/win32/GBACheats.cpp	/^void GBACheatSearch::OnSearch()$/;"	f	class:GBACheatSearch
OnSearch	src/win32/GBCheatsDlg.cpp	/^void GBCheatSearch::OnSearch()$/;"	f	class:GBCheatSearch
OnSearchType	src/win32/GBACheats.cpp	/^void GBACheatSearch::OnSearchType(UINT id)$/;"	f	class:GBACheatSearch
OnSearchType	src/win32/GBCheatsDlg.cpp	/^void GBCheatSearch::OnSearchType(UINT id)$/;"	f	class:GBCheatSearch
OnSelChanging	src/win32/LinkOptions.cpp	/^void CMyTabCtrl::OnSelChanging(NMHDR* pnmh, LRESULT* pRes)$/;"	f	class:CMyTabCtrl
OnSelchangeAddresses	src/win32/GBMemoryViewerDlg.cpp	/^void GBMemoryViewerDlg::OnSelchangeAddresses()$/;"	f	class:GBMemoryViewerDlg
OnSelchangeAddresses	src/win32/IOViewer.cpp	/^void IOViewer::OnSelchangeAddresses()$/;"	f	class:IOViewer
OnSelchangeAddresses	src/win32/MemoryViewerDlg.cpp	/^void MemoryViewerDlg::OnSelchangeAddresses()$/;"	f	class:MemoryViewerDlg
OnSelchangeCommands	src/win32/AccelEditor.cpp	/^void AccelEditor::OnSelchangeCommands()$/;"	f	class:AccelEditor
OnSelchangeGameList	src/win32/GSACodeSelect.cpp	/^void GSACodeSelect::OnSelchangeGameList()$/;"	f	class:GSACodeSelect
OnSelchangePredefined	src/win32/GBColorDlg.cpp	/^void GBColorDlg::OnSelchangePredefined()$/;"	f	class:GBColorDlg
OnSelchangeTab1	src/win32/LinkOptions.cpp	/^void LinkOptions::OnSelchangeTab1(NMHDR* pNMHDR, LRESULT* pResult)$/;"	f	class:LinkOptions
OnServerStart	src/win32/LinkOptions.cpp	/^void LinkServer::OnServerStart()$/;"	f	class:LinkServer
OnSetFocus	src/win32/MemoryViewer.cpp	/^void MemoryViewer::OnSetFocus(CWnd* pOldWnd)$/;"	f	class:MemoryViewer
OnSize	src/win32/BitmapControl.cpp	/^void BitmapControl::OnSize(UINT nType, int cx, int cy)$/;"	f	class:BitmapControl
OnSize	src/win32/MainWnd.cpp	/^void MainWnd::OnSize(UINT nType, int cx, int cy)$/;"	f	class:MainWnd
OnSize	src/wx/panel.cpp	/^void GLDrawingPanel::OnSize(wxSizeEvent &ev)$/;"	f	class:GLDrawingPanel
OnSizeType	src/win32/GBACheats.cpp	/^void AddCheat::OnSizeType(UINT id)$/;"	f	class:AddCheat
OnSizeType	src/win32/GBACheats.cpp	/^void GBACheatSearch::OnSizeType(UINT id)$/;"	f	class:GBACheatSearch
OnSizeType	src/win32/GBCheatsDlg.cpp	/^void AddGBCheat::OnSizeType(UINT id)$/;"	f	class:AddGBCheat
OnSizeType	src/win32/GBCheatsDlg.cpp	/^void GBCheatSearch::OnSizeType(UINT id)$/;"	f	class:GBCheatSearch
OnSizing	src/win32/MainWnd.cpp	/^void MainWnd::OnSizing(UINT fwSide, LPRECT pRect)$/;"	f	class:MainWnd
OnSocketAccept	src/win32/GDBConnection.cpp	/^LRESULT GDBWaitingDlg::OnSocketAccept(WPARAM wParam, LPARAM lParam)$/;"	f	class:GDBWaitingDlg
OnStart	src/win32/GBACheats.cpp	/^void GBACheatSearch::OnStart()$/;"	f	class:GBACheatSearch
OnStart	src/win32/GBCheatsDlg.cpp	/^void GBCheatSearch::OnStart()$/;"	f	class:GBCheatSearch
OnStretch	src/win32/GBMapView.cpp	/^void GBMapView::OnStretch()$/;"	f	class:GBMapView
OnStretch	src/win32/GBOamView.cpp	/^void GBOamView::OnStretch()$/;"	f	class:GBOamView
OnStretch	src/win32/GBTileView.cpp	/^void GBTileView::OnStretch()$/;"	f	class:GBTileView
OnStretch	src/win32/MapView.cpp	/^void MapView::OnStretch()$/;"	f	class:MapView
OnStretch	src/win32/OamView.cpp	/^void OamView::OnStretch()$/;"	f	class:OamView
OnStretch	src/win32/TileView.cpp	/^void TileView::OnStretch()$/;"	f	class:TileView
OnSwitchTabs	src/win32/LinkOptions.cpp	/^void CMyTabCtrl::OnSwitchTabs(void)$/;"	f	class:CMyTabCtrl
OnSystemMinimize	src/win32/MainWnd.cpp	/^void MainWnd::OnSystemMinimize()$/;"	f	class:MainWnd
OnThumb	src/win32/Disassemble.cpp	/^void Disassemble::OnThumb()$/;"	f	class:Disassemble
OnTimer	src/win32/Joypad.cpp	/^void JoypadConfig::OnTimer(UINT_PTR nIDEvent)$/;"	f	class:JoypadConfig
OnTimer	src/win32/Joypad.cpp	/^void MotionConfig::OnTimer(UINT_PTR nIDEvent)$/;"	f	class:MotionConfig
OnToolsCustomize	src/win32/MainWndTools.cpp	/^void MainWnd::OnToolsCustomize()$/;"	f	class:MainWnd
OnToolsDebugBreak	src/win32/MainWndTools.cpp	/^void MainWnd::OnToolsDebugBreak()$/;"	f	class:MainWnd
OnToolsDebugDisconnect	src/win32/MainWndTools.cpp	/^void MainWnd::OnToolsDebugDisconnect()$/;"	f	class:MainWnd
OnToolsDebugGdb	src/win32/MainWndTools.cpp	/^void MainWnd::OnToolsDebugGdb()$/;"	f	class:MainWnd
OnToolsDebugLoadandwait	src/win32/MainWndTools.cpp	/^void MainWnd::OnToolsDebugLoadandwait()$/;"	f	class:MainWnd
OnToolsDisassemble	src/win32/MainWndTools.cpp	/^void MainWnd::OnToolsDisassemble()$/;"	f	class:MainWnd
OnToolsIoviewer	src/win32/MainWndTools.cpp	/^void MainWnd::OnToolsIoviewer()$/;"	f	class:MainWnd
OnToolsLogging	src/win32/MainWndTools.cpp	/^void MainWnd::OnToolsLogging()$/;"	f	class:MainWnd
OnToolsMapview	src/win32/MainWndTools.cpp	/^void MainWnd::OnToolsMapview()$/;"	f	class:MainWnd
OnToolsMemoryviewer	src/win32/MainWndTools.cpp	/^void MainWnd::OnToolsMemoryviewer()$/;"	f	class:MainWnd
OnToolsOamviewer	src/win32/MainWndTools.cpp	/^void MainWnd::OnToolsOamviewer()$/;"	f	class:MainWnd
OnToolsPaletteview	src/win32/MainWndTools.cpp	/^void MainWnd::OnToolsPaletteview()$/;"	f	class:MainWnd
OnToolsPlayStartmovieplaying	src/win32/MainWndTools.cpp	/^void MainWnd::OnToolsPlayStartmovieplaying()$/;"	f	class:MainWnd
OnToolsPlayStopmovieplaying	src/win32/MainWndTools.cpp	/^void MainWnd::OnToolsPlayStopmovieplaying()$/;"	f	class:MainWnd
OnToolsRecordStartavirecording	src/win32/MainWndTools.cpp	/^void MainWnd::OnToolsRecordStartavirecording()$/;"	f	class:MainWnd
OnToolsRecordStartmovierecording	src/win32/MainWndTools.cpp	/^void MainWnd::OnToolsRecordStartmovierecording()$/;"	f	class:MainWnd
OnToolsRecordStopavirecording	src/win32/MainWndTools.cpp	/^void MainWnd::OnToolsRecordStopavirecording()$/;"	f	class:MainWnd
OnToolsRecordStopmovierecording	src/win32/MainWndTools.cpp	/^void MainWnd::OnToolsRecordStopmovierecording()$/;"	f	class:MainWnd
OnToolsRewind	src/win32/MainWndTools.cpp	/^void MainWnd::OnToolsRewind()$/;"	f	class:MainWnd
OnToolsTileviewer	src/win32/MainWndTools.cpp	/^void MainWnd::OnToolsTileviewer()$/;"	f	class:MainWnd
OnTtnNeedText	src/win32/AudioCoreSettingsDlg.cpp	/^BOOL AudioCoreSettingsDlg::OnTtnNeedText(UINT id, NMHDR *pNMHDR, LRESULT *pResult)$/;"	f	class:AudioCoreSettingsDlg
OnTypeChange	src/win32/FileDlg.cpp	/^void FileDlg::OnTypeChange(HWND hwnd)$/;"	f	class:FileDlg
OnUpdate	src/win32/GBACheats.cpp	/^void GBACheatSearch::OnUpdate()$/;"	f	class:GBACheatSearch
OnUpdate	src/win32/GBCheatsDlg.cpp	/^void GBCheatSearch::OnUpdate()$/;"	f	class:GBCheatSearch
OnUpdateAudioCoreSettings	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateAudioCoreSettings(CCmdUI *pCmdUI)$/;"	f	class:MainWnd
OnUpdateCheatsAutomaticsaveloadcheats	src/win32/MainWndCheats.cpp	/^void MainWnd::OnUpdateCheatsAutomaticsaveloadcheats(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateCheatsCheatlist	src/win32/MainWndCheats.cpp	/^void MainWnd::OnUpdateCheatsCheatlist(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateCheatsDisablecheats	src/win32/MainWndCheats.cpp	/^void MainWnd::OnUpdateCheatsDisablecheats(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateCheatsLoadcheatlist	src/win32/MainWndCheats.cpp	/^void MainWnd::OnUpdateCheatsLoadcheatlist(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateCheatsSavecheatlist	src/win32/MainWndCheats.cpp	/^void MainWnd::OnUpdateCheatsSavecheatlist(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateCheatsSearchforcheats	src/win32/MainWndCheats.cpp	/^void MainWnd::OnUpdateCheatsSearchforcheats(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateFileClose	src/win32/MainWndFile.cpp	/^void MainWnd::OnUpdateFileClose(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateFileExportBatteryfile	src/win32/MainWndFile.cpp	/^void MainWnd::OnUpdateFileExportBatteryfile(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateFileExportGamesharksnapshot	src/win32/MainWndFile.cpp	/^void MainWnd::OnUpdateFileExportGamesharksnapshot(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateFileImportBatteryfile	src/win32/MainWndFile.cpp	/^void MainWnd::OnUpdateFileImportBatteryfile(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateFileImportGamesharkcodefile	src/win32/MainWndFile.cpp	/^void MainWnd::OnUpdateFileImportGamesharkcodefile(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateFileImportGamesharksnapshot	src/win32/MainWndFile.cpp	/^void MainWnd::OnUpdateFileImportGamesharksnapshot(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateFileLoad	src/win32/MainWndFile.cpp	/^void MainWnd::OnUpdateFileLoad(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateFileLoadGameSlot	src/win32/MainWndFile.cpp	/^void MainWnd::OnUpdateFileLoadGameSlot(CCmdUI *pCmdUI)$/;"	f	class:MainWnd
OnUpdateFileLoadgameAutoloadmostrecent	src/win32/MainWndFile.cpp	/^void MainWnd::OnUpdateFileLoadgameAutoloadmostrecent(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateFileLoadgameMostrecent	src/win32/MainWndFile.cpp	/^void MainWnd::OnUpdateFileLoadgameMostrecent(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateFilePause	src/win32/MainWndFile.cpp	/^void MainWnd::OnUpdateFilePause(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateFileRecentFreeze	src/win32/MainWndFile.cpp	/^void MainWnd::OnUpdateFileRecentFreeze(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateFileReset	src/win32/MainWndFile.cpp	/^void MainWnd::OnUpdateFileReset(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateFileRominformation	src/win32/MainWndFile.cpp	/^void MainWnd::OnUpdateFileRominformation(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateFileSave	src/win32/MainWndFile.cpp	/^void MainWnd::OnUpdateFileSave(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateFileSaveGameSlot	src/win32/MainWndFile.cpp	/^void MainWnd::OnUpdateFileSaveGameSlot(CCmdUI *pCmdUI)$/;"	f	class:MainWnd
OnUpdateFileSavegameOldestslot	src/win32/MainWndFile.cpp	/^void MainWnd::OnUpdateFileSavegameOldestslot(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateFileScreencapture	src/win32/MainWndFile.cpp	/^void MainWnd::OnUpdateFileScreencapture(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateFileTogglemenu	src/win32/MainWndFile.cpp	/^void MainWnd::OnUpdateFileTogglemenu(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateLoadgameDonotchangebatterysave	src/win32/MainWndFile.cpp	/^void MainWnd::OnUpdateLoadgameDonotchangebatterysave(CCmdUI *pCmdUI)$/;"	f	class:MainWnd
OnUpdateLoadgameDonotchangecheatlist	src/win32/MainWndFile.cpp	/^void MainWnd::OnUpdateLoadgameDonotchangecheatlist(CCmdUI *pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsEmulatorAgbprint	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsEmulatorAgbprint(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsEmulatorAutomaticallyipspatch	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsEmulatorAutomaticallyipspatch(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsEmulatorBmpformat	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsEmulatorBmpformat(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsEmulatorDisablestatusmessages	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsEmulatorDisablestatusmessages(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsEmulatorGameoverrides	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsEmulatorGameoverrides(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsEmulatorPausewheninactive	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsEmulatorPausewheninactive(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsEmulatorPngformat	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsEmulatorPngformat(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsEmulatorRealtimeclock	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsEmulatorRealtimeclock(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsEmulatorSavetypeAutomatic	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsEmulatorSavetypeAutomatic(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsEmulatorSavetypeDetectNow	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsEmulatorSavetypeDetectNow(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsEmulatorSavetypeEeprom	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsEmulatorSavetypeEeprom(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsEmulatorSavetypeEepromsensor	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsEmulatorSavetypeEepromsensor(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsEmulatorSavetypeFlash	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsEmulatorSavetypeFlash(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsEmulatorSavetypeFlash1m	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsEmulatorSavetypeFlash1m(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsEmulatorSavetypeFlash512k	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsEmulatorSavetypeFlash512k(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsEmulatorSavetypeNone	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsEmulatorSavetypeNone(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsEmulatorSavetypeSram	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsEmulatorSavetypeSram(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsEmulatorShowSpeed	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsEmulatorShowSpeed(CCmdUI *pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsEmulatorSpeeduptoggle	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsEmulatorSpeeduptoggle(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsEmulatorSynchronize	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsEmulatorSynchronize(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsFilter	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsFilter(CCmdUI *pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsFilterDisablemmx	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsFilterDisablemmx(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsFilterIFB	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsFilterIFB(CCmdUI *pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsFrameskipAutomatic	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsFrameskipAutomatic(CCmdUI* pCmdUI) $/;"	f	class:MainWnd
OnUpdateOptionsFrameskipThrottle100	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsFrameskipThrottle100(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsFrameskipThrottle150	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsFrameskipThrottle150(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsFrameskipThrottle200	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsFrameskipThrottle200(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsFrameskipThrottle25	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsFrameskipThrottle25(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsFrameskipThrottle50	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsFrameskipThrottle50(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsFrameskipThrottleNothrottle	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsFrameskipThrottleNothrottle(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsFrameskipThrottleOther	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsFrameskipThrottleOther(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsGameboyAutomatic	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsGameboyAutomatic(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsGameboyBorder	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsGameboyBorder(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsGameboyBorderAutomatic	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsGameboyBorderAutomatic(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsGameboyCgb	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsGameboyCgb(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsGameboyGameboycolors	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsGameboyGameboycolors(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsGameboyGb	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsGameboyGb(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsGameboyGba	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsGameboyGba(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsGameboyPrinter	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsGameboyPrinter(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsGameboyRealcolors	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsGameboyRealcolors(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsGameboySgb	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsGameboySgb(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsGameboySgb2	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsGameboySgb2(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsJoypadAutofire	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsJoypadAutofire(CCmdUI *pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsJoypadConfigure1	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsJoypadConfigure1(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsJoypadConfigure2	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsJoypadConfigure2(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsJoypadConfigure3	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsJoypadConfigure3(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsJoypadConfigure4	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsJoypadConfigure4(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsJoypadDefault	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsJoypadDefault(CCmdUI *pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsJoypadMotionconfigure	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsJoypadMotionconfigure(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsLanguageEnglish	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsLanguageEnglish(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsLanguageOther	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsLanguageOther(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsLanguageSystem	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsLanguageSystem(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsLinkEnable	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsLinkEnable(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsLinkEnable	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsLinkEnable(CCmdUI*) { }$/;"	f	class:MainWnd
OnUpdateOptionsLinkRFU	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsLinkRFU(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsLinkRFU	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsLinkRFU(CCmdUI*) { }$/;"	f	class:MainWnd
OnUpdateOptionsPriority	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsPriority(CCmdUI *pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsSelectPlugin	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsSelectPlugin(CCmdUI *pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsSoundChannel1	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsSoundChannel1(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsSoundChannel2	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsSoundChannel2(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsSoundChannel3	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsSoundChannel3(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsSoundChannel4	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsSoundChannel4(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsSoundDirectsounda	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsSoundDirectsounda(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsSoundDirectsoundb	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsSoundDirectsoundb(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsSoundHardwareacceleration	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsSoundHardwareacceleration(CCmdUI *pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsSoundStartrecording	src/win32/MainWndTools.cpp	/^void MainWnd::OnUpdateOptionsSoundStartrecording(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsSoundStoprecording	src/win32/MainWndTools.cpp	/^void MainWnd::OnUpdateOptionsSoundStoprecording(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsVideoDisablesfx	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsVideoDisablesfx(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsVideoFrameskip0	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsVideoFrameskip0(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsVideoFrameskip1	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsVideoFrameskip1(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsVideoFrameskip2	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsVideoFrameskip2(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsVideoFrameskip3	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsVideoFrameskip3(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsVideoFrameskip4	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsVideoFrameskip4(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsVideoFrameskip5	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsVideoFrameskip5(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsVideoFrameskip6	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsVideoFrameskip6(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsVideoFrameskip7	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsVideoFrameskip7(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsVideoFrameskip8	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsVideoFrameskip8(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsVideoFrameskip9	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsVideoFrameskip9(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsVideoFullscreen	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsVideoFullscreen(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsVideoFullscreenstretchtofit	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsVideoFullscreenstretchtofit(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsVideoRendermethodDirect3d	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsVideoRendermethodDirect3d(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsVideoRendermethodOpengl	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsVideoRendermethodOpengl(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsVideoRenderoptionsD3dbilinear	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsVideoRenderoptionsD3dbilinear(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsVideoRenderoptionsD3dnofilter	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsVideoRenderoptionsD3dnofilter(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsVideoRenderoptionsGlbilinear	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsVideoRenderoptionsGlbilinear(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsVideoRenderoptionsGlnearest	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsVideoRenderoptionsGlnearest(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsVideoTriplebuffering	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsVideoTriplebuffering(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsVideoVsync	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsVideoVsync(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsVideoX1	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsVideoX1(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsVideoX2	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsVideoX2(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsVideoX3	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsVideoX3(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsVideoX4	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsVideoX4(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsVideoX5	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsVideoX5(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOptionsVideoX6	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOptionsVideoX6(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateOutputapiDirectsound	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOutputapiDirectsound(CCmdUI *pCmdUI)$/;"	f	class:MainWnd
OnUpdateOutputapiOalconfiguration	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOutputapiOalconfiguration(CCmdUI *pCmdUI)$/;"	f	class:MainWnd
OnUpdateOutputapiOpenal	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOutputapiOpenal(CCmdUI *pCmdUI)$/;"	f	class:MainWnd
OnUpdateOutputapiXaudio2	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOutputapiXaudio2(CCmdUI *pCmdUI)$/;"	f	class:MainWnd
OnUpdateOutputapiXaudio2config	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateOutputapiXaudio2config(CCmdUI *pCmdUI)$/;"	f	class:MainWnd
OnUpdatePixelfilterMultiThreading	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdatePixelfilterMultiThreading(CCmdUI *pCmdUI)$/;"	f	class:MainWnd
OnUpdateRenderapiD3dmotionblur	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateRenderapiD3dmotionblur(CCmdUI *pCmdUI)$/;"	f	class:MainWnd
OnUpdateToolsCustomize	src/win32/MainWndTools.cpp	/^void MainWnd::OnUpdateToolsCustomize(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateToolsDebugBreak	src/win32/MainWndTools.cpp	/^void MainWnd::OnUpdateToolsDebugBreak(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateToolsDebugDisconnect	src/win32/MainWndTools.cpp	/^void MainWnd::OnUpdateToolsDebugDisconnect(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateToolsDebugGdb	src/win32/MainWndTools.cpp	/^void MainWnd::OnUpdateToolsDebugGdb(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateToolsDebugLoadandwait	src/win32/MainWndTools.cpp	/^void MainWnd::OnUpdateToolsDebugLoadandwait(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateToolsDisassemble	src/win32/MainWndTools.cpp	/^void MainWnd::OnUpdateToolsDisassemble(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateToolsIoviewer	src/win32/MainWndTools.cpp	/^void MainWnd::OnUpdateToolsIoviewer(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateToolsLogging	src/win32/MainWndTools.cpp	/^void MainWnd::OnUpdateToolsLogging(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateToolsMapview	src/win32/MainWndTools.cpp	/^void MainWnd::OnUpdateToolsMapview(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateToolsMemoryviewer	src/win32/MainWndTools.cpp	/^void MainWnd::OnUpdateToolsMemoryviewer(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateToolsOamviewer	src/win32/MainWndTools.cpp	/^void MainWnd::OnUpdateToolsOamviewer(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateToolsPaletteview	src/win32/MainWndTools.cpp	/^void MainWnd::OnUpdateToolsPaletteview(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateToolsPlayStartmovieplaying	src/win32/MainWndTools.cpp	/^void MainWnd::OnUpdateToolsPlayStartmovieplaying(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateToolsPlayStopmovieplaying	src/win32/MainWndTools.cpp	/^void MainWnd::OnUpdateToolsPlayStopmovieplaying(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateToolsRecordStartavirecording	src/win32/MainWndTools.cpp	/^void MainWnd::OnUpdateToolsRecordStartavirecording(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateToolsRecordStartmovierecording	src/win32/MainWndTools.cpp	/^void MainWnd::OnUpdateToolsRecordStartmovierecording(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateToolsRecordStopavirecording	src/win32/MainWndTools.cpp	/^void MainWnd::OnUpdateToolsRecordStopavirecording(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateToolsRecordStopmovierecording	src/win32/MainWndTools.cpp	/^void MainWnd::OnUpdateToolsRecordStopmovierecording(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateToolsRewind	src/win32/MainWndTools.cpp	/^void MainWnd::OnUpdateToolsRewind(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateToolsTileviewer	src/win32/MainWndTools.cpp	/^void MainWnd::OnUpdateToolsTileviewer(CCmdUI* pCmdUI)$/;"	f	class:MainWnd
OnUpdateVideoLayer	src/win32/MainWndOptions.cpp	/^void MainWnd::OnUpdateVideoLayer(CCmdUI *pCmdUI)$/;"	f	class:MainWnd
OnUser1	src/win32/GBColorDlg.cpp	/^void GBColorDlg::OnUser1()$/;"	f	class:GBColorDlg
OnUser2	src/win32/GBColorDlg.cpp	/^void GBColorDlg::OnUser2()$/;"	f	class:GBColorDlg
OnVScroll	src/win32/Disassemble.cpp	/^void Disassemble::OnVScroll(UINT nSBCode, UINT nPos, CScrollBar* pScrollBar)$/;"	f	class:Disassemble
OnVScroll	src/win32/GBDisassemble.cpp	/^void GBDisassemble::OnVScroll(UINT nSBCode, UINT nPos, CScrollBar* pScrollBar)$/;"	f	class:GBDisassemble
OnVScroll	src/win32/MemoryViewer.cpp	/^void MemoryViewer::OnVScroll(UINT nSBCode, UINT nPos, CScrollBar* pScrollBar)$/;"	f	class:MemoryViewer
OnValueType	src/win32/GBACheats.cpp	/^void GBACheatSearch::OnValueType(UINT id)$/;"	f	class:GBACheatSearch
OnValueType	src/win32/GBCheatsDlg.cpp	/^void GBCheatSearch::OnValueType(UINT id)$/;"	f	class:GBCheatSearch
OnVerboseAgbprint	src/win32/Logging.cpp	/^void Logging::OnVerboseAgbprint()$/;"	f	class:Logging
OnVerboseDma0	src/win32/Logging.cpp	/^void Logging::OnVerboseDma0()$/;"	f	class:Logging
OnVerboseDma1	src/win32/Logging.cpp	/^void Logging::OnVerboseDma1()$/;"	f	class:Logging
OnVerboseDma2	src/win32/Logging.cpp	/^void Logging::OnVerboseDma2()$/;"	f	class:Logging
OnVerboseDma3	src/win32/Logging.cpp	/^void Logging::OnVerboseDma3()$/;"	f	class:Logging
OnVerboseIllegalRead	src/win32/Logging.cpp	/^void Logging::OnVerboseIllegalRead()$/;"	f	class:Logging
OnVerboseIllegalWrite	src/win32/Logging.cpp	/^void Logging::OnVerboseIllegalWrite()$/;"	f	class:Logging
OnVerboseSoundoutput	src/win32/Logging.cpp	/^void Logging::OnVerboseSoundoutput()$/;"	f	class:Logging
OnVerboseSwi	src/win32/Logging.cpp	/^void Logging::OnVerboseSwi()$/;"	f	class:Logging
OnVerboseUnalignedAccess	src/win32/Logging.cpp	/^void Logging::OnVerboseUnalignedAccess()$/;"	f	class:Logging
OnVerboseUndefined	src/win32/Logging.cpp	/^void Logging::OnVerboseUndefined()$/;"	f	class:Logging
OnVideoLayer	src/win32/MainWndOptions.cpp	/^BOOL MainWnd::OnVideoLayer(UINT nID)$/;"	f	class:MainWnd
OnVideoLayerReset	src/win32/MainWndOptions.cpp	/^void MainWnd::OnVideoLayerReset()$/;"	f	class:MainWnd
OnWMChar	src/win32/MemoryViewer.cpp	/^LRESULT MemoryViewer::OnWMChar(WPARAM wParam, LPARAM LPARAM)$/;"	f	class:MemoryViewer
OnWindowPosChanging	src/win32/MainWnd.cpp	/^void MainWnd::OnWindowPosChanging(WINDOWPOS* lpwndpos)$/;"	f	class:MainWnd
OnWndMsg	src/win32/ResizeDlg.cpp	/^BOOL ResizeDlg::OnWndMsg(UINT msg, WPARAM wParam, LPARAM lParam, LRESULT *res )$/;"	f	class:ResizeDlg
Opcodes	src/gba/armdis.cpp	/^struct Opcodes {$/;"	s	file:
Open	src/win32/WavWriter.cpp	/^bool WavWriter::Open(const char *name)$/;"	f	class:WavWriter
OpenAL	src/win32/OpenAL.cpp	/^OpenAL::OpenAL()$/;"	f	class:OpenAL
OpenAL	src/win32/OpenAL.cpp	/^class OpenAL : public SoundDriver$/;"	c	file:
OpenAL	src/wx/openal.cpp	/^OpenAL::OpenAL()$/;"	f	class:OpenAL
OpenAL	src/wx/openal.cpp	/^class OpenAL : public SoundDriver$/;"	c	file:
OpenGLDisplay	src/win32/OpenGL.cpp	/^OpenGLDisplay::OpenGLDisplay()$/;"	f	class:OpenGLDisplay
OpenGLDisplay	src/win32/OpenGL.cpp	/^class OpenGLDisplay : public IDisplay {$/;"	c	file:
OrderFall	fex/7z_C/Ppmd7.h	/^  unsigned OrderFall, InitEsc, PrevSuccess, MaxOrder, HiBitsFlag;$/;"	m	struct:__anon6
OutH	src/win32/rpi.h	/^	unsigned long	OutH;$/;"	m	struct:__anon66
OutIndex	fex/7z_C/7z.h	/^  UInt32 OutIndex;$/;"	m	struct:__anon11
OutW	src/win32/rpi.h	/^	unsigned long	OutW;$/;"	m	struct:__anon66
Output	src/win32/rpi.h	/^	RENDPLUG_Output	Output;$/;"	m	struct:__anon67
OutputCairo	src/gtk/window.h	/^    OutputCairo,$/;"	e	enum:VBA::Window::EVideoOutput
OutputOpenGL	src/gtk/window.h	/^    OutputOpenGL$/;"	e	enum:VBA::Window::EVideoOutput
P0	src/filters/hq2x.cpp	119;"	d	file:
P0	src/filters/hq2x.cpp	202;"	d	file:
P0	src/filters/hq2x.cpp	229;"	d	file:
P0	src/filters/hq2x.cpp	319;"	d	file:
P0	src/filters/hq2x.cpp	346;"	d	file:
P0	src/filters/hq2x.cpp	429;"	d	file:
P0	src/filters/hq2x.cpp	456;"	d	file:
P0	src/filters/hq2x.cpp	92;"	d	file:
P1	src/filters/hq2x.cpp	120;"	d	file:
P1	src/filters/hq2x.cpp	203;"	d	file:
P1	src/filters/hq2x.cpp	230;"	d	file:
P1	src/filters/hq2x.cpp	320;"	d	file:
P1	src/filters/hq2x.cpp	347;"	d	file:
P1	src/filters/hq2x.cpp	430;"	d	file:
P1	src/filters/hq2x.cpp	457;"	d	file:
P1	src/filters/hq2x.cpp	93;"	d	file:
P1	src/gba/Globals.cpp	/^u16 P1       = 0xFFFF;$/;"	v
P2	src/filters/hq2x.cpp	121;"	d	file:
P2	src/filters/hq2x.cpp	204;"	d	file:
P2	src/filters/hq2x.cpp	231;"	d	file:
P2	src/filters/hq2x.cpp	321;"	d	file:
P2	src/filters/hq2x.cpp	348;"	d	file:
P2	src/filters/hq2x.cpp	431;"	d	file:
P2	src/filters/hq2x.cpp	458;"	d	file:
P2	src/filters/hq2x.cpp	94;"	d	file:
P3	src/filters/hq2x.cpp	122;"	d	file:
P3	src/filters/hq2x.cpp	205;"	d	file:
P3	src/filters/hq2x.cpp	232;"	d	file:
P3	src/filters/hq2x.cpp	322;"	d	file:
P3	src/filters/hq2x.cpp	349;"	d	file:
P3	src/filters/hq2x.cpp	432;"	d	file:
P3	src/filters/hq2x.cpp	459;"	d	file:
P3	src/filters/hq2x.cpp	95;"	d	file:
PAD_1	src/sdl/inputSDL.h	/^	PAD_1 = PAD_MAIN,$/;"	e	enum:EPad
PAD_2	src/sdl/inputSDL.h	/^	PAD_2,$/;"	e	enum:EPad
PAD_3	src/sdl/inputSDL.h	/^	PAD_3,$/;"	e	enum:EPad
PAD_4	src/sdl/inputSDL.h	/^	PAD_4,$/;"	e	enum:EPad
PAD_DEFAULT	src/sdl/inputSDL.h	/^	PAD_DEFAULT$/;"	e	enum:EPad
PAD_MAIN	src/sdl/inputSDL.h	/^	PAD_MAIN,$/;"	e	enum:EPad
PATCH_H	src/common/Patch.h	2;"	d
PATCH_MAX_NUM	src/sdl/SDL.cpp	187;"	d	file:
PATH	src/libretro/msvc/msvc-2003-xbox1.bat	/^@set PATH=%DevEnvDir%;%MSVCDir%\\BIN;%VCINSTALLDIR%\\Common7\\Tools;%VCINSTALLDIR%\\Common7\\Tools\\bin\\prerelease;%VCINSTALLDIR%\\Common7\\Tools\\bin;%FrameworkSDKDir%\\bin;%FrameworkDir%\\%FrameworkVersion%;%PATH%;$/;"	v
PATH	src/libretro/msvc/msvc-2010-360.bat	/^@if exist "%ProgramFiles%\\HTML Help Workshop" set PATH=%ProgramFiles%\\HTML Help Workshop;%PATH%$/;"	v
PATH	src/libretro/msvc/msvc-2010-360.bat	/^@if exist "%ProgramFiles(x86)%\\HTML Help Workshop" set PATH=%ProgramFiles(x86)%\\HTML Help Workshop;%PATH%$/;"	v
PATH	src/libretro/msvc/msvc-2010-360.bat	/^@if exist "%VCINSTALLDIR%BIN" set PATH=%VCINSTALLDIR%BIN;%PATH%$/;"	v
PATH	src/libretro/msvc/msvc-2010-360.bat	/^@if exist "%VCINSTALLDIR%VCPackages" set PATH=%VCINSTALLDIR%VCPackages;%PATH%$/;"	v
PATH	src/libretro/msvc/msvc-2010-360.bat	/^@set PATH=%DevEnvDir%;%PATH%$/;"	v
PATH	src/libretro/msvc/msvc-2010-360.bat	/^@set PATH=%FrameworkDir%%Framework35Version%;%PATH%$/;"	v
PATH	src/libretro/msvc/msvc-2010-360.bat	/^@set PATH=%FrameworkDir%%FrameworkVersion%;%PATH%$/;"	v
PATH	src/libretro/msvc/msvc-2010-360.bat	/^@set PATH=%VSINSTALLDIR%Common7\\Tools;%PATH%$/;"	v
PATH_SEP	src/sdl/SDL.cpp	434;"	d	file:
PC	src/gb/GB.cpp	/^gbRegister PC;$/;"	v
PCv	src/wx/viewers.cpp	/^	wxControl *AFv, *BCv, *DEv, *HLv, *SPv, *PCv, *LYv, *IFFv;$/;"	m	class:Viewers::GBDisassembleViewer	file:
PERFORMANCE_INTERVAL	src/win32/VBA.cpp	179;"	d	file:
PERMUTE	src/sdl/getopt.c	/^  REQUIRE_ORDER, PERMUTE, RETURN_IN_ORDER$/;"	e	enum:__anon54	file:
PFNWGLSWAPINTERVALFARPROC	src/win32/OpenGL.cpp	/^typedef BOOL (APIENTRY *PFNWGLSWAPINTERVALFARPROC)( int );$/;"	t	file:
PFTHREAD_DATA	src/win32/Direct3D.cpp	/^struct PFTHREAD_DATA {$/;"	s	file:
PI	src/apu/Blip_Buffer.cpp	215;"	d	file:
PI	src/apu/Blip_Buffer.cpp	216;"	d	file:
PIXEL00_0	src/filters/hq/c/hq_base.h	128;"	d
PIXEL00_11	src/filters/hq/c/hq_base.h	129;"	d
PIXEL00_12	src/filters/hq/c/hq_base.h	130;"	d
PIXEL00_1L	src/filters/hq/c/hq_base.h	68;"	d
PIXEL00_1M	src/filters/hq/c/hq_base.h	66;"	d
PIXEL00_1U	src/filters/hq/c/hq_base.h	67;"	d
PIXEL00_2	src/filters/hq/c/hq_base.h	69;"	d
PIXEL00_20	src/filters/hq/c/hq_base.h	131;"	d
PIXEL00_4	src/filters/hq/c/hq_base.h	70;"	d
PIXEL00_5	src/filters/hq/c/hq_base.h	71;"	d
PIXEL00_50	src/filters/hq/c/hq_base.h	132;"	d
PIXEL00_80	src/filters/hq/c/hq_base.h	133;"	d
PIXEL00_81	src/filters/hq/c/hq_base.h	134;"	d
PIXEL00_82	src/filters/hq/c/hq_base.h	135;"	d
PIXEL00_C	src/filters/hq/c/hq_base.h	72;"	d
PIXEL01_0	src/filters/hq/c/hq_base.h	137;"	d
PIXEL01_1	src/filters/hq/c/hq_base.h	74;"	d
PIXEL01_10	src/filters/hq/c/hq_base.h	138;"	d
PIXEL01_12	src/filters/hq/c/hq_base.h	139;"	d
PIXEL01_14	src/filters/hq/c/hq_base.h	140;"	d
PIXEL01_21	src/filters/hq/c/hq_base.h	141;"	d
PIXEL01_3	src/filters/hq/c/hq_base.h	75;"	d
PIXEL01_31	src/filters/hq/c/hq_base.h	142;"	d
PIXEL01_50	src/filters/hq/c/hq_base.h	143;"	d
PIXEL01_6	src/filters/hq/c/hq_base.h	76;"	d
PIXEL01_60	src/filters/hq/c/hq_base.h	144;"	d
PIXEL01_61	src/filters/hq/c/hq_base.h	145;"	d
PIXEL01_82	src/filters/hq/c/hq_base.h	146;"	d
PIXEL01_83	src/filters/hq/c/hq_base.h	147;"	d
PIXEL01_C	src/filters/hq/c/hq_base.h	77;"	d
PIXEL02_0	src/filters/hq/c/hq_base.h	149;"	d
PIXEL02_10	src/filters/hq/c/hq_base.h	150;"	d
PIXEL02_11	src/filters/hq/c/hq_base.h	151;"	d
PIXEL02_13	src/filters/hq/c/hq_base.h	152;"	d
PIXEL02_1M	src/filters/hq/c/hq_base.h	79;"	d
PIXEL02_1R	src/filters/hq/c/hq_base.h	81;"	d
PIXEL02_1U	src/filters/hq/c/hq_base.h	80;"	d
PIXEL02_2	src/filters/hq/c/hq_base.h	82;"	d
PIXEL02_21	src/filters/hq/c/hq_base.h	153;"	d
PIXEL02_32	src/filters/hq/c/hq_base.h	154;"	d
PIXEL02_4	src/filters/hq/c/hq_base.h	83;"	d
PIXEL02_5	src/filters/hq/c/hq_base.h	84;"	d
PIXEL02_50	src/filters/hq/c/hq_base.h	155;"	d
PIXEL02_60	src/filters/hq/c/hq_base.h	156;"	d
PIXEL02_61	src/filters/hq/c/hq_base.h	157;"	d
PIXEL02_81	src/filters/hq/c/hq_base.h	158;"	d
PIXEL02_83	src/filters/hq/c/hq_base.h	159;"	d
PIXEL02_C	src/filters/hq/c/hq_base.h	85;"	d
PIXEL03_0	src/filters/hq/c/hq_base.h	161;"	d
PIXEL03_11	src/filters/hq/c/hq_base.h	162;"	d
PIXEL03_12	src/filters/hq/c/hq_base.h	163;"	d
PIXEL03_20	src/filters/hq/c/hq_base.h	164;"	d
PIXEL03_50	src/filters/hq/c/hq_base.h	165;"	d
PIXEL03_80	src/filters/hq/c/hq_base.h	166;"	d
PIXEL03_81	src/filters/hq/c/hq_base.h	167;"	d
PIXEL03_82	src/filters/hq/c/hq_base.h	168;"	d
PIXEL10_0	src/filters/hq/c/hq_base.h	170;"	d
PIXEL10_1	src/filters/hq/c/hq_base.h	87;"	d
PIXEL10_10	src/filters/hq/c/hq_base.h	171;"	d
PIXEL10_11	src/filters/hq/c/hq_base.h	172;"	d
PIXEL10_13	src/filters/hq/c/hq_base.h	173;"	d
PIXEL10_21	src/filters/hq/c/hq_base.h	174;"	d
PIXEL10_3	src/filters/hq/c/hq_base.h	88;"	d
PIXEL10_32	src/filters/hq/c/hq_base.h	175;"	d
PIXEL10_50	src/filters/hq/c/hq_base.h	176;"	d
PIXEL10_6	src/filters/hq/c/hq_base.h	89;"	d
PIXEL10_60	src/filters/hq/c/hq_base.h	177;"	d
PIXEL10_61	src/filters/hq/c/hq_base.h	178;"	d
PIXEL10_81	src/filters/hq/c/hq_base.h	179;"	d
PIXEL10_83	src/filters/hq/c/hq_base.h	180;"	d
PIXEL10_C	src/filters/hq/c/hq_base.h	90;"	d
PIXEL11	src/filters/hq/c/hq_base.h	92;"	d
PIXEL11_0	src/filters/hq/c/hq_base.h	182;"	d
PIXEL11_30	src/filters/hq/c/hq_base.h	183;"	d
PIXEL11_31	src/filters/hq/c/hq_base.h	184;"	d
PIXEL11_32	src/filters/hq/c/hq_base.h	185;"	d
PIXEL11_70	src/filters/hq/c/hq_base.h	186;"	d
PIXEL12_0	src/filters/hq/c/hq_base.h	188;"	d
PIXEL12_1	src/filters/hq/c/hq_base.h	94;"	d
PIXEL12_3	src/filters/hq/c/hq_base.h	95;"	d
PIXEL12_30	src/filters/hq/c/hq_base.h	189;"	d
PIXEL12_31	src/filters/hq/c/hq_base.h	190;"	d
PIXEL12_32	src/filters/hq/c/hq_base.h	191;"	d
PIXEL12_6	src/filters/hq/c/hq_base.h	96;"	d
PIXEL12_70	src/filters/hq/c/hq_base.h	192;"	d
PIXEL12_C	src/filters/hq/c/hq_base.h	97;"	d
PIXEL13_0	src/filters/hq/c/hq_base.h	194;"	d
PIXEL13_10	src/filters/hq/c/hq_base.h	195;"	d
PIXEL13_12	src/filters/hq/c/hq_base.h	196;"	d
PIXEL13_14	src/filters/hq/c/hq_base.h	197;"	d
PIXEL13_21	src/filters/hq/c/hq_base.h	198;"	d
PIXEL13_31	src/filters/hq/c/hq_base.h	199;"	d
PIXEL13_50	src/filters/hq/c/hq_base.h	200;"	d
PIXEL13_60	src/filters/hq/c/hq_base.h	201;"	d
PIXEL13_61	src/filters/hq/c/hq_base.h	202;"	d
PIXEL13_82	src/filters/hq/c/hq_base.h	203;"	d
PIXEL13_83	src/filters/hq/c/hq_base.h	204;"	d
PIXEL20_0	src/filters/hq/c/hq_base.h	206;"	d
PIXEL20_10	src/filters/hq/c/hq_base.h	207;"	d
PIXEL20_12	src/filters/hq/c/hq_base.h	208;"	d
PIXEL20_14	src/filters/hq/c/hq_base.h	209;"	d
PIXEL20_1D	src/filters/hq/c/hq_base.h	100;"	d
PIXEL20_1L	src/filters/hq/c/hq_base.h	101;"	d
PIXEL20_1M	src/filters/hq/c/hq_base.h	99;"	d
PIXEL20_2	src/filters/hq/c/hq_base.h	102;"	d
PIXEL20_21	src/filters/hq/c/hq_base.h	210;"	d
PIXEL20_31	src/filters/hq/c/hq_base.h	211;"	d
PIXEL20_4	src/filters/hq/c/hq_base.h	103;"	d
PIXEL20_5	src/filters/hq/c/hq_base.h	104;"	d
PIXEL20_50	src/filters/hq/c/hq_base.h	212;"	d
PIXEL20_60	src/filters/hq/c/hq_base.h	213;"	d
PIXEL20_61	src/filters/hq/c/hq_base.h	214;"	d
PIXEL20_82	src/filters/hq/c/hq_base.h	215;"	d
PIXEL20_83	src/filters/hq/c/hq_base.h	216;"	d
PIXEL20_C	src/filters/hq/c/hq_base.h	105;"	d
PIXEL21_0	src/filters/hq/c/hq_base.h	218;"	d
PIXEL21_1	src/filters/hq/c/hq_base.h	107;"	d
PIXEL21_3	src/filters/hq/c/hq_base.h	108;"	d
PIXEL21_30	src/filters/hq/c/hq_base.h	219;"	d
PIXEL21_31	src/filters/hq/c/hq_base.h	220;"	d
PIXEL21_32	src/filters/hq/c/hq_base.h	221;"	d
PIXEL21_6	src/filters/hq/c/hq_base.h	109;"	d
PIXEL21_70	src/filters/hq/c/hq_base.h	222;"	d
PIXEL21_C	src/filters/hq/c/hq_base.h	110;"	d
PIXEL22_0	src/filters/hq/c/hq_base.h	223;"	d
PIXEL22_1D	src/filters/hq/c/hq_base.h	113;"	d
PIXEL22_1M	src/filters/hq/c/hq_base.h	112;"	d
PIXEL22_1R	src/filters/hq/c/hq_base.h	114;"	d
PIXEL22_2	src/filters/hq/c/hq_base.h	115;"	d
PIXEL22_30	src/filters/hq/c/hq_base.h	224;"	d
PIXEL22_31	src/filters/hq/c/hq_base.h	225;"	d
PIXEL22_32	src/filters/hq/c/hq_base.h	226;"	d
PIXEL22_4	src/filters/hq/c/hq_base.h	116;"	d
PIXEL22_5	src/filters/hq/c/hq_base.h	117;"	d
PIXEL22_70	src/filters/hq/c/hq_base.h	227;"	d
PIXEL22_C	src/filters/hq/c/hq_base.h	118;"	d
PIXEL23_0	src/filters/hq/c/hq_base.h	229;"	d
PIXEL23_10	src/filters/hq/c/hq_base.h	230;"	d
PIXEL23_11	src/filters/hq/c/hq_base.h	231;"	d
PIXEL23_13	src/filters/hq/c/hq_base.h	232;"	d
PIXEL23_21	src/filters/hq/c/hq_base.h	233;"	d
PIXEL23_32	src/filters/hq/c/hq_base.h	234;"	d
PIXEL23_50	src/filters/hq/c/hq_base.h	235;"	d
PIXEL23_60	src/filters/hq/c/hq_base.h	236;"	d
PIXEL23_61	src/filters/hq/c/hq_base.h	237;"	d
PIXEL23_81	src/filters/hq/c/hq_base.h	238;"	d
PIXEL23_83	src/filters/hq/c/hq_base.h	239;"	d
PIXEL30_0	src/filters/hq/c/hq_base.h	241;"	d
PIXEL30_11	src/filters/hq/c/hq_base.h	242;"	d
PIXEL30_12	src/filters/hq/c/hq_base.h	243;"	d
PIXEL30_20	src/filters/hq/c/hq_base.h	244;"	d
PIXEL30_50	src/filters/hq/c/hq_base.h	245;"	d
PIXEL30_80	src/filters/hq/c/hq_base.h	246;"	d
PIXEL30_81	src/filters/hq/c/hq_base.h	247;"	d
PIXEL30_82	src/filters/hq/c/hq_base.h	248;"	d
PIXEL31_0	src/filters/hq/c/hq_base.h	250;"	d
PIXEL31_10	src/filters/hq/c/hq_base.h	251;"	d
PIXEL31_11	src/filters/hq/c/hq_base.h	252;"	d
PIXEL31_13	src/filters/hq/c/hq_base.h	253;"	d
PIXEL31_21	src/filters/hq/c/hq_base.h	254;"	d
PIXEL31_32	src/filters/hq/c/hq_base.h	255;"	d
PIXEL31_50	src/filters/hq/c/hq_base.h	256;"	d
PIXEL31_60	src/filters/hq/c/hq_base.h	257;"	d
PIXEL31_61	src/filters/hq/c/hq_base.h	258;"	d
PIXEL31_81	src/filters/hq/c/hq_base.h	259;"	d
PIXEL31_83	src/filters/hq/c/hq_base.h	260;"	d
PIXEL32_0	src/filters/hq/c/hq_base.h	262;"	d
PIXEL32_10	src/filters/hq/c/hq_base.h	263;"	d
PIXEL32_12	src/filters/hq/c/hq_base.h	264;"	d
PIXEL32_14	src/filters/hq/c/hq_base.h	265;"	d
PIXEL32_21	src/filters/hq/c/hq_base.h	266;"	d
PIXEL32_31	src/filters/hq/c/hq_base.h	267;"	d
PIXEL32_50	src/filters/hq/c/hq_base.h	268;"	d
PIXEL32_60	src/filters/hq/c/hq_base.h	269;"	d
PIXEL32_61	src/filters/hq/c/hq_base.h	270;"	d
PIXEL32_82	src/filters/hq/c/hq_base.h	271;"	d
PIXEL32_83	src/filters/hq/c/hq_base.h	272;"	d
PIXEL33_0	src/filters/hq/c/hq_base.h	274;"	d
PIXEL33_11	src/filters/hq/c/hq_base.h	275;"	d
PIXEL33_12	src/filters/hq/c/hq_base.h	276;"	d
PIXEL33_20	src/filters/hq/c/hq_base.h	277;"	d
PIXEL33_50	src/filters/hq/c/hq_base.h	278;"	d
PIXEL33_80	src/filters/hq/c/hq_base.h	279;"	d
PIXEL33_81	src/filters/hq/c/hq_base.h	280;"	d
PIXEL33_82	src/filters/hq/c/hq_base.h	281;"	d
PIX_FMT_RGB565LE	src/common/ffmpeg.cpp	49;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	212;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	215;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	218;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	221;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	224;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	227;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	230;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	233;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	236;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	239;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	242;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	245;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	248;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	251;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	254;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	257;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	260;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	263;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	266;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	269;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	272;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	275;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	278;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	281;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	284;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	287;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	205;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	208;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	211;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	214;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	217;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	220;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	223;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	226;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	229;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	232;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	235;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	238;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	241;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	244;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	247;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	250;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	253;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	256;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	259;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	262;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	265;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	268;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	271;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	274;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	277;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	280;"	d	file:
PMAPVIRTKEYS	src/win32/CmdAccelOb.h	/^} MAPVIRTKEYS, *PMAPVIRTKEYS;$/;"	t	typeref:struct:tagMAPVIRTKEYS
PORT_H	src/common/Port.h	2;"	d
POS	src/gba/GBA-arm.cpp	110;"	d	file:
POS	src/gba/GBA-thumb.cpp	77;"	d	file:
POV_DOWN	src/win32/DirectInput.cpp	23;"	d	file:
POV_LEFT	src/win32/DirectInput.cpp	25;"	d	file:
POV_RIGHT	src/win32/DirectInput.cpp	24;"	d	file:
POV_UP	src/win32/DirectInput.cpp	22;"	d	file:
PPC_Convert	fex/7z_C/Bra.c	/^SizeT PPC_Convert(Byte *data, SizeT size, UInt32 ip, int encoding)$/;"	f
PPMD7_MAX_MEM_SIZE	fex/7z_C/Ppmd7.h	20;"	d
PPMD7_MAX_ORDER	fex/7z_C/Ppmd7.h	17;"	d
PPMD7_MIN_MEM_SIZE	fex/7z_C/Ppmd7.h	19;"	d
PPMD7_MIN_ORDER	fex/7z_C/Ppmd7.h	16;"	d
PPMD7_kExpEscape	fex/7z_C/Ppmd7.c	/^const Byte PPMD7_kExpEscape[16] = { 25, 14, 9, 7, 5, 5, 4, 4, 4, 3, 3, 3, 2, 2, 2, 2 };$/;"	v
PPMD_32BIT	fex/7z_C/Ppmd.h	14;"	d
PPMD_BIN_SCALE	fex/7z_C/Ppmd.h	19;"	d
PPMD_GET_MEAN	fex/7z_C/Ppmd.h	22;"	d
PPMD_GET_MEAN_SPEC	fex/7z_C/Ppmd.h	21;"	d
PPMD_INT_BITS	fex/7z_C/Ppmd.h	17;"	d
PPMD_N1	fex/7z_C/Ppmd.h	26;"	d
PPMD_N2	fex/7z_C/Ppmd.h	27;"	d
PPMD_N3	fex/7z_C/Ppmd.h	28;"	d
PPMD_N4	fex/7z_C/Ppmd.h	29;"	d
PPMD_NUM_INDEXES	fex/7z_C/Ppmd.h	30;"	d
PPMD_PERIOD_BITS	fex/7z_C/Ppmd.h	18;"	d
PPMD_SetAllBitsIn256Bytes	fex/7z_C/Ppmd.h	75;"	d
PPMD_UPDATE_PROB_0	fex/7z_C/Ppmd.h	23;"	d
PPMD_UPDATE_PROB_1	fex/7z_C/Ppmd.h	24;"	d
PRF	fex/7z_C/Lzma2Dec.c	42;"	d	file:
PRF	fex/7z_C/Lzma2Dec.c	44;"	d	file:
PRODUCTVER	src/AutoBuild.h	26;"	d
PTRDIFF_MAX	src/libretro/msvc/msvc-2003-xbox1/stdint.h	191;"	d
PTRDIFF_MAX	src/libretro/msvc/msvc-2003-xbox1/stdint.h	194;"	d
PTRDIFF_MIN	src/libretro/msvc/msvc-2003-xbox1/stdint.h	190;"	d
PTRDIFF_MIN	src/libretro/msvc/msvc-2003-xbox1/stdint.h	193;"	d
PackCRCs	fex/7z_C/7z.h	/^  UInt32 *PackCRCs;$/;"	m	struct:__anon15
PackCRCsDefined	fex/7z_C/7z.h	/^  Byte *PackCRCsDefined;$/;"	m	struct:__anon15
PackSizes	fex/7z_C/7z.h	/^  UInt64 *PackSizes;$/;"	m	struct:__anon15
PackStreamStartPositions	fex/7z_C/7z.h	/^  UInt64 *PackStreamStartPositions;$/;"	m	struct:__anon16
PackStreams	fex/7z_C/7z.h	/^  UInt32 *PackStreams;$/;"	m	struct:__anon12
PaintEv	src/wx/panel.cpp	/^void DrawingPanel::PaintEv(wxPaintEvent &ev)$/;"	f	class:DrawingPanel
PaintEv2	src/wx/drawing.h	/^    void PaintEv2(wxPaintEvent &ev) { PaintEv(ev); }$/;"	f	class:BasicDrawingPanel
PaintEv2	src/wx/drawing.h	/^    void PaintEv2(wxPaintEvent &ev) { PaintEv(ev); }$/;"	f	class:CairoDrawingPanel
PaintEv2	src/wx/drawing.h	/^    void PaintEv2(wxPaintEvent &ev) { PaintEv(ev); }$/;"	f	class:DXDrawingPanel
PaintEv2	src/wx/drawing.h	/^    void PaintEv2(wxPaintEvent &ev) { PaintEv(ev); }$/;"	f	class:GLDrawingPanel
PaletteView	src/win32/PaletteView.cpp	/^PaletteView::PaletteView(CWnd* pParent \/*=NULL*\/)$/;"	f	class:PaletteView
PaletteView	src/win32/PaletteView.h	/^class PaletteView : public ResizeDlg, IUpdateListener$/;"	c
PaletteViewControl	src/win32/PaletteViewControl.cpp	/^PaletteViewControl::PaletteViewControl()$/;"	f	class:PaletteViewControl
PaletteViewControl	src/win32/PaletteViewControl.h	/^class PaletteViewControl : public CWnd$/;"	c
PaletteViewer	src/wx/gfxviewers.cpp	/^	PaletteViewer() : Viewer(wxT("PaletteViewer"))$/;"	f	class:Viewers::PaletteViewer
PaletteViewer	src/wx/gfxviewers.cpp	/^    class PaletteViewer : public Viewer$/;"	c	namespace:Viewers	file:
PaletteViewer	src/wx/gfxviewers.cpp	/^void MainFrame::PaletteViewer()$/;"	f	class:MainFrame
ParseJoy	src/wx/widgets/joyedit.cpp	/^static bool ParseJoy(const wxChar *s, int len, int &mod, int &key, int &joy)$/;"	f	file:
ParseString	src/wx/widgets/joyedit.cpp	/^bool wxJoyKeyTextCtrl::ParseString(const wxChar *s, int len, int &mod, int &key, int &joy)$/;"	f	class:wxJoyKeyTextCtrl
ParseString	src/wx/widgets/keyedit.cpp	/^bool wxKeyTextCtrl::ParseString(const wxChar *s, int len, int &mod, int &key)$/;"	f	class:wxKeyTextCtrl
Pause	src/wx/panel.cpp	/^void GameArea::Pause()$/;"	f	class:GameArea
Ping	src/win32/LinkOptions.cpp	/^	void Ping()$/;"	f	class:Win32ServerInfoDisplay
Ping	src/win32/LinkOptions.cpp	/^    void Ping()$/;"	f	class:Win32ClientInfoDisplay
PixView	src/wx/viewsupt.h	/^	PixView() : wxPanel(), bm(0) {}$/;"	f	class:Viewers::PixView
PixView	src/wx/viewsupt.h	/^    class PixView : public wxPanel$/;"	c	namespace:Viewers
PixViewEvt	src/wx/viewsupt.h	/^    class PixViewEvt : public PixView$/;"	c	namespace:Viewers
Pixelate	src/filters/pixel.cpp	/^void Pixelate(u8 *srcPtr, u32 srcPitch, u8 *deltaPtr,$/;"	f
Pixelate32	src/filters/pixel.cpp	/^void Pixelate32(u8 *srcPtr, u32 srcPitch, u8 * \/* deltaPtr *\/,$/;"	f
PluginDesc	src/win32/SelectPlugin.h	/^struct PluginDesc$/;"	s
PluginEnableHandler	src/wx/guiinit.cpp	/^} PluginEnableHandler;$/;"	v	typeref:class:PluginEnable_t	file:
PluginEnable_t	src/wx/guiinit.cpp	/^static class PluginEnable_t : public wxEvtHandler$/;"	c	file:
PluginEnabler	src/wx/guiinit.cpp	/^    PluginEnabler() : wxValidator() {}$/;"	f	class:PluginEnabler
PluginEnabler	src/wx/guiinit.cpp	/^    PluginEnabler(const PluginEnabler &e) : wxValidator() {}$/;"	f	class:PluginEnabler
PluginEnabler	src/wx/guiinit.cpp	/^class PluginEnabler : public wxValidator$/;"	c	file:
PluginListFiller	src/wx/guiinit.cpp	/^    PluginListFiller(const PluginListFiller &e) :$/;"	f	class:PluginListFiller
PluginListFiller	src/wx/guiinit.cpp	/^    PluginListFiller(wxDialog *parent, wxControl *lab, wxChoice *ch) :$/;"	f	class:PluginListFiller
PluginListFiller	src/wx/guiinit.cpp	/^class PluginListFiller : public PluginEnabler$/;"	c	file:
PosSlot	fex/7z_C/LzmaDec.c	100;"	d	file:
PostNcDestroy	src/win32/BitmapControl.cpp	/^void BitmapControl::PostNcDestroy()$/;"	f	class:BitmapControl
PostNcDestroy	src/win32/Disassemble.cpp	/^void Disassemble::PostNcDestroy()$/;"	f	class:Disassemble
PostNcDestroy	src/win32/GBDisassemble.cpp	/^void GBDisassemble::PostNcDestroy()$/;"	f	class:GBDisassemble
PostNcDestroy	src/win32/GBMapView.cpp	/^void GBMapView::PostNcDestroy()$/;"	f	class:GBMapView
PostNcDestroy	src/win32/GBMemoryViewerDlg.cpp	/^void GBMemoryViewerDlg::PostNcDestroy()$/;"	f	class:GBMemoryViewerDlg
PostNcDestroy	src/win32/GBOamView.cpp	/^void GBOamView::PostNcDestroy()$/;"	f	class:GBOamView
PostNcDestroy	src/win32/GBPaletteView.cpp	/^void GBPaletteView::PostNcDestroy()$/;"	f	class:GBPaletteView
PostNcDestroy	src/win32/GBTileView.cpp	/^void GBTileView::PostNcDestroy()$/;"	f	class:GBTileView
PostNcDestroy	src/win32/IOViewer.cpp	/^void IOViewer::PostNcDestroy()$/;"	f	class:IOViewer
PostNcDestroy	src/win32/Logging.cpp	/^void Logging::PostNcDestroy()$/;"	f	class:Logging
PostNcDestroy	src/win32/MapView.cpp	/^void MapView::PostNcDestroy()$/;"	f	class:MapView
PostNcDestroy	src/win32/MemoryViewerDlg.cpp	/^void MemoryViewerDlg::PostNcDestroy()$/;"	f	class:MemoryViewerDlg
PostNcDestroy	src/win32/OamView.cpp	/^void OamView::PostNcDestroy()$/;"	f	class:OamView
PostNcDestroy	src/win32/PaletteView.cpp	/^void PaletteView::PostNcDestroy()$/;"	f	class:PaletteView
PostNcDestroy	src/win32/TileView.cpp	/^void TileView::PostNcDestroy()$/;"	f	class:TileView
Ppmd7Context_OneState	fex/7z_C/Ppmd7.h	40;"	d
Ppmd7_Alloc	fex/7z_C/Ppmd7.c	/^Bool Ppmd7_Alloc(CPpmd7 *p, UInt32 size, ISzAlloc *alloc)$/;"	f
Ppmd7_Construct	fex/7z_C/Ppmd7.c	/^void Ppmd7_Construct(CPpmd7 *p)$/;"	f
Ppmd7_DecodeSymbol	fex/7z_C/Ppmd7Dec.c	/^int Ppmd7_DecodeSymbol(CPpmd7 *p, IPpmd7_RangeDec *rc)$/;"	f
Ppmd7_Free	fex/7z_C/Ppmd7.c	/^void Ppmd7_Free(CPpmd7 *p, ISzAlloc *alloc)$/;"	f
Ppmd7_GetBinSumm	fex/7z_C/Ppmd7.h	88;"	d
Ppmd7_GetContext	fex/7z_C/Ppmd7.h	75;"	d
Ppmd7_GetContext	fex/7z_C/Ppmd7.h	79;"	d
Ppmd7_GetPtr	fex/7z_C/Ppmd7.h	74;"	d
Ppmd7_GetPtr	fex/7z_C/Ppmd7.h	78;"	d
Ppmd7_GetStats	fex/7z_C/Ppmd7.h	76;"	d
Ppmd7_GetStats	fex/7z_C/Ppmd7.h	80;"	d
Ppmd7_Init	fex/7z_C/Ppmd7.c	/^void Ppmd7_Init(CPpmd7 *p, unsigned maxOrder)$/;"	f
Ppmd7_MakeEscFreq	fex/7z_C/Ppmd7.c	/^CPpmd_See *Ppmd7_MakeEscFreq(CPpmd7 *p, unsigned numMasked, UInt32 *escFreq)$/;"	f
Ppmd7_Update1	fex/7z_C/Ppmd7.c	/^void Ppmd7_Update1(CPpmd7 *p)$/;"	f
Ppmd7_Update1_0	fex/7z_C/Ppmd7.c	/^void Ppmd7_Update1_0(CPpmd7 *p)$/;"	f
Ppmd7_Update2	fex/7z_C/Ppmd7.c	/^void Ppmd7_Update2(CPpmd7 *p)$/;"	f
Ppmd7_UpdateBin	fex/7z_C/Ppmd7.c	/^void Ppmd7_UpdateBin(CPpmd7 *p)$/;"	f
Ppmd7_WasAllocated	fex/7z_C/Ppmd7.h	66;"	d
Ppmd7z_RangeDec_CreateVTable	fex/7z_C/Ppmd7Dec.c	/^void Ppmd7z_RangeDec_CreateVTable(CPpmd7z_RangeDec *p)$/;"	f
Ppmd7z_RangeDec_Init	fex/7z_C/Ppmd7Dec.c	/^Bool Ppmd7z_RangeDec_Init(CPpmd7z_RangeDec *p)$/;"	f
Ppmd7z_RangeDec_IsFinishedOK	fex/7z_C/Ppmd7.h	117;"	d
Ppmd_See_Update	fex/7z_C/Ppmd.h	40;"	d
PreSubclassWindow	src/win32/ColorButton.cpp	/^void ColorButton::PreSubclassWindow()$/;"	f	class:ColorButton
PreSubclassWindow	src/win32/Hyperlink.cpp	/^void Hyperlink::PreSubclassWindow()$/;"	f	class:Hyperlink
PreTranslateMessage	src/win32/AudioCoreSettingsDlg.cpp	/^BOOL AudioCoreSettingsDlg::PreTranslateMessage(MSG* pMsg)$/;"	f	class:AudioCoreSettingsDlg
PreTranslateMessage	src/win32/Joypad.cpp	/^BOOL JoypadEditControl::PreTranslateMessage(MSG *pMsg)$/;"	f	class:JoypadEditControl
PreTranslateMessage	src/win32/KeyboardEdit.cpp	/^BOOL CKeyboardEdit::PreTranslateMessage (MSG* pMsg)$/;"	f	class:CKeyboardEdit
PreTranslateMessage	src/win32/LinkOptions.cpp	/^ BOOL LinkOptions::PreTranslateMessage(MSG* pMsg)$/;"	f	class:LinkOptions
PreTranslateMessage	src/win32/LinkOptions.cpp	/^BOOL CMyTabCtrl::PreTranslateMessage(MSG* pMsg)$/;"	f	class:CMyTabCtrl
PreTranslateMessage	src/win32/LinkOptions.cpp	/^BOOL LinkClient::PreTranslateMessage(MSG* pMsg)$/;"	f	class:LinkClient
PreTranslateMessage	src/win32/LinkOptions.cpp	/^BOOL LinkGeneral::PreTranslateMessage(MSG* pMsg)$/;"	f	class:LinkGeneral
PreTranslateMessage	src/win32/LinkOptions.cpp	/^BOOL LinkServer::PreTranslateMessage(MSG* pMsg)$/;"	f	class:LinkServer
PreTranslateMessage	src/win32/MainWnd.cpp	/^BOOL MainWnd::PreTranslateMessage(MSG* pMsg)$/;"	f	class:MainWnd
PreferencesDialog	src/gtk/generalconfig.cpp	/^PreferencesDialog::PreferencesDialog(GtkDialog* _pstDialog, const Glib::RefPtr<Gtk::Builder>& refBuilder) :$/;"	f	class:VBA::PreferencesDialog
PreferencesDialog	src/gtk/generalconfig.h	/^class PreferencesDialog : public Gtk::Dialog$/;"	c	namespace:VBA
Prev	fex/7z_C/Ppmd7.c	/^  CPpmd7_Node_Ref Prev;$/;"	m	struct:CPpmd7_Node_	file:
PrevEnabledTab	src/win32/LinkOptions.cpp	/^int CMyTabCtrl::PrevEnabledTab(int iCurrentTab, BOOL bWrap)$/;"	f	class:CMyTabCtrl
PrevSuccess	fex/7z_C/Ppmd7.h	/^  unsigned OrderFall, InitEsc, PrevSuccess, MaxOrder, HiBitsFlag;$/;"	m	struct:__anon6
PrintDialog	src/wx/sys.cpp	/^PrintDialog::PrintDialog(const u16 *data, int lines, bool cont) :$/;"	f	class:PrintDialog
PrintDialog	src/wx/sys.cpp	/^class PrintDialog : public wxEvtHandler, public wxPrintout$/;"	c	file:
Progress	fex/7z_C/Types.h	/^  SRes (*Progress)(void *p, UInt64 inSize, UInt64 outSize);$/;"	m	struct:__anon32
Props	fex/7z_C/7z.h	/^  CBuf Props;$/;"	m	struct:__anon10
PtInRect	src/win32/WinHelper.h	/^      inline bool PtInRect( const POINT &pt ) const   {       return  ( pt.x >= left && pt.x < right && pt.y >=top && pt.y < bottom ); }$/;"	f	class:WinHelper::CRect
Q_INTERPOLATE	src/filters/2xSaI.cpp	/^static inline u32 Q_INTERPOLATE (u32 A, u32 B, u32 C, u32 D)$/;"	f	file:
QueryInterface	src/win32/XAudio2.cpp	/^	HRESULT STDMETHODCALLTYPE QueryInterface( REFIID riid, VOID **ppvInterface )$/;"	f	class:XAudio2_Device_Notifier
QueryInterface	src/wx/xaudio2.cpp	/^	HRESULT STDMETHODCALLTYPE QueryInterface( REFIID riid, VOID **ppvInterface )$/;"	f	class:XAudio2_Device_Notifier
R10_FIQ	src/gba/GBA.h	135;"	d
R11_FIQ	src/gba/GBA.h	136;"	d
R12_FIQ	src/gba/GBA.h	137;"	d
R13_ABT	src/gba/GBA.h	127;"	d
R13_FIQ	src/gba/GBA.h	138;"	d
R13_IRQ	src/gba/GBA.h	119;"	d
R13_SVC	src/gba/GBA.h	124;"	d
R13_UND	src/gba/GBA.h	130;"	d
R13_USR	src/gba/GBA.h	122;"	d
R14_ABT	src/gba/GBA.h	128;"	d
R14_FIQ	src/gba/GBA.h	139;"	d
R14_IRQ	src/gba/GBA.h	120;"	d
R14_SVC	src/gba/GBA.h	125;"	d
R14_UND	src/gba/GBA.h	131;"	d
R14_USR	src/gba/GBA.h	123;"	d
R8_FIQ	src/gba/GBA.h	133;"	d
R9_FIQ	src/gba/GBA.h	134;"	d
RAR_EXTRACTOR_H	fex/fex/Rar_Extractor.h	5;"	d
RBMASK	src/filters/hq/c/hq_implementation.cpp	56;"	d	file:
RBMASK	src/filters/hq/c/hq_shared.h	27;"	d
RBMASK	src/filters/hq/c/hq_shared.h	44;"	d
RBSHIFT1MASK	src/filters/hq/c/hq_implementation.cpp	58;"	d	file:
RBSHIFT1MASK	src/filters/hq/c/hq_shared.h	30;"	d
RBSHIFT1MASK	src/filters/hq/c/hq_shared.h	46;"	d
RBSHIFT2MASK	src/filters/hq/c/hq_implementation.cpp	60;"	d	file:
RBSHIFT2MASK	src/filters/hq/c/hq_shared.h	33;"	d
RBSHIFT2MASK	src/filters/hq/c/hq_shared.h	48;"	d
RBSHIFT3MASK	src/filters/hq/c/hq_implementation.cpp	62;"	d	file:
RBSHIFT3MASK	src/filters/hq/c/hq_shared.h	36;"	d
RBSHIFT3MASK	src/filters/hq/c/hq_shared.h	50;"	d
RBSHIFT4MASK	src/filters/hq/c/hq_implementation.cpp	64;"	d	file:
RBSHIFT4MASK	src/filters/hq/c/hq_shared.h	39;"	d
RBSHIFT4MASK	src/filters/hq/c/hq_shared.h	52;"	d
RC_INIT2	fex/7z_C/Bcj2.c	24;"	d	file:
RC_INIT_SIZE	fex/7z_C/LzmaDec.c	15;"	d	file:
RC_READ_BYTE	fex/7z_C/Bcj2.c	22;"	d	file:
RC_TEST	fex/7z_C/Bcj2.c	23;"	d	file:
READ16LE	src/common/Port.h	31;"	d
READ16LE	src/common/Port.h	48;"	d
READ16LE	src/common/Port.h	58;"	d
READ32LE	src/common/Port.h	36;"	d
READ32LE	src/common/Port.h	50;"	d
READ32LE	src/common/Port.h	60;"	d
READDATA	src/gba/RTC.cpp	/^   READDATA$/;"	e	enum:RTCSTATE	file:
REALKEY_MASK	src/wx/wxvbam.h	555;"	d
RED_MASK555	src/filters/2xSaI.cpp	219;"	d	file:
RED_MASK565	src/filters/2xSaI.cpp	215;"	d	file:
REF	fex/7z_C/Ppmd7.c	20;"	d	file:
REF	fex/7z_C/Ppmd7.c	22;"	d	file:
REFLECT	src/apu/Gb_Apu_State.cpp	21;"	d	file:
REFLECT	src/apu/Gb_Apu_State.cpp	23;"	d	file:
REGREF1	src/gba/GBA-arm.cpp	307;"	d	file:
REGREF1	src/gba/GBA-arm.cpp	337;"	d	file:
REGREF2	src/gba/GBA-arm.cpp	308;"	d	file:
REGREF2	src/gba/GBA-arm.cpp	338;"	d	file:
REG_NOT_SET	src/gba/elf.cpp	/^  REG_NOT_SET,$/;"	e	enum:ELFRegMode	file:
REG_OFFSET	src/gba/elf.cpp	/^  REG_OFFSET,$/;"	e	enum:ELFRegMode	file:
REG_REGISTER	src/gba/elf.cpp	/^  REG_REGISTER$/;"	e	enum:ELFRegMode	file:
REJECT	src/sdl/expr-lex.cpp	462;"	d	file:
RENDER_PLUGIN_INFO	src/win32/rpi.h	/^} RENDER_PLUGIN_INFO;$/;"	t	typeref:struct:__anon67
RENDER_PLUGIN_OUTP	src/win32/rpi.h	/^} RENDER_PLUGIN_OUTP;$/;"	t	typeref:struct:__anon66
RENDPLUG_GetInfo	src/win32/rpi.h	/^typedef	RENDER_PLUGIN_INFO	*(*RENDPLUG_GetInfo)(void);$/;"	t
RENDPLUG_Output	src/win32/rpi.h	/^typedef	void	(*RENDPLUG_Output)(RENDER_PLUGIN_OUTP *);$/;"	t
REP16	src/gba/GBA-arm.cpp	2658;"	d	file:
REP256	src/gba/GBA-arm.cpp	2661;"	d	file:
REQUIRE_ORDER	src/sdl/getopt.c	/^  REQUIRE_ORDER, PERMUTE, RETURN_IN_ORDER$/;"	e	enum:__anon54	file:
RESERVED	src/common/memgzio.c	63;"	d	file:
RETROKMOD_ALT	src/libretro/libretro.h	/^   RETROKMOD_ALT        = 0x04,$/;"	e	enum:retro_mod
RETROKMOD_CAPSLOCK	src/libretro/libretro.h	/^   RETROKMOD_CAPSLOCK   = 0x20,$/;"	e	enum:retro_mod
RETROKMOD_CTRL	src/libretro/libretro.h	/^   RETROKMOD_CTRL       = 0x02,$/;"	e	enum:retro_mod
RETROKMOD_DUMMY	src/libretro/libretro.h	/^   RETROKMOD_DUMMY = INT_MAX \/\/ Ensure sizeof(enum) == sizeof(int)$/;"	e	enum:retro_mod
RETROKMOD_META	src/libretro/libretro.h	/^   RETROKMOD_META       = 0x08,$/;"	e	enum:retro_mod
RETROKMOD_NONE	src/libretro/libretro.h	/^   RETROKMOD_NONE       = 0x0000,$/;"	e	enum:retro_mod
RETROKMOD_NUMLOCK	src/libretro/libretro.h	/^   RETROKMOD_NUMLOCK    = 0x10,$/;"	e	enum:retro_mod
RETROKMOD_SCROLLOCK	src/libretro/libretro.h	/^   RETROKMOD_SCROLLOCK  = 0x40,$/;"	e	enum:retro_mod
RETROKMOD_SHIFT	src/libretro/libretro.h	/^   RETROKMOD_SHIFT      = 0x01,$/;"	e	enum:retro_mod
RETROK_0	src/libretro/libretro.h	/^   RETROK_0              = 48,$/;"	e	enum:retro_key
RETROK_1	src/libretro/libretro.h	/^   RETROK_1              = 49,$/;"	e	enum:retro_key
RETROK_2	src/libretro/libretro.h	/^   RETROK_2              = 50,$/;"	e	enum:retro_key
RETROK_3	src/libretro/libretro.h	/^   RETROK_3              = 51,$/;"	e	enum:retro_key
RETROK_4	src/libretro/libretro.h	/^   RETROK_4              = 52,$/;"	e	enum:retro_key
RETROK_5	src/libretro/libretro.h	/^   RETROK_5              = 53,$/;"	e	enum:retro_key
RETROK_6	src/libretro/libretro.h	/^   RETROK_6              = 54,$/;"	e	enum:retro_key
RETROK_7	src/libretro/libretro.h	/^   RETROK_7              = 55,$/;"	e	enum:retro_key
RETROK_8	src/libretro/libretro.h	/^   RETROK_8              = 56,$/;"	e	enum:retro_key
RETROK_9	src/libretro/libretro.h	/^   RETROK_9              = 57,$/;"	e	enum:retro_key
RETROK_AMPERSAND	src/libretro/libretro.h	/^   RETROK_AMPERSAND      = 38,$/;"	e	enum:retro_key
RETROK_ASTERISK	src/libretro/libretro.h	/^   RETROK_ASTERISK       = 42,$/;"	e	enum:retro_key
RETROK_AT	src/libretro/libretro.h	/^   RETROK_AT             = 64,$/;"	e	enum:retro_key
RETROK_BACKQUOTE	src/libretro/libretro.h	/^   RETROK_BACKQUOTE      = 96,$/;"	e	enum:retro_key
RETROK_BACKSLASH	src/libretro/libretro.h	/^   RETROK_BACKSLASH      = 92,$/;"	e	enum:retro_key
RETROK_BACKSPACE	src/libretro/libretro.h	/^   RETROK_BACKSPACE      = 8,$/;"	e	enum:retro_key
RETROK_BREAK	src/libretro/libretro.h	/^   RETROK_BREAK          = 318,$/;"	e	enum:retro_key
RETROK_CAPSLOCK	src/libretro/libretro.h	/^   RETROK_CAPSLOCK       = 301,$/;"	e	enum:retro_key
RETROK_CARET	src/libretro/libretro.h	/^   RETROK_CARET          = 94,$/;"	e	enum:retro_key
RETROK_CLEAR	src/libretro/libretro.h	/^   RETROK_CLEAR          = 12,$/;"	e	enum:retro_key
RETROK_COLON	src/libretro/libretro.h	/^   RETROK_COLON          = 58,$/;"	e	enum:retro_key
RETROK_COMMA	src/libretro/libretro.h	/^   RETROK_COMMA          = 44,$/;"	e	enum:retro_key
RETROK_COMPOSE	src/libretro/libretro.h	/^   RETROK_COMPOSE        = 314,$/;"	e	enum:retro_key
RETROK_DELETE	src/libretro/libretro.h	/^   RETROK_DELETE         = 127,$/;"	e	enum:retro_key
RETROK_DOLLAR	src/libretro/libretro.h	/^   RETROK_DOLLAR         = 36,$/;"	e	enum:retro_key
RETROK_DOWN	src/libretro/libretro.h	/^   RETROK_DOWN           = 274,$/;"	e	enum:retro_key
RETROK_DUMMY	src/libretro/libretro.h	/^   RETROK_DUMMY          = INT_MAX \/\/ Ensure sizeof(enum) == sizeof(int)$/;"	e	enum:retro_key
RETROK_END	src/libretro/libretro.h	/^   RETROK_END            = 279,$/;"	e	enum:retro_key
RETROK_EQUALS	src/libretro/libretro.h	/^   RETROK_EQUALS         = 61,$/;"	e	enum:retro_key
RETROK_ESCAPE	src/libretro/libretro.h	/^   RETROK_ESCAPE         = 27,$/;"	e	enum:retro_key
RETROK_EURO	src/libretro/libretro.h	/^   RETROK_EURO           = 321,$/;"	e	enum:retro_key
RETROK_EXCLAIM	src/libretro/libretro.h	/^   RETROK_EXCLAIM        = 33,$/;"	e	enum:retro_key
RETROK_F1	src/libretro/libretro.h	/^   RETROK_F1             = 282,$/;"	e	enum:retro_key
RETROK_F10	src/libretro/libretro.h	/^   RETROK_F10            = 291,$/;"	e	enum:retro_key
RETROK_F11	src/libretro/libretro.h	/^   RETROK_F11            = 292,$/;"	e	enum:retro_key
RETROK_F12	src/libretro/libretro.h	/^   RETROK_F12            = 293,$/;"	e	enum:retro_key
RETROK_F13	src/libretro/libretro.h	/^   RETROK_F13            = 294,$/;"	e	enum:retro_key
RETROK_F14	src/libretro/libretro.h	/^   RETROK_F14            = 295,$/;"	e	enum:retro_key
RETROK_F15	src/libretro/libretro.h	/^   RETROK_F15            = 296,$/;"	e	enum:retro_key
RETROK_F2	src/libretro/libretro.h	/^   RETROK_F2             = 283,$/;"	e	enum:retro_key
RETROK_F3	src/libretro/libretro.h	/^   RETROK_F3             = 284,$/;"	e	enum:retro_key
RETROK_F4	src/libretro/libretro.h	/^   RETROK_F4             = 285,$/;"	e	enum:retro_key
RETROK_F5	src/libretro/libretro.h	/^   RETROK_F5             = 286,$/;"	e	enum:retro_key
RETROK_F6	src/libretro/libretro.h	/^   RETROK_F6             = 287,$/;"	e	enum:retro_key
RETROK_F7	src/libretro/libretro.h	/^   RETROK_F7             = 288,$/;"	e	enum:retro_key
RETROK_F8	src/libretro/libretro.h	/^   RETROK_F8             = 289,$/;"	e	enum:retro_key
RETROK_F9	src/libretro/libretro.h	/^   RETROK_F9             = 290,$/;"	e	enum:retro_key
RETROK_FIRST	src/libretro/libretro.h	/^   RETROK_FIRST          = 0,$/;"	e	enum:retro_key
RETROK_GREATER	src/libretro/libretro.h	/^   RETROK_GREATER        = 62,$/;"	e	enum:retro_key
RETROK_HASH	src/libretro/libretro.h	/^   RETROK_HASH           = 35,$/;"	e	enum:retro_key
RETROK_HELP	src/libretro/libretro.h	/^   RETROK_HELP           = 315,$/;"	e	enum:retro_key
RETROK_HOME	src/libretro/libretro.h	/^   RETROK_HOME           = 278,$/;"	e	enum:retro_key
RETROK_INSERT	src/libretro/libretro.h	/^   RETROK_INSERT         = 277,$/;"	e	enum:retro_key
RETROK_KP0	src/libretro/libretro.h	/^   RETROK_KP0            = 256,$/;"	e	enum:retro_key
RETROK_KP1	src/libretro/libretro.h	/^   RETROK_KP1            = 257,$/;"	e	enum:retro_key
RETROK_KP2	src/libretro/libretro.h	/^   RETROK_KP2            = 258,$/;"	e	enum:retro_key
RETROK_KP3	src/libretro/libretro.h	/^   RETROK_KP3            = 259,$/;"	e	enum:retro_key
RETROK_KP4	src/libretro/libretro.h	/^   RETROK_KP4            = 260,$/;"	e	enum:retro_key
RETROK_KP5	src/libretro/libretro.h	/^   RETROK_KP5            = 261,$/;"	e	enum:retro_key
RETROK_KP6	src/libretro/libretro.h	/^   RETROK_KP6            = 262,$/;"	e	enum:retro_key
RETROK_KP7	src/libretro/libretro.h	/^   RETROK_KP7            = 263,$/;"	e	enum:retro_key
RETROK_KP8	src/libretro/libretro.h	/^   RETROK_KP8            = 264,$/;"	e	enum:retro_key
RETROK_KP9	src/libretro/libretro.h	/^   RETROK_KP9            = 265,$/;"	e	enum:retro_key
RETROK_KP_DIVIDE	src/libretro/libretro.h	/^   RETROK_KP_DIVIDE      = 267,$/;"	e	enum:retro_key
RETROK_KP_ENTER	src/libretro/libretro.h	/^   RETROK_KP_ENTER       = 271,$/;"	e	enum:retro_key
RETROK_KP_EQUALS	src/libretro/libretro.h	/^   RETROK_KP_EQUALS      = 272,$/;"	e	enum:retro_key
RETROK_KP_MINUS	src/libretro/libretro.h	/^   RETROK_KP_MINUS       = 269,$/;"	e	enum:retro_key
RETROK_KP_MULTIPLY	src/libretro/libretro.h	/^   RETROK_KP_MULTIPLY    = 268,$/;"	e	enum:retro_key
RETROK_KP_PERIOD	src/libretro/libretro.h	/^   RETROK_KP_PERIOD      = 266,$/;"	e	enum:retro_key
RETROK_KP_PLUS	src/libretro/libretro.h	/^   RETROK_KP_PLUS        = 270,$/;"	e	enum:retro_key
RETROK_LALT	src/libretro/libretro.h	/^   RETROK_LALT           = 308,$/;"	e	enum:retro_key
RETROK_LAST	src/libretro/libretro.h	/^   RETROK_LAST,$/;"	e	enum:retro_key
RETROK_LCTRL	src/libretro/libretro.h	/^   RETROK_LCTRL          = 306,$/;"	e	enum:retro_key
RETROK_LEFT	src/libretro/libretro.h	/^   RETROK_LEFT           = 276,$/;"	e	enum:retro_key
RETROK_LEFTBRACKET	src/libretro/libretro.h	/^   RETROK_LEFTBRACKET    = 91,$/;"	e	enum:retro_key
RETROK_LEFTPAREN	src/libretro/libretro.h	/^   RETROK_LEFTPAREN      = 40,$/;"	e	enum:retro_key
RETROK_LESS	src/libretro/libretro.h	/^   RETROK_LESS           = 60,$/;"	e	enum:retro_key
RETROK_LMETA	src/libretro/libretro.h	/^   RETROK_LMETA          = 310,$/;"	e	enum:retro_key
RETROK_LSHIFT	src/libretro/libretro.h	/^   RETROK_LSHIFT         = 304,$/;"	e	enum:retro_key
RETROK_LSUPER	src/libretro/libretro.h	/^   RETROK_LSUPER         = 311,$/;"	e	enum:retro_key
RETROK_MENU	src/libretro/libretro.h	/^   RETROK_MENU           = 319,$/;"	e	enum:retro_key
RETROK_MINUS	src/libretro/libretro.h	/^   RETROK_MINUS          = 45,$/;"	e	enum:retro_key
RETROK_MODE	src/libretro/libretro.h	/^   RETROK_MODE           = 313,$/;"	e	enum:retro_key
RETROK_NUMLOCK	src/libretro/libretro.h	/^   RETROK_NUMLOCK        = 300,$/;"	e	enum:retro_key
RETROK_PAGEDOWN	src/libretro/libretro.h	/^   RETROK_PAGEDOWN       = 281,$/;"	e	enum:retro_key
RETROK_PAGEUP	src/libretro/libretro.h	/^   RETROK_PAGEUP         = 280,$/;"	e	enum:retro_key
RETROK_PAUSE	src/libretro/libretro.h	/^   RETROK_PAUSE          = 19,$/;"	e	enum:retro_key
RETROK_PERIOD	src/libretro/libretro.h	/^   RETROK_PERIOD         = 46,$/;"	e	enum:retro_key
RETROK_PLUS	src/libretro/libretro.h	/^   RETROK_PLUS           = 43,$/;"	e	enum:retro_key
RETROK_POWER	src/libretro/libretro.h	/^   RETROK_POWER          = 320,$/;"	e	enum:retro_key
RETROK_PRINT	src/libretro/libretro.h	/^   RETROK_PRINT          = 316,$/;"	e	enum:retro_key
RETROK_QUESTION	src/libretro/libretro.h	/^   RETROK_QUESTION       = 63,$/;"	e	enum:retro_key
RETROK_QUOTE	src/libretro/libretro.h	/^   RETROK_QUOTE          = 39,$/;"	e	enum:retro_key
RETROK_QUOTEDBL	src/libretro/libretro.h	/^   RETROK_QUOTEDBL       = 34,$/;"	e	enum:retro_key
RETROK_RALT	src/libretro/libretro.h	/^   RETROK_RALT           = 307,$/;"	e	enum:retro_key
RETROK_RCTRL	src/libretro/libretro.h	/^   RETROK_RCTRL          = 305,$/;"	e	enum:retro_key
RETROK_RETURN	src/libretro/libretro.h	/^   RETROK_RETURN         = 13,$/;"	e	enum:retro_key
RETROK_RIGHT	src/libretro/libretro.h	/^   RETROK_RIGHT          = 275,$/;"	e	enum:retro_key
RETROK_RIGHTBRACKET	src/libretro/libretro.h	/^   RETROK_RIGHTBRACKET   = 93,$/;"	e	enum:retro_key
RETROK_RIGHTPAREN	src/libretro/libretro.h	/^   RETROK_RIGHTPAREN     = 41,$/;"	e	enum:retro_key
RETROK_RMETA	src/libretro/libretro.h	/^   RETROK_RMETA          = 309,$/;"	e	enum:retro_key
RETROK_RSHIFT	src/libretro/libretro.h	/^   RETROK_RSHIFT         = 303,$/;"	e	enum:retro_key
RETROK_RSUPER	src/libretro/libretro.h	/^   RETROK_RSUPER         = 312,$/;"	e	enum:retro_key
RETROK_SCROLLOCK	src/libretro/libretro.h	/^   RETROK_SCROLLOCK      = 302,$/;"	e	enum:retro_key
RETROK_SEMICOLON	src/libretro/libretro.h	/^   RETROK_SEMICOLON      = 59,$/;"	e	enum:retro_key
RETROK_SLASH	src/libretro/libretro.h	/^   RETROK_SLASH          = 47,$/;"	e	enum:retro_key
RETROK_SPACE	src/libretro/libretro.h	/^   RETROK_SPACE          = 32,$/;"	e	enum:retro_key
RETROK_SYSREQ	src/libretro/libretro.h	/^   RETROK_SYSREQ         = 317,$/;"	e	enum:retro_key
RETROK_TAB	src/libretro/libretro.h	/^   RETROK_TAB            = 9,$/;"	e	enum:retro_key
RETROK_UNDERSCORE	src/libretro/libretro.h	/^   RETROK_UNDERSCORE     = 95,$/;"	e	enum:retro_key
RETROK_UNDO	src/libretro/libretro.h	/^   RETROK_UNDO           = 322,$/;"	e	enum:retro_key
RETROK_UNKNOWN	src/libretro/libretro.h	/^   RETROK_UNKNOWN        = 0,$/;"	e	enum:retro_key
RETROK_UP	src/libretro/libretro.h	/^   RETROK_UP             = 273,$/;"	e	enum:retro_key
RETROK_a	src/libretro/libretro.h	/^   RETROK_a              = 97,$/;"	e	enum:retro_key
RETROK_b	src/libretro/libretro.h	/^   RETROK_b              = 98,$/;"	e	enum:retro_key
RETROK_c	src/libretro/libretro.h	/^   RETROK_c              = 99,$/;"	e	enum:retro_key
RETROK_d	src/libretro/libretro.h	/^   RETROK_d              = 100,$/;"	e	enum:retro_key
RETROK_e	src/libretro/libretro.h	/^   RETROK_e              = 101,$/;"	e	enum:retro_key
RETROK_f	src/libretro/libretro.h	/^   RETROK_f              = 102,$/;"	e	enum:retro_key
RETROK_g	src/libretro/libretro.h	/^   RETROK_g              = 103,$/;"	e	enum:retro_key
RETROK_h	src/libretro/libretro.h	/^   RETROK_h              = 104,$/;"	e	enum:retro_key
RETROK_i	src/libretro/libretro.h	/^   RETROK_i              = 105,$/;"	e	enum:retro_key
RETROK_j	src/libretro/libretro.h	/^   RETROK_j              = 106,$/;"	e	enum:retro_key
RETROK_k	src/libretro/libretro.h	/^   RETROK_k              = 107,$/;"	e	enum:retro_key
RETROK_l	src/libretro/libretro.h	/^   RETROK_l              = 108,$/;"	e	enum:retro_key
RETROK_m	src/libretro/libretro.h	/^   RETROK_m              = 109,$/;"	e	enum:retro_key
RETROK_n	src/libretro/libretro.h	/^   RETROK_n              = 110,$/;"	e	enum:retro_key
RETROK_o	src/libretro/libretro.h	/^   RETROK_o              = 111,$/;"	e	enum:retro_key
RETROK_p	src/libretro/libretro.h	/^   RETROK_p              = 112,$/;"	e	enum:retro_key
RETROK_q	src/libretro/libretro.h	/^   RETROK_q              = 113,$/;"	e	enum:retro_key
RETROK_r	src/libretro/libretro.h	/^   RETROK_r              = 114,$/;"	e	enum:retro_key
RETROK_s	src/libretro/libretro.h	/^   RETROK_s              = 115,$/;"	e	enum:retro_key
RETROK_t	src/libretro/libretro.h	/^   RETROK_t              = 116,$/;"	e	enum:retro_key
RETROK_u	src/libretro/libretro.h	/^   RETROK_u              = 117,$/;"	e	enum:retro_key
RETROK_v	src/libretro/libretro.h	/^   RETROK_v              = 118,$/;"	e	enum:retro_key
RETROK_w	src/libretro/libretro.h	/^   RETROK_w              = 119,$/;"	e	enum:retro_key
RETROK_x	src/libretro/libretro.h	/^   RETROK_x              = 120,$/;"	e	enum:retro_key
RETROK_y	src/libretro/libretro.h	/^   RETROK_y              = 121,$/;"	e	enum:retro_key
RETROK_z	src/libretro/libretro.h	/^   RETROK_z              = 122,$/;"	e	enum:retro_key
RETRO_API_VERSION	src/libretro/libretro.h	23;"	d
RETRO_DEVICE_ANALOG	src/libretro/libretro.h	51;"	d
RETRO_DEVICE_ID_ANALOG_X	src/libretro/libretro.h	108;"	d
RETRO_DEVICE_ID_ANALOG_Y	src/libretro/libretro.h	109;"	d
RETRO_DEVICE_ID_JOYPAD_A	src/libretro/libretro.h	96;"	d
RETRO_DEVICE_ID_JOYPAD_B	src/libretro/libretro.h	88;"	d
RETRO_DEVICE_ID_JOYPAD_DOWN	src/libretro/libretro.h	93;"	d
RETRO_DEVICE_ID_JOYPAD_L	src/libretro/libretro.h	98;"	d
RETRO_DEVICE_ID_JOYPAD_L2	src/libretro/libretro.h	100;"	d
RETRO_DEVICE_ID_JOYPAD_L3	src/libretro/libretro.h	102;"	d
RETRO_DEVICE_ID_JOYPAD_LEFT	src/libretro/libretro.h	94;"	d
RETRO_DEVICE_ID_JOYPAD_R	src/libretro/libretro.h	99;"	d
RETRO_DEVICE_ID_JOYPAD_R2	src/libretro/libretro.h	101;"	d
RETRO_DEVICE_ID_JOYPAD_R3	src/libretro/libretro.h	103;"	d
RETRO_DEVICE_ID_JOYPAD_RIGHT	src/libretro/libretro.h	95;"	d
RETRO_DEVICE_ID_JOYPAD_SELECT	src/libretro/libretro.h	90;"	d
RETRO_DEVICE_ID_JOYPAD_START	src/libretro/libretro.h	91;"	d
RETRO_DEVICE_ID_JOYPAD_UP	src/libretro/libretro.h	92;"	d
RETRO_DEVICE_ID_JOYPAD_X	src/libretro/libretro.h	97;"	d
RETRO_DEVICE_ID_JOYPAD_Y	src/libretro/libretro.h	89;"	d
RETRO_DEVICE_ID_LIGHTGUN_CURSOR	src/libretro/libretro.h	121;"	d
RETRO_DEVICE_ID_LIGHTGUN_PAUSE	src/libretro/libretro.h	123;"	d
RETRO_DEVICE_ID_LIGHTGUN_START	src/libretro/libretro.h	124;"	d
RETRO_DEVICE_ID_LIGHTGUN_TRIGGER	src/libretro/libretro.h	120;"	d
RETRO_DEVICE_ID_LIGHTGUN_TURBO	src/libretro/libretro.h	122;"	d
RETRO_DEVICE_ID_LIGHTGUN_X	src/libretro/libretro.h	118;"	d
RETRO_DEVICE_ID_LIGHTGUN_Y	src/libretro/libretro.h	119;"	d
RETRO_DEVICE_ID_MOUSE_LEFT	src/libretro/libretro.h	114;"	d
RETRO_DEVICE_ID_MOUSE_RIGHT	src/libretro/libretro.h	115;"	d
RETRO_DEVICE_ID_MOUSE_X	src/libretro/libretro.h	112;"	d
RETRO_DEVICE_ID_MOUSE_Y	src/libretro/libretro.h	113;"	d
RETRO_DEVICE_ID_POINTER_PRESSED	src/libretro/libretro.h	129;"	d
RETRO_DEVICE_ID_POINTER_X	src/libretro/libretro.h	127;"	d
RETRO_DEVICE_ID_POINTER_Y	src/libretro/libretro.h	128;"	d
RETRO_DEVICE_INDEX_ANALOG_LEFT	src/libretro/libretro.h	106;"	d
RETRO_DEVICE_INDEX_ANALOG_RIGHT	src/libretro/libretro.h	107;"	d
RETRO_DEVICE_JOYPAD	src/libretro/libretro.h	31;"	d
RETRO_DEVICE_JOYPAD_MULTITAP	src/libretro/libretro.h	80;"	d
RETRO_DEVICE_KEYBOARD	src/libretro/libretro.h	41;"	d
RETRO_DEVICE_LIGHTGUN	src/libretro/libretro.h	44;"	d
RETRO_DEVICE_LIGHTGUN_JUSTIFIER	src/libretro/libretro.h	82;"	d
RETRO_DEVICE_LIGHTGUN_JUSTIFIERS	src/libretro/libretro.h	83;"	d
RETRO_DEVICE_LIGHTGUN_SUPER_SCOPE	src/libretro/libretro.h	81;"	d
RETRO_DEVICE_MASK	src/libretro/libretro.h	26;"	d
RETRO_DEVICE_MOUSE	src/libretro/libretro.h	37;"	d
RETRO_DEVICE_NONE	src/libretro/libretro.h	27;"	d
RETRO_DEVICE_POINTER	src/libretro/libretro.h	73;"	d
RETRO_ENVIRONMENT_EXPERIMENTAL	src/libretro/libretro.h	337;"	d
RETRO_ENVIRONMENT_GET_CAN_DUPE	src/libretro/libretro.h	349;"	d
RETRO_ENVIRONMENT_GET_OVERSCAN	src/libretro/libretro.h	346;"	d
RETRO_ENVIRONMENT_GET_SYSTEM_DIRECTORY	src/libretro/libretro.h	384;"	d
RETRO_ENVIRONMENT_GET_VARIABLE	src/libretro/libretro.h	424;"	d
RETRO_ENVIRONMENT_GET_VARIABLE_UPDATE	src/libretro/libretro.h	450;"	d
RETRO_ENVIRONMENT_SET_DISK_CONTROL_INTERFACE	src/libretro/libretro.h	410;"	d
RETRO_ENVIRONMENT_SET_HW_RENDER	src/libretro/libretro.h	415;"	d
RETRO_ENVIRONMENT_SET_INPUT_DESCRIPTORS	src/libretro/libretro.h	400;"	d
RETRO_ENVIRONMENT_SET_KEYBOARD_CALLBACK	src/libretro/libretro.h	406;"	d
RETRO_ENVIRONMENT_SET_MESSAGE	src/libretro/libretro.h	354;"	d
RETRO_ENVIRONMENT_SET_PERFORMANCE_LEVEL	src/libretro/libretro.h	362;"	d
RETRO_ENVIRONMENT_SET_PIXEL_FORMAT	src/libretro/libretro.h	392;"	d
RETRO_ENVIRONMENT_SET_ROTATION	src/libretro/libretro.h	340;"	d
RETRO_ENVIRONMENT_SET_VARIABLES	src/libretro/libretro.h	431;"	d
RETRO_ENVIRONMENT_SHUTDOWN	src/libretro/libretro.h	357;"	d
RETRO_GAME_TYPE_BSX	src/libretro/libretro.h	164;"	d
RETRO_GAME_TYPE_BSX_SLOTTED	src/libretro/libretro.h	165;"	d
RETRO_GAME_TYPE_SUFAMI_TURBO	src/libretro/libretro.h	166;"	d
RETRO_GAME_TYPE_SUPER_GAME_BOY	src/libretro/libretro.h	167;"	d
RETRO_HW_CONTEXT_DUMMY	src/libretro/libretro.h	/^   RETRO_HW_CONTEXT_DUMMY = INT_MAX$/;"	e	enum:retro_hw_context_type
RETRO_HW_CONTEXT_NONE	src/libretro/libretro.h	/^   RETRO_HW_CONTEXT_NONE = 0,$/;"	e	enum:retro_hw_context_type
RETRO_HW_CONTEXT_OPENGL	src/libretro/libretro.h	/^   RETRO_HW_CONTEXT_OPENGL, \/\/ OpenGL 2.x. Latest version available before 3.x+.$/;"	e	enum:retro_hw_context_type
RETRO_HW_CONTEXT_OPENGLES2	src/libretro/libretro.h	/^   RETRO_HW_CONTEXT_OPENGLES2, \/\/ GLES 2.0$/;"	e	enum:retro_hw_context_type
RETRO_HW_FRAME_BUFFER_VALID	src/libretro/libretro.h	458;"	d
RETRO_MEMORY_MASK	src/libretro/libretro.h	137;"	d
RETRO_MEMORY_RTC	src/libretro/libretro.h	146;"	d
RETRO_MEMORY_SAVE_RAM	src/libretro/libretro.h	142;"	d
RETRO_MEMORY_SNES_BSX_PRAM	src/libretro/libretro.h	156;"	d
RETRO_MEMORY_SNES_BSX_RAM	src/libretro/libretro.h	155;"	d
RETRO_MEMORY_SNES_GAME_BOY_RAM	src/libretro/libretro.h	159;"	d
RETRO_MEMORY_SNES_GAME_BOY_RTC	src/libretro/libretro.h	160;"	d
RETRO_MEMORY_SNES_SUFAMI_TURBO_A_RAM	src/libretro/libretro.h	157;"	d
RETRO_MEMORY_SNES_SUFAMI_TURBO_B_RAM	src/libretro/libretro.h	158;"	d
RETRO_MEMORY_SYSTEM_RAM	src/libretro/libretro.h	149;"	d
RETRO_MEMORY_VIDEO_RAM	src/libretro/libretro.h	152;"	d
RETRO_PIXEL_FORMAT_0RGB1555	src/libretro/libretro.h	/^   RETRO_PIXEL_FORMAT_0RGB1555 = 0,$/;"	e	enum:retro_pixel_format
RETRO_PIXEL_FORMAT_RGB565	src/libretro/libretro.h	/^   RETRO_PIXEL_FORMAT_RGB565   = 2,$/;"	e	enum:retro_pixel_format
RETRO_PIXEL_FORMAT_UNKNOWN	src/libretro/libretro.h	/^   RETRO_PIXEL_FORMAT_UNKNOWN  = INT_MAX$/;"	e	enum:retro_pixel_format
RETRO_PIXEL_FORMAT_XRGB8888	src/libretro/libretro.h	/^   RETRO_PIXEL_FORMAT_XRGB8888 = 1,$/;"	e	enum:retro_pixel_format
RETRO_REGION_NTSC	src/libretro/libretro.h	132;"	d
RETRO_REGION_PAL	src/libretro/libretro.h	133;"	d
RETURN_ERR	fex/fex/blargg_source.h	56;"	d
RETURN_ERR	fex/fex/blargg_source.h	57;"	d
RETURN_ERR	src/apu/blargg_source.h	47;"	d
RETURN_ERR	src/apu/blargg_source.h	48;"	d
RETURN_IN_ORDER	src/sdl/getopt.c	/^  REQUIRE_ORDER, PERMUTE, RETURN_IN_ORDER$/;"	e	enum:__anon54	file:
REWIND_NUM	src/sdl/SDL.cpp	193;"	d	file:
REWIND_SIZE	src/sdl/SDL.cpp	194;"	d	file:
REWIND_SIZE	src/win32/VBA.h	51;"	d
REWIND_SIZE	src/wx/wxvbam.h	369;"	d
RFU_COMM	src/gba/GBALink.h	17;"	d
RFU_INIT	src/gba/GBALink.h	16;"	d
RFU_RECV	src/gba/GBALink.h	19;"	d
RFU_SEND	src/gba/GBALink.h	18;"	d
RGB	src/filters/bilinear.cpp	9;"	d	file:
RGB_LOW_BITS_MASK	src/gtk/system.cpp	/^int  RGB_LOW_BITS_MASK;$/;"	v
RGB_LOW_BITS_MASK	src/libretro/libretro.cpp	/^int RGB_LOW_BITS_MASK = 0;$/;"	v
RGB_LOW_BITS_MASK	src/sdl/SDL.cpp	/^int RGB_LOW_BITS_MASK=0x821;$/;"	v
RGB_LOW_BITS_MASK	src/win32/VBA.cpp	/^int RGB_LOW_BITS_MASK = 0;$/;"	v
RGB_LOW_BITS_MASK	src/wx/sys.cpp	/^int RGB_LOW_BITS_MASK;$/;"	v
RGBtoYUV	src/filters/hq/asm/hq3x32.cpp	/^unsigned int   RGBtoYUV[65536];$/;"	v
RGBtoYUV	src/filters/hq/c/hq_base.h	35;"	d
RGBtoYUV	src/filters/hq/c/hq_base.h	441;"	d
RGBtoYUV	src/filters/hq/c/hq_base.h	50;"	d
RGBtoYUV_16	src/filters/hq/c/hq_shared.h	/^inline unsigned int RGBtoYUV_16( unsigned short c )$/;"	f
RGBtoYUV_32	src/filters/hq/c/hq_shared.h	/^inline unsigned int RGBtoYUV_32( unsigned int c )$/;"	f
RINGBUFFER_H	src/common/RingBuffer.h	20;"	d
RINOK	fex/7z_C/Types.h	52;"	d
RINOM	fex/7z_C/7zIn.c	12;"	d	file:
RM	Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	po/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RM	po/gvbam/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RND_CAIRO	src/wx/wxvbam.h	/^    RND_SIMPLE, RND_OPENGL, RND_CAIRO, RND_DIRECT3D$/;"	e	enum:renderer
RND_DIRECT3D	src/wx/wxvbam.h	/^    RND_SIMPLE, RND_OPENGL, RND_CAIRO, RND_DIRECT3D$/;"	e	enum:renderer
RND_OPENGL	src/wx/wxvbam.h	/^    RND_SIMPLE, RND_OPENGL, RND_CAIRO, RND_DIRECT3D$/;"	e	enum:renderer
RND_SIMPLE	src/wx/wxvbam.h	/^    RND_SIMPLE, RND_OPENGL, RND_CAIRO, RND_DIRECT3D$/;"	e	enum:renderer
ROR	src/gba/Cheats.cpp	2202;"	d	file:
ROR_IMM_MSR	src/gba/GBA-arm.cpp	1098;"	d	file:
ROR_IMM_MSR	src/gba/GBA-arm.cpp	674;"	d	file:
ROR_IMM_MSR	src/gba/GBA-arm.cpp	692;"	d	file:
ROR_OFFSET	src/gba/GBA-arm.cpp	1103;"	d	file:
ROR_OFFSET	src/gba/GBA-arm.cpp	679;"	d	file:
ROR_OFFSET	src/gba/GBA-arm.cpp	699;"	d	file:
RPI_555_SUPP	src/win32/rpi.h	57;"	d
RPI_565_SUPP	src/win32/rpi.h	58;"	d
RPI_888_SUPP	src/win32/rpi.h	59;"	d
RPI_DST_WIDE	src/win32/rpi.h	61;"	d
RPI_MMX_REQD	src/win32/rpi.h	56;"	d
RPI_MMX_USED	src/win32/rpi.h	55;"	d
RPI_OUT_SCL1	src/win32/rpi.h	63;"	d
RPI_OUT_SCL2	src/win32/rpi.h	64;"	d
RPI_OUT_SCL3	src/win32/rpi.h	65;"	d
RPI_OUT_SCL4	src/win32/rpi.h	66;"	d
RPI_OUT_SCLMSK	src/win32/rpi.h	68;"	d
RPI_OUT_SCLSH	src/win32/rpi.h	69;"	d
RPI_VERSION	src/win32/rpi.h	53;"	d
RRX_OFFSET	src/gba/GBA-arm.cpp	1107;"	d	file:
RRX_OFFSET	src/gba/GBA-arm.cpp	684;"	d	file:
RRX_OFFSET	src/gba/GBA-arm.cpp	705;"	d	file:
RTCCLOCKDATA	src/gba/RTC.cpp	/^} RTCCLOCKDATA;$/;"	t	typeref:struct:__anon51	file:
RTCSTATE	src/gba/RTC.cpp	/^enum RTCSTATE$/;"	g	file:
RTC_H	src/gba/RTC.h	2;"	d
R_ASSERT	src/win32/WinHelper.h	26;"	d
R_VERIFY	src/win32/WinHelper.h	25;"	d
Range	fex/7z_C/Ppmd7.h	/^  UInt32 Range;$/;"	m	struct:__anon8
Range	fex/7z_C/Ppmd7.h	/^  UInt32 Range;$/;"	m	struct:__anon9
Range_Decode	fex/7z_C/Ppmd7Dec.c	/^static void Range_Decode(void *pp, UInt32 start, UInt32 size)$/;"	f	file:
Range_DecodeBit	fex/7z_C/Ppmd7Dec.c	/^static UInt32 Range_DecodeBit(void *pp, UInt32 size0)$/;"	f	file:
Range_GetThreshold	fex/7z_C/Ppmd7Dec.c	/^static UInt32 Range_GetThreshold(void *pp, UInt32 total)$/;"	f	file:
Range_Normalize	fex/7z_C/Ppmd7Dec.c	/^static void Range_Normalize(CPpmd7z_RangeDec *p)$/;"	f	file:
Rar_Extractor	fex/fex/Rar_Extractor.cpp	/^Rar_Extractor::Rar_Extractor() :$/;"	f	class:Rar_Extractor
Rar_Extractor	fex/fex/Rar_Extractor.h	/^class Rar_Extractor : public File_Extractor {$/;"	c
ReInitLink	src/gba/GBALink.cpp	/^static void ReInitLink()$/;"	f	file:
Read	fex/7z_C/Types.h	/^  Byte (*Read)(void *p); \/* reads one byte, returns 0 in case of EOF or error *\/$/;"	m	struct:__anon22
Read	fex/7z_C/Types.h	/^  SRes (*Read)(void *p, void *buf, size_t *size);  \/* same as ISeqInStream::Read *\/$/;"	m	struct:__anon27
Read	fex/7z_C/Types.h	/^  SRes (*Read)(void *p, void *buf, size_t *size);$/;"	m	struct:__anon24
Read	fex/7z_C/Types.h	/^  SRes (*Read)(void *p, void *buf, size_t *size);$/;"	m	struct:__anon28
ReadByte	fex/7z_C/7zDec.c	/^static Byte ReadByte(void *pp)$/;"	f	file:
ReceiveCmd	src/gba/GBASockClient.cpp	/^char GBASockClient::ReceiveCmd(char* data_in)$/;"	f	class:GBASockClient
Record	src/common/ffmpeg.cpp	/^MediaRet MediaRecorder::Record(const char *fname)$/;"	f	class:MediaRecorder
Record	src/common/ffmpeg.cpp	/^MediaRet MediaRecorder::Record(const char *fname, int width, int height, int depth)$/;"	f	class:MediaRecorder
Recv	src/gba/GBALink.cpp	/^void lclient::Recv(void){$/;"	f	class:lclient
Recv	src/gba/GBALink.cpp	/^void lserver::Recv(void){$/;"	f	class:lserver
RedBlueMask	src/filters/2xSaImmx.asm	/^RedBlueMask   dd 0xF81FF81F,0xF81FF81F$/;"	d
Redraw	src/wx/viewsupt.cpp	/^    void PixView::Redraw(wxPaintEvent &ev)$/;"	f	class:Viewers::PixView
Refill	src/wx/viewsupt.cpp	/^    void DisList::Refill()$/;"	f	class:Viewers::DisList
Refill	src/wx/viewsupt.cpp	/^    void MemView::Refill()$/;"	f	class:Viewers::MemView
Refill	src/wx/viewsupt.cpp	/^    void MemView::Refill(wxDC &dc)$/;"	f	class:Viewers::MemView
RefillListEv	src/wx/viewers.cpp	/^	void RefillListEv(wxCommandEvent &ev)$/;"	f	class:Viewers::DisassembleViewer
RefillListEv	src/wx/viewers.cpp	/^	void RefillListEv(wxCommandEvent &ev)$/;"	f	class:Viewers::GBDisassembleViewer
RefillListEv	src/wx/viewers.cpp	/^	void RefillListEv(wxCommandEvent &ev)$/;"	f	class:Viewers::GBMemViewer
RefillListEv	src/wx/viewers.cpp	/^	void RefillListEv(wxCommandEvent &ev)$/;"	f	class:Viewers::MemViewer
RefillNeeded	src/wx/viewsupt.cpp	/^    void DisList::RefillNeeded()$/;"	f	class:Viewers::DisList
RefillNeeded	src/wx/viewsupt.cpp	/^    void MemView::RefillNeeded()$/;"	f	class:Viewers::MemView
Refit	src/wx/viewsupt.cpp	/^    void DisList::Refit(int cols)$/;"	f	class:Viewers::DisList
Refit	src/wx/viewsupt.cpp	/^    void MemView::Refit()$/;"	f	class:Viewers::MemView
RefreshCmd	src/wx/viewers.cpp	/^	void RefreshCmd(wxCommandEvent &ev)$/;"	f	class:Viewers::DisassembleViewer
RefreshCmd	src/wx/viewers.cpp	/^	void RefreshCmd(wxCommandEvent &ev)$/;"	f	class:Viewers::GBDisassembleViewer
RefreshCmd	src/wx/viewers.cpp	/^	void RefreshCmd(wxCommandEvent &ev)$/;"	f	class:Viewers::MemViewerBase
RefreshEv	src/wx/viewers.cpp	/^	void RefreshEv(wxCommandEvent &ev)$/;"	f	class:Viewers::IOViewer
RefreshEv	src/wx/viewsupt.cpp	/^    void GfxViewer::RefreshEv(wxCommandEvent &ev)$/;"	f	class:Viewers::GfxViewer
RegQueryValueExRecursive	src/win32/ResizeDlg.cpp	/^long FASTCALL RegQueryValueExRecursive( HKEY hKey, LPCTSTR lpValueName, LPDWORD lpReserved, LPDWORD lpType, LPBYTE lpData, LPDWORD lpcbData )$/;"	f
RegSetValueExRecursive	src/win32/ResizeDlg.cpp	/^long FASTCALL RegSetValueExRecursive( HKEY hKey, LPCTSTR lpValueName, DWORD Reserved, DWORD dwType, CONST BYTE* lpData, DWORD cbData )$/;"	f
RegistryData	src/win32/ResizeDlg.cpp	/^struct RegistryData$/;"	s	file:
Release	src/win32/XAudio2.cpp	/^	ULONG STDMETHODCALLTYPE Release()$/;"	f	class:XAudio2_Device_Notifier
Release	src/wx/xaudio2.cpp	/^	ULONG STDMETHODCALLTYPE Release()$/;"	f	class:XAudio2_Device_Notifier
ReleaseSemaphore	src/gba/GBALink.cpp	59;"	d	file:
Reload	src/wx/guiinit.cpp	/^    void Reload()$/;"	f	class:CheatList_t
Reload	src/wx/guiinit.cpp	/^    void Reload(int start)$/;"	f	class:CheatList_t
Remaining_Reader	fex/fex/Data_Reader.cpp	/^Remaining_Reader::Remaining_Reader( void const* h, int size, Data_Reader* r ) :$/;"	f	class:Remaining_Reader
Remaining_Reader	fex/fex/Data_Reader.h	/^class Remaining_Reader : public Data_Reader {$/;"	c
Remove	src/wx/guiinit.cpp	/^    void Remove(wxCommandEvent &ev)$/;"	f	class:AccelConfig_t
Remove	src/wx/widgets/sdljoy.cpp	/^void wxSDLJoy::Remove(int joy)$/;"	f	class:wxSDLJoy
RemoveNode	fex/7z_C/Ppmd7.c	/^static void *RemoveNode(CPpmd7 *p, unsigned indx)$/;"	f	file:
RepLenCoder	fex/7z_C/LzmaDec.c	104;"	d	file:
Repaint	src/wx/viewsupt.cpp	/^    void MemView::Repaint()$/;"	f	class:Viewers::MemView
RepaintEv	src/wx/viewsupt.cpp	/^    void MemView::RepaintEv(wxPaintEvent &ev)$/;"	f	class:Viewers::MemView
Rescale	fex/7z_C/Ppmd7.c	/^static void Rescale(CPpmd7 *p)$/;"	f	file:
Reset	src/win32/AcceleratorManager.cpp	/^void CAcceleratorManager::Reset()$/;"	f	class:CAcceleratorManager
Reset	src/win32/CmdAccelOb.cpp	/^void CCmdAccelOb::Reset()$/;"	f	class:CCmdAccelOb
ResetAll	src/wx/guiinit.cpp	/^    void ResetAll(wxCommandEvent &ev)$/;"	f	class:AccelConfig_t
ResetCheatSearch	src/wx/guiinit.cpp	/^void MainFrame::ResetCheatSearch()$/;"	f	class:MainFrame
ResetKey	src/win32/KeyboardEdit.cpp	/^void CKeyboardEdit::ResetKey ()$/;"	f	class:CKeyboardEdit
ResetSearch	src/wx/guiinit.cpp	/^    void ResetSearch(wxCommandEvent &ev)$/;"	f	class:CheatFind_t
Resize	src/wx/viewsupt.cpp	/^    void DisList::Resize(wxSizeEvent &ev)$/;"	f	class:Viewers::DisList
Resize	src/wx/viewsupt.cpp	/^    void MemView::Resize(wxSizeEvent &ev)$/;"	f	class:Viewers::MemView
ResizeDlg	src/win32/ResizeDlg.cpp	/^ResizeDlg::ResizeDlg(UINT id, CWnd *parent)$/;"	f	class:ResizeDlg
ResizeDlg	src/win32/ResizeDlg.h	/^class ResizeDlg : public CDialog {$/;"	c
ResizeDlgCopyItems	src/win32/ResizeDlg.cpp	/^void ResizeDlgCopyItems( DialogSizerSizingItem *psdDest, const DialogSizerSizingItem *psdSource )$/;"	f
ResizeDlgGetItemCount	src/win32/ResizeDlg.cpp	/^int ResizeDlgGetItemCount(const DialogSizerSizingItem *psd)$/;"	f
ResizeDlgUpdateGripper	src/win32/ResizeDlg.cpp	/^void ResizeDlgUpdateGripper( HWND hwnd, DialogData *pdd )$/;"	f
ResizeDlgUpdateGripperRect	src/win32/ResizeDlg.cpp	/^void ResizeDlgUpdateGripperRect( const int cx, const int cy, WinHelper::CRect &rcGrip )$/;"	f
RestartModel	fex/7z_C/Ppmd7.c	/^static void RestartModel(CPpmd7 *p)$/;"	f	file:
Resume	src/wx/panel.cpp	/^void GameArea::Resume()$/;"	f	class:GameArea
RewindInterval	src/win32/RewindInterval.cpp	/^RewindInterval::RewindInterval(int interval, CWnd* pParent \/*=NULL*\/)$/;"	f	class:RewindInterval
RewindInterval	src/win32/RewindInterval.h	/^class RewindInterval : public CDialog$/;"	c
RingBuffer	src/common/RingBuffer.h	/^	RingBuffer(const std::size_t sz_in = 0) : sz(0), rpos(0), wpos(0) { reset(sz_in); }$/;"	f	class:RingBuffer
RingBuffer	src/common/RingBuffer.h	/^class RingBuffer {$/;"	c
RomInfoGB	src/win32/RomInfo.cpp	/^RomInfoGB::RomInfoGB(u8 *rom, CWnd* pParent \/*=NULL*\/)$/;"	f	class:RomInfoGB
RomInfoGB	src/win32/RomInfo.h	/^class RomInfoGB : public CDialog$/;"	c
RomInfoGBA	src/win32/RomInfo.cpp	/^RomInfoGBA::RomInfoGBA(u8 *rom, CWnd* pParent \/*=NULL*\/)$/;"	f	class:RomInfoGBA
RomInfoGBA	src/win32/RomInfo.h	/^class RomInfoGBA : public CDialog$/;"	c
RunLength	fex/7z_C/Ppmd7.h	/^  Int32 RunLength, InitRL; \/* must be 32-bit at least *\/$/;"	m	struct:__anon6
SAVESLOT_FMT	src/wx/wxvbam.h	296;"	d
SAVE_GAME_VERSION	src/gba/GBA.h	16;"	d
SAVE_GAME_VERSION_1	src/gba/GBA.h	6;"	d
SAVE_GAME_VERSION_10	src/gba/GBA.h	15;"	d
SAVE_GAME_VERSION_2	src/gba/GBA.h	7;"	d
SAVE_GAME_VERSION_3	src/gba/GBA.h	8;"	d
SAVE_GAME_VERSION_4	src/gba/GBA.h	9;"	d
SAVE_GAME_VERSION_5	src/gba/GBA.h	10;"	d
SAVE_GAME_VERSION_6	src/gba/GBA.h	11;"	d
SAVE_GAME_VERSION_7	src/gba/GBA.h	12;"	d
SAVE_GAME_VERSION_8	src/gba/GBA.h	13;"	d
SAVE_GAME_VERSION_9	src/gba/GBA.h	14;"	d
SAVE_UNKNOWN	src/libretro/gbaconv/gbaconv.c	/^   SAVE_UNKNOWN$/;"	e	enum:save_type	file:
SDLBUTTONS_NUM	src/sdl/inputSDL.cpp	20;"	d	file:
SDL_AND_EAX	src/sdl/filters.cpp	221;"	d	file:
SDL_AND_EBX	src/sdl/filters.cpp	225;"	d	file:
SDL_CALL_STRETCHER	src/sdl/filters.cpp	205;"	d	file:
SDL_CALL_STRETCHER	src/sdl/filters.cpp	213;"	d	file:
SDL_CALL_STRETCHER	src/sdl/filters.cpp	457;"	d	file:
SDL_LOADL	src/sdl/filters.cpp	246;"	d	file:
SDL_LOADL2	src/sdl/filters.cpp	253;"	d	file:
SDL_LOADL_EBX	src/sdl/filters.cpp	234;"	d	file:
SDL_LOADW	src/sdl/filters.cpp	238;"	d	file:
SDL_LONG	src/sdl/filters.cpp	217;"	d	file:
SDL_MOV_ECX	src/sdl/filters.cpp	315;"	d	file:
SDL_OR_EAX_EBX	src/sdl/filters.cpp	230;"	d	file:
SDL_POP_EAX	src/sdl/filters.cpp	300;"	d	file:
SDL_POP_EBX	src/sdl/filters.cpp	306;"	d	file:
SDL_POP_ECX	src/sdl/filters.cpp	303;"	d	file:
SDL_POP_EDI	src/sdl/filters.cpp	312;"	d	file:
SDL_POP_ESI	src/sdl/filters.cpp	309;"	d	file:
SDL_PUSH_EAX	src/sdl/filters.cpp	285;"	d	file:
SDL_PUSH_EBX	src/sdl/filters.cpp	291;"	d	file:
SDL_PUSH_ECX	src/sdl/filters.cpp	288;"	d	file:
SDL_PUSH_EDI	src/sdl/filters.cpp	297;"	d	file:
SDL_PUSH_ESI	src/sdl/filters.cpp	294;"	d	file:
SDL_REP_MOVSB	src/sdl/filters.cpp	319;"	d	file:
SDL_REP_MOVSL	src/sdl/filters.cpp	328;"	d	file:
SDL_REP_MOVSW	src/sdl/filters.cpp	323;"	d	file:
SDL_RET	src/sdl/filters.cpp	282;"	d	file:
SDL_SOUND_ECHO	src/sdl/SDL.cpp	244;"	d	file:
SDL_SOUND_MAX_VOLUME	src/sdl/SDL.cpp	243;"	d	file:
SDL_SOUND_STEREO	src/sdl/SDL.cpp	245;"	d	file:
SDL_STOREL	src/sdl/filters.cpp	268;"	d	file:
SDL_STOREL2	src/sdl/filters.cpp	275;"	d	file:
SDL_STOREW	src/sdl/filters.cpp	260;"	d	file:
SDirEntry	src/gtk/directoriesconfig.h	/^  struct SDirEntry$/;"	s	class:VBA::DirectoriesConfigDialog
SEARCH_EQ	src/gba/CheatSearch.h	/^  SEARCH_EQ,$/;"	e	enum:__anon52
SEARCH_GE	src/gba/CheatSearch.h	/^  SEARCH_GE$/;"	e	enum:__anon52
SEARCH_GT	src/gba/CheatSearch.h	/^  SEARCH_GT,$/;"	e	enum:__anon52
SEARCH_LE	src/gba/CheatSearch.h	/^  SEARCH_LE,$/;"	e	enum:__anon52
SEARCH_LT	src/gba/CheatSearch.h	/^  SEARCH_LT,$/;"	e	enum:__anon52
SEARCH_NE	src/gba/CheatSearch.h	/^  SEARCH_NE,$/;"	e	enum:__anon52
SECTION	src/filters/hq/asm/hq3x_16.asm	/^SECTION .bss$/;"	l
SECTION	src/filters/hq/asm/hq3x_16.asm	/^SECTION .data$/;"	l
SECTION	src/filters/hq/asm/hq3x_16.asm	/^SECTION .text$/;"	l
SECTION	src/filters/hq/asm/hq3x_32.asm	/^SECTION .bss$/;"	l
SECTION	src/filters/hq/asm/hq3x_32.asm	/^SECTION .data$/;"	l
SECTION	src/filters/hq/asm/hq3x_32.asm	/^SECTION .text$/;"	l
SECTION	src/filters/hq/asm/hq4x_16.asm	/^SECTION .bss$/;"	l
SECTION	src/filters/hq/asm/hq4x_16.asm	/^SECTION .data$/;"	l
SECTION	src/filters/hq/asm/hq4x_16.asm	/^SECTION .text$/;"	l
SECTION	src/filters/hq/asm/hq4x_32.asm	/^SECTION .bss$/;"	l
SECTION	src/filters/hq/asm/hq4x_32.asm	/^SECTION .data$/;"	l
SECTION	src/filters/hq/asm/hq4x_32.asm	/^SECTION .text$/;"	l
SETCOND_ADD	src/gba/GBA-arm.cpp	373;"	d	file:
SETCOND_LOGICAL	src/gba/GBA-arm.cpp	369;"	d	file:
SETCOND_MUL	src/gba/GBA-arm.cpp	1083;"	d	file:
SETCOND_MULL	src/gba/GBA-arm.cpp	1088;"	d	file:
SETCOND_NONE	src/gba/GBA-arm.cpp	1080;"	d	file:
SETCOND_SUB	src/gba/GBA-arm.cpp	378;"	d	file:
SET_BE16	fex/fex/blargg_endian.h	134;"	d
SET_BE16	fex/fex/blargg_endian.h	166;"	d
SET_BE32	fex/fex/blargg_endian.h	135;"	d
SET_BE32	fex/fex/blargg_endian.h	171;"	d
SET_BIT	src/gba/CheatSearch.h	34;"	d
SET_LE16	fex/fex/blargg_endian.h	129;"	d
SET_LE16	fex/fex/blargg_endian.h	142;"	d
SET_LE16	fex/fex/blargg_endian.h	147;"	d
SET_LE16	fex/fex/blargg_endian.h	156;"	d
SET_LE32	fex/fex/blargg_endian.h	130;"	d
SET_LE32	fex/fex/blargg_endian.h	143;"	d
SET_LE32	fex/fex/blargg_endian.h	148;"	d
SET_LE32	fex/fex/blargg_endian.h	161;"	d
SGBHeight	src/wx/wxvbam.h	/^	             SGBWidth = 256, SGBHeight = 224,$/;"	m	class:GameArea
SGBWidth	src/wx/wxvbam.h	/^	             SGBWidth = 256, SGBHeight = 224,$/;"	m	class:GameArea
SGCNT0_H	src/gba/Sound.h	52;"	d
SGameSlot	src/gtk/window.h	/^  struct SGameSlot$/;"	s	class:VBA::Window
SHARED	src/libretro/Makefile	/^   SHARED := -dynamiclib$/;"	m
SHARED	src/libretro/Makefile	/^   SHARED := -shared -static-libgcc -static-libstdc++$/;"	m
SHARED	src/libretro/Makefile	/^   SHARED := -shared$/;"	m
SHELL	Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	po/Makefile	/^SHELL = \/bin\/sh$/;"	m
SHELL	po/gvbam/Makefile	/^SHELL = \/bin\/sh$/;"	m
SIG_ATOMIC_MAX	src/libretro/msvc/msvc-2003-xbox1/stdint.h	198;"	d
SIG_ATOMIC_MIN	src/libretro/msvc/msvc-2003-xbox1/stdint.h	197;"	d
SIZE_MAX	src/libretro/msvc/msvc-2003-xbox1/stdint.h	202;"	d
SIZE_MAX	src/libretro/msvc/msvc-2003-xbox1/stdint.h	204;"	d
SIZE_PIXEL	src/filters/hq/c/hq_base.h	33;"	d
SIZE_PIXEL	src/filters/hq/c/hq_base.h	438;"	d
SIZE_PIXEL	src/filters/hq/c/hq_base.h	48;"	d
SJoypadKey	src/gtk/joypadconfig.h	/^  struct SJoypadKey$/;"	s	class:VBA::JoypadConfigDialog
SJoypadKey	src/gtk/window.h	/^  struct SJoypadKey$/;"	s	class:VBA::Window
SKIP	src/gb/gbSound.cpp	247;"	d	file:
SKIP	src/gba/Sound.cpp	590;"	d	file:
SLOT_POS_LOAD_BACKUP	src/sdl/SDL.cpp	179;"	d	file:
SLOT_POS_SAVE_BACKUP	src/sdl/SDL.cpp	181;"	d	file:
SOCKET	src/gba/remote.cpp	18;"	d	file:
SOCKET_MESSAGE	src/win32/GDBConnection.cpp	7;"	d	file:
SOUND_CLOCK_TICKS	src/gba/Sound.cpp	/^int   SOUND_CLOCK_TICKS  = SOUND_CLOCK_TICKS_;$/;"	v
SOUND_CLOCK_TICKS_	src/gba/Sound.cpp	/^int const SOUND_CLOCK_TICKS_ = 167772; \/\/ 1\/100 second$/;"	v
SOUND_EVENT	src/gb/gbSound.h	62;"	d
SOUND_H	src/gba/Sound.h	2;"	d
SP	src/gb/GB.cpp	/^gbRegister SP;$/;"	v
SPARC_Convert	fex/7z_C/Bra.c	/^SizeT SPARC_Convert(Byte *data, SizeT size, UInt32 ip, int encoding)$/;"	f
SPSR_ABT	src/gba/GBA.h	129;"	d
SPSR_FIQ	src/gba/GBA.h	140;"	d
SPSR_IRQ	src/gba/GBA.h	121;"	d
SPSR_SVC	src/gba/GBA.h	126;"	d
SPSR_UND	src/gba/GBA.h	132;"	d
SPv	src/wx/viewers.cpp	/^	wxControl *AFv, *BCv, *DEv, *HLv, *SPv, *PCv, *LYv, *IFFv;$/;"	m	class:Viewers::GBDisassembleViewer	file:
SRAM_H	src/gba/Sram.h	2;"	d
SRes	fex/7z_C/Types.h	/^typedef int SRes;$/;"	t
SS_DETAILED	src/wx/wxvbam.h	/^    SS_NONE, SS_PERCENT, SS_DETAILED$/;"	e	enum:showspeed
SS_NONE	src/wx/wxvbam.h	/^    SS_NONE, SS_PERCENT, SS_DETAILED$/;"	e	enum:showspeed
SS_PERCENT	src/wx/wxvbam.h	/^    SS_NONE, SS_PERCENT, SS_DETAILED$/;"	e	enum:showspeed
STATIC_CAST	fex/fex/blargg_common.h	71;"	d
STATIC_CAST	src/apu/blargg_common.h	30;"	d
STATIC_CAST	src/apu/blargg_common.h	33;"	d
STATS	fex/7z_C/Ppmd7.c	28;"	d	file:
STATS_REF	fex/7z_C/Ppmd7.c	25;"	d	file:
STDMETHOD_	src/win32/XAudio2.cpp	/^	STDMETHOD_( void, OnBufferStart ) ( void *pBufferContext ) {}$/;"	f	class:XAudio2_BufferNotify
STDMETHOD_	src/win32/XAudio2.cpp	/^	STDMETHOD_( void, OnLoopEnd ) ( void *pBufferContext ) {}$/;"	f	class:XAudio2_BufferNotify
STDMETHOD_	src/win32/XAudio2.cpp	/^	STDMETHOD_( void, OnStreamEnd ) () {}$/;"	f	class:XAudio2_BufferNotify
STDMETHOD_	src/win32/XAudio2.cpp	/^	STDMETHOD_( void, OnVoiceError ) ( void *pBufferContext, HRESULT Error ) {};$/;"	f	class:XAudio2_BufferNotify
STDMETHOD_	src/win32/XAudio2.cpp	/^	STDMETHOD_( void, OnVoiceProcessingPassEnd ) () {}$/;"	f	class:XAudio2_BufferNotify
STDMETHOD_	src/win32/XAudio2.cpp	/^	STDMETHOD_( void, OnVoiceProcessingPassStart ) ( UINT32 BytesRequired ) {}$/;"	f	class:XAudio2_BufferNotify
STDMETHOD_	src/win32/XAudio2.cpp	/^    STDMETHOD_( void, OnBufferEnd ) ( void *pBufferContext ) {$/;"	f	class:XAudio2_BufferNotify
STDMETHOD_	src/wx/xaudio2.cpp	/^	STDMETHOD_( void, OnBufferStart ) ( void *pBufferContext ) {}$/;"	f	class:XAudio2_BufferNotify
STDMETHOD_	src/wx/xaudio2.cpp	/^	STDMETHOD_( void, OnLoopEnd ) ( void *pBufferContext ) {}$/;"	f	class:XAudio2_BufferNotify
STDMETHOD_	src/wx/xaudio2.cpp	/^	STDMETHOD_( void, OnStreamEnd ) () {}$/;"	f	class:XAudio2_BufferNotify
STDMETHOD_	src/wx/xaudio2.cpp	/^	STDMETHOD_( void, OnVoiceError ) ( void *pBufferContext, HRESULT Error ) {};$/;"	f	class:XAudio2_BufferNotify
STDMETHOD_	src/wx/xaudio2.cpp	/^	STDMETHOD_( void, OnVoiceProcessingPassEnd ) () {}$/;"	f	class:XAudio2_BufferNotify
STDMETHOD_	src/wx/xaudio2.cpp	/^	STDMETHOD_( void, OnVoiceProcessingPassStart ) ( UINT32 BytesRequired ) {}$/;"	f	class:XAudio2_BufferNotify
STDMETHOD_	src/wx/xaudio2.cpp	/^    STDMETHOD_( void, OnBufferEnd ) ( void *pBufferContext ) {$/;"	f	class:XAudio2_BufferNotify
STMW_ALL	src/gba/GBA-arm.cpp	2086;"	d	file:
STMW_ALL_2	src/gba/GBA-arm.cpp	2112;"	d	file:
STMW_PC	src/gba/GBA-arm.cpp	2033;"	d	file:
STMW_REG	src/gba/GBA-arm.cpp	1962;"	d	file:
STM_ALL	src/gba/GBA-arm.cpp	2082;"	d	file:
STM_ALL_2	src/gba/GBA-arm.cpp	2108;"	d	file:
STM_HIGH	src/gba/GBA-arm.cpp	1994;"	d	file:
STM_HIGH_2	src/gba/GBA-arm.cpp	2002;"	d	file:
STM_LOW	src/gba/GBA-arm.cpp	1985;"	d	file:
STM_PC	src/gba/GBA-arm.cpp	2023;"	d	file:
STM_REG	src/gba/GBA-arm.cpp	1951;"	d	file:
STR	src/gba/GBA-arm.cpp	1556;"	d	file:
STRFILEVER	src/AutoBuild.h	27;"	d
STRICT	src/win32/stdafx.h	11;"	d
STRING	src/gba/GBA-arm.cpp	304;"	d	file:
STRING_PATH_SEPARATOR	fex/7z_C/Types.h	240;"	d
STRING_PATH_SEPARATOR	fex/7z_C/Types.h	247;"	d
STROPT	src/wx/opts.cpp	14;"	d	file:
STRPRODUCTVER	src/AutoBuild.h	28;"	d
STR_POSTDEC	src/gba/GBA-arm.cpp	1581;"	d	file:
STR_POSTINC	src/gba/GBA-arm.cpp	1583;"	d	file:
STR_PREDEC	src/gba/GBA-arm.cpp	1585;"	d	file:
STR_PREDEC_WB	src/gba/GBA-arm.cpp	1587;"	d	file:
STR_PREINC	src/gba/GBA-arm.cpp	1589;"	d	file:
STR_PREINC_WB	src/gba/GBA-arm.cpp	1591;"	d	file:
SUCCESSOR	fex/7z_C/Ppmd7.c	277;"	d	file:
SUFFIX	fex/7z_C/Ppmd7.c	30;"	d	file:
SUFFIXES	Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	po/Makefile	/^SUFFIXES =$/;"	m
SUFFIXES	po/gvbam/Makefile	/^SUFFIXES =$/;"	m
SVN_REV_STR	src/version.h	26;"	d
SVN_REV_STR	src/version.h	28;"	d
SWAP	src/gba/GBA.cpp	891;"	d	file:
SWAP_FLAGS	src/sdl/getopt.c	289;"	d	file:
SWAP_FLAGS	src/sdl/getopt.c	297;"	d	file:
SWITicks	src/gba/GBA.cpp	/^int SWITicks = 0;$/;"	v
SYSMSG_BUFFER_SIZE	src/sdl/SDL.cpp	195;"	d	file:
SYSTEM_H	src/System.h	2;"	d
SYSTEM_SAVE_NOT_UPDATED	src/System.h	94;"	d
SYSTEM_SAVE_UPDATED	src/System.h	93;"	d
SZ_ERROR_ARCHIVE	fex/7z_C/Types.h	40;"	d
SZ_ERROR_CRC	fex/7z_C/Types.h	29;"	d
SZ_ERROR_DATA	fex/7z_C/Types.h	27;"	d
SZ_ERROR_FAIL	fex/7z_C/Types.h	37;"	d
SZ_ERROR_INPUT_EOF	fex/7z_C/Types.h	32;"	d
SZ_ERROR_MEM	fex/7z_C/Types.h	28;"	d
SZ_ERROR_NO_ARCHIVE	fex/7z_C/Types.h	41;"	d
SZ_ERROR_OUTPUT_EOF	fex/7z_C/Types.h	33;"	d
SZ_ERROR_PARAM	fex/7z_C/Types.h	31;"	d
SZ_ERROR_PROGRESS	fex/7z_C/Types.h	36;"	d
SZ_ERROR_READ	fex/7z_C/Types.h	34;"	d
SZ_ERROR_THREAD	fex/7z_C/Types.h	38;"	d
SZ_ERROR_UNSUPPORTED	fex/7z_C/Types.h	30;"	d
SZ_ERROR_WRITE	fex/7z_C/Types.h	35;"	d
SZ_OK	fex/7z_C/Types.h	25;"	d
SZ_SEEK_CUR	fex/7z_C/Types.h	/^  SZ_SEEK_CUR = 1,$/;"	e	enum:__anon26
SZ_SEEK_END	fex/7z_C/Types.h	/^  SZ_SEEK_END = 2$/;"	e	enum:__anon26
SZ_SEEK_SET	fex/7z_C/Types.h	/^  SZ_SEEK_SET = 0,$/;"	e	enum:__anon26
S_IFDIR	src/sdl/SDL.cpp	375;"	d	file:
Save	src/wx/viewers.cpp	/^	void Save(wxCommandEvent &ev)$/;"	f	class:Viewers::MemViewerBase
Save	src/wx/viewers.cpp	/^void LogDialog::Save(wxCommandEvent &ev)$/;"	f	class:LogDialog
SaveAuto	src/gtk/window.h	/^    SaveAuto,$/;"	e	enum:VBA::Window::ESaveType
SaveBG	src/wx/gfxviewers.cpp	/^	void SaveBG(wxCommandEvent &ev)$/;"	f	class:Viewers::GBPaletteViewer
SaveBG	src/wx/gfxviewers.cpp	/^	void SaveBG(wxCommandEvent &ev)$/;"	f	class:Viewers::PaletteViewer
SaveBMP	src/wx/viewsupt.cpp	/^    void GfxViewer::SaveBMP(wxCommandEvent &ev)$/;"	f	class:Viewers::GfxViewer
SaveBattery	src/wx/panel.cpp	/^void GameArea::SaveBattery(bool quiet)$/;"	f	class:GameArea
SaveEEPROM	src/gtk/window.h	/^    SaveEEPROM,$/;"	e	enum:VBA::Window::ESaveType
SaveEEPROMSensor	src/gtk/window.h	/^    SaveEEPROMSensor,$/;"	e	enum:VBA::Window::ESaveType
SaveFlash	src/gtk/window.h	/^    SaveFlash,$/;"	e	enum:VBA::Window::ESaveType
SaveNone	src/gtk/window.h	/^    SaveNone$/;"	e	enum:VBA::Window::ESaveType
SaveOBJ	src/wx/gfxviewers.cpp	/^	void SaveOBJ(wxCommandEvent &ev)$/;"	f	class:Viewers::GBPaletteViewer
SaveOBJ	src/wx/gfxviewers.cpp	/^	void SaveOBJ(wxCommandEvent &ev)$/;"	f	class:Viewers::PaletteViewer
SaveSRAM	src/gtk/window.h	/^    SaveSRAM,$/;"	e	enum:VBA::Window::ESaveType
SaveState	src/wx/panel.cpp	/^bool GameArea::SaveState()$/;"	f	class:GameArea
SaveState	src/wx/panel.cpp	/^bool GameArea::SaveState(const wxFileName &fname)$/;"	f	class:GameArea
SaveState	src/wx/panel.cpp	/^bool GameArea::SaveState(int slot)$/;"	f	class:GameArea
Scale_2xSaI	src/filters/2xSaI.cpp	/^void Scale_2xSaI (u8 *srcPtr, u32 srcPitch, u8 * \/* deltaPtr *\/,$/;"	f
Scanlines	src/filters/scanline.cpp	/^void Scanlines (u8 *srcPtr, u32 srcPitch, u8 *,$/;"	f
Scanlines32	src/filters/scanline.cpp	/^void Scanlines32(u8 *srcPtr, u32 srcPitch, u8 * \/* deltaPtr *\/,$/;"	f
ScanlinesTV	src/filters/scanline.cpp	/^void ScanlinesTV(u8 *srcPtr, u32 srcPitch, u8 * \/* deltaPtr *\/,$/;"	f
ScanlinesTV32	src/filters/scanline.cpp	/^void ScanlinesTV32(u8 *srcPtr, u32 srcPitch, u8 * \/* deltaPtr *\/,$/;"	f
ScreenArea	src/gtk/screenarea.cpp	/^ScreenArea::ScreenArea(int _iWidth, int _iHeight, int _iScale) :$/;"	f	class:VBA::ScreenArea
ScreenArea	src/gtk/screenarea.h	/^class ScreenArea : public Gtk::DrawingArea$/;"	c	namespace:VBA
ScreenAreaCairo	src/gtk/screenarea-cairo.cpp	/^ScreenAreaCairo::ScreenAreaCairo(int _iWidth, int _iHeight, int _iScale) :$/;"	f	class:VBA::ScreenAreaCairo
ScreenAreaCairo	src/gtk/screenarea-cairo.h	/^class ScreenAreaCairo : public ScreenArea$/;"	c	namespace:VBA
ScreenAreaGl	src/gtk/screenarea-opengl.cpp	/^ScreenAreaGl::ScreenAreaGl(int _iWidth, int _iHeight, int _iScale) :$/;"	f	class:VBA::ScreenAreaGl
ScreenAreaGl	src/gtk/screenarea-opengl.h	/^class ScreenAreaGl : public ScreenArea,$/;"	c	namespace:VBA
ScreenModeList	src/wx/guiinit.cpp	/^    ScreenModeList() : wxValidator() {}$/;"	f	class:ScreenModeList
ScreenModeList	src/wx/guiinit.cpp	/^    ScreenModeList(const ScreenModeList &e) : wxValidator() {}$/;"	f	class:ScreenModeList
ScreenModeList	src/wx/guiinit.cpp	/^class ScreenModeList : public wxValidator$/;"	c	file:
Search	src/wx/guiinit.cpp	/^    void Search(wxCommandEvent &ev)$/;"	f	class:CheatFind_t
SearchData	src/sdl/debugger.cpp	/^u8 SearchData [64]; \/\/ It doesn't make much sense to search for more than 64 bytes$/;"	v
SearchLength	src/sdl/debugger.cpp	/^unsigned int SearchLength = 0;$/;"	v
SearchMaxMatches	src/sdl/debugger.cpp	/^unsigned int SearchMaxMatches = 5;$/;"	v
SearchResults	src/sdl/debugger.cpp	/^unsigned int SearchResults;$/;"	v
SearchStart	src/sdl/debugger.cpp	/^unsigned int SearchStart = 0xFFFFFFFF;$/;"	v
SecToLook_CreateVTable	fex/7z_C/7zStream.c	/^void SecToLook_CreateVTable(CSecToLook *p)$/;"	f
SecToLook_Read	fex/7z_C/7zStream.c	/^static SRes SecToLook_Read(void *pp, void *buf, size_t *size)$/;"	f	file:
SecToRead_CreateVTable	fex/7z_C/7zStream.c	/^void SecToRead_CreateVTable(CSecToRead *p)$/;"	f
SecToRead_Read	fex/7z_C/7zStream.c	/^static SRes SecToRead_Read(void *pp, void *buf, size_t *size)$/;"	f	file:
Section	src/gtk/configfile.cpp	/^Section::Section(const string & _rsName) :$/;"	f	class:VBA::Config::Section
Section	src/gtk/configfile.h	/^class Section : private std::list<Line>$/;"	c	namespace:VBA::Config
SectionNotFound	src/gtk/configfile.h	/^  SectionNotFound(const std::string & _rsName) :$/;"	f	class:VBA::Config::SectionNotFound
SectionNotFound	src/gtk/configfile.h	/^class SectionNotFound : public NotFound$/;"	c	namespace:VBA::Config
See	fex/7z_C/Ppmd7.h	/^  CPpmd_See DummySee, See[25][16];$/;"	m	struct:__anon6
Seek	fex/7z_C/Types.h	/^  SRes (*Seek)(void *p, Int64 *pos, ESzSeek origin);$/;"	m	struct:__anon27
Seek	fex/7z_C/Types.h	/^  SRes (*Seek)(void *p, Int64 *pos, ESzSeek origin);$/;"	m	struct:__anon28
SelBG	src/wx/gfxviewers.cpp	/^	void SelBG(wxMouseEvent &ev)$/;"	f	class:Viewers::GBPaletteViewer
SelBG	src/wx/gfxviewers.cpp	/^	void SelBG(wxMouseEvent &ev)$/;"	f	class:Viewers::PaletteViewer
SelPoint	src/wx/viewsupt.cpp	/^    void PixView::SelPoint(wxMouseEvent &ev)$/;"	f	class:Viewers::PixView
SelPoint	src/wx/viewsupt.cpp	/^    void PixViewEvt::SelPoint(wxMouseEvent &ev)$/;"	f	class:Viewers::PixViewEvt
SelSprite	src/wx/gfxviewers.cpp	/^	void SelSprite(wxMouseEvent &ev)$/;"	f	class:Viewers::GBPaletteViewer
SelSprite	src/wx/gfxviewers.cpp	/^	void SelSprite(wxMouseEvent &ev)$/;"	f	class:Viewers::PaletteViewer
Select	src/wx/guiinit.cpp	/^    void Select(wxListEvent &ev)$/;"	f	class:CheatFind_t
Select	src/wx/viewers.cpp	/^	void Select(int sel)$/;"	f	class:Viewers::IOViewer
SelectEv	src/wx/viewers.cpp	/^	void SelectEv(wxCommandEvent &ev)$/;"	f	class:Viewers::IOViewer
SelectPlugin	src/win32/SelectPlugin.cpp	/^SelectPlugin::SelectPlugin(CWnd* pParent \/*=NULL*\/)$/;"	f	class:SelectPlugin
SelectPlugin	src/win32/SelectPlugin.h	/^class SelectPlugin : public CDialog$/;"	c
Send	src/gba/GBALink.cpp	/^void lclient::Send(){$/;"	f	class:lclient
Send	src/gba/GBALink.cpp	/^void lserver::Send(void){$/;"	f	class:lserver
Send	src/gba/GBASockClient.cpp	/^void GBASockClient::Send(std::vector<char> data)$/;"	f	class:GBASockClient
SeqInStream_Read	fex/7z_C/7zStream.c	/^SRes SeqInStream_Read(ISeqInStream *stream, void *buf, size_t size)$/;"	f
SeqInStream_Read2	fex/7z_C/7zStream.c	/^SRes SeqInStream_Read2(ISeqInStream *stream, void *buf, size_t size, SRes errorType)$/;"	f
SeqInStream_ReadByte	fex/7z_C/7zStream.c	/^SRes SeqInStream_ReadByte(ISeqInStream *stream, Byte *buf)$/;"	f
ServerInfoDisplay	src/gba/GBALink.h	/^class ServerInfoDisplay$/;"	c
ServerOKButton	src/wx/guiinit.cpp	/^    void ServerOKButton(wxCommandEvent &ev)$/;"	f	class:NetLink_t
ServerWait	src/win32/LinkOptions.cpp	/^ServerWait::ServerWait(CWnd* pParent \/*=NULL*\/)$/;"	f	class:ServerWait
ServerWait	src/win32/LinkOptions.h	/^class ServerWait : public CDialog$/;"	c
Set	src/win32/WinHelper.h	/^      inline void Set( int xLeft, int yTop, int xRight, int yBottom) { top = yTop; bottom = yBottom; right = xRight; left = xLeft; }$/;"	f	class:WinHelper::CRect
Set	src/win32/WinHelper.h	/^      inline void Set( long nSizeX, long nSizeY ) { cx = nSizeX; cy = nSizeY; }$/;"	f	class:WinHelper::CSize
Set	src/wx/guiinit.cpp	/^    void Set(wxCommandEvent &ev)$/;"	f	class:AccelConfig_t
SetAPI	src/wx/guiinit.cpp	/^    void SetAPI(wxCommandEvent &ev)$/;"	f	class:SoundConfig_t
SetAccel	src/win32/AcceleratorManager.cpp	/^bool CAcceleratorManager::SetAccel(BYTE cVirt, WORD wIDCommand, WORD wKey, LPCTSTR szCommand, bool bLocked)$/;"	f	class:CAcceleratorManager
SetActiveTab	src/win32/LinkOptions.cpp	/^BOOL CMyTabCtrl::SetActiveTab(UINT iNewTab)$/;"	f	class:CMyTabCtrl
SetAnalog	src/wx/widgets/wx/sdljoy.h	/^    void SetAnalog(bool analog = true) { digital = !analog; };$/;"	f	class:wxSDLJoy
SetAutoSave	src/win32/AcceleratorManager.h	/^  void SetAutoSave(bool bAutoSave) {m_bAutoSave = bAutoSave;}$/;"	f	class:CAcceleratorManager
SetAutoUpdate	src/wx/viewsupt.h	/^	void SetAutoUpdate(wxCommandEvent &ev) { auto_update = ev.IsChecked(); }$/;"	f	class:Viewers::Viewer
SetClearable	src/wx/widgets/wx/keyedit.h	/^    void SetClearable(bool set = true) { clearable = set; }$/;"	f	class:wxKeyTextCtrl
SetData	src/win32/CmdAccelOb.cpp	/^bool CAccelsOb::SetData(DWORD dwDatas)$/;"	f	class:CAccelsOb
SetData	src/win32/ResizeDlg.cpp	/^BOOL ResizeDlg::SetData(const DialogSizerSizingItem *psd,$/;"	f	class:ResizeDlg
SetData	src/wx/viewsupt.cpp	/^    void PixView::SetData(const unsigned char *data, int stride, int x, int y)$/;"	f	class:Viewers::PixView
SetData	src/wx/viewsupt.cpp	/^    void PixViewEvt::SetData(const unsigned char *data, int stride, int x,$/;"	f	class:Viewers::PixViewEvt
SetFormat	src/win32/WavWriter.cpp	/^void WavWriter::SetFormat(const WAVEFORMATEX *format)$/;"	f	class:WavWriter
SetFrameTitle	src/wx/panel.cpp	/^void GameArea::SetFrameTitle()$/;"	f	class:GameArea
SetGroup	src/wx/widgets/wxmisc.cpp	/^void wxFarRadio::SetGroup(class wxFarRadio *grp)$/;"	f	class:wxFarRadio
SetItem	src/wx/widgets/checkedlistctrl.cpp	/^bool wxCheckedListCtrl::SetItem(wxListItem& info)$/;"	f	class:wxCheckedListCtrl
SetItem	src/wx/widgets/checkedlistctrl.cpp	/^long wxCheckedListCtrl::SetItem(long index, int col, const wxString& label, int WXUNUSED(imageId))$/;"	f	class:wxCheckedListCtrl
SetItemImage	src/wx/widgets/wx/checkedlistctrl.h	/^	bool SetItemImage(long, int)$/;"	f	class:wxCheckedListCtrl
SetItemLabel	src/wx/wxhead.h	47;"	d
SetItemState	src/wx/widgets/checkedlistctrl.cpp	/^bool wxCheckedListCtrl::SetItemState(long item, long state, long stateMask)$/;"	f	class:wxCheckedListCtrl
SetJoystick	src/wx/wxvbam.cpp	/^void MainFrame::SetJoystick()$/;"	f	class:MainFrame
SetKeyEnter	src/wx/widgets/wx/keyedit.h	/^    void SetKeyEnter(bool set = true) { keyenter = set; }$/;"	f	class:wxKeyTextCtrl
SetMultikey	src/wx/widgets/wx/keyedit.h	/^    void SetMultikey(wxChar c = wxT(',')) { multikey = c; }$/;"	f	class:wxKeyTextCtrl
SetRGB	src/wx/viewsupt.cpp	/^    void ColorView::SetRGB(int r, int g, int b)$/;"	f	class:Viewers::ColorView
SetRecentAccels	src/wx/wxvbam.cpp	/^void MainFrame::SetRecentAccels()$/;"	f	class:MainFrame
SetRegKey	src/win32/AcceleratorManager.cpp	/^bool CAcceleratorManager::SetRegKey(HKEY hRegKey, LPCTSTR szRegKey)$/;"	f	class:CAcceleratorManager
SetSel	src/wx/viewsupt.cpp	/^    void DisList::SetSel()$/;"	f	class:Viewers::DisList
SetSel	src/wx/viewsupt.cpp	/^    void DisList::SetSel(u32 addr)$/;"	f	class:Viewers::DisList
SetSel	src/wx/viewsupt.cpp	/^    void PixView::SetSel(int x, int y, bool desel_cview_update)$/;"	f	class:Viewers::PixView
SetSize	src/win32/WinHelper.h	/^      inline void SetSize( const CSize &size ) { bottom = top + size.cy; right = left + size.cx; }$/;"	f	class:WinHelper::CRect
SetSize	src/win32/WinHelper.h	/^      inline void SetSize( const SIZE &size ) { bottom = top + size.cy; right = left + size.cx; }$/;"	f	class:WinHelper::CRect
SetSize	src/win32/WinHelper.h	/^      inline void SetSize( int cx, int cy ) { bottom = top + cy; right = left + cx; }$/;"	f	class:WinHelper::CRect
SetSuccessor	fex/7z_C/Ppmd7.c	/^static void SetSuccessor(CPpmd_State *p, CPpmd_Void_Ref v)$/;"	f	file:
SetThrottle	src/wx/guiinit.cpp	/^    void SetThrottle(wxCommandEvent &evt)$/;"	f	class:ThrottleCtrl_t
SetThrottleSel	src/wx/guiinit.cpp	/^    void SetThrottleSel(wxSpinEvent &evt)$/;"	f	class:ThrottleCtrl_t
SetUi16	fex/7z_C/CpuArch.h	68;"	d
SetUi32	fex/7z_C/CpuArch.h	69;"	d
SetUi64	fex/7z_C/CpuArch.h	70;"	d
SetValVal	src/wx/guiinit.cpp	/^    void SetValVal(wxTextCtrl *tc)$/;"	f	class:CheatFind_t
SetValue	src/wx/widgets/wxmisc.cpp	/^void wxFarRadio::SetValue(bool val)$/;"	f	class:wxFarRadio
Shift	fex/7z_C/Ppmd.h	/^  Byte Shift;  \/* Speed of Freq change; low Shift is for fast change *\/$/;"	m	struct:__anon20
Show	src/wx/viewsupt.cpp	/^    void MemView::Show(u32 addr, bool force_update)$/;"	f	class:Viewers::MemView
ShowCaret	src/wx/viewsupt.cpp	/^    void MemView::ShowCaret()$/;"	f	class:Viewers::MemView
ShowConnect	src/win32/LinkOptions.cpp	/^	void ShowConnect(const int player)$/;"	f	class:Win32ServerInfoDisplay
ShowConnect	src/win32/LinkOptions.cpp	/^    void ShowConnect(const int player, const int togo)$/;"	f	class:Win32ClientInfoDisplay
ShowDetailed	src/gtk/window.h	/^    ShowDetailed$/;"	e	enum:VBA::Window::EShowSpeed
ShowFullScreen	src/wx/panel.cpp	/^void GameArea::ShowFullScreen(bool full)$/;"	f	class:GameArea
ShowImg	src/wx/sys.cpp	/^void PrintDialog::ShowImg(wxPaintEvent &evt)$/;"	f	class:PrintDialog
ShowModal	src/wx/sys.cpp	/^    int ShowModal() { return wxGetApp().frame->ShowModal(dlg); }$/;"	f	class:PrintDialog
ShowModal	src/wx/wxvbam.cpp	/^int MainFrame::ShowModal(wxDialog *dlg)$/;"	f	class:MainFrame
ShowNone	src/gtk/window.h	/^    ShowNone,$/;"	e	enum:VBA::Window::EShowSpeed
ShowPercentage	src/gtk/window.h	/^    ShowPercentage,$/;"	e	enum:VBA::Window::EShowSpeed
ShowPointer	src/wx/panel.cpp	/^void GameArea::ShowPointer()$/;"	f	class:GameArea
ShowSel	src/wx/gfxviewers.cpp	/^	void ShowSel()$/;"	f	class:Viewers::GBPaletteViewer
ShowSel	src/wx/gfxviewers.cpp	/^	void ShowSel()$/;"	f	class:Viewers::PaletteViewer
ShowServerIP	src/win32/LinkOptions.cpp	/^    void ShowServerIP(const sf::IPAddress& addr)$/;"	f	class:Win32ServerInfoDisplay
ShrinkUnits	fex/7z_C/Ppmd7.c	/^static void *ShrinkUnits(CPpmd7 *p, void *oldPtr, unsigned oldNU, unsigned newNU)$/;"	f	file:
SignedValue	src/wx/guiinit.cpp	/^    s32 SignedValue()$/;"	f	class:CheatFind_t
SignedValue	src/wx/guiinit.cpp	/^    s32 SignedValue(int fmt)$/;"	f	class:CheatFind_t
SignedValue	src/wx/guiinit.cpp	/^    s32 SignedValue(wxString &s, int fmt)$/;"	f	class:CheatFind_t
Silent_Blip_Buffer	src/apu/Blip_Buffer.cpp	/^Silent_Blip_Buffer::Silent_Blip_Buffer()$/;"	f	class:Silent_Blip_Buffer
Silent_Blip_Buffer	src/apu/Blip_Buffer.h	/^class Silent_Blip_Buffer : public Blip_Buffer {$/;"	c
Silent_Buffer	src/apu/Multi_Buffer.cpp	/^Silent_Buffer::Silent_Buffer() : Multi_Buffer( 1 ) \/\/ 0 channels would probably confuse$/;"	f	class:Silent_Buffer
Silent_Buffer	src/apu/Multi_Buffer.h	/^class Silent_Buffer : public Multi_Buffer {$/;"	c
Simple2x16	src/filters/simpleFilter.cpp	/^void Simple2x16(u8 *srcPtr, u32 srcPitch, u8 * \/* deltaPtr *\/,$/;"	f
Simple2x32	src/filters/simpleFilter.cpp	/^void Simple2x32(u8 *srcPtr, u32 srcPitch, u8 * \/* deltaPtr *\/,$/;"	f
Simple3x16	src/filters/simpleFilter.cpp	/^void Simple3x16(u8 *srcPtr, u32 srcPitch, u8 * \/* deltaPtr *\/,$/;"	f
Simple3x32	src/filters/simpleFilter.cpp	/^void Simple3x32(u8 *srcPtr, u32 srcPitch, u8 * \/* deltaPtr *\/,$/;"	f
Simple4x16	src/filters/simpleFilter.cpp	/^void Simple4x16(u8 *srcPtr, u32 srcPitch, u8 * \/* deltaPtr *\/,$/;"	f
Simple4x32	src/filters/simpleFilter.cpp	/^void Simple4x32(u8 *srcPtr, u32 srcPitch, u8 * \/* deltaPtr *\/,$/;"	f
Simple_Effects_Buffer	src/apu/Effects_Buffer.cpp	/^Simple_Effects_Buffer::Simple_Effects_Buffer() :$/;"	f	class:Simple_Effects_Buffer
Simple_Effects_Buffer	src/apu/Effects_Buffer.h	/^class Simple_Effects_Buffer : public Effects_Buffer {$/;"	c
Size	fex/7z_C/7z.h	/^  UInt64 Size;$/;"	m	struct:__anon14
Size	fex/7z_C/7zIn.c	/^  size_t Size;$/;"	m	struct:_CSzState	file:
Size	fex/7z_C/Ppmd7.h	/^  UInt32 Size;$/;"	m	struct:__anon6
Size	src/win32/WinHelper.h	/^      inline CSize Size() const { CSize s( Width(), Height() ); return s; }$/;"	f	class:WinHelper::CRect
Size	src/win32/rpi.h	/^	unsigned long	Size;$/;"	m	struct:__anon66
SizeT	fex/7z_C/Types.h	/^typedef UInt32 SizeT;$/;"	t
SizeT	fex/7z_C/Types.h	/^typedef size_t SizeT;$/;"	t
Skip	fex/7z_C/Types.h	/^  SRes (*Skip)(void *p, size_t offset);$/;"	m	struct:__anon28
Sm60FPS	src/win32/VBA.cpp	/^namespace Sm60FPS$/;"	n	file:
Sm60FPS_CanSkipFrame	src/win32/VBA.cpp	/^bool Sm60FPS_CanSkipFrame()$/;"	f
Sm60FPS_Init	src/win32/VBA.cpp	/^void Sm60FPS_Init()$/;"	f
Sm60FPS_Sleep	src/win32/VBA.cpp	/^void Sm60FPS_Sleep()$/;"	f
SmartIB	src/filters/interframe.cpp	/^void SmartIB(u8 *srcPtr, u32 srcPitch, int width, int height)$/;"	f
SmartIB	src/filters/interframe.cpp	/^void SmartIB(u8 *srcPtr, u32 srcPitch, int width, int starty, int height)$/;"	f
SmartIB32	src/filters/interframe.cpp	/^void SmartIB32(u8 *srcPtr, u32 srcPitch, int width, int height)$/;"	f
SmartIB32	src/filters/interframe.cpp	/^void SmartIB32(u8 *srcPtr, u32 srcPitch, int width, int starty, int height)$/;"	f
SmartIB32_MMX	src/filters/interframe.cpp	/^static void SmartIB32_MMX(u8 *srcPtr, u32 srcPitch, int width, int starty, int height)$/;"	f	file:
SmartIB_MMX	src/filters/interframe.cpp	/^static void SmartIB_MMX(u8 *srcPtr, u32 srcPitch, int width, int starty, int height)$/;"	f	file:
SortItems	src/wx/widgets/wx/checkedlistctrl.h	/^	bool SortItems(wxListCtrlCompare, long)$/;"	f	class:wxCheckedListCtrl
SoundConfigDialog	src/gtk/soundconfig.cpp	/^SoundConfigDialog::SoundConfigDialog(GtkDialog* _pstDialog, const Glib::RefPtr<Gtk::Builder>& refBuilder) :$/;"	f	class:VBA::SoundConfigDialog
SoundConfigDialog	src/gtk/soundconfig.h	/^class SoundConfigDialog : public Gtk::Dialog$/;"	c	namespace:VBA
SoundConfigLoad	src/wx/guiinit.cpp	/^    SoundConfigLoad() : wxValidator() {}$/;"	f	class:SoundConfigLoad
SoundConfigLoad	src/wx/guiinit.cpp	/^    SoundConfigLoad(const SoundConfigLoad &e) : wxValidator() {}$/;"	f	class:SoundConfigLoad
SoundConfigLoad	src/wx/guiinit.cpp	/^class SoundConfigLoad : public wxValidator$/;"	c	file:
SoundConfig_t	src/wx/guiinit.cpp	/^static class SoundConfig_t : public wxEvtHandler$/;"	c	file:
SoundDriver	src/common/SoundDriver.h	/^class SoundDriver$/;"	c
SoundMute	src/gtk/window.h	/^    SoundMute,$/;"	e	enum:VBA::Window::ESoundStatus
SoundOff	src/gtk/window.h	/^    SoundOff,$/;"	e	enum:VBA::Window::ESoundStatus
SoundOn	src/gtk/window.h	/^    SoundOn$/;"	e	enum:VBA::Window::ESoundStatus
SoundRetro	src/libretro/SoundRetro.cpp	/^SoundRetro::SoundRetro()$/;"	f	class:SoundRetro
SoundRetro	src/libretro/SoundRetro.h	/^class SoundRetro: public SoundDriver$/;"	c
SoundSDL	src/common/SoundSDL.cpp	/^SoundSDL::SoundSDL():$/;"	f	class:SoundSDL
SoundSDL	src/common/SoundSDL.h	/^class SoundSDL: public SoundDriver$/;"	c
SpecPos	fex/7z_C/LzmaDec.c	101;"	d	file:
SplitBlock	fex/7z_C/Ppmd7.c	/^static void SplitBlock(CPpmd7 *p, void *ptr, unsigned oldIndx, unsigned newIndx)$/;"	f	file:
SrcH	src/win32/rpi.h	/^	unsigned long	SrcH;$/;"	m	struct:__anon66
SrcPitch	src/win32/rpi.h	/^	unsigned long	SrcPitch;$/;"	m	struct:__anon66
SrcPtr	src/win32/rpi.h	/^	void			*SrcPtr;$/;"	m	struct:__anon66
SrcW	src/win32/rpi.h	/^	unsigned long	SrcW;$/;"	m	struct:__anon66
Stamp	fex/7z_C/Ppmd7.c	/^  UInt16 Stamp; \/* must be at offset 0 as CPpmd7_Context::NumStats. Stamp=0 means free *\/$/;"	m	struct:CPpmd7_Node_	file:
StartGPLink	src/gba/GBALink.cpp	/^void StartGPLink(u16 value)$/;"	f
StartGPLink	src/gba/GBALink.h	/^inline void StartGPLink(u16) { }$/;"	f
StartLink	src/gba/GBALink.cpp	/^void StartLink(u16 value)$/;"	f
StartLink	src/gba/GBALink.h	/^inline void StartLink(u16) { }$/;"	f
StartLirc	src/sdl/SDL.cpp	/^void StartLirc(void)$/;"	f
StartModal	src/wx/wxvbam.cpp	/^void MainFrame::StartModal()$/;"	f	class:MainFrame
StartRFU	src/gba/GBALink.cpp	/^u16 StartRFU(u16 value)$/;"	f
StartSoundRecording	src/wx/panel.cpp	/^void GameArea::StartSoundRecording(const wxString &fname)$/;"	f	class:GameArea
StartVidRecording	src/wx/panel.cpp	/^void GameArea::StartVidRecording(const wxString &fname)$/;"	f	class:GameArea
Stats	fex/7z_C/Ppmd7.h	/^  CPpmd_State_Ref Stats;$/;"	m	struct:CPpmd7_Context_
Status	src/wx/wxhead.h	36;"	d
Std_File_Reader	fex/fex/Data_Reader.cpp	/^Std_File_Reader::Std_File_Reader()$/;"	f	class:Std_File_Reader
Std_File_Reader	fex/fex/Data_Reader.h	/^class Std_File_Reader : public File_Reader {$/;"	c
Stereo_Buffer	src/apu/Multi_Buffer.cpp	/^Stereo_Buffer::Stereo_Buffer() : Multi_Buffer( 2 )$/;"	f	class:Stereo_Buffer
Stereo_Buffer	src/apu/Multi_Buffer.h	/^class Stereo_Buffer : public Multi_Buffer {$/;"	c
Stereo_Mixer	src/apu/Multi_Buffer.h	/^		Stereo_Mixer() : samples_read( 0 ) { }$/;"	f	class:Stereo_Mixer
Stereo_Mixer	src/apu/Multi_Buffer.h	/^	class Stereo_Mixer {$/;"	c
Stop	src/common/ffmpeg.cpp	/^void MediaRecorder::Stop()$/;"	f	class:MediaRecorder
StopLirc	src/sdl/SDL.cpp	/^void StopLirc(void)$/;"	f
StopModal	src/wx/wxvbam.cpp	/^void MainFrame::StopModal()$/;"	f	class:MainFrame
StopSoundRecording	src/wx/panel.cpp	/^void GameArea::StopSoundRecording()$/;"	f	class:GameArea
StopVidRecording	src/wx/panel.cpp	/^void GameArea::StopVidRecording()$/;"	f	class:GameArea
Stream	fex/7z_C/Ppmd7.h	/^  IByteIn *Stream;$/;"	m	struct:__anon8
Stream	fex/7z_C/Ppmd7.h	/^  IByteOut *Stream;$/;"	m	struct:__anon9
StretchTog	src/wx/viewsupt.cpp	/^    void GfxViewer::StretchTog(wxCommandEvent &ev)$/;"	f	class:Viewers::GfxViewer
StringTokenizer	src/win32/StringTokenizer.cpp	/^StringTokenizer::StringTokenizer(CString str, CString del)$/;"	f	class:StringTokenizer
StringTokenizer	src/win32/StringTokenizer.h	/^class StringTokenizer$/;"	c
Struct	src/gba/elf.h	/^struct Struct {$/;"	s
SubclassDlgItem	src/win32/LinkOptions.cpp	/^BOOL CMyTabCtrl::SubclassDlgItem(UINT nID, CWnd* pParent)$/;"	f	class:CMyTabCtrl
Subset_Reader	fex/fex/Data_Reader.cpp	/^Subset_Reader::Subset_Reader( Data_Reader* dr, int size ) :$/;"	f	class:Subset_Reader
Subset_Reader	fex/fex/Data_Reader.h	/^class Subset_Reader : public Data_Reader {$/;"	c
SuccessorHigh	fex/7z_C/Ppmd.h	/^  UInt16 SuccessorHigh;$/;"	m	struct:__anon21
SuccessorLow	fex/7z_C/Ppmd.h	/^  UInt16 SuccessorLow;$/;"	m	struct:__anon21
Suffix	fex/7z_C/Ppmd7.h	/^  CPpmd7_Context_Ref Suffix;$/;"	m	struct:CPpmd7_Context_
Summ	fex/7z_C/Ppmd.h	/^  UInt16 Summ; \/* Freq *\/$/;"	m	struct:__anon20
SummFreq	fex/7z_C/Ppmd7.h	/^  UInt16 SummFreq;$/;"	m	struct:CPpmd7_Context_
Super2xSaI	src/filters/2xSaI.cpp	/^void Super2xSaI (u8 *srcPtr, u32 srcPitch,$/;"	f
Super2xSaI32	src/filters/2xSaI.cpp	/^void Super2xSaI32 (u8 *srcPtr, u32 srcPitch,$/;"	f
SuperEagle	src/filters/2xSaI.cpp	/^void SuperEagle (u8 *srcPtr, u32 srcPitch, u8 *deltaPtr,$/;"	f
SuperEagle32	src/filters/2xSaI.cpp	/^void SuperEagle32 (u8 *srcPtr, u32 srcPitch, u8 *deltaPtr,$/;"	f
SwapStates	fex/7z_C/Ppmd7.c	/^static void SwapStates(CPpmd_State *t1, CPpmd_State *t2)$/;"	f	file:
Symbol	fex/7z_C/Ppmd.h	/^  Byte Symbol;$/;"	m	struct:__anon21
Symbol	src/gba/elf.h	/^struct Symbol {$/;"	s
SzAlloc	fex/7z_C/7zAlloc.c	/^void *SzAlloc(void *p, size_t size)$/;"	f
SzAllocTemp	fex/7z_C/7zAlloc.c	/^void *SzAllocTemp(void *p, size_t size)$/;"	f
SzArEx_Extract	fex/7z_C/7zIn.c	/^SRes SzArEx_Extract($/;"	f
SzArEx_Fill	fex/7z_C/7zIn.c	/^static SRes SzArEx_Fill(CSzArEx *p, ISzAlloc *alloc)$/;"	f	file:
SzArEx_Free	fex/7z_C/7zIn.c	/^void SzArEx_Free(CSzArEx *p, ISzAlloc *alloc)$/;"	f
SzArEx_GetFileNameUtf16	fex/7z_C/7zIn.c	/^size_t SzArEx_GetFileNameUtf16(const CSzArEx *p, size_t fileIndex, UInt16 *dest)$/;"	f
SzArEx_GetFolderFullPackSize	fex/7z_C/7zIn.c	/^int SzArEx_GetFolderFullPackSize(const CSzArEx *p, UInt32 folderIndex, UInt64 *resSize)$/;"	f
SzArEx_GetFolderStreamPos	fex/7z_C/7zIn.c	/^UInt64 SzArEx_GetFolderStreamPos(const CSzArEx *p, UInt32 folderIndex, UInt32 indexInFolder)$/;"	f
SzArEx_Init	fex/7z_C/7zIn.c	/^void SzArEx_Init(CSzArEx *p)$/;"	f
SzArEx_Open	fex/7z_C/7zIn.c	/^SRes SzArEx_Open(CSzArEx *p, ILookInStream *inStream, ISzAlloc *allocMain, ISzAlloc *allocTemp)$/;"	f
SzArEx_Open2	fex/7z_C/7zIn.c	/^static SRes SzArEx_Open2($/;"	f	file:
SzAr_Free	fex/7z_C/7zIn.c	/^void SzAr_Free(CSzAr *p, ISzAlloc *alloc)$/;"	f
SzAr_Init	fex/7z_C/7zIn.c	/^void SzAr_Init(CSzAr *p)$/;"	f
SzCoderInfo_Free	fex/7z_C/7zIn.c	/^void SzCoderInfo_Free(CSzCoderInfo *p, ISzAlloc *alloc)$/;"	f
SzCoderInfo_Init	fex/7z_C/7zIn.c	/^void SzCoderInfo_Init(CSzCoderInfo *p)$/;"	f
SzDecodeCopy	fex/7z_C/7zDec.c	/^static SRes SzDecodeCopy(UInt64 inSize, ILookInStream *inStream, Byte *outBuffer)$/;"	f	file:
SzDecodeLzma	fex/7z_C/7zDec.c	/^static SRes SzDecodeLzma(CSzCoderInfo *coder, UInt64 inSize, ILookInStream *inStream,$/;"	f	file:
SzDecodeLzma2	fex/7z_C/7zDec.c	/^static SRes SzDecodeLzma2(CSzCoderInfo *coder, UInt64 inSize, ILookInStream *inStream,$/;"	f	file:
SzDecodePpmd	fex/7z_C/7zDec.c	/^static SRes SzDecodePpmd(CSzCoderInfo *coder, UInt64 inSize, ILookInStream *inStream,$/;"	f	file:
SzFile_Init	fex/7z_C/7zIn.c	/^void SzFile_Init(CSzFileItem *p)$/;"	f
SzFolder_Decode	fex/7z_C/7zDec.c	/^SRes SzFolder_Decode(const CSzFolder *folder, const UInt64 *packSizes,$/;"	f
SzFolder_Decode2	fex/7z_C/7zDec.c	/^static SRes SzFolder_Decode2(const CSzFolder *folder, const UInt64 *packSizes,$/;"	f	file:
SzFolder_FindBindPairForInStream	fex/7z_C/7zIn.c	/^int SzFolder_FindBindPairForInStream(CSzFolder *p, UInt32 inStreamIndex)$/;"	f
SzFolder_FindBindPairForOutStream	fex/7z_C/7zIn.c	/^int SzFolder_FindBindPairForOutStream(CSzFolder *p, UInt32 outStreamIndex)$/;"	f
SzFolder_Free	fex/7z_C/7zIn.c	/^void SzFolder_Free(CSzFolder *p, ISzAlloc *alloc)$/;"	f
SzFolder_GetNumOutStreams	fex/7z_C/7zIn.c	/^UInt32 SzFolder_GetNumOutStreams(CSzFolder *p)$/;"	f
SzFolder_GetUnpackSize	fex/7z_C/7zIn.c	/^UInt64 SzFolder_GetUnpackSize(CSzFolder *p)$/;"	f
SzFolder_Init	fex/7z_C/7zIn.c	/^void SzFolder_Init(CSzFolder *p)$/;"	f
SzFree	fex/7z_C/7zAlloc.c	/^void SzFree(void *p, void *address)$/;"	f
SzFreeTemp	fex/7z_C/7zAlloc.c	/^void SzFreeTemp(void *p, void *address)$/;"	f
SzGetNextFolderItem	fex/7z_C/7zIn.c	/^static SRes SzGetNextFolderItem(CSzData *sd, CSzFolder *folder, ISzAlloc *alloc)$/;"	f	file:
SzReadAndDecodePackedStreams	fex/7z_C/7zIn.c	/^static SRes SzReadAndDecodePackedStreams($/;"	f	file:
SzReadAndDecodePackedStreams2	fex/7z_C/7zIn.c	/^static SRes SzReadAndDecodePackedStreams2($/;"	f	file:
SzReadArchiveProperties	fex/7z_C/7zIn.c	/^static SRes SzReadArchiveProperties(CSzData *sd)$/;"	f	file:
SzReadBoolVector	fex/7z_C/7zIn.c	/^static SRes SzReadBoolVector(CSzData *sd, size_t numItems, Byte **v, ISzAlloc *alloc)$/;"	f	file:
SzReadBoolVector2	fex/7z_C/7zIn.c	/^static SRes SzReadBoolVector2(CSzData *sd, size_t numItems, Byte **v, ISzAlloc *alloc)$/;"	f	file:
SzReadByte	fex/7z_C/7zIn.c	/^static SRes SzReadByte(CSzData *sd, Byte *b)$/;"	f	file:
SzReadBytes	fex/7z_C/7zIn.c	/^static SRes SzReadBytes(CSzData *sd, Byte *data, size_t size)$/;"	f	file:
SzReadFileNames	fex/7z_C/7zIn.c	/^static SRes SzReadFileNames(const Byte *p, size_t size, UInt32 numFiles, size_t *sizes)$/;"	f	file:
SzReadHashDigests	fex/7z_C/7zIn.c	/^static SRes SzReadHashDigests($/;"	f	file:
SzReadHeader	fex/7z_C/7zIn.c	/^static SRes SzReadHeader($/;"	f	file:
SzReadHeader2	fex/7z_C/7zIn.c	/^static SRes SzReadHeader2($/;"	f	file:
SzReadID	fex/7z_C/7zIn.c	/^static SRes SzReadID(CSzData *sd, UInt64 *value)$/;"	f	file:
SzReadNumber	fex/7z_C/7zIn.c	/^static SRes SzReadNumber(CSzData *sd, UInt64 *value)$/;"	f	file:
SzReadNumber32	fex/7z_C/7zIn.c	/^static SRes SzReadNumber32(CSzData *sd, UInt32 *value)$/;"	f	file:
SzReadPackInfo	fex/7z_C/7zIn.c	/^static SRes SzReadPackInfo($/;"	f	file:
SzReadStreamsInfo	fex/7z_C/7zIn.c	/^static SRes SzReadStreamsInfo($/;"	f	file:
SzReadSubStreamsInfo	fex/7z_C/7zIn.c	/^static SRes SzReadSubStreamsInfo($/;"	f	file:
SzReadSwitch	fex/7z_C/7zIn.c	/^static SRes SzReadSwitch(CSzData *sd)$/;"	f	file:
SzReadUInt32	fex/7z_C/7zIn.c	/^static SRes SzReadUInt32(CSzData *sd, UInt32 *value)$/;"	f	file:
SzReadUnpackInfo	fex/7z_C/7zIn.c	/^static SRes SzReadUnpackInfo($/;"	f	file:
SzSkeepData	fex/7z_C/7zIn.c	/^static SRes SzSkeepData(CSzData *sd)$/;"	f	file:
SzSkeepDataSize	fex/7z_C/7zIn.c	/^static SRes SzSkeepDataSize(CSzData *sd, UInt64 size)$/;"	f	file:
SzWaitAttribute	fex/7z_C/7zIn.c	/^static SRes SzWaitAttribute(CSzData *sd, UInt64 attribute)$/;"	f	file:
T	src/wx/viewers.cpp	/^	wxCheckBox *N, *Z, *C, *V, *I, *F, *T;$/;"	m	class:Viewers::DisassembleViewer	file:
TARGET	src/libretro/Makefile	/^   TARGET := $(TARGET_NAME)_libretro.dll$/;"	m
TARGET	src/libretro/Makefile	/^   TARGET := $(TARGET_NAME)_libretro.dylib$/;"	m
TARGET	src/libretro/Makefile	/^   TARGET := $(TARGET_NAME)_libretro.so$/;"	m
TARGET_NAME	src/libretro/Makefile	/^TARGET_NAME = vbam$/;"	m
THIS_FILE	src/win32/AboutDialog.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/AboutDialog.cpp	7;"	d	file:
THIS_FILE	src/win32/AccelEditor.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/AccelEditor.cpp	8;"	d	file:
THIS_FILE	src/win32/AcceleratorManager.cpp	/^static char THIS_FILE[]=__FILE__;$/;"	v	file:
THIS_FILE	src/win32/AcceleratorManager.cpp	36;"	d	file:
THIS_FILE	src/win32/Associate.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/Associate.cpp	8;"	d	file:
THIS_FILE	src/win32/BitmapControl.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/BitmapControl.cpp	7;"	d	file:
THIS_FILE	src/win32/BugReport.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/BugReport.cpp	38;"	d	file:
THIS_FILE	src/win32/ColorButton.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/ColorButton.cpp	7;"	d	file:
THIS_FILE	src/win32/ColorControl.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/ColorControl.cpp	7;"	d	file:
THIS_FILE	src/win32/Direct3D.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/Direct3D.cpp	37;"	d	file:
THIS_FILE	src/win32/DirectInput.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/DirectInput.cpp	15;"	d	file:
THIS_FILE	src/win32/Directories.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/Directories.cpp	11;"	d	file:
THIS_FILE	src/win32/Disassemble.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/Disassemble.cpp	12;"	d	file:
THIS_FILE	src/win32/ExportGSASnapshot.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/ExportGSASnapshot.cpp	10;"	d	file:
THIS_FILE	src/win32/FileDlg.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/FileDlg.cpp	12;"	d	file:
THIS_FILE	src/win32/GBACheats.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/GBACheats.cpp	17;"	d	file:
THIS_FILE	src/win32/GBCheatsDlg.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/GBCheatsDlg.cpp	15;"	d	file:
THIS_FILE	src/win32/GBColorDlg.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/GBColorDlg.cpp	44;"	d	file:
THIS_FILE	src/win32/GBDisassemble.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/GBDisassemble.cpp	11;"	d	file:
THIS_FILE	src/win32/GBMapView.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/GBMapView.cpp	21;"	d	file:
THIS_FILE	src/win32/GBMemoryViewerDlg.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/GBMemoryViewerDlg.cpp	14;"	d	file:
THIS_FILE	src/win32/GBOamView.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/GBOamView.cpp	19;"	d	file:
THIS_FILE	src/win32/GBPaletteView.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/GBPaletteView.cpp	12;"	d	file:
THIS_FILE	src/win32/GBPrinterDlg.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/GBPrinterDlg.cpp	18;"	d	file:
THIS_FILE	src/win32/GBTileView.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/GBTileView.cpp	19;"	d	file:
THIS_FILE	src/win32/GDBConnection.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/GDBConnection.cpp	11;"	d	file:
THIS_FILE	src/win32/GSACodeSelect.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/GSACodeSelect.cpp	7;"	d	file:
THIS_FILE	src/win32/GameOverrides.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/GameOverrides.cpp	8;"	d	file:
THIS_FILE	src/win32/Hyperlink.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/Hyperlink.cpp	7;"	d	file:
THIS_FILE	src/win32/IOViewer.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/IOViewer.cpp	13;"	d	file:
THIS_FILE	src/win32/Joypad.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/Joypad.cpp	9;"	d	file:
THIS_FILE	src/win32/KeyboardEdit.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/KeyboardEdit.cpp	34;"	d	file:
THIS_FILE	src/win32/LangSelect.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/LangSelect.cpp	7;"	d	file:
THIS_FILE	src/win32/LinkOptions.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/LinkOptions.cpp	12;"	d	file:
THIS_FILE	src/win32/Logging.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/Logging.cpp	11;"	d	file:
THIS_FILE	src/win32/MainWnd.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/MainWnd.cpp	31;"	d	file:
THIS_FILE	src/win32/MainWndTools.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/MainWndTools.cpp	32;"	d	file:
THIS_FILE	src/win32/MapView.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/MapView.cpp	20;"	d	file:
THIS_FILE	src/win32/MaxScale.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/MaxScale.cpp	7;"	d	file:
THIS_FILE	src/win32/MemoryViewer.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/MemoryViewer.cpp	10;"	d	file:
THIS_FILE	src/win32/MemoryViewerAddressSize.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/MemoryViewerAddressSize.cpp	7;"	d	file:
THIS_FILE	src/win32/MemoryViewerDlg.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/MemoryViewerDlg.cpp	15;"	d	file:
THIS_FILE	src/win32/OamView.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/OamView.cpp	20;"	d	file:
THIS_FILE	src/win32/OpenGL.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/OpenGL.cpp	37;"	d	file:
THIS_FILE	src/win32/PaletteView.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/PaletteView.cpp	13;"	d	file:
THIS_FILE	src/win32/PaletteViewControl.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/PaletteViewControl.cpp	9;"	d	file:
THIS_FILE	src/win32/RewindInterval.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/RewindInterval.cpp	7;"	d	file:
THIS_FILE	src/win32/RomInfo.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/RomInfo.cpp	8;"	d	file:
THIS_FILE	src/win32/SelectPlugin.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/SelectPlugin.cpp	13;"	d	file:
THIS_FILE	src/win32/StringTokenizer.cpp	/^static char THIS_FILE[]=__FILE__;$/;"	v	file:
THIS_FILE	src/win32/StringTokenizer.cpp	6;"	d	file:
THIS_FILE	src/win32/Throttle.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/Throttle.cpp	7;"	d	file:
THIS_FILE	src/win32/TileView.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/TileView.cpp	20;"	d	file:
THIS_FILE	src/win32/VBA.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/VBA.cpp	125;"	d	file:
THIS_FILE	src/win32/WavWriter.cpp	/^static char THIS_FILE[]=__FILE__;$/;"	v	file:
THIS_FILE	src/win32/WavWriter.cpp	9;"	d	file:
THIS_FILE	src/win32/ZoomControl.cpp	/^static char THIS_FILE[] = __FILE__;$/;"	v	file:
THIS_FILE	src/win32/ZoomControl.cpp	7;"	d	file:
THUMB_CONSOLE_OUTPUT	src/gba/GBA-thumb.cpp	56;"	d	file:
THUMB_CONSOLE_OUTPUT	src/gba/GBA-thumb.cpp	72;"	d	file:
THUMB_PREFETCH	src/gba/GBAcpu.h	32;"	d
THUMB_PREFETCH	src/sdl/debugger.cpp	210;"	d	file:
THUMB_PREFETCH_NEXT	src/gba/GBAcpu.h	41;"	d
TICKS	src/libretro/libretro.cpp	466;"	d	file:
TICKS	src/libretro/libretro.cpp	468;"	d	file:
TILED_RENDERING	src/libretro/Makefile	/^	TILED_RENDERING = 1$/;"	m
TILED_RENDERING	src/libretro/Makefile	/^TILED_RENDERING = 0$/;"	m
TIMEDWAIT_ALRM	src/gba/GBALink.cpp	94;"	d	file:
TIMER_TICKS	src/gba/GBA.cpp	/^const int TIMER_TICKS[4] = {$/;"	v
TM0CNT	src/gba/Globals.cpp	/^u16 TM0CNT   = 0x0000;$/;"	v
TM0D	src/gba/Globals.cpp	/^u16 TM0D     = 0x0000;$/;"	v
TM1CNT	src/gba/Globals.cpp	/^u16 TM1CNT   = 0x0000;$/;"	v
TM1D	src/gba/Globals.cpp	/^u16 TM1D     = 0x0000;$/;"	v
TM2CNT	src/gba/Globals.cpp	/^u16 TM2CNT   = 0x0000;$/;"	v
TM2D	src/gba/Globals.cpp	/^u16 TM2D     = 0x0000;$/;"	v
TM3CNT	src/gba/Globals.cpp	/^u16 TM3CNT   = 0x0000;$/;"	v
TM3D	src/gba/Globals.cpp	/^u16 TM3D     = 0x0000;$/;"	v
TOKEN_ADDR	src/sdl/expr.cpp	/^     TOKEN_ADDR = 262,$/;"	e	enum:yytokentype	file:
TOKEN_ADDR	src/sdl/expr.cpp	83;"	d	file:
TOKEN_ADDR	src/sdl/expr.cpp.h	/^     TOKEN_ADDR = 262,$/;"	e	enum:yytokentype
TOKEN_ADDR	src/sdl/expr.cpp.h	56;"	d
TOKEN_ARROW	src/sdl/expr.cpp	/^     TOKEN_ARROW = 261,$/;"	e	enum:yytokentype	file:
TOKEN_ARROW	src/sdl/expr.cpp	82;"	d	file:
TOKEN_ARROW	src/sdl/expr.cpp.h	/^     TOKEN_ARROW = 261,$/;"	e	enum:yytokentype
TOKEN_ARROW	src/sdl/expr.cpp.h	55;"	d
TOKEN_DOT	src/sdl/expr.cpp	/^     TOKEN_DOT = 259,$/;"	e	enum:yytokentype	file:
TOKEN_DOT	src/sdl/expr.cpp	80;"	d	file:
TOKEN_DOT	src/sdl/expr.cpp.h	/^     TOKEN_DOT = 259,$/;"	e	enum:yytokentype
TOKEN_DOT	src/sdl/expr.cpp.h	53;"	d
TOKEN_IDENTIFIER	src/sdl/expr.cpp	/^     TOKEN_IDENTIFIER = 258,$/;"	e	enum:yytokentype	file:
TOKEN_IDENTIFIER	src/sdl/expr.cpp	79;"	d	file:
TOKEN_IDENTIFIER	src/sdl/expr.cpp.h	/^     TOKEN_IDENTIFIER = 258,$/;"	e	enum:yytokentype
TOKEN_IDENTIFIER	src/sdl/expr.cpp.h	52;"	d
TOKEN_NUMBER	src/sdl/expr.cpp	/^     TOKEN_NUMBER = 264$/;"	e	enum:yytokentype	file:
TOKEN_NUMBER	src/sdl/expr.cpp	85;"	d	file:
TOKEN_NUMBER	src/sdl/expr.cpp.h	/^     TOKEN_NUMBER = 264$/;"	e	enum:yytokentype
TOKEN_NUMBER	src/sdl/expr.cpp.h	58;"	d
TOKEN_SIZEOF	src/sdl/expr.cpp	/^     TOKEN_SIZEOF = 263,$/;"	e	enum:yytokentype	file:
TOKEN_SIZEOF	src/sdl/expr.cpp	84;"	d	file:
TOKEN_SIZEOF	src/sdl/expr.cpp.h	/^     TOKEN_SIZEOF = 263,$/;"	e	enum:yytokentype
TOKEN_SIZEOF	src/sdl/expr.cpp.h	57;"	d
TOKEN_STAR	src/sdl/expr.cpp	/^     TOKEN_STAR = 260,$/;"	e	enum:yytokentype	file:
TOKEN_STAR	src/sdl/expr.cpp	81;"	d	file:
TOKEN_STAR	src/sdl/expr.cpp.h	/^     TOKEN_STAR = 260,$/;"	e	enum:yytokentype
TOKEN_STAR	src/sdl/expr.cpp.h	54;"	d
TO_FIXED	src/apu/Effects_Buffer.cpp	21;"	d	file:
TRANSP_VERTEX	src/win32/Direct3D.cpp	/^	struct TRANSP_VERTEX {$/;"	s	class:Direct3DDisplay	file:
TREE_6_DECODE	fex/7z_C/LzmaDec.c	34;"	d	file:
TREE_6_DECODE	fex/7z_C/LzmaDec.c	36;"	d	file:
TREE_DECODE	fex/7z_C/LzmaDec.c	28;"	d	file:
TREE_DECODE_CHECK	fex/7z_C/LzmaDec.c	56;"	d	file:
TREE_GET_BIT	fex/7z_C/LzmaDec.c	27;"	d	file:
TRUE	src/filters/2xSaImmx.asm	/^TRUE          dd 0xffffffff,0xffffffff$/;"	d
TRUE	src/win32/glfont.h	13;"	d
TRYFREE	src/common/memgzio.c	53;"	d	file:
TYPE_array	src/gba/elf.h	/^  TYPE_array,$/;"	e	enum:TypeEnum
TYPE_base	src/gba/elf.h	/^  TYPE_base,$/;"	e	enum:TypeEnum
TYPE_enum	src/gba/elf.h	/^  TYPE_enum,$/;"	e	enum:TypeEnum
TYPE_function	src/gba/elf.h	/^  TYPE_function,$/;"	e	enum:TypeEnum
TYPE_pointer	src/gba/elf.h	/^  TYPE_pointer,$/;"	e	enum:TypeEnum
TYPE_reference	src/gba/elf.h	/^  TYPE_reference,$/;"	e	enum:TypeEnum
TYPE_struct	src/gba/elf.h	/^  TYPE_struct,$/;"	e	enum:TypeEnum
TYPE_union	src/gba/elf.h	/^  TYPE_union$/;"	e	enum:TypeEnum
TYPE_void	src/gba/elf.h	/^  TYPE_void,$/;"	e	enum:TypeEnum
T_must_be_pod	fex/fex/blargg_common.h	/^	union T_must_be_pod { T t; }; \/\/ fails if T is not POD$/;"	u	class:blargg_vector
Test86MSByte	fex/7z_C/Bra86.c	6;"	d	file:
TestSignatureCandidate	fex/7z_C/7zIn.c	/^static int TestSignatureCandidate(Byte *testBytes)$/;"	f	file:
Tex	src/win32/glfont.h	/^	int Tex;$/;"	m	struct:__anon69
TexHeight	src/win32/glfont.h	/^	int TexWidth, TexHeight;$/;"	m	struct:__anon69
TexWidth	src/win32/glfont.h	/^	int TexWidth, TexHeight;$/;"	m	struct:__anon69
Text	fex/7z_C/Ppmd7.h	/^  Byte *Base, *LoUnit, *HiUnit, *Text, *UnitsStart;$/;"	m	struct:__anon6
Throttle	src/win32/Throttle.cpp	/^Throttle::Throttle(CWnd* pParent \/*=NULL*\/)$/;"	f	class:Throttle
Throttle	src/win32/Throttle.h	/^class Throttle : public CDialog$/;"	c
ThrottleCtrl_t	src/wx/guiinit.cpp	/^static class ThrottleCtrl_t : public wxEvtHandler$/;"	c	file:
TileEntry	src/gba/GBA.cpp	/^union TileEntry$/;"	u	file:
TileLine	src/gba/GBA.cpp	/^struct TileLine$/;"	s	file:
TileReader	src/gba/GBA.cpp	/^typedef const TileLine (*TileReader) (const u16 *, const int, const u8 *, u16 *, const u32);$/;"	t	file:
TileView	src/win32/TileView.cpp	/^TileView::TileView(CWnd* pParent \/*=NULL*\/)$/;"	f	class:TileView
TileView	src/win32/TileView.h	/^class TileView : public ResizeDlg, IUpdateListener$/;"	c
TileViewer	src/wx/gfxviewers.cpp	/^	TileViewer() : GfxViewer(wxT("TileViewer"), 32*8, 32*8)$/;"	f	class:Viewers::TileViewer
TileViewer	src/wx/gfxviewers.cpp	/^    class TileViewer : public GfxViewer$/;"	c	namespace:Viewers	file:
TileViewer	src/wx/gfxviewers.cpp	/^void MainFrame::TileViewer()$/;"	f	class:MainFrame
ToString	src/wx/widgets/joyedit.cpp	/^wxString wxJoyKeyTextCtrl::ToString(int mod, int key, int joy)$/;"	f	class:wxJoyKeyTextCtrl
ToString	src/wx/widgets/joyedit.cpp	/^wxString wxJoyKeyTextCtrl::ToString(wxJoyKeyBinding_v keys, wxChar sep)$/;"	f	class:wxJoyKeyTextCtrl
ToString	src/wx/widgets/keyedit.cpp	/^wxString wxKeyTextCtrl::ToString(int mod, int key)$/;"	f	class:wxKeyTextCtrl
ToString	src/wx/widgets/keyedit.cpp	/^wxString wxKeyTextCtrl::ToString(wxAcceleratorEntry_v keys, wxChar sep)$/;"	f	class:wxKeyTextCtrl
ToggleCheck	src/wx/widgets/wxmisc.cpp	/^void wxBoolEnHandler::ToggleCheck(wxCommandEvent &ev)$/;"	f	class:wxBoolEnHandler
ToggleChoice	src/wx/guiinit.cpp	/^    void ToggleChoice(wxCommandEvent &ev)$/;"	f	class:PluginEnable_t
Tool	src/wx/guiinit.cpp	/^    void Tool(wxCommandEvent &ev)$/;"	f	class:CheatList_t
TopLeft	src/win32/WinHelper.h	/^      inline POINT TopLeft() const { POINT pt = { left, top }; return pt; }$/;"	f	class:WinHelper::CRect
Tracked_Blip_Buffer	src/apu/Multi_Buffer.cpp	/^Tracked_Blip_Buffer::Tracked_Blip_Buffer()$/;"	f	class:Tracked_Blip_Buffer
Tracked_Blip_Buffer	src/apu/Multi_Buffer.h	/^	class Tracked_Blip_Buffer : public Blip_Buffer {$/;"	c
TransferFromWindow	src/wx/guiinit.cpp	/^    bool TransferFromWindow() { return true; }$/;"	f	class:CheatFindFill
TransferFromWindow	src/wx/guiinit.cpp	/^    bool TransferFromWindow() { return true; }$/;"	f	class:CheatListFill
TransferFromWindow	src/wx/guiinit.cpp	/^    bool TransferFromWindow() { return true; }$/;"	f	class:GBACtrlEnabler
TransferFromWindow	src/wx/guiinit.cpp	/^    bool TransferFromWindow() { return true; }$/;"	f	class:PluginEnabler
TransferFromWindow	src/wx/guiinit.cpp	/^    bool TransferFromWindow() {$/;"	f	class:IPHostValidator
TransferFromWindow	src/wx/guiinit.cpp	/^    bool TransferFromWindow() {$/;"	f	class:SoundConfigLoad
TransferFromWindow	src/wx/guiinit.cpp	/^    bool TransferFromWindow()$/;"	f	class:PluginListFiller
TransferFromWindow	src/wx/guiinit.cpp	/^    bool TransferFromWindow()$/;"	f	class:ScreenModeList
TransferFromWindow	src/wx/widgets/joyedit.cpp	/^bool wxJoyKeyValidator::TransferFromWindow()$/;"	f	class:wxJoyKeyValidator
TransferFromWindow	src/wx/widgets/keyedit.cpp	/^bool wxKeyValidator::TransferFromWindow()$/;"	f	class:wxKeyValidator
TransferFromWindow	src/wx/widgets/wxmisc.cpp	/^bool wxBoolIntValidator::TransferFromWindow()$/;"	f	class:wxBoolIntValidator
TransferFromWindow	src/wx/widgets/wxmisc.cpp	/^bool wxBoolRevValidator::TransferFromWindow()$/;"	f	class:wxBoolRevValidator
TransferFromWindow	src/wx/widgets/wxmisc.cpp	/^bool wxColorValidator::TransferFromWindow()$/;"	f	class:wxColorValidator
TransferFromWindow	src/wx/widgets/wxmisc.cpp	/^bool wxFileDirPickerValidator::TransferFromWindow()$/;"	f	class:wxFileDirPickerValidator
TransferToWindow	src/wx/guiinit.cpp	/^    bool TransferToWindow() {$/;"	f	class:CheatFindFill
TransferToWindow	src/wx/guiinit.cpp	/^    bool TransferToWindow() {$/;"	f	class:CheatListFill
TransferToWindow	src/wx/guiinit.cpp	/^    bool TransferToWindow() {$/;"	f	class:GBACtrlEnabler
TransferToWindow	src/wx/guiinit.cpp	/^    bool TransferToWindow() {$/;"	f	class:IPHostValidator
TransferToWindow	src/wx/guiinit.cpp	/^    bool TransferToWindow() {$/;"	f	class:SoundConfigLoad
TransferToWindow	src/wx/guiinit.cpp	/^    bool TransferToWindow()$/;"	f	class:PluginEnabler
TransferToWindow	src/wx/guiinit.cpp	/^    bool TransferToWindow()$/;"	f	class:PluginListFiller
TransferToWindow	src/wx/guiinit.cpp	/^    bool TransferToWindow()$/;"	f	class:ScreenModeList
TransferToWindow	src/wx/widgets/joyedit.cpp	/^bool wxJoyKeyValidator::TransferToWindow()$/;"	f	class:wxJoyKeyValidator
TransferToWindow	src/wx/widgets/keyedit.cpp	/^bool wxKeyValidator::TransferToWindow()$/;"	f	class:wxKeyValidator
TransferToWindow	src/wx/widgets/wxmisc.cpp	/^bool wxBoolEnValidator::TransferToWindow()$/;"	f	class:wxBoolEnValidator
TransferToWindow	src/wx/widgets/wxmisc.cpp	/^bool wxBoolIntEnValidator::TransferToWindow()$/;"	f	class:wxBoolIntEnValidator
TransferToWindow	src/wx/widgets/wxmisc.cpp	/^bool wxBoolIntValidator::TransferToWindow()$/;"	f	class:wxBoolIntValidator
TransferToWindow	src/wx/widgets/wxmisc.cpp	/^bool wxBoolRevEnValidator::TransferToWindow()$/;"	f	class:wxBoolRevEnValidator
TransferToWindow	src/wx/widgets/wxmisc.cpp	/^bool wxBoolRevValidator::TransferToWindow()$/;"	f	class:wxBoolRevValidator
TransferToWindow	src/wx/widgets/wxmisc.cpp	/^bool wxColorValidator::TransferToWindow()$/;"	f	class:wxColorValidator
TransferToWindow	src/wx/widgets/wxmisc.cpp	/^bool wxFileDirPickerValidator::TransferToWindow()$/;"	f	class:wxFileDirPickerValidator
TranslatePropSheetMsg	src/win32/LinkOptions.cpp	/^BOOL CMyTabCtrl::TranslatePropSheetMsg(MSG* pMsg)$/;"	f	class:CMyTabCtrl
TreeInt	src/wx/guiinit.cpp	/^    TreeInt(int i) : wxTreeItemData() { val = i; }$/;"	f	class:TreeInt
TreeInt	src/wx/guiinit.cpp	/^class TreeInt : public wxTreeItemData$/;"	c	file:
True	fex/7z_C/Types.h	96;"	d
Type	src/gba/elf.h	/^struct Type {$/;"	s
TypeEnum	src/gba/elf.h	/^enum TypeEnum {$/;"	g
U2B	fex/7z_C/Ppmd7.c	15;"	d	file:
U2I	fex/7z_C/Ppmd7.c	16;"	d	file:
UART	src/gba/GBALink.h	12;"	d
UINT16_C	src/libretro/msvc/msvc-2003-xbox1/stdint.h	234;"	d
UINT16_MAX	src/libretro/msvc/msvc-2003-xbox1/stdint.h	139;"	d
UINT16_MAX	src/sdl/expr-lex.cpp	81;"	d	file:
UINT32_C	src/libretro/msvc/msvc-2003-xbox1/stdint.h	235;"	d
UINT32_MAX	src/libretro/msvc/msvc-2003-xbox1/stdint.h	140;"	d
UINT32_MAX	src/sdl/expr-lex.cpp	84;"	d	file:
UINT64_C	src/libretro/msvc/msvc-2003-xbox1/stdint.h	236;"	d
UINT64_CONST	fex/7z_C/Types.h	80;"	d
UINT64_CONST	fex/7z_C/Types.h	84;"	d
UINT64_MAX	src/libretro/msvc/msvc-2003-xbox1/stdint.h	141;"	d
UINT8_C	src/libretro/msvc/msvc-2003-xbox1/stdint.h	233;"	d
UINT8_MAX	src/libretro/msvc/msvc-2003-xbox1/stdint.h	138;"	d
UINT8_MAX	src/sdl/expr-lex.cpp	78;"	d	file:
UINTMAX_C	src/libretro/msvc/msvc-2003-xbox1/stdint.h	240;"	d
UINTMAX_MAX	src/libretro/msvc/msvc-2003-xbox1/stdint.h	185;"	d
UINTPTR_MAX	src/libretro/msvc/msvc-2003-xbox1/stdint.h	175;"	d
UINTPTR_MAX	src/libretro/msvc/msvc-2003-xbox1/stdint.h	179;"	d
UINT_FAST16_MAX	src/libretro/msvc/msvc-2003-xbox1/stdint.h	167;"	d
UINT_FAST32_MAX	src/libretro/msvc/msvc-2003-xbox1/stdint.h	168;"	d
UINT_FAST64_MAX	src/libretro/msvc/msvc-2003-xbox1/stdint.h	169;"	d
UINT_FAST8_MAX	src/libretro/msvc/msvc-2003-xbox1/stdint.h	166;"	d
UINT_LEAST16_MAX	src/libretro/msvc/msvc-2003-xbox1/stdint.h	153;"	d
UINT_LEAST32_MAX	src/libretro/msvc/msvc-2003-xbox1/stdint.h	154;"	d
UINT_LEAST64_MAX	src/libretro/msvc/msvc-2003-xbox1/stdint.h	155;"	d
UINT_LEAST8_MAX	src/libretro/msvc/msvc-2003-xbox1/stdint.h	152;"	d
UInt16	fex/7z_C/Types.h	/^typedef unsigned short UInt16;$/;"	t
UInt32	fex/7z_C/Types.h	/^typedef unsigned int UInt32;$/;"	t
UInt32	fex/7z_C/Types.h	/^typedef unsigned long UInt32;$/;"	t
UInt64	fex/7z_C/Types.h	/^typedef unsigned __int64 UInt64;$/;"	t
UInt64	fex/7z_C/Types.h	/^typedef unsigned long UInt64;$/;"	t
UInt64	fex/7z_C/Types.h	/^typedef unsigned long long int UInt64;$/;"	t
UNIT_SIZE	fex/7z_C/Ppmd7.c	13;"	d	file:
UNKNOWN_CODE	src/gba/Cheats.cpp	65;"	d	file:
UNLIKELY	src/gba/GBAcpu.h	14;"	d
UNLIKELY	src/gba/GBAcpu.h	18;"	d
UNLOAD_CMDEN_KEEP	src/wx/wxvbam.h	107;"	d
UNREF	src/win32/WinHelper.h	185;"	d
UNSUPPORTED	src/gba/GBALink.h	8;"	d
UPDATE_0	fex/7z_C/Bcj2.c	30;"	d	file:
UPDATE_0	fex/7z_C/LzmaDec.c	20;"	d	file:
UPDATE_0_CHECK	fex/7z_C/LzmaDec.c	50;"	d	file:
UPDATE_1	fex/7z_C/Bcj2.c	31;"	d	file:
UPDATE_1	fex/7z_C/LzmaDec.c	21;"	d	file:
UPDATE_1_CHECK	fex/7z_C/LzmaDec.c	51;"	d	file:
UPDATE_OLDREG	src/gba/GBA-thumb.cpp	61;"	d	file:
UPDATE_OLDREG	src/gba/GBA-thumb.cpp	73;"	d	file:
UPDATE_REG	src/gba/GBALink.cpp	160;"	d	file:
UPDATE_REG	src/gba/GBAcpu.h	21;"	d
USER_ACCEL	src/win32/CmdAccelOb.cpp	188;"	d	file:
USE_ASM	fex/7z_C/CpuArch.c	9;"	d	file:
UTIL_H	src/Util.h	2;"	d
UTIL_OBJS	src/libretro/Makefile	/^UTIL_OBJS := $(UTIL_SOURCES:.c=.o)$/;"	m
UTIL_SOURCES	src/libretro/Makefile	/^UTIL_SOURCES := $(wildcard ..\/common\/utils\/zlib\/*.c)$/;"	m
UnCheck	src/wx/guiinit.cpp	/^    void UnCheck(wxListEvent &ev)$/;"	f	class:CheatList_t
UnSel	src/wx/viewsupt.h	/^	void UnSel() { issel = false; }$/;"	f	class:Viewers::DisList
Units2Indx	fex/7z_C/Ppmd7.h	/^  Byte Units2Indx[128];$/;"	m	struct:__anon6
UnitsStart	fex/7z_C/Ppmd7.h	/^  Byte *Base, *LoUnit, *HiUnit, *Text, *UnitsStart;$/;"	m	struct:__anon6
UnloadGame	src/wx/panel.cpp	/^void GameArea::UnloadGame(bool destruct)$/;"	f	class:GameArea
UnloadOAL10Library	src/win32/LoadOAL.cpp	/^ALvoid UnloadOAL10Library()$/;"	f
Unlock	src/win32/WinHelper.h	/^      inline void Unlock()            { ::LeaveCriticalSection(&m_sect); }$/;"	f	class:WinHelper::CCriticalSection
UnpackCRC	fex/7z_C/7z.h	/^  UInt32 UnpackCRC;$/;"	m	struct:__anon12
UnpackCRCDefined	fex/7z_C/7z.h	/^  int UnpackCRCDefined;$/;"	m	struct:__anon12
UnpackSizes	fex/7z_C/7z.h	/^  UInt64 *UnpackSizes;$/;"	m	struct:__anon12
Update	src/wx/gfxviewers.cpp	/^	void Update()$/;"	f	class:Viewers::GBMapViewer
Update	src/wx/gfxviewers.cpp	/^	void Update()$/;"	f	class:Viewers::GBOAMViewer
Update	src/wx/gfxviewers.cpp	/^	void Update()$/;"	f	class:Viewers::GBPaletteViewer
Update	src/wx/gfxviewers.cpp	/^	void Update()$/;"	f	class:Viewers::GBTileViewer
Update	src/wx/gfxviewers.cpp	/^	void Update()$/;"	f	class:Viewers::MapViewer
Update	src/wx/gfxviewers.cpp	/^	void Update()$/;"	f	class:Viewers::OAMViewer
Update	src/wx/gfxviewers.cpp	/^	void Update()$/;"	f	class:Viewers::PaletteViewer
Update	src/wx/gfxviewers.cpp	/^	void Update()$/;"	f	class:Viewers::TileViewer
Update	src/wx/viewers.cpp	/^	virtual void Update() {}$/;"	f	class:Viewers::MemViewerBase
Update	src/wx/viewers.cpp	/^	void Update()$/;"	f	class:Viewers::DisassembleViewer
Update	src/wx/viewers.cpp	/^	void Update()$/;"	f	class:Viewers::GBDisassembleViewer
Update	src/wx/viewers.cpp	/^	void Update()$/;"	f	class:Viewers::GBMemViewer
Update	src/wx/viewers.cpp	/^	void Update()$/;"	f	class:Viewers::IOViewer
Update	src/wx/viewers.cpp	/^	void Update()$/;"	f	class:Viewers::MemViewer
Update	src/wx/viewers.cpp	/^	void Update(int sel)$/;"	f	class:Viewers::IOViewer
Update	src/wx/viewers.cpp	/^void LogDialog::Update()$/;"	f	class:LogDialog
UpdateDis	src/wx/viewers.cpp	/^	void UpdateDis()$/;"	f	class:Viewers::DisassembleViewer
UpdateDis	src/wx/viewers.cpp	/^	void UpdateDis()$/;"	f	class:Viewers::GBDisassembleViewer
UpdateEvt	src/wx/widgets/wxmisc.cpp	/^void wxFarRadio::UpdateEvt(wxCommandEvent &ev)$/;"	f	class:wxFarRadio
UpdateMenu	src/win32/AcceleratorManager.cpp	/^void CAcceleratorManager::UpdateMenu(HMENU menu)$/;"	f	class:CAcceleratorManager
UpdateModel	fex/7z_C/Ppmd7.c	/^static void UpdateModel(CPpmd7 *p)$/;"	f	file:
UpdateMouseInfo	src/wx/gfxviewers.cpp	/^	void UpdateMouseInfo()$/;"	f	class:Viewers::GBMapViewer
UpdateMouseInfo	src/wx/gfxviewers.cpp	/^	void UpdateMouseInfo()$/;"	f	class:Viewers::GBTileViewer
UpdateMouseInfo	src/wx/gfxviewers.cpp	/^	void UpdateMouseInfo()$/;"	f	class:Viewers::MapViewer
UpdateMouseInfo	src/wx/gfxviewers.cpp	/^	void UpdateMouseInfo()$/;"	f	class:Viewers::TileViewer
UpdateMouseInfoEv	src/wx/gfxviewers.cpp	/^	void UpdateMouseInfoEv(wxMouseEvent &ev)$/;"	f	class:Viewers::GBMapViewer
UpdateMouseInfoEv	src/wx/gfxviewers.cpp	/^	void UpdateMouseInfoEv(wxMouseEvent &ev)$/;"	f	class:Viewers::GBTileViewer
UpdateMouseInfoEv	src/wx/gfxviewers.cpp	/^	void UpdateMouseInfoEv(wxMouseEvent &ev)$/;"	f	class:Viewers::MapViewer
UpdateMouseInfoEv	src/wx/gfxviewers.cpp	/^	void UpdateMouseInfoEv(wxMouseEvent &ev)$/;"	f	class:Viewers::TileViewer
UpdateVals	src/wx/guiinit.cpp	/^    void UpdateVals(wxCommandEvent &ev)$/;"	f	class:CheatFind_t
UpdateView	src/wx/guiinit.cpp	/^    void UpdateView(wxCommandEvent &ev)$/;"	f	class:CheatFind_t
UpdateViewers	src/wx/viewsupt.cpp	/^void MainFrame::UpdateViewers()$/;"	f	class:MainFrame
UpdateWindowSize	src/win32/ResizeDlg.cpp	/^void ResizeDlg::UpdateWindowSize(const int cx, const int cy, HWND hwnd)$/;"	f	class:ResizeDlg
UpdateWndTable	src/win32/AcceleratorManager.cpp	/^bool CAcceleratorManager::UpdateWndTable()$/;"	f	class:CAcceleratorManager
UpdatedValue	src/wx/widgets/wxmisc.cpp	/^void wxFarRadio::UpdatedValue()$/;"	f	class:wxFarRadio
Usage	src/libretro/msvc/msvc-2003-xbox1.bat	/^:Usage$/;"	l
V	src/wx/viewers.cpp	/^	wxCheckBox *N, *Z, *C, *V, *I, *F, *T;$/;"	m	class:Viewers::DisassembleViewer	file:
VALUE_ASR_IMM_C	src/gba/GBA-arm.cpp	500;"	d	file:
VALUE_ASR_IMM_C	src/gba/GBA-arm.cpp	820;"	d	file:
VALUE_ASR_IMM_NC	src/gba/GBA-arm.cpp	510;"	d	file:
VALUE_ASR_IMM_NC	src/gba/GBA-arm.cpp	930;"	d	file:
VALUE_ASR_REG_C	src/gba/GBA-arm.cpp	520;"	d	file:
VALUE_ASR_REG_C	src/gba/GBA-arm.cpp	839;"	d	file:
VALUE_ASR_REG_NC	src/gba/GBA-arm.cpp	533;"	d	file:
VALUE_ASR_REG_NC	src/gba/GBA-arm.cpp	933;"	d	file:
VALUE_IMM_C	src/gba/GBA-arm.cpp	575;"	d	file:
VALUE_IMM_C	src/gba/GBA-arm.cpp	900;"	d	file:
VALUE_IMM_NC	src/gba/GBA-arm.cpp	582;"	d	file:
VALUE_IMM_NC	src/gba/GBA-arm.cpp	942;"	d	file:
VALUE_LOAD_IMM	src/gba/GBA-arm.cpp	352;"	d	file:
VALUE_LOAD_REG	src/gba/GBA-arm.cpp	357;"	d	file:
VALUE_LSL_IMM_C	src/gba/GBA-arm.cpp	406;"	d	file:
VALUE_LSL_IMM_C	src/gba/GBA-arm.cpp	747;"	d	file:
VALUE_LSL_IMM_NC	src/gba/GBA-arm.cpp	414;"	d	file:
VALUE_LSL_IMM_NC	src/gba/GBA-arm.cpp	918;"	d	file:
VALUE_LSL_REG_C	src/gba/GBA-arm.cpp	419;"	d	file:
VALUE_LSL_REG_C	src/gba/GBA-arm.cpp	759;"	d	file:
VALUE_LSL_REG_NC	src/gba/GBA-arm.cpp	438;"	d	file:
VALUE_LSL_REG_NC	src/gba/GBA-arm.cpp	921;"	d	file:
VALUE_LSR_IMM_C	src/gba/GBA-arm.cpp	449;"	d	file:
VALUE_LSR_IMM_C	src/gba/GBA-arm.cpp	783;"	d	file:
VALUE_LSR_IMM_NC	src/gba/GBA-arm.cpp	460;"	d	file:
VALUE_LSR_IMM_NC	src/gba/GBA-arm.cpp	924;"	d	file:
VALUE_LSR_REG_C	src/gba/GBA-arm.cpp	470;"	d	file:
VALUE_LSR_REG_C	src/gba/GBA-arm.cpp	796;"	d	file:
VALUE_LSR_REG_NC	src/gba/GBA-arm.cpp	489;"	d	file:
VALUE_LSR_REG_NC	src/gba/GBA-arm.cpp	927;"	d	file:
VALUE_ROR_IMM_C	src/gba/GBA-arm.cpp	544;"	d	file:
VALUE_ROR_IMM_C	src/gba/GBA-arm.cpp	865;"	d	file:
VALUE_ROR_IMM_NC	src/gba/GBA-arm.cpp	554;"	d	file:
VALUE_ROR_IMM_NC	src/gba/GBA-arm.cpp	936;"	d	file:
VALUE_ROR_REG_C	src/gba/GBA-arm.cpp	565;"	d	file:
VALUE_ROR_REG_C	src/gba/GBA-arm.cpp	881;"	d	file:
VALUE_ROR_REG_NC	src/gba/GBA-arm.cpp	570;"	d	file:
VALUE_ROR_REG_NC	src/gba/GBA-arm.cpp	939;"	d	file:
VAPI	src/win32/WinHelper.h	33;"	d
VAR	src/gba/GBA-arm.cpp	305;"	d	file:
VAR	src/gba/GBA-arm.cpp	335;"	d	file:
VARL	src/gba/GBA-arm.cpp	306;"	d	file:
VARL	src/gba/GBA-arm.cpp	336;"	d	file:
VBA	src/gtk/cheatedit.cpp	/^namespace VBA$/;"	n	file:
VBA	src/gtk/cheatedit.h	/^namespace VBA$/;"	n
VBA	src/gtk/cheatlist.cpp	/^namespace VBA$/;"	n	file:
VBA	src/gtk/cheatlist.h	/^namespace VBA$/;"	n
VBA	src/gtk/configfile.cpp	/^namespace VBA$/;"	n	file:
VBA	src/gtk/configfile.h	/^namespace VBA$/;"	n
VBA	src/gtk/directoriesconfig.cpp	/^namespace VBA$/;"	n	file:
VBA	src/gtk/directoriesconfig.h	/^namespace VBA$/;"	n
VBA	src/gtk/displayconfig.cpp	/^namespace VBA$/;"	n	file:
VBA	src/gtk/displayconfig.h	/^namespace VBA$/;"	n
VBA	src/gtk/filters.cpp	/^namespace VBA$/;"	n	file:
VBA	src/gtk/filters.h	/^namespace VBA$/;"	n
VBA	src/gtk/gameboyadvancecheatlist.cpp	/^namespace VBA$/;"	n	file:
VBA	src/gtk/gameboyadvancecheatlist.h	/^namespace VBA$/;"	n
VBA	src/gtk/gameboyadvanceconfig.cpp	/^namespace VBA$/;"	n	file:
VBA	src/gtk/gameboyadvanceconfig.h	/^namespace VBA$/;"	n
VBA	src/gtk/gameboycheatlist.cpp	/^namespace VBA$/;"	n	file:
VBA	src/gtk/gameboycheatlist.h	/^namespace VBA$/;"	n
VBA	src/gtk/gameboyconfig.cpp	/^namespace VBA$/;"	n	file:
VBA	src/gtk/gameboyconfig.h	/^namespace VBA$/;"	n
VBA	src/gtk/generalconfig.cpp	/^namespace VBA$/;"	n	file:
VBA	src/gtk/generalconfig.h	/^namespace VBA$/;"	n
VBA	src/gtk/joypadconfig.cpp	/^namespace VBA$/;"	n	file:
VBA	src/gtk/joypadconfig.h	/^namespace VBA$/;"	n
VBA	src/gtk/screenarea-cairo.cpp	/^namespace VBA$/;"	n	file:
VBA	src/gtk/screenarea-cairo.h	/^namespace VBA$/;"	n
VBA	src/gtk/screenarea-opengl.cpp	/^namespace VBA$/;"	n	file:
VBA	src/gtk/screenarea-opengl.h	/^namespace VBA$/;"	n
VBA	src/gtk/screenarea.cpp	/^namespace VBA$/;"	n	file:
VBA	src/gtk/screenarea.h	/^namespace VBA$/;"	n
VBA	src/gtk/soundconfig.cpp	/^namespace VBA$/;"	n	file:
VBA	src/gtk/soundconfig.h	/^namespace VBA$/;"	n
VBA	src/gtk/tools.cpp	/^namespace VBA$/;"	n	file:
VBA	src/gtk/tools.h	/^namespace VBA$/;"	n
VBA	src/gtk/window.cpp	/^namespace VBA$/;"	n	file:
VBA	src/gtk/window.h	/^namespace VBA$/;"	n
VBA	src/gtk/windowcallbacks.cpp	/^namespace VBA$/;"	n	file:
VBA	src/win32/VBA.cpp	/^VBA::VBA()$/;"	f	class:VBA
VBA	src/win32/VBA.h	/^class VBA : public CWinApp$/;"	c
VBADIR	src/libretro/jni/Android.mk	/^VBADIR = ..\/..\/$/;"	m
VBAM_SDL_INPUT_H	src/sdl/inputSDL.h	19;"	d
VBA_COBJ	src/libretro/Makefile	/^VBA_COBJ := $(VBA_CSRCS:.c=.o)$/;"	m
VBA_COMPILER	src/version.h	43;"	d
VBA_COMPILER	src/version.h	51;"	d
VBA_COMPILER_DETAIL	src/version.h	44;"	d
VBA_COMPILER_DETAIL	src/version.h	52;"	d
VBA_CSRCS	src/libretro/Makefile	/^VBA_CSRCS := $(foreach dir,$(VBA_SRC_DIRS),$(wildcard $(dir)\/*.c))$/;"	m
VBA_CXXOBJ	src/libretro/Makefile	/^VBA_CXXOBJ := $(VBA_CXXSRCS:.cpp=.o) ..\/common\/Patch.o$/;"	m
VBA_CXXSRCS	src/libretro/Makefile	/^VBA_CXXSRCS := $(foreach dir,$(VBA_SRC_DIRS),$(wildcard $(dir)\/*.cpp))$/;"	m
VBA_DIR	src/libretro/Makefile	/^VBA_DIR := ..\/$/;"	m
VBA_FEATURE_STRING	src/version.h	32;"	d
VBA_NAME	src/version.h	20;"	d
VBA_NAME_AND_SUBVERSION	src/version.h	57;"	d
VBA_NAME_AND_VERSION	src/version.h	56;"	d
VBA_PREF	src/win32/Reg.cpp	9;"	d	file:
VBA_REG_H	src/win32/Reg.h	2;"	d
VBA_SDL_FILTERS_H	src/sdl/filters.h	20;"	d
VBA_SRC_DIRS	src/libretro/Makefile	/^VBA_SRC_DIRS := $(VBA_DIR)\/gba $(VBA_DIR)\/apu $/;"	m
VBA_SUBVERSION_STRING	src/version.h	35;"	d
VBA_SUBVERSION_STRING	src/version.h	37;"	d
VBA_SUBVERSION_STRING	src/version.h	39;"	d
VBA_VERSION_STRING	src/version.h	55;"	d
VBA_WIN32_IUPDATE_H	src/win32/IUpdate.h	2;"	d
VBA_WIN32_RESIZEDLG_H	src/win32/ResizeDlg.h	2;"	d
VCINSTALLDIR	src/libretro/msvc/msvc-2003-xbox1.bat	/^@if "%VCINSTALLDIR%"=="" set VCINSTALLDIR=%VSINSTALLDIR%$/;"	v
VCOUNT	src/gba/Globals.cpp	/^u16 VCOUNT   = 0x0000;$/;"	v
VC_EXTRALEAN	src/win32/stdafx.h	7;"	d
VERBOSE_AGBPRINT	src/gba/Globals.h	16;"	d
VERBOSE_DMA0	src/gba/Globals.h	11;"	d
VERBOSE_DMA1	src/gba/Globals.h	12;"	d
VERBOSE_DMA2	src/gba/Globals.h	13;"	d
VERBOSE_DMA3	src/gba/Globals.h	14;"	d
VERBOSE_ILLEGAL_READ	src/gba/Globals.h	10;"	d
VERBOSE_ILLEGAL_WRITE	src/gba/Globals.h	9;"	d
VERBOSE_SOUNDOUTPUT	src/gba/Globals.h	17;"	d
VERBOSE_SWI	src/gba/Globals.h	7;"	d
VERBOSE_UNALIGNED_MEMORY	src/gba/Globals.h	8;"	d
VERBOSE_UNDEFINED	src/gba/Globals.h	15;"	d
VERTEX	src/win32/Direct3D.cpp	/^	struct VERTEX {$/;"	s	class:Direct3DDisplay	file:
VIDEO_1024x768	src/win32/VBA.h	/^  VIDEO_320x240, VIDEO_640x480, VIDEO_800x600, VIDEO_1024x768, VIDEO_1280x1024,$/;"	e	enum:VIDEO_SIZE
VIDEO_1280x1024	src/win32/VBA.h	/^  VIDEO_320x240, VIDEO_640x480, VIDEO_800x600, VIDEO_1024x768, VIDEO_1280x1024,$/;"	e	enum:VIDEO_SIZE
VIDEO_1X	src/win32/VBA.h	/^  VIDEO_1X, VIDEO_2X, VIDEO_3X, VIDEO_4X, VIDEO_5X, VIDEO_6X,$/;"	e	enum:VIDEO_SIZE
VIDEO_2X	src/win32/VBA.h	/^  VIDEO_1X, VIDEO_2X, VIDEO_3X, VIDEO_4X, VIDEO_5X, VIDEO_6X,$/;"	e	enum:VIDEO_SIZE
VIDEO_320x240	src/win32/VBA.h	/^  VIDEO_320x240, VIDEO_640x480, VIDEO_800x600, VIDEO_1024x768, VIDEO_1280x1024,$/;"	e	enum:VIDEO_SIZE
VIDEO_3X	src/win32/VBA.h	/^  VIDEO_1X, VIDEO_2X, VIDEO_3X, VIDEO_4X, VIDEO_5X, VIDEO_6X,$/;"	e	enum:VIDEO_SIZE
VIDEO_4X	src/win32/VBA.h	/^  VIDEO_1X, VIDEO_2X, VIDEO_3X, VIDEO_4X, VIDEO_5X, VIDEO_6X,$/;"	e	enum:VIDEO_SIZE
VIDEO_5X	src/win32/VBA.h	/^  VIDEO_1X, VIDEO_2X, VIDEO_3X, VIDEO_4X, VIDEO_5X, VIDEO_6X,$/;"	e	enum:VIDEO_SIZE
VIDEO_640x480	src/win32/VBA.h	/^  VIDEO_320x240, VIDEO_640x480, VIDEO_800x600, VIDEO_1024x768, VIDEO_1280x1024,$/;"	e	enum:VIDEO_SIZE
VIDEO_6X	src/win32/VBA.h	/^  VIDEO_1X, VIDEO_2X, VIDEO_3X, VIDEO_4X, VIDEO_5X, VIDEO_6X,$/;"	e	enum:VIDEO_SIZE
VIDEO_800x600	src/win32/VBA.h	/^  VIDEO_320x240, VIDEO_640x480, VIDEO_800x600, VIDEO_1024x768, VIDEO_1280x1024,$/;"	e	enum:VIDEO_SIZE
VIDEO_BUF_LEN	src/common/ffmpeg.cpp	70;"	d	file:
VIDEO_MODE	src/win32/Display.h	/^  struct VIDEO_MODE$/;"	s	class:IDisplay
VIDEO_OTHER	src/win32/VBA.h	/^  VIDEO_OTHER$/;"	e	enum:VIDEO_SIZE
VIDEO_SIZE	src/win32/VBA.h	/^enum VIDEO_SIZE{$/;"	g
VS100COMNTOOLS	src/libretro/msvc/msvc-2010-360.bat	/^@set VS100COMNTOOLS=$/;"	v
V_FLAG	src/gba/Globals.cpp	/^bool V_FLAG = 0;$/;"	v
Validate	src/wx/guiinit.cpp	/^    bool Validate(wxWindow *p) { return true; }$/;"	f	class:CheatFindFill
Validate	src/wx/guiinit.cpp	/^    bool Validate(wxWindow *p) { return true; }$/;"	f	class:CheatListFill
Validate	src/wx/guiinit.cpp	/^    bool Validate(wxWindow *p) { return true; }$/;"	f	class:GBACtrlEnabler
Validate	src/wx/guiinit.cpp	/^    bool Validate(wxWindow *p) { return true; }$/;"	f	class:PluginEnabler
Validate	src/wx/guiinit.cpp	/^    bool Validate(wxWindow *p) { return true; }$/;"	f	class:PluginListFiller
Validate	src/wx/guiinit.cpp	/^    bool Validate(wxWindow *p) { return true; }$/;"	f	class:ScreenModeList
Validate	src/wx/guiinit.cpp	/^    bool Validate(wxWindow *p) { return true; }$/;"	f	class:SoundConfigLoad
Validate	src/wx/guiinit.cpp	/^    bool Validate(wxWindow *p) {$/;"	f	class:IPHostValidator
Validate	src/wx/widgets/wx/joyedit.h	/^    bool Validate(wxWindow *p) { return true; }$/;"	f	class:wxJoyKeyValidator
Validate	src/wx/widgets/wx/keyedit.h	/^    bool Validate(wxWindow *p) { return true; }$/;"	f	class:wxKeyValidator
Validate	src/wx/widgets/wx/wxmisc.h	/^    bool Validate(wxWindow *p) { return true; }$/;"	f	class:wxBoolIntValidator
Validate	src/wx/widgets/wx/wxmisc.h	/^    bool Validate(wxWindow *p) { return true; }$/;"	f	class:wxBoolRevValidator
Validate	src/wx/widgets/wx/wxmisc.h	/^    bool Validate(wxWindow *p) { return true; }$/;"	f	class:wxColorValidator
Validate	src/wx/widgets/wx/wxmisc.h	/^    bool Validate(wxWindow *p) { return true; }$/;"	f	class:wxFileDirPickerValidator
Vertices	src/win32/Direct3D.cpp	/^	} Vertices[4];$/;"	m	class:Direct3DDisplay	typeref:struct:Direct3DDisplay::VERTEX	file:
Viewer	src/wx/viewsupt.cpp	/^    Viewer::Viewer(const wxChar *name) : wxDialog(), auto_update(false)$/;"	f	class:Viewers::Viewer
Viewer	src/wx/viewsupt.h	/^    class Viewer : public wxDialog$/;"	c	namespace:Viewers
Viewers	src/wx/gfxviewers.cpp	/^namespace Viewers {$/;"	n	file:
Viewers	src/wx/viewers.cpp	/^namespace Viewers {$/;"	n	file:
Viewers	src/wx/viewers.cpp	/^namespace Viewers$/;"	n	file:
Viewers	src/wx/viewsupt.cpp	/^namespace Viewers$/;"	n	file:
Viewers	src/wx/viewsupt.h	/^namespace Viewers {$/;"	n
W	src/gb/gb.h	/^  u16 W;$/;"	m	union:__anon153
W	src/gba/GBA.h	/^  } W;$/;"	m	union:__anon48	typeref:struct:__anon48::__anon50
W0	src/gba/GBA.h	/^    u16 W0;$/;"	m	struct:__anon48::__anon50
W1	src/gba/GBA.h	/^    u16 W1;$/;"	m	struct:__anon48::__anon50
WAIT_TIMEOUT	src/gba/GBALink.cpp	63;"	d	file:
WCHAR_MAX	src/libretro/msvc/msvc-2003-xbox1/stdint.h	213;"	d
WCHAR_MIN	src/libretro/msvc/msvc-2003-xbox1/stdint.h	210;"	d
WCHAR_PATH_SEPARATOR	fex/7z_C/Types.h	239;"	d
WCHAR_PATH_SEPARATOR	fex/7z_C/Types.h	246;"	d
WIN0H	src/gba/Globals.cpp	/^u16 WIN0H    = 0x0000;$/;"	v
WIN0V	src/gba/Globals.cpp	/^u16 WIN0V    = 0x0000;$/;"	v
WIN1H	src/gba/Globals.cpp	/^u16 WIN1H    = 0x0000;$/;"	v
WIN1V	src/gba/Globals.cpp	/^u16 WIN1V    = 0x0000;$/;"	v
WINHELPER_H	src/win32/WinHelper.h	12;"	d
WININ	src/gba/Globals.cpp	/^u16 WININ    = 0x0000;$/;"	v
WINOUT	src/gba/Globals.cpp	/^u16 WINOUT   = 0x0000;$/;"	v
WINT_MAX	src/libretro/msvc/msvc-2003-xbox1/stdint.h	217;"	d
WINT_MIN	src/libretro/msvc/msvc-2003-xbox1/stdint.h	216;"	d
WINVER	src/win32/targetver.h	11;"	d
WM_COLINFO	src/win32/ZoomControl.h	11;"	d
WM_MAPINFO	src/win32/BitmapControl.h	11;"	d
WM_PALINFO	src/win32/PaletteViewControl.h	9;"	d
WRITE16LE	src/common/Port.h	41;"	d
WRITE16LE	src/common/Port.h	52;"	d
WRITE16LE	src/common/Port.h	62;"	d
WRITE32LE	src/common/Port.h	44;"	d
WRITE32LE	src/common/Port.h	54;"	d
WRITE32LE	src/common/Port.h	64;"	d
WRITEBACK_NONE	src/gba/GBA-arm.cpp	1543;"	d	file:
WRITEBACK_POSTDEC	src/gba/GBA-arm.cpp	1545;"	d	file:
WRITEBACK_POSTINC	src/gba/GBA-arm.cpp	1546;"	d	file:
WRITEBACK_PRE	src/gba/GBA-arm.cpp	1544;"	d	file:
WRes	fex/7z_C/Types.h	/^typedef DWORD WRes;$/;"	t
WRes	fex/7z_C/Types.h	/^typedef int WRes;$/;"	t
WSTRING_PATH_SEPARATOR	fex/7z_C/Types.h	241;"	d
WSTRING_PATH_SEPARATOR	fex/7z_C/Types.h	248;"	d
WXDLLIMPEXP_WEBUPDATE	src/wx/widgets/wx/webupdatedef.h	4;"	d
WXJB_AXIS_MINUS	src/wx/widgets/wx/joyedit.h	/^    WXJB_AXIS_PLUS, WXJB_AXIS_MINUS, WXJB_BUTTON, WXJB_HAT_FIRST,$/;"	e	enum:__anon56
WXJB_AXIS_PLUS	src/wx/widgets/wx/joyedit.h	/^    WXJB_AXIS_PLUS, WXJB_AXIS_MINUS, WXJB_BUTTON, WXJB_HAT_FIRST,$/;"	e	enum:__anon56
WXJB_BUTTON	src/wx/widgets/wx/joyedit.h	/^    WXJB_AXIS_PLUS, WXJB_AXIS_MINUS, WXJB_BUTTON, WXJB_HAT_FIRST,$/;"	e	enum:__anon56
WXJB_HAT_E	src/wx/widgets/wx/joyedit.h	/^    WXJB_HAT_N = WXJB_HAT_FIRST, WXJB_HAT_S, WXJB_HAT_W, WXJB_HAT_E, WXJB_HAT_NW,$/;"	e	enum:__anon56
WXJB_HAT_FIRST	src/wx/widgets/wx/joyedit.h	/^    WXJB_AXIS_PLUS, WXJB_AXIS_MINUS, WXJB_BUTTON, WXJB_HAT_FIRST,$/;"	e	enum:__anon56
WXJB_HAT_LAST	src/wx/widgets/wx/joyedit.h	/^    WXJB_HAT_NE, WXJB_HAT_SW, WXJB_HAT_SE, WXJB_HAT_LAST = WXJB_HAT_SE$/;"	e	enum:__anon56
WXJB_HAT_N	src/wx/widgets/wx/joyedit.h	/^    WXJB_HAT_N = WXJB_HAT_FIRST, WXJB_HAT_S, WXJB_HAT_W, WXJB_HAT_E, WXJB_HAT_NW,$/;"	e	enum:__anon56
WXJB_HAT_NE	src/wx/widgets/wx/joyedit.h	/^    WXJB_HAT_NE, WXJB_HAT_SW, WXJB_HAT_SE, WXJB_HAT_LAST = WXJB_HAT_SE$/;"	e	enum:__anon56
WXJB_HAT_NW	src/wx/widgets/wx/joyedit.h	/^    WXJB_HAT_N = WXJB_HAT_FIRST, WXJB_HAT_S, WXJB_HAT_W, WXJB_HAT_E, WXJB_HAT_NW,$/;"	e	enum:__anon56
WXJB_HAT_S	src/wx/widgets/wx/joyedit.h	/^    WXJB_HAT_N = WXJB_HAT_FIRST, WXJB_HAT_S, WXJB_HAT_W, WXJB_HAT_E, WXJB_HAT_NW,$/;"	e	enum:__anon56
WXJB_HAT_SE	src/wx/widgets/wx/joyedit.h	/^    WXJB_HAT_NE, WXJB_HAT_SW, WXJB_HAT_SE, WXJB_HAT_LAST = WXJB_HAT_SE$/;"	e	enum:__anon56
WXJB_HAT_SW	src/wx/widgets/wx/joyedit.h	/^    WXJB_HAT_NE, WXJB_HAT_SW, WXJB_HAT_SE, WXJB_HAT_LAST = WXJB_HAT_SE$/;"	e	enum:__anon56
WXJB_HAT_W	src/wx/widgets/wx/joyedit.h	/^    WXJB_HAT_N = WXJB_HAT_FIRST, WXJB_HAT_S, WXJB_HAT_W, WXJB_HAT_E, WXJB_HAT_NW,$/;"	e	enum:__anon56
WXSDLJOY_AXIS	src/wx/widgets/wx/sdljoy.h	/^    WXSDLJOY_AXIS, WXSDLJOY_HAT, WXSDLJOY_BUTTON$/;"	e	enum:__anon57
WXSDLJOY_BUTTON	src/wx/widgets/wx/sdljoy.h	/^    WXSDLJOY_AXIS, WXSDLJOY_HAT, WXSDLJOY_BUTTON$/;"	e	enum:__anon57
WXSDLJOY_HAT	src/wx/widgets/wx/sdljoy.h	/^    WXSDLJOY_AXIS, WXSDLJOY_HAT, WXSDLJOY_BUTTON$/;"	e	enum:__anon57
WX_FFMPEG_H	src/common/ffmpeg.h	2;"	d
WX_MISC_H	src/wx/widgets/wx/wxmisc.h	2;"	d
WX_OPTS_H	src/wx/opts.h	2;"	d
WX_VIEWSUPT_H	src/wx/viewsupt.h	2;"	d
WX_WXHEAD_H	src/wx/wxhead.h	2;"	d
WX_WXVBAM_H	src/wx/wxvbam.h	2;"	d
WaitForSingleObject	src/gba/GBALink.cpp	/^int WaitForSingleObject(sem_t *s, int t)$/;"	f
WavWriter	src/win32/WavWriter.cpp	/^WavWriter::WavWriter()$/;"	f	class:WavWriter
WavWriter	src/win32/WavWriter.h	/^class WavWriter$/;"	c
Width	src/win32/WinHelper.h	/^      inline int Width() const { return right - left; }$/;"	f	class:WinHelper::CRect
Win32ClientInfoDisplay	src/win32/LinkOptions.cpp	/^    Win32ClientInfoDisplay(ServerWait *_dlg)$/;"	f	class:Win32ClientInfoDisplay
Win32ClientInfoDisplay	src/win32/LinkOptions.cpp	/^class Win32ClientInfoDisplay : public ClientInfoDisplay$/;"	c	file:
Win32ServerInfoDisplay	src/win32/LinkOptions.cpp	/^    Win32ServerInfoDisplay(ServerWait *_dlg)$/;"	f	class:Win32ServerInfoDisplay
Win32ServerInfoDisplay	src/win32/LinkOptions.cpp	/^class Win32ServerInfoDisplay : public ServerInfoDisplay$/;"	c	file:
WinCheatsData	src/win32/GBACheats.h	/^struct WinCheatsData {$/;"	s
WinGBACompanyName	src/win32/RomInfo.cpp	/^struct WinGBACompanyName {$/;"	s	file:
WinGbCheatsData	src/win32/GBCheatsDlg.h	/^struct WinGbCheatsData {$/;"	s
WinHelper	src/win32/WinHelper.h	/^namespace WinHelper$/;"	n
WinMain	src/sdl/SDL.cpp	/^  int WinMain()$/;"	f
Window	src/gtk/window.cpp	/^Window::Window(GtkWindow * _pstWindow, const Glib::RefPtr<Gtk::Builder> & _poXml) :$/;"	f	class:VBA::Window
Window	src/gtk/window.h	/^class Window : public Gtk::Window$/;"	c	namespace:VBA
Write	fex/7z_C/Types.h	/^  size_t (*Write)(void *p, const void *buf, size_t size);$/;"	m	struct:__anon25
Write	fex/7z_C/Types.h	/^  void (*Write)(void *p, Byte b);$/;"	m	struct:__anon23
Write	src/win32/AcceleratorManager.cpp	/^bool CAcceleratorManager::Write()$/;"	f	class:CAcceleratorManager
WriteVal	src/wx/viewers.cpp	/^	void WriteVal(wxCommandEvent &ev)$/;"	f	class:Viewers::GBMemViewer
WriteVal	src/wx/viewers.cpp	/^	void WriteVal(wxCommandEvent &ev)$/;"	f	class:Viewers::MemViewer
XA2GetDev	src/wx/xaudio2.cpp	/^static int XA2GetDev(IXAudio2 *xa)$/;"	f	file:
XAUDIO2	src/win32/VBA.h	/^	, XAUDIO2 = 2$/;"	e	enum:AUDIO_API
XAudio2_BufferNotify	src/win32/XAudio2.cpp	/^	XAudio2_BufferNotify() {$/;"	f	class:XAudio2_BufferNotify
XAudio2_BufferNotify	src/win32/XAudio2.cpp	/^class XAudio2_BufferNotify : public IXAudio2VoiceCallback$/;"	c	file:
XAudio2_BufferNotify	src/wx/xaudio2.cpp	/^	XAudio2_BufferNotify() {$/;"	f	class:XAudio2_BufferNotify
XAudio2_BufferNotify	src/wx/xaudio2.cpp	/^class XAudio2_BufferNotify : public IXAudio2VoiceCallback$/;"	c	file:
XAudio2_Config	src/win32/XAudio2_Config.cpp	/^XAudio2_Config::XAudio2_Config(CWnd* pParent \/*=NULL*\/)$/;"	f	class:XAudio2_Config
XAudio2_Config	src/win32/XAudio2_Config.h	/^class XAudio2_Config : public CDialog$/;"	c
XAudio2_Device_Notifier	src/win32/XAudio2.cpp	/^	XAudio2_Device_Notifier() : registered( 0 )$/;"	f	class:XAudio2_Device_Notifier
XAudio2_Device_Notifier	src/win32/XAudio2.cpp	/^class XAudio2_Device_Notifier : public IMMNotificationClient$/;"	c	file:
XAudio2_Device_Notifier	src/wx/xaudio2.cpp	/^	XAudio2_Device_Notifier() : registered( 0 )$/;"	f	class:XAudio2_Device_Notifier
XAudio2_Device_Notifier	src/wx/xaudio2.cpp	/^class XAudio2_Device_Notifier : public IMMNotificationClient$/;"	c	file:
XAudio2_Output	src/win32/XAudio2.cpp	/^XAudio2_Output::XAudio2_Output()$/;"	f	class:XAudio2_Output
XAudio2_Output	src/win32/XAudio2.cpp	/^class XAudio2_Output$/;"	c	file:
XAudio2_Output	src/wx/xaudio2.cpp	/^XAudio2_Output::XAudio2_Output()$/;"	f	class:XAudio2_Output
XAudio2_Output	src/wx/xaudio2.cpp	/^class XAudio2_Output$/;"	c	file:
XRCCTRL	src/wx/wxhead.h	104;"	d
XRCCTRL	src/wx/wxhead.h	106;"	d
XRCCTRL_D	src/wx/wxhead.h	107;"	d
XRCCTRL_I	src/wx/wxhead.h	105;"	d
XRCID_D	src/wx/wxhead.h	93;"	d
XRCITEM	src/wx/guiinit.cpp	2087;"	d	file:
XRCITEM_D	src/wx/guiinit.cpp	2086;"	d	file:
XRCITEM_I	src/wx/guiinit.cpp	2085;"	d	file:
Xres	src/filters/hq/asm/hq3x_16.asm	/^Xres         equ 16$/;"	d
Xres	src/filters/hq/asm/hq3x_32.asm	/^Xres         equ 16$/;"	d
Xres	src/filters/hq/asm/hq4x_16.asm	/^Xres         equ 16$/;"	d
Xres	src/filters/hq/asm/hq4x_32.asm	/^Xres         equ 16$/;"	d
YYABORT	src/sdl/expr.cpp	542;"	d	file:
YYACCEPT	src/sdl/expr.cpp	541;"	d	file:
YYBACKUP	src/sdl/expr.cpp	554;"	d	file:
YYBISON	src/sdl/expr.cpp	47;"	d	file:
YYBISON_VERSION	src/sdl/expr.cpp	50;"	d	file:
YYCOPY	src/sdl/expr.cpp	328;"	d	file:
YYCOPY	src/sdl/expr.cpp	331;"	d	file:
YYDEBUG	src/sdl/expr.cpp	119;"	d	file:
YYDPRINTF	src/sdl/expr.cpp	634;"	d	file:
YYDPRINTF	src/sdl/expr.cpp	780;"	d	file:
YYEMPTY	src/sdl/expr.cpp	538;"	d	file:
YYEOF	src/sdl/expr.cpp	539;"	d	file:
YYERRCODE	src/sdl/expr.cpp	573;"	d	file:
YYERROR	src/sdl/expr.cpp	543;"	d	file:
YYERROR_VERBOSE	src/sdl/expr.cpp	124;"	d	file:
YYERROR_VERBOSE	src/sdl/expr.cpp	125;"	d	file:
YYERROR_VERBOSE	src/sdl/expr.cpp	127;"	d	file:
YYFAIL	src/sdl/expr.cpp	550;"	d	file:
YYFINAL	src/sdl/expr.cpp	361;"	d	file:
YYFPRINTF	src/sdl/expr.cpp	631;"	d	file:
YYFREE	src/sdl/expr.cpp	294;"	d	file:
YYID	src/sdl/expr.cpp	/^YYID (int i)$/;"	f	file:
YYID	src/sdl/expr.cpp	218;"	d	file:
YYINITDEPTH	src/sdl/expr.cpp	789;"	d	file:
YYLAST	src/sdl/expr.cpp	363;"	d	file:
YYLEX	src/sdl/expr.cpp	621;"	d	file:
YYLEX	src/sdl/expr.cpp	623;"	d	file:
YYLLOC_DEFAULT	src/sdl/expr.cpp	582;"	d	file:
YYLSP_NEEDED	src/sdl/expr.cpp	59;"	d	file:
YYMALLOC	src/sdl/expr.cpp	287;"	d	file:
YYMAXDEPTH	src/sdl/expr.cpp	800;"	d	file:
YYMAXUTOK	src/sdl/expr.cpp	376;"	d	file:
YYNNTS	src/sdl/expr.cpp	368;"	d	file:
YYNRULES	src/sdl/expr.cpp	370;"	d	file:
YYNSTATES	src/sdl/expr.cpp	372;"	d	file:
YYNTOKENS	src/sdl/expr.cpp	366;"	d	file:
YYPACT_NINF	src/sdl/expr.cpp	494;"	d	file:
YYPOPSTACK	src/sdl/expr.cpp	1138;"	d	file:
YYPURE	src/sdl/expr.cpp	56;"	d	file:
YYRECOVERING	src/sdl/expr.cpp	552;"	d	file:
YYRHSLOC	src/sdl/expr.cpp	580;"	d	file:
YYSIZE_MAXIMUM	src/sdl/expr.cpp	195;"	d	file:
YYSIZE_T	src/sdl/expr.cpp	183;"	d	file:
YYSIZE_T	src/sdl/expr.cpp	185;"	d	file:
YYSIZE_T	src/sdl/expr.cpp	189;"	d	file:
YYSIZE_T	src/sdl/expr.cpp	191;"	d	file:
YYSKELETON_NAME	src/sdl/expr.cpp	53;"	d	file:
YYSTACK_ALLOC	src/sdl/expr.cpp	241;"	d	file:
YYSTACK_ALLOC	src/sdl/expr.cpp	245;"	d	file:
YYSTACK_ALLOC	src/sdl/expr.cpp	250;"	d	file:
YYSTACK_ALLOC	src/sdl/expr.cpp	273;"	d	file:
YYSTACK_ALLOC_MAXIMUM	src/sdl/expr.cpp	270;"	d	file:
YYSTACK_ALLOC_MAXIMUM	src/sdl/expr.cpp	276;"	d	file:
YYSTACK_BYTES	src/sdl/expr.cpp	320;"	d	file:
YYSTACK_FREE	src/sdl/expr.cpp	264;"	d	file:
YYSTACK_FREE	src/sdl/expr.cpp	274;"	d	file:
YYSTACK_GAP_MAXIMUM	src/sdl/expr.cpp	316;"	d	file:
YYSTACK_RELOCATE	src/sdl/expr.cpp	347;"	d	file:
YYSTATE	src/sdl/expr-lex.cpp	133;"	d	file:
YYSTYPE	src/sdl/expr.cpp	/^typedef int YYSTYPE;$/;"	t	file:
YYSTYPE	src/sdl/expr.cpp.h	/^typedef int YYSTYPE;$/;"	t
YYSTYPE	src/sdl/exprNode.h	68;"	d
YYSTYPE_IS_DECLARED	src/sdl/expr.cpp	138;"	d	file:
YYSTYPE_IS_DECLARED	src/sdl/expr.cpp.h	66;"	d
YYSTYPE_IS_TRIVIAL	src/sdl/expr.cpp	139;"	d	file:
YYSTYPE_IS_TRIVIAL	src/sdl/expr.cpp.h	67;"	d
YYTABLES_NAME	src/sdl/expr-lex.cpp	1776;"	d	file:
YYTABLE_NINF	src/sdl/expr.cpp	512;"	d	file:
YYTERROR	src/sdl/expr.cpp	572;"	d	file:
YYTOKENTYPE	src/sdl/expr.cpp	65;"	d	file:
YYTOKENTYPE	src/sdl/expr.cpp.h	38;"	d
YYTOKEN_TABLE	src/sdl/expr.cpp	132;"	d	file:
YYTRANSLATE	src/sdl/expr.cpp	378;"	d	file:
YYUNDEFTOK	src/sdl/expr.cpp	375;"	d	file:
YYUSE	src/sdl/expr.cpp	211;"	d	file:
YYUSE	src/sdl/expr.cpp	213;"	d	file:
YY_	src/sdl/expr.cpp	201;"	d	file:
YY_	src/sdl/expr.cpp	205;"	d	file:
YY_AT_BOL	src/sdl/expr-lex.cpp	332;"	d	file:
YY_BREAK	src/sdl/expr-lex.cpp	652;"	d	file:
YY_BUFFER_EOF_PENDING	src/sdl/expr-lex.cpp	248;"	d	file:
YY_BUFFER_NEW	src/sdl/expr-lex.cpp	236;"	d	file:
YY_BUFFER_NORMAL	src/sdl/expr-lex.cpp	237;"	d	file:
YY_BUFFER_STATE	src/sdl/expr-lex.cpp	/^typedef struct yy_buffer_state *YY_BUFFER_STATE;$/;"	t	typeref:struct:yy_buffer_state	file:
YY_BUF_SIZE	src/sdl/expr-lex.cpp	145;"	d	file:
YY_CHAR	src/sdl/expr-lex.cpp	/^typedef unsigned char YY_CHAR;$/;"	t	file:
YY_CURRENT_BUFFER	src/sdl/expr-lex.cpp	264;"	d	file:
YY_CURRENT_BUFFER_LVALUE	src/sdl/expr-lex.cpp	271;"	d	file:
YY_DECL	src/sdl/expr-lex.cpp	640;"	d	file:
YY_DECL_IS_OURS	src/sdl/expr-lex.cpp	636;"	d	file:
YY_DO_BEFORE_ACTION	src/sdl/expr-lex.cpp	360;"	d	file:
YY_END_OF_BUFFER	src/sdl/expr-lex.cpp	368;"	d	file:
YY_END_OF_BUFFER_CHAR	src/sdl/expr-lex.cpp	141;"	d	file:
YY_EXIT_FAILURE	src/sdl/expr-lex.cpp	1574;"	d	file:
YY_EXTRA_TYPE	src/sdl/expr-lex.cpp	499;"	d	file:
YY_FATAL_ERROR	src/sdl/expr-lex.cpp	627;"	d	file:
YY_FLEX_MAJOR_VERSION	src/sdl/expr-lex.cpp	10;"	d	file:
YY_FLEX_MINOR_VERSION	src/sdl/expr-lex.cpp	11;"	d	file:
YY_FLEX_SUBMINOR_VERSION	src/sdl/expr-lex.cpp	12;"	d	file:
YY_FLUSH_BUFFER	src/sdl/expr-lex.cpp	300;"	d	file:
YY_INPUT	src/sdl/expr-lex.cpp	480;"	d	file:
YY_INPUT	src/sdl/expr-lex.cpp	580;"	d	file:
YY_INT_ALIGNED	src/sdl/expr-lex.cpp	5;"	d	file:
YY_LESS_LINENO	src/sdl/expr-lex.cpp	165;"	d	file:
YY_LOCATION_PRINT	src/sdl/expr.cpp	608;"	d	file:
YY_LOCATION_PRINT	src/sdl/expr.cpp	613;"	d	file:
YY_MORE_ADJ	src/sdl/expr-lex.cpp	464;"	d	file:
YY_NEW_FILE	src/sdl/expr-lex.cpp	139;"	d	file:
YY_NULL	src/sdl/expr-lex.cpp	113;"	d	file:
YY_NUM_RULES	src/sdl/expr-lex.cpp	367;"	d	file:
YY_READ_BUF_SIZE	src/sdl/expr-lex.cpp	565;"	d	file:
YY_REDUCE_PRINT	src/sdl/expr.cpp	770;"	d	file:
YY_REDUCE_PRINT	src/sdl/expr.cpp	783;"	d	file:
YY_RESTORE_YY_MORE_OFFSET	src/sdl/expr-lex.cpp	465;"	d	file:
YY_RULE_SETUP	src/sdl/expr-lex.cpp	655;"	d	file:
YY_SC_TO_UI	src/sdl/expr-lex.cpp	120;"	d	file:
YY_SKIP_YYWRAP	src/sdl/expr-lex.cpp	337;"	d	file:
YY_STACK_PRINT	src/sdl/expr.cpp	732;"	d	file:
YY_STACK_PRINT	src/sdl/expr.cpp	782;"	d	file:
YY_START	src/sdl/expr-lex.cpp	132;"	d	file:
YY_START_STACK_INCR	src/sdl/expr-lex.cpp	622;"	d	file:
YY_STATE_BUF_SIZE	src/sdl/expr-lex.cpp	150;"	d	file:
YY_STATE_EOF	src/sdl/expr-lex.cpp	136;"	d	file:
YY_STRUCT_YY_BUFFER_STATE	src/sdl/expr-lex.cpp	189;"	d	file:
YY_SYMBOL_PRINT	src/sdl/expr.cpp	640;"	d	file:
YY_SYMBOL_PRINT	src/sdl/expr.cpp	781;"	d	file:
YY_TYPEDEF_YY_BUFFER_STATE	src/sdl/expr-lex.cpp	153;"	d	file:
YY_TYPEDEF_YY_SIZE_T	src/sdl/expr-lex.cpp	184;"	d	file:
YY_USER_ACTION	src/sdl/expr-lex.cpp	647;"	d	file:
YY_USE_CONST	src/sdl/expr-lex.cpp	101;"	d	file:
YY_USE_CONST	src/sdl/expr-lex.cpp	94;"	d	file:
Yres	src/filters/hq/asm/hq3x_16.asm	/^Yres         equ 20$/;"	d
Yres	src/filters/hq/asm/hq3x_32.asm	/^Yres         equ 20$/;"	d
Yres	src/filters/hq/asm/hq4x_16.asm	/^Yres         equ 20$/;"	d
Yres	src/filters/hq/asm/hq4x_32.asm	/^Yres         equ 20$/;"	d
Z	src/wx/viewers.cpp	/^	wxCheckBox *N, *Z, *C, *V, *I, *F, *T;$/;"	m	class:Viewers::DisassembleViewer	file:
Z	src/wx/viewers.cpp	/^	wxCheckBox *Z, *N, *H, *C;$/;"	m	class:Viewers::GBDisassembleViewer	file:
ZIP7_EXTRACTOR_H	fex/fex/Zip7_Extractor.h	5;"	d
ZIP_EXTRACTOR_H	fex/fex/Zip_Extractor.h	5;"	d
ZLIB_INFLATER_H	fex/fex/Zlib_Inflater.h	5;"	d
Z_BUFSIZE	src/common/memgzio.c	43;"	d	file:
Z_BUFSIZE	src/common/memgzio.c	45;"	d	file:
Z_FLAG	src/gb/gb.h	7;"	d
Z_FLAG	src/gba/Globals.cpp	/^bool Z_FLAG = 0;$/;"	v
Z_PRINTF_BUFSIZE	src/common/memgzio.c	49;"	d	file:
ZeroStructure	src/win32/WinHelper.h	183;"	d
ZeroTable	src/gb/GB.cpp	/^u8 ZeroTable[256] = {$/;"	v
Zip7_Extractor	fex/fex/Zip7_Extractor.cpp	/^Zip7_Extractor::Zip7_Extractor() :$/;"	f	class:Zip7_Extractor
Zip7_Extractor	fex/fex/Zip7_Extractor.h	/^class Zip7_Extractor : public File_Extractor {$/;"	c
Zip7_Extractor_Impl	fex/fex/Zip7_Extractor.cpp	/^struct Zip7_Extractor_Impl :$/;"	s	file:
Zip_Extractor	fex/fex/Zip_Extractor.cpp	/^Zip_Extractor::Zip_Extractor() :$/;"	f	class:Zip_Extractor
Zip_Extractor	fex/fex/Zip_Extractor.h	/^class Zip_Extractor : public File_Extractor {$/;"	c
Zlib_Inflater	fex/fex/Zlib_Inflater.cpp	/^Zlib_Inflater::Zlib_Inflater()$/;"	f	class:Zlib_Inflater
Zlib_Inflater	fex/fex/Zlib_Inflater.h	/^class Zlib_Inflater {$/;"	c
ZoomControl	src/win32/ZoomControl.cpp	/^ZoomControl::ZoomControl()$/;"	f	class:ZoomControl
ZoomControl	src/win32/ZoomControl.h	/^class ZoomControl : public CWnd$/;"	c
_	src/gba/GBALink.cpp	46;"	d	file:
_	src/gba/GBALink.cpp	48;"	d	file:
_	src/gtk/intl.h	26;"	d
_	src/sdl/getopt.c	87;"	d	file:
_	src/sdl/getopt.c	89;"	d	file:
_16BIT	src/filters/hq/c/hq_implementation.cpp	28;"	d	file:
_16BIT	src/filters/hq/c/hq_implementation.cpp	38;"	d	file:
_2xSaI	src/filters/2xSaI.cpp	/^void _2xSaI (u8 *srcPtr, u32 srcPitch, u8 *deltaPtr,$/;"	f
_2xSaI32	src/filters/2xSaI.cpp	/^void _2xSaI32 (u8 *srcPtr, u32 srcPitch, u8 * \/* deltaPtr *\/,$/;"	f
_2xSaILine	src/filters/2xSaImmx.asm	/^_2xSaILine:$/;"	l
_2xSaISuper2xSaILine	src/filters/2xSaImmx.asm	/^_2xSaISuper2xSaILine:$/;"	l
_2xSaISuperEagleLine	src/filters/2xSaImmx.asm	/^_2xSaISuperEagleLine:$/;"	l
_32BIT	src/filters/hq/c/hq_implementation.cpp	41;"	d	file:
_32BIT	src/filters/hq/c/hq_implementation.cpp	51;"	d	file:
_7ZIP_PPMD_SUPPPORT	fex/7z_C/7zDec.c	6;"	d	file:
_AFX_ALL_WARNINGS	src/win32/stdafx.h	19;"	d
_APS_NEXT_COMMAND_VALUE	src/win32/resource.h	892;"	d
_APS_NEXT_CONTROL_VALUE	src/win32/resource.h	893;"	d
_APS_NEXT_RESOURCE_VALUE	src/win32/resource.h	891;"	d
_APS_NEXT_SYMED_VALUE	src/win32/resource.h	894;"	d
_ATL_CSTRING_EXPLICIT_CONSTRUCTORS	src/win32/stdafx.h	16;"	d
_CLzmaProps	fex/7z_C/LzmaDec.h	/^typedef struct _CLzmaProps$/;"	s
_CSzState	fex/7z_C/7zIn.c	/^typedef struct _CSzState$/;"	s	file:
_GETOPT_H	src/sdl/getopt.h	24;"	d
_HQ3X	src/filters/hq/c/hq_implementation.cpp	29;"	d	file:
_HQ3X	src/filters/hq/c/hq_implementation.cpp	32;"	d	file:
_HQ3X	src/filters/hq/c/hq_implementation.cpp	42;"	d	file:
_HQ3X	src/filters/hq/c/hq_implementation.cpp	45;"	d	file:
_HQ4X	src/filters/hq/c/hq_implementation.cpp	34;"	d	file:
_HQ4X	src/filters/hq/c/hq_implementation.cpp	37;"	d	file:
_HQ4X	src/filters/hq/c/hq_implementation.cpp	47;"	d	file:
_HQ4X	src/filters/hq/c/hq_implementation.cpp	50;"	d	file:
_Init_2xSaIMMX	src/filters/2xSaImmx.asm	/^_Init_2xSaIMMX:$/;"	l
_MAGNIFICATION	src/filters/hq/c/hq_base.h	126;"	d
_MAGNIFICATION	src/filters/hq/c/hq_base.h	440;"	d
_MAGNIFICATION	src/filters/hq/c/hq_base.h	64;"	d
_MemFile	src/common/memgzio.c	/^typedef struct _MemFile {$/;"	s	file:
_NO_PROTO	src/sdl/getopt.c	30;"	d	file:
_OPENALFNTABLE	src/win32/LoadOAL.h	9;"	d
_Py_STRINGIZE	src/version.h	45;"	d
_Py_STRINGIZE1	src/version.h	46;"	d
_Py_STRINGIZE2	src/version.h	47;"	d
_STDLIB_H	src/sdl/expr.cpp	255;"	d	file:
_STDLIB_H	src/sdl/expr.cpp	283;"	d	file:
_S_CRC32_H	src/libretro/scrc32.cpp	2;"	d	file:
_W64	src/libretro/msvc/msvc-2003-xbox1/stdint.h	58;"	d
_W64	src/libretro/msvc/msvc-2003-xbox1/stdint.h	60;"	d
_WIN32_IE	src/win32/targetver.h	23;"	d
_WIN32_WINDOWS	src/win32/targetver.h	19;"	d
_WIN32_WINNT	src/win32/targetver.h	15;"	d
_WX_CHECKEDLISTCTRL_H_	src/wx/widgets/wx/checkedlistctrl.h	14;"	d
_WX_JOYKEYTEXT_H	src/wx/widgets/wx/joyedit.h	2;"	d
_WX_KEYTEXT_H	src/wx/widgets/wx/keyedit.h	2;"	d
__2xSaILine	src/filters/2xSaImmx.asm	/^__2xSaILine:$/;"	l
__2xSaISuper2xSaILine	src/filters/2xSaImmx.asm	/^__2xSaISuper2xSaILine:$/;"	l
__2xSaISuperEagleLine	src/filters/2xSaImmx.asm	/^__2xSaISuperEagleLine:$/;"	l
__7Z_ALLOC_H	fex/7z_C/7zAlloc.h	5;"	d
__7Z_BUF_H	fex/7z_C/7zBuf.h	5;"	d
__7Z_CRC_H	fex/7z_C/7zCrc.h	5;"	d
__7Z_H	fex/7z_C/7z.h	5;"	d
__7Z_TYPES_H	fex/7z_C/Types.h	5;"	d
__ARMDIS_H__	src/gba/armdis.h	6;"	d
__AUTOBUILD_H__	src/AutoBuild.h	21;"	d
__BCJ2_H	fex/7z_C/Bcj2.h	5;"	d
__BRA_H	fex/7z_C/Bra.h	5;"	d
__CMDACCEL_OB_INCLUDE	src/win32/CmdAccelOb.h	29;"	d
__CPU_ARCH_H	fex/7z_C/CpuArch.h	5;"	d
__INTERP_H	src/filters/interp.h	32;"	d
__LZMA2_DEC_H	fex/7z_C/Lzma2Dec.h	5;"	d
__LZMA_DEC_H	fex/7z_C/LzmaDec.h	5;"	d
__PPMD7_H	fex/7z_C/Ppmd7.h	10;"	d
__PPMD_H	fex/7z_C/Ppmd.h	6;"	d
__RARCH_STDINT_H	src/libretro/msvc/msvc-2003-xbox1/stdint.h	32;"	d
__STDC_CONSTANT_MACROS	src/common/ffmpeg.cpp	8;"	d	file:
__STDC_CONSTANT_MACROS	src/filters/hq/asm/hq3x32.cpp	1;"	d	file:
__STDC_CONSTANT_MACROS	src/filters/interp.h	34;"	d
__STDC_CONSTANT_MACROS	src/wx/cmdevents.cpp	3;"	d	file:
__STDC_LIMIT_MACROS	src/common/ffmpeg.cpp	7;"	d	file:
__STDC_LIMIT_MACROS	src/sdl/expr-lex.cpp	40;"	d	file:
__STDC_LIMIT_MACROS	src/wx/cmdevents.cpp	2;"	d	file:
__STDC__	src/sdl/SDL.cpp	69;"	d	file:
__VBA_CHEATEDIT_H__	src/gtk/cheatedit.h	20;"	d
__VBA_CHEATLIST_H__	src/gtk/cheatlist.h	20;"	d
__VBA_CONFIGFILE_H__	src/gtk/configfile.h	21;"	d
__VBA_DIRECTORIESCONFIG_H__	src/gtk/directoriesconfig.h	20;"	d
__VBA_DISPLAYCONFIG_H__	src/gtk/displayconfig.h	20;"	d
__VBA_FILTERS_H__	src/gtk/filters.h	21;"	d
__VBA_GAMEBOYADVANCECHEATLIST_H__	src/gtk/gameboyadvancecheatlist.h	20;"	d
__VBA_GAMEBOYADVANCECONFIG_H__	src/gtk/gameboyadvanceconfig.h	20;"	d
__VBA_GAMEBOYCHEATLIST_H__	src/gtk/gameboycheatlist.h	20;"	d
__VBA_GAMEBOYCONFIG_H__	src/gtk/gameboyconfig.h	20;"	d
__VBA_GENERALCONFIG_H__	src/gtk/generalconfig.h	20;"	d
__VBA_INTL_H__	src/gtk/intl.h	21;"	d
__VBA_JOYPADCONFIG_H__	src/gtk/joypadconfig.h	21;"	d
__VBA_SCREENAREA_CAIRO_H__	src/gtk/screenarea-cairo.h	21;"	d
__VBA_SCREENAREA_H__	src/gtk/screenarea.h	21;"	d
__VBA_SCREENAREA_OPENGL_H__	src/gtk/screenarea-opengl.h	21;"	d
__VBA_SOUNDCONFIG_H__	src/gtk/soundconfig.h	20;"	d
__VBA_SOUND_DRIVER_H__	src/common/SoundDriver.h	19;"	d
__VBA_SOUND_RETRO_H__	src/libretro/SoundRetro.h	19;"	d
__VBA_SOUND_SDL_H__	src/common/SoundSDL.h	19;"	d
__VBA_TOOLS_H__	src/gtk/tools.h	21;"	d
__VBA_TYPES_H__	src/common/Types.h	19;"	d
__VBA_WINDOW_H__	src/gtk/window.h	21;"	d
__getopt_initialized	src/sdl/getopt.c	/^int __getopt_initialized = 0;$/;"	v
__off64_t	src/common/Patch.cpp	/^typedef	__int64 __off64_t;$/;"	t	file:
__off64_t	src/common/Patch.cpp	/^typedef off64_t __off64_t;$/;"	t	file:
__off64_t	src/common/Patch.cpp	/^typedef off_t __off64_t; \/* off_t is 64 bits on BSD. *\/$/;"	t	file:
_delay	src/common/SoundSDL.cpp	/^const float SoundSDL::_delay = 0.1f;$/;"	m	class:SoundSDL	file:
_delay	src/common/SoundSDL.h	/^	static const float _delay;$/;"	m	class:SoundSDL
_getopt_initialize	src/sdl/getopt.c	/^_getopt_initialize (argc, argv, optstring)$/;"	f	file:
_getopt_internal	src/sdl/getopt.c	/^_getopt_internal (argc, argv, optstring, longopts, longind, long_only)$/;"	f
_initialized	src/common/SoundSDL.h	/^	bool _initialized;$/;"	m	class:SoundSDL
_mutex	src/common/SoundSDL.h	/^	SDL_mutex * _mutex;$/;"	m	class:SoundSDL
_rbuf	src/common/SoundSDL.h	/^	RingBuffer<u16> _rbuf;$/;"	m	class:SoundSDL
_semBufferEmpty	src/common/SoundSDL.h	/^	SDL_sem *_semBufferEmpty;$/;"	m	class:SoundSDL
_semBufferFull	src/common/SoundSDL.h	/^	SDL_sem *_semBufferFull;$/;"	m	class:SoundSDL
_stricmp	src/Util.cpp	31;"	d	file:
_stricmp	src/common/Patch.cpp	20;"	d	file:
_stricmp	src/gb/GB.cpp	19;"	d	file:
_stricmp	src/gba/GBA.cpp	30;"	d	file:
_stricmp	src/libretro/UtilRetro.cpp	19;"	d	file:
_stricmp	src/sdl/SDL.cpp	197;"	d	file:
a	src/common/Array.h	/^	T *a;$/;"	m	class:Array
aEmulatorType	src/gtk/gameboyconfig.cpp	/^static const VBA::Window::EEmulatorType aEmulatorType[] =$/;"	m	namespace:VBA	file:
abbrevdata	src/gba/elf.h	/^  u8 *abbrevdata;$/;"	m	struct:DebugInfo
abbrevs	src/gba/elf.h	/^  ELFAbbrev **abbrevs;$/;"	m	struct:CompileUnit
abs_32	src/filters/hq/c/hq_shared.h	57;"	d
accel_config_handler	src/wx/guiinit.cpp	/^} accel_config_handler;$/;"	v	typeref:class:AccelConfig_t	file:
accels	src/wx/guiinit.cpp	/^    wxAcceleratorEntry_v user_accels, accels;$/;"	m	class:AccelConfig_t	file:
accels	src/wx/opts.h	/^    wxAcceleratorEntry_v accels;$/;"	m	struct:opts_t
accels	src/wx/wxvbam.h	/^    wxAcceleratorEntry_v accels;$/;"	m	class:wxvbamApp
access	src/apu/Gb_Oscs.cpp	/^int Gb_Wave::access( unsigned addr ) const$/;"	f	class:Gb_Wave
accum	src/apu/Blip_Buffer.h	/^	blip_long accum;$/;"	m	class:Blip_Reader
activate	src/win32/DirectInput.cpp	/^void DirectInput::activate()$/;"	f	class:DirectInput
active	src/gba/GBALink.h	/^	bool active;$/;"	m	struct:__anon46
active	src/sdl/SDL.cpp	/^int active = 1;$/;"	v
active	src/win32/VBA.h	/^  bool active;$/;"	m	class:VBA
adapter	src/win32/Display.h	/^	  unsigned int adapter;$/;"	m	struct:IDisplay::VIDEO_MODE
addChange	src/win32/GBACheats.cpp	/^void GBACheatSearch::addChange(int index, u32 address, u32 oldValue, u32 newValue)$/;"	f	class:GBACheatSearch
addChange	src/win32/GBCheatsDlg.cpp	/^void GBCheatSearch::addChange(int index, int bank, u16 address, int offset, u32 oldValue, u32 newValue)$/;"	f	class:GBCheatSearch
addChanges	src/win32/GBACheats.cpp	/^void GBACheatSearch::addChanges(bool showMsgs)$/;"	f	class:GBACheatSearch
addChanges	src/win32/GBCheatsDlg.cpp	/^void GBCheatSearch::addChanges(bool showMsg)$/;"	f	class:GBCheatSearch
addCheat	src/win32/GBACheats.cpp	/^bool AddCheat::addCheat()$/;"	f	class:AddCheat
addCheat	src/win32/GBCheatsDlg.cpp	/^bool AddGBCheat::addCheat()$/;"	f	class:AddGBCheat
addHex	src/gb/gbDis.cpp	/^static char *addHex(char *p, u8 value)$/;"	f	file:
addHex	src/gba/armdis.cpp	/^char* addHex(char *dest, int siz, u32 val){$/;"	f
addHex16	src/gb/gbDis.cpp	/^static char *addHex16(char *p, u16 value)$/;"	f	file:
addLength	src/win32/GBCheatsDlg.h	/^  int addLength;$/;"	m	class:AddGBCode
addRecentFile	src/win32/VBA.cpp	/^void VBA::addRecentFile(CString file)$/;"	f	class:VBA
addStr	src/gb/gbDis.cpp	/^static char *addStr(char *p, const char *s)$/;"	f	file:
addStr	src/gba/armdis.cpp	/^char* addStr(char *dest, const char *src){$/;"	f
addTitle	src/win32/GBCheatsDlg.h	/^  CString addTitle;$/;"	m	class:AddGBCode
addVerify	src/win32/GBCheatsDlg.h	/^  bool (*addVerify)(const char *, const char*);$/;"	m	class:AddGBCode
add_b	src/wx/guiinit.cpp	/^    wxControl *update_b, *clear_b, *add_b;$/;"	m	class:CheatFind_t	file:
add_bcheck	src/wx/guiinit.cpp	2234;"	d	file:
add_icheck	src/wx/guiinit.cpp	2245;"	d	file:
add_icheck1	src/wx/guiinit.cpp	2257;"	d	file:
add_image_index	src/libretro/libretro.h	/^   retro_add_image_index_t add_image_index;$/;"	m	struct:retro_disk_control_callback
add_menu_accels	src/wx/guiinit.cpp	/^void MainFrame::add_menu_accels(wxTreeCtrl *tc, wxTreeItemId &parent, wxMenu *menu)$/;"	f	class:MainFrame
add_path	src/wx/wxvbam.cpp	33;"	d	file:
addbe	src/wx/guiinit.cpp	2438;"	d	file:
addber	src/wx/guiinit.cpp	2446;"	d	file:
addbie	src/wx/guiinit.cpp	2722;"	d	file:
addbier	src/wx/guiinit.cpp	2726;"	d	file:
addr	src/gba/elf.h	/^  u32 addr;$/;"	m	struct:ELFSectionHeader
addr	src/win32/GBACheats.h	/^  u32  addr;$/;"	m	struct:WinCheatsData
addr	src/win32/GBCheatsDlg.h	/^  u16  addr;$/;"	m	struct:WinGbCheatsData
addr	src/wx/gfxviewers.cpp	/^	wxControl *addr, *tileno;$/;"	m	class:Viewers::GBTileViewer	file:
addr	src/wx/gfxviewers.cpp	/^	wxControl *addr, *val;$/;"	m	class:Viewers::PaletteViewer	file:
addr	src/wx/gfxviewers.cpp	/^	wxControl *coords, *addr, *tile, *flip, *palette, *prio;$/;"	m	class:Viewers::GBMapViewer	file:
addr	src/wx/gfxviewers.cpp	/^	wxControl *coords, *addr, *tile, *flip, *palette;$/;"	m	class:Viewers::MapViewer	file:
addr	src/wx/gfxviewers.cpp	/^	wxControl *tileno, *addr;$/;"	m	class:Viewers::TileViewer	file:
addr	src/wx/viewers.cpp	/^	wxChoice *addr;$/;"	m	class:Viewers::IOViewer	file:
addralign	src/gba/elf.h	/^  u32 addralign;$/;"	m	struct:ELFSectionHeader
addrbe	src/wx/guiinit.cpp	2442;"	d	file:
addrber	src/wx/guiinit.cpp	2452;"	d	file:
address	src/Util.h	/^	void *address;$/;"	m	struct:__anon58
address	src/gb/gbCheats.h	/^  u16 address;$/;"	m	struct:gbCheat
address	src/gb/gbMemory.h	/^  int address;$/;"	m	struct:mapperMBC7
address	src/gba/Cheats.h	/^  u32 address;$/;"	m	struct:CheatsData
address	src/gba/GBA.h	/^  u8 *address;$/;"	m	struct:__anon47
address	src/gba/elf.cpp	/^  u32 address;$/;"	m	struct:ELFfde	file:
address	src/gba/elf.h	/^  u32 address;$/;"	m	struct:LineInfoItem
address	src/gba/elf.h	/^  u32 address;$/;"	m	struct:Symbol
address	src/sdl/debugger.cpp	/^  u32 address;$/;"	m	struct:breakpointInfo	file:
address	src/win32/Disassemble.h	/^  u32 address;$/;"	m	class:Disassemble
address	src/win32/GBACheats.h	/^  char address[9];$/;"	m	struct:WinCheatsData
address	src/win32/GBACheats.h	/^  u32 address;$/;"	m	class:AddCheat
address	src/win32/GBCheatsDlg.h	/^  LONG_PTR address;$/;"	m	class:AddGBCheat
address	src/win32/GBCheatsDlg.h	/^  char address[9];$/;"	m	struct:WinGbCheatsData
address	src/win32/GBDisassemble.h	/^  u16 address;$/;"	m	class:GBDisassemble
address	src/win32/IOViewerRegs.h	/^  u16 *address;$/;"	m	struct:IOData
address	src/win32/MemoryViewer.h	/^  u32 address;$/;"	m	class:MemoryViewer
address	src/win32/MemoryViewerAddressSize.h	/^  u32 address;$/;"	m	class:MemoryViewerAddressSize
address	src/wx/ioregs.h	/^  u16 *address;$/;"	m	struct:IOData
addressSize	src/win32/MemoryViewer.h	/^  int addressSize;$/;"	m	class:MemoryViewer
addrlab	src/wx/viewsupt.h	/^	wxControl *addrlab;$/;"	m	class:Viewers::MemView
addrlen	src/wx/viewers.cpp	/^	int addrlen;$/;"	m	class:Viewers::MemViewerBase	file:
addrlen	src/wx/viewsupt.h	/^	int addrlen;$/;"	m	class:Viewers::MemView
addrs	src/wx/guiinit.cpp	/^    wxArrayInt addrs;$/;"	m	class:CheatListCtrl	file:
addrs	src/wx/viewsupt.h	/^	wxArrayInt addrs;$/;"	m	class:Viewers::DisList
adjustDestRect	src/win32/VBA.cpp	/^void VBA::adjustDestRect()$/;"	f	class:VBA
adjust_impulse	src/apu/Blip_Buffer.cpp	/^void Blip_Synth_::adjust_impulse()$/;"	f	class:Blip_Synth_
adjust_save_ram	src/libretro/libretro.cpp	/^static void adjust_save_ram()$/;"	f	file:
after	src/gba/GBALink.cpp	/^bool oncewait = false, after = false;$/;"	v
agbPrintEnable	src/gba/agbprint.cpp	/^void agbPrintEnable(bool enable)$/;"	f
agbPrintEnabled	src/gba/agbprint.cpp	/^static bool agbPrintEnabled = false;$/;"	v	file:
agbPrintFlush	src/gba/agbprint.cpp	/^void agbPrintFlush()$/;"	f
agbPrintIsEnabled	src/gba/agbprint.cpp	/^bool agbPrintIsEnabled()$/;"	f
agbPrintProtect	src/gba/agbprint.cpp	/^static bool agbPrintProtect = false;$/;"	v	file:
agbPrintReset	src/gba/agbprint.cpp	/^void agbPrintReset()$/;"	f
agbPrintWrite	src/gba/agbprint.cpp	/^bool agbPrintWrite(u32 address, u16 value)$/;"	f
agb_bass	src/apu/Gb_Apu.h	/^		agb_bass       =   30$/;"	e	enum:Gb_Apu::__anon144
agb_mask	src/apu/Gb_Oscs.h	/^	int agb_mask;               \/\/ 0xFF if AGB features enabled, 0 otherwise$/;"	m	class:Gb_Wave
agb_treble	src/apu/Gb_Apu.h	/^		agb_treble     =    0,$/;"	e	enum:Gb_Apu::__anon144
agbprint	src/wx/opts.h	/^    bool agbprint; \/\/ AGBPrintEnable()$/;"	m	struct:opts_t
ah	src/gba/GBA-arm.cpp	312;"	d	file:
al	src/gba/GBA-arm.cpp	311;"	d	file:
alBufferData	src/win32/LoadOAL.h	/^	LPALBUFFERDATA				alBufferData;$/;"	m	struct:__anon61
alBufferData	src/wx/openal.h	/^	LPALBUFFERDATA alBufferData;$/;"	m	struct:OPENALFNTABLE
alDeleteBuffers	src/win32/LoadOAL.h	/^	LPALDELETEBUFFERS			alDeleteBuffers;$/;"	m	struct:__anon61
alDeleteBuffers	src/wx/openal.h	/^	LPALDELETEBUFFERS alDeleteBuffers;$/;"	m	struct:OPENALFNTABLE
alDeleteSources	src/win32/LoadOAL.h	/^	LPALDELETESOURCES			alDeleteSources;$/;"	m	struct:__anon61
alDeleteSources	src/wx/openal.h	/^	LPALDELETESOURCES alDeleteSources;$/;"	m	struct:OPENALFNTABLE
alDisable	src/win32/LoadOAL.h	/^	LPALDISABLE					alDisable;$/;"	m	struct:__anon61
alDistanceModel	src/win32/LoadOAL.h	/^	LPALDISTANCEMODEL			alDistanceModel;$/;"	m	struct:__anon61
alDopplerFactor	src/win32/LoadOAL.h	/^	LPALDOPPLERFACTOR			alDopplerFactor;$/;"	m	struct:__anon61
alDopplerVelocity	src/win32/LoadOAL.h	/^	LPALDOPPLERVELOCITY			alDopplerVelocity;$/;"	m	struct:__anon61
alEnable	src/win32/LoadOAL.h	/^	LPALENABLE					alEnable;$/;"	m	struct:__anon61
alGenBuffers	src/win32/LoadOAL.h	/^	LPALGENBUFFERS				alGenBuffers;$/;"	m	struct:__anon61
alGenBuffers	src/wx/openal.h	/^	LPALGENBUFFERS alGenBuffers;$/;"	m	struct:OPENALFNTABLE
alGenSources	src/win32/LoadOAL.h	/^	LPALGENSOURCES				alGenSources;$/;"	m	struct:__anon61
alGenSources	src/wx/openal.h	/^	LPALGENSOURCES alGenSources;$/;"	m	struct:OPENALFNTABLE
alGetBoolean	src/win32/LoadOAL.h	/^	LPALGETBOOLEAN				alGetBoolean;$/;"	m	struct:__anon61
alGetBooleanv	src/win32/LoadOAL.h	/^	LPALGETBOOLEANV				alGetBooleanv;$/;"	m	struct:__anon61
alGetBufferf	src/win32/LoadOAL.h	/^	LPALGETBUFFERF				alGetBufferf;$/;"	m	struct:__anon61
alGetBufferi	src/win32/LoadOAL.h	/^	LPALGETBUFFERI				alGetBufferi;$/;"	m	struct:__anon61
alGetDouble	src/win32/LoadOAL.h	/^	LPALGETDOUBLE				alGetDouble;$/;"	m	struct:__anon61
alGetDoublev	src/win32/LoadOAL.h	/^	LPALGETDOUBLEV				alGetDoublev;$/;"	m	struct:__anon61
alGetEnumValue	src/win32/LoadOAL.h	/^	LPALGETENUMVALUE			alGetEnumValue;$/;"	m	struct:__anon61
alGetError	src/win32/LoadOAL.h	/^	LPALGETERROR				alGetError;$/;"	m	struct:__anon61
alGetError	src/wx/openal.h	/^	LPALGETERROR alGetError;$/;"	m	struct:OPENALFNTABLE
alGetFloat	src/win32/LoadOAL.h	/^	LPALGETFLOAT				alGetFloat;$/;"	m	struct:__anon61
alGetFloatv	src/win32/LoadOAL.h	/^	LPALGETFLOATV				alGetFloatv;$/;"	m	struct:__anon61
alGetInteger	src/win32/LoadOAL.h	/^	LPALGETINTEGER				alGetInteger;$/;"	m	struct:__anon61
alGetIntegerv	src/win32/LoadOAL.h	/^	LPALGETINTEGERV				alGetIntegerv;$/;"	m	struct:__anon61
alGetListener3f	src/win32/LoadOAL.h	/^	LPALGETLISTENER3F			alGetListener3f;$/;"	m	struct:__anon61
alGetListenerf	src/win32/LoadOAL.h	/^	LPALGETLISTENERF			alGetListenerf;$/;"	m	struct:__anon61
alGetListenerfv	src/win32/LoadOAL.h	/^	LPALGETLISTENERFV			alGetListenerfv;$/;"	m	struct:__anon61
alGetListeneri	src/win32/LoadOAL.h	/^	LPALGETLISTENERI			alGetListeneri;$/;"	m	struct:__anon61
alGetProcAddress	src/win32/LoadOAL.h	/^	LPALGETPROCADDRESS			alGetProcAddress;$/;"	m	struct:__anon61
alGetSourcef	src/win32/LoadOAL.h	/^	LPALGETSOURCEF				alGetSourcef;$/;"	m	struct:__anon61
alGetSourcefv	src/win32/LoadOAL.h	/^	LPALGETSOURCEFV				alGetSourcefv;$/;"	m	struct:__anon61
alGetSourcei	src/win32/LoadOAL.h	/^	LPALGETSOURCEI				alGetSourcei;$/;"	m	struct:__anon61
alGetSourcei	src/wx/openal.h	/^	LPALGETSOURCEI alGetSourcei;$/;"	m	struct:OPENALFNTABLE
alGetString	src/win32/LoadOAL.h	/^	LPALGETSTRING				alGetString;$/;"	m	struct:__anon61
alIsBuffer	src/win32/LoadOAL.h	/^	LPALISBUFFER				alIsBuffer;$/;"	m	struct:__anon61
alIsEnabled	src/win32/LoadOAL.h	/^	LPALISENABLED				alIsEnabled;$/;"	m	struct:__anon61
alIsExtensionPresent	src/win32/LoadOAL.h	/^	LPALISEXTENSIONPRESENT		alIsExtensionPresent;$/;"	m	struct:__anon61
alIsExtensionPresent	src/wx/openal.h	/^	LPALISEXTENSIONPRESENT alIsExtensionPresent;$/;"	m	struct:OPENALFNTABLE
alIsSource	src/win32/LoadOAL.h	/^	LPALISSOURCE				alIsSource;$/;"	m	struct:__anon61
alListener3f	src/win32/LoadOAL.h	/^	LPALLISTENER3F				alListener3f;$/;"	m	struct:__anon61
alListenerf	src/win32/LoadOAL.h	/^	LPALLISTENERF				alListenerf;$/;"	m	struct:__anon61
alListenerfv	src/win32/LoadOAL.h	/^	LPALLISTENERFV				alListenerfv;$/;"	m	struct:__anon61
alListeneri	src/win32/LoadOAL.h	/^	LPALLISTENERI				alListeneri;$/;"	m	struct:__anon61
alSource3f	src/win32/LoadOAL.h	/^	LPALSOURCE3F				alSource3f;$/;"	m	struct:__anon61
alSourcePause	src/win32/LoadOAL.h	/^	LPALSOURCEPAUSE				alSourcePause;$/;"	m	struct:__anon61
alSourcePause	src/wx/openal.h	/^	LPALSOURCEPAUSE alSourcePause;$/;"	m	struct:OPENALFNTABLE
alSourcePlay	src/win32/LoadOAL.h	/^	LPALSOURCEPLAY				alSourcePlay;$/;"	m	struct:__anon61
alSourcePlay	src/wx/openal.h	/^	LPALSOURCEPLAY alSourcePlay;$/;"	m	struct:OPENALFNTABLE
alSourcePlayv	src/win32/LoadOAL.h	/^	LPALSOURCEPLAYV				alSourcePlayv;$/;"	m	struct:__anon61
alSourceQueueBuffers	src/win32/LoadOAL.h	/^	LPALSOURCEQUEUEBUFFERS		alSourceQueueBuffers;$/;"	m	struct:__anon61
alSourceQueueBuffers	src/wx/openal.h	/^	LPALSOURCEQUEUEBUFFERS alSourceQueueBuffers;$/;"	m	struct:OPENALFNTABLE
alSourceStop	src/win32/LoadOAL.h	/^	LPALSOURCESTOP				alSourceStop;$/;"	m	struct:__anon61
alSourceStop	src/wx/openal.h	/^	LPALSOURCESTOP alSourceStop;$/;"	m	struct:OPENALFNTABLE
alSourceStopv	src/win32/LoadOAL.h	/^	LPALSOURCESTOPV				alSourceStopv;$/;"	m	struct:__anon61
alSourceUnqueueBuffers	src/win32/LoadOAL.h	/^	LPALSOURCEUNQUEUEBUFFERS	alSourceUnqueueBuffers;$/;"	m	struct:__anon61
alSourceUnqueueBuffers	src/wx/openal.h	/^	LPALSOURCEUNQUEUEBUFFERS alSourceUnqueueBuffers;$/;"	m	struct:OPENALFNTABLE
alSourcef	src/win32/LoadOAL.h	/^	LPALSOURCEF					alSourcef;$/;"	m	struct:__anon61
alSourcefv	src/win32/LoadOAL.h	/^	LPALSOURCEFV				alSourcefv;$/;"	m	struct:__anon61
alSourcei	src/win32/LoadOAL.h	/^	LPALSOURCEI					alSourcei;$/;"	m	struct:__anon61
alSourcei	src/wx/openal.h	/^	LPALSOURCEI alSourcei;$/;"	m	struct:OPENALFNTABLE
alcCloseDevice	src/win32/LoadOAL.h	/^	LPALCCLOSEDEVICE			alcCloseDevice;$/;"	m	struct:__anon61
alcCloseDevice	src/wx/openal.h	/^	LPALCCLOSEDEVICE alcCloseDevice;$/;"	m	struct:OPENALFNTABLE
alcCreateContext	src/win32/LoadOAL.h	/^	LPALCCREATECONTEXT			alcCreateContext;$/;"	m	struct:__anon61
alcCreateContext	src/wx/openal.h	/^	LPALCCREATECONTEXT alcCreateContext;$/;"	m	struct:OPENALFNTABLE
alcDestroyContext	src/win32/LoadOAL.h	/^	LPALCDESTROYCONTEXT			alcDestroyContext;$/;"	m	struct:__anon61
alcDestroyContext	src/wx/openal.h	/^	LPALCDESTROYCONTEXT alcDestroyContext;$/;"	m	struct:OPENALFNTABLE
alcGetContextsDevice	src/win32/LoadOAL.h	/^	LPALCGETCONTEXTSDEVICE		alcGetContextsDevice;$/;"	m	struct:__anon61
alcGetCurrentContext	src/win32/LoadOAL.h	/^	LPALCGETCURRENTCONTEXT		alcGetCurrentContext;$/;"	m	struct:__anon61
alcGetEnumValue	src/win32/LoadOAL.h	/^	LPALCGETENUMVALUE			alcGetEnumValue;$/;"	m	struct:__anon61
alcGetError	src/win32/LoadOAL.h	/^	LPALCGETERROR				alcGetError;$/;"	m	struct:__anon61
alcGetIntegerv	src/win32/LoadOAL.h	/^	LPALCGETINTEGERV			alcGetIntegerv;$/;"	m	struct:__anon61
alcGetProcAddress	src/win32/LoadOAL.h	/^	LPALCGETPROCADDRESS			alcGetProcAddress;$/;"	m	struct:__anon61
alcGetString	src/win32/LoadOAL.h	/^	LPALCGETSTRING				alcGetString;$/;"	m	struct:__anon61
alcGetString	src/wx/openal.h	/^	LPALCGETSTRING alcGetString;$/;"	m	struct:OPENALFNTABLE
alcIsExtensionPresent	src/win32/LoadOAL.h	/^	LPALCISEXTENSIONPRESENT		alcIsExtensionPresent;$/;"	m	struct:__anon61
alcIsExtensionPresent	src/wx/openal.h	/^	LPALCISEXTENSIONPRESENT alcIsExtensionPresent;$/;"	m	struct:OPENALFNTABLE
alcMakeContextCurrent	src/win32/LoadOAL.h	/^	LPALCMAKECONTEXTCURRENT		alcMakeContextCurrent;$/;"	m	struct:__anon61
alcMakeContextCurrent	src/wx/openal.h	/^	LPALCMAKECONTEXTCURRENT alcMakeContextCurrent;$/;"	m	struct:OPENALFNTABLE
alcOpenDevice	src/win32/LoadOAL.h	/^	LPALCOPENDEVICE				alcOpenDevice;$/;"	m	struct:__anon61
alcOpenDevice	src/wx/openal.h	/^	LPALCOPENDEVICE alcOpenDevice;$/;"	m	struct:OPENALFNTABLE
alcProcessContext	src/win32/LoadOAL.h	/^	LPALCPROCESSCONTEXT			alcProcessContext;$/;"	m	struct:__anon61
alcSuspendContext	src/win32/LoadOAL.h	/^	LPALCSUSPENDCONTEXT			alcSuspendContext;$/;"	m	struct:__anon61
align	src/gba/elf.h	/^  u32 align;$/;"	m	struct:ELFProgramHeader
alloca	src/sdl/expr.cpp	248;"	d	file:
alrmhand	src/gba/GBALink.cpp	/^static void alrmhand(int sig)$/;"	f	file:
api	src/win32/FullscreenSettings.h	/^	DISPLAY_TYPE api;$/;"	m	class:FullscreenSettings
appendc	src/wx/viewsupt.cpp	595;"	d	file:
appendval	src/wx/cmdevents.cpp	1935;"	d	file:
applyPatch	src/common/Patch.cpp	/^bool applyPatch(const char *patchname, u8 **rom, int *size)$/;"	f
applyTimer	src/gba/GBA.cpp	/^void applyTimer ()$/;"	f
apply_config	src/apu/Effects_Buffer.cpp	/^void Effects_Buffer::apply_config()$/;"	f	class:Effects_Buffer
apply_config	src/apu/Effects_Buffer.cpp	/^void Simple_Effects_Buffer::apply_config()$/;"	f	class:Simple_Effects_Buffer
apply_control	src/gba/Sound.cpp	/^static void apply_control()$/;"	f	file:
apply_control	src/gba/Sound.cpp	/^void Gba_Pcm::apply_control( int idx )$/;"	f	class:Gba_Pcm
apply_effects	src/gb/gbSound.cpp	/^static void apply_effects()$/;"	f	file:
apply_filtering	src/gba/Sound.cpp	/^static void apply_filtering()$/;"	f	file:
apply_muting	src/gba/Sound.cpp	/^static void apply_muting()$/;"	f	file:
apply_patches	src/wx/opts.h	/^    bool apply_patches;$/;"	m	struct:opts_t
apply_stereo	src/apu/Gb_Apu.cpp	/^void Gb_Apu::apply_stereo()$/;"	f	class:Gb_Apu
apply_volume	src/apu/Gb_Apu.cpp	/^void Gb_Apu::apply_volume()$/;"	f	class:Gb_Apu
apply_volume	src/gb/gbSound.cpp	/^static void apply_volume()$/;"	f	file:
apply_volume	src/gba/Sound.cpp	/^static void apply_volume( bool apu_only = false )$/;"	f	file:
apu	src/gb/gbSound.cpp	/^	gb_apu_state_t apu;$/;"	m	struct:__anon150	file:
apu	src/gba/Sound.cpp	/^	gb_apu_state_t apu;$/;"	m	struct:__anon43	file:
arc	fex/fex/File_Extractor.h	/^	File_Reader& arc() const                        { return *reader_; }$/;"	f	struct:fex_t
arc_path	fex/fex/File_Extractor.h	/^	const char* arc_path() const                    { return path_.begin(); }$/;"	f	struct:fex_t
arg0	src/sdl/SDL.cpp	/^char *arg0;$/;"	v
args	src/gba/elf.h	/^  Object *args;$/;"	m	struct:FunctionType
arm009	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm009(u32 opcode) { MUL_INSN(OP_MUL, SETCOND_NONE, 1); }$/;"	f	file:
arm00B	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm00B(u32 opcode) { STR_POSTDEC(OFFSET_REG, OP_STRH, 16); }$/;"	f	file:
arm019	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm019(u32 opcode) { MUL_INSN(OP_MUL, SETCOND_MUL, 1); }$/;"	f	file:
arm01B	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm01B(u32 opcode) { LDR_POSTDEC(OFFSET_REG, OP_LDRH, 16); }$/;"	f	file:
arm01D	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm01D(u32 opcode) { LDR_POSTDEC(OFFSET_REG, OP_LDRSB, 16); }$/;"	f	file:
arm01F	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm01F(u32 opcode) { LDR_POSTDEC(OFFSET_REG, OP_LDRSH, 16); }$/;"	f	file:
arm029	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm029(u32 opcode) { MUL_INSN(OP_MLA, SETCOND_NONE, 2); }$/;"	f	file:
arm039	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm039(u32 opcode) { MUL_INSN(OP_MLA, SETCOND_MUL, 2); }$/;"	f	file:
arm04B	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm04B(u32 opcode) { STR_POSTDEC(OFFSET_IMM8, OP_STRH, 16); }$/;"	f	file:
arm05B	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm05B(u32 opcode) { LDR_POSTDEC(OFFSET_IMM8, OP_LDRH, 16); }$/;"	f	file:
arm05D	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm05D(u32 opcode) { LDR_POSTDEC(OFFSET_IMM8, OP_LDRSB, 16); }$/;"	f	file:
arm05F	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm05F(u32 opcode) { LDR_POSTDEC(OFFSET_IMM8, OP_LDRSH, 16); }$/;"	f	file:
arm089	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm089(u32 opcode) { MUL_INSN(OP_UMULL, SETCOND_NONE, 2); }$/;"	f	file:
arm08B	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm08B(u32 opcode) { STR_POSTINC(OFFSET_REG, OP_STRH, 16); }$/;"	f	file:
arm099	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm099(u32 opcode) { MUL_INSN(OP_UMULL, SETCOND_MULL, 2); }$/;"	f	file:
arm09B	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm09B(u32 opcode) { LDR_POSTINC(OFFSET_REG, OP_LDRH, 16); }$/;"	f	file:
arm09D	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm09D(u32 opcode) { LDR_POSTINC(OFFSET_REG, OP_LDRSB, 16); }$/;"	f	file:
arm09F	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm09F(u32 opcode) { LDR_POSTINC(OFFSET_REG, OP_LDRSH, 16); }$/;"	f	file:
arm0A9	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm0A9(u32 opcode) { MUL_INSN(OP_UMLAL, SETCOND_NONE, 3); }$/;"	f	file:
arm0B9	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm0B9(u32 opcode) { MUL_INSN(OP_UMLAL, SETCOND_MULL, 3); }$/;"	f	file:
arm0C9	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm0C9(u32 opcode) { MUL_INSN(OP_SMULL, SETCOND_NONE, 2); }$/;"	f	file:
arm0CB	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm0CB(u32 opcode) { STR_POSTINC(OFFSET_IMM8, OP_STRH, 16); }$/;"	f	file:
arm0D9	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm0D9(u32 opcode) { MUL_INSN(OP_SMULL, SETCOND_MULL, 2); }$/;"	f	file:
arm0DB	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm0DB(u32 opcode) { LDR_POSTINC(OFFSET_IMM8, OP_LDRH, 16); }$/;"	f	file:
arm0DD	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm0DD(u32 opcode) { LDR_POSTINC(OFFSET_IMM8, OP_LDRSB, 16); }$/;"	f	file:
arm0DF	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm0DF(u32 opcode) { LDR_POSTINC(OFFSET_IMM8, OP_LDRSH, 16); }$/;"	f	file:
arm0E9	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm0E9(u32 opcode) { MUL_INSN(OP_SMLAL, SETCOND_NONE, 3); }$/;"	f	file:
arm0F9	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm0F9(u32 opcode) { MUL_INSN(OP_SMLAL, SETCOND_MULL, 3); }$/;"	f	file:
arm100	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm100(u32 opcode)$/;"	f	file:
arm109	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm109(u32 opcode)$/;"	f	file:
arm10B	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm10B(u32 opcode) { STR_PREDEC(OFFSET_REG, OP_STRH, 16); }$/;"	f	file:
arm11B	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm11B(u32 opcode) { LDR_PREDEC(OFFSET_REG, OP_LDRH, 16); }$/;"	f	file:
arm11D	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm11D(u32 opcode) { LDR_PREDEC(OFFSET_REG, OP_LDRSB, 16); }$/;"	f	file:
arm11F	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm11F(u32 opcode) { LDR_PREDEC(OFFSET_REG, OP_LDRSH, 16); }$/;"	f	file:
arm120	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm120(u32 opcode)$/;"	f	file:
arm121	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm121(u32 opcode)$/;"	f	file:
arm12B	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm12B(u32 opcode) { STR_PREDEC_WB(OFFSET_REG, OP_STRH, 16); }$/;"	f	file:
arm13B	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm13B(u32 opcode) { LDR_PREDEC_WB(OFFSET_REG, OP_LDRH, 16); }$/;"	f	file:
arm13D	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm13D(u32 opcode) { LDR_PREDEC_WB(OFFSET_REG, OP_LDRSB, 16); }$/;"	f	file:
arm13F	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm13F(u32 opcode) { LDR_PREDEC_WB(OFFSET_REG, OP_LDRSH, 16); }$/;"	f	file:
arm140	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm140(u32 opcode)$/;"	f	file:
arm149	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm149(u32 opcode)$/;"	f	file:
arm14B	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm14B(u32 opcode) { STR_PREDEC(OFFSET_IMM8, OP_STRH, 16); }$/;"	f	file:
arm15B	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm15B(u32 opcode) { LDR_PREDEC(OFFSET_IMM8, OP_LDRH, 16); }$/;"	f	file:
arm15D	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm15D(u32 opcode) { LDR_PREDEC(OFFSET_IMM8, OP_LDRSB, 16); }$/;"	f	file:
arm15F	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm15F(u32 opcode) { LDR_PREDEC(OFFSET_IMM8, OP_LDRSH, 16); }$/;"	f	file:
arm160	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm160(u32 opcode)$/;"	f	file:
arm16B	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm16B(u32 opcode) { STR_PREDEC_WB(OFFSET_IMM8, OP_STRH, 16); }$/;"	f	file:
arm17B	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm17B(u32 opcode) { LDR_PREDEC_WB(OFFSET_IMM8, OP_LDRH, 16); }$/;"	f	file:
arm17D	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm17D(u32 opcode) { LDR_PREDEC_WB(OFFSET_IMM8, OP_LDRSB, 16); }$/;"	f	file:
arm17F	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm17F(u32 opcode) { LDR_PREDEC_WB(OFFSET_IMM8, OP_LDRSH, 16); }$/;"	f	file:
arm18B	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm18B(u32 opcode) { STR_PREINC(OFFSET_REG, OP_STRH, 16); }$/;"	f	file:
arm19B	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm19B(u32 opcode) { LDR_PREINC(OFFSET_REG, OP_LDRH, 16); }$/;"	f	file:
arm19D	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm19D(u32 opcode) { LDR_PREINC(OFFSET_REG, OP_LDRSB, 16); }$/;"	f	file:
arm19F	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm19F(u32 opcode) { LDR_PREINC(OFFSET_REG, OP_LDRSH, 16); }$/;"	f	file:
arm1AB	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm1AB(u32 opcode) { STR_PREINC_WB(OFFSET_REG, OP_STRH, 16); }$/;"	f	file:
arm1BB	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm1BB(u32 opcode) { LDR_PREINC_WB(OFFSET_REG, OP_LDRH, 16); }$/;"	f	file:
arm1BD	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm1BD(u32 opcode) { LDR_PREINC_WB(OFFSET_REG, OP_LDRSB, 16); }$/;"	f	file:
arm1BF	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm1BF(u32 opcode) { LDR_PREINC_WB(OFFSET_REG, OP_LDRSH, 16); }$/;"	f	file:
arm1CB	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm1CB(u32 opcode) { STR_PREINC(OFFSET_IMM8, OP_STRH, 16); }$/;"	f	file:
arm1DB	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm1DB(u32 opcode) { LDR_PREINC(OFFSET_IMM8, OP_LDRH, 16); }$/;"	f	file:
arm1DD	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm1DD(u32 opcode) { LDR_PREINC(OFFSET_IMM8, OP_LDRSB, 16); }$/;"	f	file:
arm1DF	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm1DF(u32 opcode) { LDR_PREINC(OFFSET_IMM8, OP_LDRSH, 16); }$/;"	f	file:
arm1EB	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm1EB(u32 opcode) { STR_PREINC_WB(OFFSET_IMM8, OP_STRH, 16); }$/;"	f	file:
arm1FB	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm1FB(u32 opcode) { LDR_PREINC_WB(OFFSET_IMM8, OP_LDRH, 16); }$/;"	f	file:
arm1FD	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm1FD(u32 opcode) { LDR_PREINC_WB(OFFSET_IMM8, OP_LDRSB, 16); }$/;"	f	file:
arm1FF	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm1FF(u32 opcode) { LDR_PREINC_WB(OFFSET_IMM8, OP_LDRSH, 16); }$/;"	f	file:
arm320	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm320(u32 opcode)$/;"	f	file:
arm360	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm360(u32 opcode)$/;"	f	file:
arm400	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm400(u32 opcode) { STR_POSTDEC(OFFSET_IMM, OP_STR, 32); }$/;"	f	file:
arm410	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm410(u32 opcode) { LDR_POSTDEC(OFFSET_IMM, OP_LDR, 32); }$/;"	f	file:
arm440	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm440(u32 opcode) { STR_POSTDEC(OFFSET_IMM, OP_STRB, 16); }$/;"	f	file:
arm450	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm450(u32 opcode) { LDR_POSTDEC(OFFSET_IMM, OP_LDRB, 16); }$/;"	f	file:
arm480	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm480(u32 opcode) { STR_POSTINC(OFFSET_IMM, OP_STR, 32); }$/;"	f	file:
arm490	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm490(u32 opcode) { LDR_POSTINC(OFFSET_IMM, OP_LDR, 32); }$/;"	f	file:
arm4C0	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm4C0(u32 opcode) { STR_POSTINC(OFFSET_IMM, OP_STRB, 16); }$/;"	f	file:
arm4D0	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm4D0(u32 opcode) { LDR_POSTINC(OFFSET_IMM, OP_LDRB, 16); }$/;"	f	file:
arm500	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm500(u32 opcode) { STR_PREDEC(OFFSET_IMM, OP_STR, 32); }$/;"	f	file:
arm510	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm510(u32 opcode) { LDR_PREDEC(OFFSET_IMM, OP_LDR, 32); }$/;"	f	file:
arm520	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm520(u32 opcode) { STR_PREDEC_WB(OFFSET_IMM, OP_STR, 32); }$/;"	f	file:
arm530	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm530(u32 opcode) { LDR_PREDEC_WB(OFFSET_IMM, OP_LDR, 32); }$/;"	f	file:
arm540	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm540(u32 opcode) { STR_PREDEC(OFFSET_IMM, OP_STRB, 16); }$/;"	f	file:
arm550	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm550(u32 opcode) { LDR_PREDEC(OFFSET_IMM, OP_LDRB, 16); }$/;"	f	file:
arm560	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm560(u32 opcode) { STR_PREDEC_WB(OFFSET_IMM, OP_STRB, 16); }$/;"	f	file:
arm570	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm570(u32 opcode) { LDR_PREDEC_WB(OFFSET_IMM, OP_LDRB, 16); }$/;"	f	file:
arm580	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm580(u32 opcode) { STR_PREINC(OFFSET_IMM, OP_STR, 32); }$/;"	f	file:
arm590	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm590(u32 opcode) { LDR_PREINC(OFFSET_IMM, OP_LDR, 32); }$/;"	f	file:
arm5A0	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm5A0(u32 opcode) { STR_PREINC_WB(OFFSET_IMM, OP_STR, 32); }$/;"	f	file:
arm5B0	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm5B0(u32 opcode) { LDR_PREINC_WB(OFFSET_IMM, OP_LDR, 32); }$/;"	f	file:
arm5C0	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm5C0(u32 opcode) { STR_PREINC(OFFSET_IMM, OP_STRB, 16); }$/;"	f	file:
arm5D0	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm5D0(u32 opcode) { LDR_PREINC(OFFSET_IMM, OP_LDRB, 16); }$/;"	f	file:
arm5E0	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm5E0(u32 opcode) { STR_PREINC_WB(OFFSET_IMM, OP_STRB, 16); }$/;"	f	file:
arm5F0	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm5F0(u32 opcode) { LDR_PREINC_WB(OFFSET_IMM, OP_LDRB, 16); }$/;"	f	file:
arm600	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm600(u32 opcode) { STR_POSTDEC(OFFSET_LSL, OP_STR, 32); }$/;"	f	file:
arm602	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm602(u32 opcode) { STR_POSTDEC(OFFSET_LSR, OP_STR, 32); }$/;"	f	file:
arm604	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm604(u32 opcode) { STR_POSTDEC(OFFSET_ASR, OP_STR, 32); }$/;"	f	file:
arm606	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm606(u32 opcode) { STR_POSTDEC(OFFSET_ROR, OP_STR, 32); }$/;"	f	file:
arm610	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm610(u32 opcode) { LDR_POSTDEC(OFFSET_LSL, OP_LDR, 32); }$/;"	f	file:
arm612	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm612(u32 opcode) { LDR_POSTDEC(OFFSET_LSR, OP_LDR, 32); }$/;"	f	file:
arm614	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm614(u32 opcode) { LDR_POSTDEC(OFFSET_ASR, OP_LDR, 32); }$/;"	f	file:
arm616	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm616(u32 opcode) { LDR_POSTDEC(OFFSET_ROR, OP_LDR, 32); }$/;"	f	file:
arm640	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm640(u32 opcode) { STR_POSTDEC(OFFSET_LSL, OP_STRB, 16); }$/;"	f	file:
arm642	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm642(u32 opcode) { STR_POSTDEC(OFFSET_LSR, OP_STRB, 16); }$/;"	f	file:
arm644	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm644(u32 opcode) { STR_POSTDEC(OFFSET_ASR, OP_STRB, 16); }$/;"	f	file:
arm646	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm646(u32 opcode) { STR_POSTDEC(OFFSET_ROR, OP_STRB, 16); }$/;"	f	file:
arm650	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm650(u32 opcode) { LDR_POSTDEC(OFFSET_LSL, OP_LDRB, 16); }$/;"	f	file:
arm652	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm652(u32 opcode) { LDR_POSTDEC(OFFSET_LSR, OP_LDRB, 16); }$/;"	f	file:
arm654	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm654(u32 opcode) { LDR_POSTDEC(OFFSET_ASR, OP_LDRB, 16); }$/;"	f	file:
arm656	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm656(u32 opcode) { LDR_POSTDEC(OFFSET_ROR, OP_LDRB, 16); }$/;"	f	file:
arm680	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm680(u32 opcode) { STR_POSTINC(OFFSET_LSL, OP_STR, 32); }$/;"	f	file:
arm682	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm682(u32 opcode) { STR_POSTINC(OFFSET_LSR, OP_STR, 32); }$/;"	f	file:
arm684	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm684(u32 opcode) { STR_POSTINC(OFFSET_ASR, OP_STR, 32); }$/;"	f	file:
arm686	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm686(u32 opcode) { STR_POSTINC(OFFSET_ROR, OP_STR, 32); }$/;"	f	file:
arm690	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm690(u32 opcode) { LDR_POSTINC(OFFSET_LSL, OP_LDR, 32); }$/;"	f	file:
arm692	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm692(u32 opcode) { LDR_POSTINC(OFFSET_LSR, OP_LDR, 32); }$/;"	f	file:
arm694	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm694(u32 opcode) { LDR_POSTINC(OFFSET_ASR, OP_LDR, 32); }$/;"	f	file:
arm696	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm696(u32 opcode) { LDR_POSTINC(OFFSET_ROR, OP_LDR, 32); }$/;"	f	file:
arm6C0	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm6C0(u32 opcode) { STR_POSTINC(OFFSET_LSL, OP_STRB, 16); }$/;"	f	file:
arm6C2	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm6C2(u32 opcode) { STR_POSTINC(OFFSET_LSR, OP_STRB, 16); }$/;"	f	file:
arm6C4	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm6C4(u32 opcode) { STR_POSTINC(OFFSET_ASR, OP_STRB, 16); }$/;"	f	file:
arm6C6	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm6C6(u32 opcode) { STR_POSTINC(OFFSET_ROR, OP_STRB, 16); }$/;"	f	file:
arm6D0	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm6D0(u32 opcode) { LDR_POSTINC(OFFSET_LSL, OP_LDRB, 16); }$/;"	f	file:
arm6D2	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm6D2(u32 opcode) { LDR_POSTINC(OFFSET_LSR, OP_LDRB, 16); }$/;"	f	file:
arm6D4	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm6D4(u32 opcode) { LDR_POSTINC(OFFSET_ASR, OP_LDRB, 16); }$/;"	f	file:
arm6D6	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm6D6(u32 opcode) { LDR_POSTINC(OFFSET_ROR, OP_LDRB, 16); }$/;"	f	file:
arm700	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm700(u32 opcode) { STR_PREDEC(OFFSET_LSL, OP_STR, 32); }$/;"	f	file:
arm702	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm702(u32 opcode) { STR_PREDEC(OFFSET_LSR, OP_STR, 32); }$/;"	f	file:
arm704	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm704(u32 opcode) { STR_PREDEC(OFFSET_ASR, OP_STR, 32); }$/;"	f	file:
arm706	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm706(u32 opcode) { STR_PREDEC(OFFSET_ROR, OP_STR, 32); }$/;"	f	file:
arm710	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm710(u32 opcode) { LDR_PREDEC(OFFSET_LSL, OP_LDR, 32); }$/;"	f	file:
arm712	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm712(u32 opcode) { LDR_PREDEC(OFFSET_LSR, OP_LDR, 32); }$/;"	f	file:
arm714	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm714(u32 opcode) { LDR_PREDEC(OFFSET_ASR, OP_LDR, 32); }$/;"	f	file:
arm716	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm716(u32 opcode) { LDR_PREDEC(OFFSET_ROR, OP_LDR, 32); }$/;"	f	file:
arm720	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm720(u32 opcode) { STR_PREDEC_WB(OFFSET_LSL, OP_STR, 32); }$/;"	f	file:
arm722	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm722(u32 opcode) { STR_PREDEC_WB(OFFSET_LSR, OP_STR, 32); }$/;"	f	file:
arm724	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm724(u32 opcode) { STR_PREDEC_WB(OFFSET_ASR, OP_STR, 32); }$/;"	f	file:
arm726	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm726(u32 opcode) { STR_PREDEC_WB(OFFSET_ROR, OP_STR, 32); }$/;"	f	file:
arm730	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm730(u32 opcode) { LDR_PREDEC_WB(OFFSET_LSL, OP_LDR, 32); }$/;"	f	file:
arm732	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm732(u32 opcode) { LDR_PREDEC_WB(OFFSET_LSR, OP_LDR, 32); }$/;"	f	file:
arm734	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm734(u32 opcode) { LDR_PREDEC_WB(OFFSET_ASR, OP_LDR, 32); }$/;"	f	file:
arm736	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm736(u32 opcode) { LDR_PREDEC_WB(OFFSET_ROR, OP_LDR, 32); }$/;"	f	file:
arm740	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm740(u32 opcode) { STR_PREDEC(OFFSET_LSL, OP_STRB, 16); }$/;"	f	file:
arm742	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm742(u32 opcode) { STR_PREDEC(OFFSET_LSR, OP_STRB, 16); }$/;"	f	file:
arm744	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm744(u32 opcode) { STR_PREDEC(OFFSET_ASR, OP_STRB, 16); }$/;"	f	file:
arm746	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm746(u32 opcode) { STR_PREDEC(OFFSET_ROR, OP_STRB, 16); }$/;"	f	file:
arm750	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm750(u32 opcode) { LDR_PREDEC(OFFSET_LSL, OP_LDRB, 16); }$/;"	f	file:
arm752	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm752(u32 opcode) { LDR_PREDEC(OFFSET_LSR, OP_LDRB, 16); }$/;"	f	file:
arm754	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm754(u32 opcode) { LDR_PREDEC(OFFSET_ASR, OP_LDRB, 16); }$/;"	f	file:
arm756	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm756(u32 opcode) { LDR_PREDEC(OFFSET_ROR, OP_LDRB, 16); }$/;"	f	file:
arm760	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm760(u32 opcode) { STR_PREDEC_WB(OFFSET_LSL, OP_STRB, 16); }$/;"	f	file:
arm762	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm762(u32 opcode) { STR_PREDEC_WB(OFFSET_LSR, OP_STRB, 16); }$/;"	f	file:
arm764	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm764(u32 opcode) { STR_PREDEC_WB(OFFSET_ASR, OP_STRB, 16); }$/;"	f	file:
arm766	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm766(u32 opcode) { STR_PREDEC_WB(OFFSET_ROR, OP_STRB, 16); }$/;"	f	file:
arm770	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm770(u32 opcode) { LDR_PREDEC_WB(OFFSET_LSL, OP_LDRB, 16); }$/;"	f	file:
arm772	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm772(u32 opcode) { LDR_PREDEC_WB(OFFSET_LSR, OP_LDRB, 16); }$/;"	f	file:
arm774	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm774(u32 opcode) { LDR_PREDEC_WB(OFFSET_ASR, OP_LDRB, 16); }$/;"	f	file:
arm776	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm776(u32 opcode) { LDR_PREDEC_WB(OFFSET_ROR, OP_LDRB, 16); }$/;"	f	file:
arm780	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm780(u32 opcode) { STR_PREINC(OFFSET_LSL, OP_STR, 32); }$/;"	f	file:
arm782	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm782(u32 opcode) { STR_PREINC(OFFSET_LSR, OP_STR, 32); }$/;"	f	file:
arm784	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm784(u32 opcode) { STR_PREINC(OFFSET_ASR, OP_STR, 32); }$/;"	f	file:
arm786	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm786(u32 opcode) { STR_PREINC(OFFSET_ROR, OP_STR, 32); }$/;"	f	file:
arm790	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm790(u32 opcode) { LDR_PREINC(OFFSET_LSL, OP_LDR, 32); }$/;"	f	file:
arm792	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm792(u32 opcode) { LDR_PREINC(OFFSET_LSR, OP_LDR, 32); }$/;"	f	file:
arm794	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm794(u32 opcode) { LDR_PREINC(OFFSET_ASR, OP_LDR, 32); }$/;"	f	file:
arm796	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm796(u32 opcode) { LDR_PREINC(OFFSET_ROR, OP_LDR, 32); }$/;"	f	file:
arm7A0	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm7A0(u32 opcode) { STR_PREINC_WB(OFFSET_LSL, OP_STR, 32); }$/;"	f	file:
arm7A2	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm7A2(u32 opcode) { STR_PREINC_WB(OFFSET_LSR, OP_STR, 32); }$/;"	f	file:
arm7A4	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm7A4(u32 opcode) { STR_PREINC_WB(OFFSET_ASR, OP_STR, 32); }$/;"	f	file:
arm7A6	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm7A6(u32 opcode) { STR_PREINC_WB(OFFSET_ROR, OP_STR, 32); }$/;"	f	file:
arm7B0	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm7B0(u32 opcode) { LDR_PREINC_WB(OFFSET_LSL, OP_LDR, 32); }$/;"	f	file:
arm7B2	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm7B2(u32 opcode) { LDR_PREINC_WB(OFFSET_LSR, OP_LDR, 32); }$/;"	f	file:
arm7B4	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm7B4(u32 opcode) { LDR_PREINC_WB(OFFSET_ASR, OP_LDR, 32); }$/;"	f	file:
arm7B6	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm7B6(u32 opcode) { LDR_PREINC_WB(OFFSET_ROR, OP_LDR, 32); }$/;"	f	file:
arm7C0	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm7C0(u32 opcode) { STR_PREINC(OFFSET_LSL, OP_STRB, 16); }$/;"	f	file:
arm7C2	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm7C2(u32 opcode) { STR_PREINC(OFFSET_LSR, OP_STRB, 16); }$/;"	f	file:
arm7C4	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm7C4(u32 opcode) { STR_PREINC(OFFSET_ASR, OP_STRB, 16); }$/;"	f	file:
arm7C6	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm7C6(u32 opcode) { STR_PREINC(OFFSET_ROR, OP_STRB, 16); }$/;"	f	file:
arm7D0	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm7D0(u32 opcode) { LDR_PREINC(OFFSET_LSL, OP_LDRB, 16); }$/;"	f	file:
arm7D2	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm7D2(u32 opcode) { LDR_PREINC(OFFSET_LSR, OP_LDRB, 16); }$/;"	f	file:
arm7D4	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm7D4(u32 opcode) { LDR_PREINC(OFFSET_ASR, OP_LDRB, 16); }$/;"	f	file:
arm7D6	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm7D6(u32 opcode) { LDR_PREINC(OFFSET_ROR, OP_LDRB, 16); }$/;"	f	file:
arm7E0	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm7E0(u32 opcode) { STR_PREINC_WB(OFFSET_LSL, OP_STRB, 16); }$/;"	f	file:
arm7E2	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm7E2(u32 opcode) { STR_PREINC_WB(OFFSET_LSR, OP_STRB, 16); }$/;"	f	file:
arm7E4	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm7E4(u32 opcode) { STR_PREINC_WB(OFFSET_ASR, OP_STRB, 16); }$/;"	f	file:
arm7E6	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm7E6(u32 opcode) { STR_PREINC_WB(OFFSET_ROR, OP_STRB, 16); }$/;"	f	file:
arm7F0	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm7F0(u32 opcode) { LDR_PREINC_WB(OFFSET_LSL, OP_LDRB, 16); }$/;"	f	file:
arm7F2	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm7F2(u32 opcode) { LDR_PREINC_WB(OFFSET_LSR, OP_LDRB, 16); }$/;"	f	file:
arm7F4	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm7F4(u32 opcode) { LDR_PREINC_WB(OFFSET_ASR, OP_LDRB, 16); }$/;"	f	file:
arm7F6	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm7F6(u32 opcode) { LDR_PREINC_WB(OFFSET_ROR, OP_LDRB, 16); }$/;"	f	file:
arm800	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm800(u32 opcode)$/;"	f	file:
arm810	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm810(u32 opcode)$/;"	f	file:
arm820	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm820(u32 opcode)$/;"	f	file:
arm830	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm830(u32 opcode)$/;"	f	file:
arm840	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm840(u32 opcode)$/;"	f	file:
arm850	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm850(u32 opcode)$/;"	f	file:
arm860	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm860(u32 opcode)$/;"	f	file:
arm870	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm870(u32 opcode)$/;"	f	file:
arm880	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm880(u32 opcode)$/;"	f	file:
arm890	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm890(u32 opcode)$/;"	f	file:
arm8A0	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm8A0(u32 opcode)$/;"	f	file:
arm8B0	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm8B0(u32 opcode)$/;"	f	file:
arm8C0	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm8C0(u32 opcode)$/;"	f	file:
arm8D0	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm8D0(u32 opcode)$/;"	f	file:
arm8E0	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm8E0(u32 opcode)$/;"	f	file:
arm8F0	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm8F0(u32 opcode)$/;"	f	file:
arm900	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm900(u32 opcode)$/;"	f	file:
arm910	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm910(u32 opcode)$/;"	f	file:
arm920	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm920(u32 opcode)$/;"	f	file:
arm930	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm930(u32 opcode)$/;"	f	file:
arm940	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm940(u32 opcode)$/;"	f	file:
arm950	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm950(u32 opcode)$/;"	f	file:
arm960	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm960(u32 opcode)$/;"	f	file:
arm970	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm970(u32 opcode)$/;"	f	file:
arm980	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm980(u32 opcode)$/;"	f	file:
arm990	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm990(u32 opcode)$/;"	f	file:
arm9A0	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm9A0(u32 opcode)$/;"	f	file:
arm9B0	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm9B0(u32 opcode)$/;"	f	file:
arm9C0	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm9C0(u32 opcode)$/;"	f	file:
arm9D0	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm9D0(u32 opcode)$/;"	f	file:
arm9E0	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm9E0(u32 opcode)$/;"	f	file:
arm9F0	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void arm9F0(u32 opcode)$/;"	f	file:
armA00	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void armA00(u32 opcode)$/;"	f	file:
armB00	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void armB00(u32 opcode)$/;"	f	file:
armBreakpoint	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void armBreakpoint(u32 opcode)$/;"	f	file:
armE01	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void armE01(u32 opcode)$/;"	f	file:
armE01	src/gba/GBA-arm.cpp	2642;"	d	file:
armExecute	src/gba/GBA-arm.cpp	/^int armExecute()$/;"	f
armF00	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void armF00(u32 opcode)$/;"	f	file:
armInsnTable	src/gba/GBA-arm.cpp	/^static insnfunc_t armInsnTable[4096] = {$/;"	v	file:
armIrqEnable	src/gba/Globals.cpp	/^bool armIrqEnable = true;$/;"	v
armMode	src/gba/Globals.cpp	/^int armMode = 0x1f;$/;"	v
armMultLoadStore	src/gba/armdis.cpp	/^const char *armMultLoadStore[12] = {$/;"	v
armNextPC	src/gba/Globals.cpp	/^u32 armNextPC = 0x00000000;$/;"	v
armOpcodeCount	src/gba/GBA.cpp	/^int armOpcodeCount = 0;$/;"	v
armOpcodes	src/gba/armdis.cpp	/^const Opcodes armOpcodes[] = {$/;"	v
armState	src/gba/Globals.cpp	/^bool armState = true;$/;"	v
armUnknownInsn	src/gba/GBA-arm.cpp	/^static INSN_REGPARM void armUnknownInsn(u32 opcode)$/;"	f	file:
arm_BP	src/gba/GBA-arm.cpp	2668;"	d	file:
arm_BP	src/gba/GBA-arm.cpp	2670;"	d	file:
arm_UI	src/gba/GBA-arm.cpp	2666;"	d	file:
array	src/gba/elf.h	/^    Array *array;$/;"	m	union:Type::__anon40
arrow	src/win32/MainWnd.h	/^	HCURSOR arrow;$/;"	m	class:MainWnd
asb	src/wx/guiinit.cpp	/^    wxWindow *asb, *remb;$/;"	m	class:AccelConfig_t	file:
aspect_ratio	src/libretro/libretro.h	/^   float    aspect_ratio;  \/\/ Nominal aspect ratio of game. If aspect_ratio is <= 0.0,$/;"	m	struct:retro_game_geometry
assignKey	src/win32/Joypad.cpp	/^void JoypadConfig::assignKey(int id, LONG_PTR key)$/;"	f	class:JoypadConfig
assignKey	src/win32/Joypad.cpp	/^void MotionConfig::assignKey(int id, int key)$/;"	f	class:MotionConfig
assignKeys	src/win32/Joypad.cpp	/^void MotionConfig::assignKeys()$/;"	f	class:MotionConfig
assign_buffers	src/apu/Effects_Buffer.cpp	/^void Effects_Buffer::assign_buffers()$/;"	f	class:Effects_Buffer
astFilters	src/gtk/filters.cpp	/^static const astFilters[] =$/;"	m	namespace:VBA	file:
astFiltersIB	src/gtk/filters.cpp	/^static const astFiltersIB[] =$/;"	m	namespace:VBA	file:
attrs	src/gba/elf.h	/^  ELFAttr *attrs;$/;"	m	struct:ELFAbbrev
aud_st	src/common/ffmpeg.h	/^    priv_AVStream *vid_st, *aud_st;$/;"	m	class:MediaRecorder
audapi_rb	src/wx/guiinit.cpp	2955;"	d	file:
audioAPI	src/win32/VBA.h	/^  AUDIO_API audioAPI;$/;"	m	class:VBA
audio_api	src/wx/opts.h	/^    int audio_api;$/;"	m	struct:opts_t
audio_batch_cb	src/libretro/libretro.cpp	/^retro_audio_sample_batch_t audio_batch_cb;$/;"	v
audio_buf	src/common/ffmpeg.h	/^    u8 *audio_buf, *video_buf;$/;"	m	class:MediaRecorder
audio_buf2	src/common/ffmpeg.h	/^    u16 *audio_buf2;$/;"	m	class:MediaRecorder
audio_buffers	src/wx/opts.h	/^    int audio_buffers;$/;"	m	struct:opts_t
audio_dev	src/wx/opts.h	/^    wxString audio_dev;$/;"	m	struct:opts_t
audioapi	src/wx/wxvbam.h	/^enum audioapi {$/;"	g
augmentation	src/gba/elf.cpp	/^  u8 *augmentation;$/;"	m	struct:ELFcie	file:
autoFire	src/sdl/inputSDL.cpp	/^static int autoFire = 0;$/;"	v	file:
autoFire	src/win32/VBA.h	/^  int autoFire;$/;"	m	class:VBA
autoFireCountdown	src/sdl/inputSDL.cpp	/^static int autoFireCountdown = 0;$/;"	v	file:
autoFireMaxCount	src/sdl/inputSDL.cpp	/^int autoFireMaxCount = 1;$/;"	v
autoFireToggle	src/sdl/inputSDL.cpp	/^static bool autoFireToggle = false;$/;"	v	file:
autoFireToggle	src/win32/VBA.h	/^  bool autoFireToggle;$/;"	m	class:VBA
autoFrameSkip	src/sdl/SDL.cpp	/^int autoFrameSkip = 0;$/;"	v
autoFrameSkip	src/win32/VBA.h	/^  bool autoFrameSkip;$/;"	m	class:VBA
autoFrameSkipLastTime	src/sdl/SDL.cpp	/^u32 autoFrameSkipLastTime = 0;$/;"	v
autoFrameSkipLastTime	src/win32/VBA.h	/^  u32 autoFrameSkipLastTime;$/;"	m	class:VBA
autoLoadMostRecent	src/win32/VBA.h	/^  bool autoLoadMostRecent;$/;"	m	class:VBA
autoLoadMostRecent	src/wx/wxvbam.h	/^    bool autoLoadMostRecent;$/;"	m	class:MainFrame
autoPatch	src/win32/VBA.h	/^  bool autoPatch;$/;"	m	class:VBA
autoSaveLoadCheatList	src/win32/VBA.h	/^  bool autoSaveLoadCheatList;$/;"	m	class:VBA
autoUpdate	src/win32/Disassemble.h	/^  bool autoUpdate;$/;"	m	class:Disassemble
autoUpdate	src/win32/GBDisassemble.h	/^  bool autoUpdate;$/;"	m	class:GBDisassemble
autoUpdate	src/win32/GBMapView.h	/^  bool autoUpdate;$/;"	m	class:GBMapView
autoUpdate	src/win32/GBMemoryViewerDlg.h	/^  bool autoUpdate;$/;"	m	class:GBMemoryViewerDlg
autoUpdate	src/win32/GBOamView.h	/^  bool autoUpdate;$/;"	m	class:GBOamView
autoUpdate	src/win32/GBPaletteView.h	/^  bool autoUpdate;$/;"	m	class:GBPaletteView
autoUpdate	src/win32/GBTileView.h	/^  bool autoUpdate;$/;"	m	class:GBTileView
autoUpdate	src/win32/IOViewer.h	/^  bool autoUpdate;$/;"	m	class:IOViewer
autoUpdate	src/win32/MapView.h	/^  bool autoUpdate;$/;"	m	class:MapView
autoUpdate	src/win32/MemoryViewerDlg.h	/^  bool autoUpdate;$/;"	m	class:MemoryViewerDlg
autoUpdate	src/win32/OamView.h	/^  bool autoUpdate;$/;"	m	class:OamView
autoUpdate	src/win32/PaletteView.h	/^  bool autoUpdate;$/;"	m	class:PaletteView
autoUpdate	src/win32/TileView.h	/^  bool autoUpdate;$/;"	m	class:TileView
auto_update	src/wx/viewsupt.h	/^	bool auto_update;$/;"	m	class:Viewers::Viewer
autofire	src/wx/sys.cpp	/^int joypress[4], autofire;$/;"	v
autofire_rate	src/wx/opts.h	/^    int autofire_rate;$/;"	m	struct:opts_t
autoload_cheats	src/wx/opts.h	/^    bool autoload_state, autoload_cheats;$/;"	m	struct:opts_t
autoload_state	src/wx/opts.h	/^    bool autoload_state, autoload_cheats;$/;"	m	struct:opts_t
av_guess_format	src/common/ffmpeg.cpp	37;"	d	file:
avail	src/common/RingBuffer.h	/^	std::size_t avail() const {$/;"	f	class:RingBuffer
available	src/common/memgzio.c	/^  int available;$/;"	m	struct:_MemFile	file:
avformat_free_context	src/common/ffmpeg.cpp	/^static void avformat_free_context(AVFormatContext *ctx)$/;"	f	file:
aviRecordName	src/win32/VBA.h	/^  CString aviRecordName;$/;"	m	class:VBA
aviRecorder	src/win32/VBA.h	/^  AVIWrite *aviRecorder;$/;"	m	class:VBA
aviRecording	src/win32/VBA.h	/^  bool aviRecording;$/;"	m	class:VBA
avio_close	src/common/ffmpeg.cpp	41;"	d	file:
avio_open	src/common/ffmpeg.cpp	40;"	d	file:
axis	src/win32/DirectInput.cpp	/^    } axis[8];$/;"	m	struct:deviceInfo	typeref:struct:deviceInfo::__anon70	file:
axisNumber	src/win32/DirectInput.cpp	/^static int axisNumber = 0;$/;"	v	file:
b	fex/7z_C/CpuArch.h	/^  UInt32 b;$/;"	m	struct:__anon35
b	src/wx/viewsupt.h	/^	int r, g, b;$/;"	m	class:Viewers::ColorView
b16to32Video	src/win32/VBA.cpp	/^bool b16to32Video = false;$/;"	v
bAppendMode	src/win32/Joypad.cpp	/^BOOL bAppendMode;$/;"	v
bEnabled	src/gtk/cheatlist.h	/^    Gtk::TreeModelColumn<bool> bEnabled;$/;"	m	class:VBA::ListCheatCodeColumns
bHasSuffix	src/gtk/tools.cpp	/^bool bHasSuffix(const Glib::ustring & _rsString,$/;"	f	namespace:VBA
bKeyExists	src/gtk/configfile.cpp	/^bool Section::bKeyExists(const string & _rsKey)$/;"	f	class:VBA::Config::Section
bLastSkip	src/win32/VBA.cpp	/^  bool					bLastSkip;$/;"	m	namespace:Sm60FPS	file:
bLoadROM	src/gtk/window.cpp	/^bool Window::bLoadROM(const std::string & _rsFile)$/;"	f	class:VBA::Window
bMark	src/gtk/cheatlist.h	/^  bool bMark;$/;"	m	class:VBA::CheatListDialog
bOnConfigIdle	src/gtk/joypadconfig.cpp	/^bool JoypadConfigDialog::bOnConfigIdle()$/;"	f	class:VBA::JoypadConfigDialog
bOnCursorTimeout	src/gtk/screenarea.cpp	/^bool ScreenArea::bOnCursorTimeout()$/;"	f	class:VBA::ScreenArea
bOnEmuIdle	src/gtk/windowcallbacks.cpp	/^bool Window::bOnEmuIdle()$/;"	f	class:VBA::Window
bOnEntryFocusIn	src/gtk/joypadconfig.cpp	/^bool JoypadConfigDialog::bOnEntryFocusIn(GdkEventFocus * _pstEvent,$/;"	f	class:VBA::JoypadConfigDialog
bOnEntryFocusOut	src/gtk/joypadconfig.cpp	/^bool JoypadConfigDialog::bOnEntryFocusOut(GdkEventFocus * _pstEvent)$/;"	f	class:VBA::JoypadConfigDialog
bSaveMoreCPU	src/win32/VBA.cpp	/^  int					bSaveMoreCPU;$/;"	m	namespace:Sm60FPS	file:
bSectionExists	src/gtk/configfile.cpp	/^bool File::bSectionExists(const string & _rsName)$/;"	f	class:VBA::Config::File
back_size	src/wx/viewsupt.h	/^	int back_size;$/;"	m	class:Viewers::DisList
baddialog	src/wx/guiinit.cpp	2307;"	d	file:
baddialog	src/wx/viewsupt.h	37;"	d
baddialogc	src/wx/guiinit.cpp	2315;"	d	file:
baddialogcv	src/wx/guiinit.cpp	2311;"	d	file:
bank	src/win32/GBCheatsDlg.h	/^  int  bank;$/;"	m	struct:WinGbCheatsData
bank	src/win32/GBMapView.h	/^  int bank;$/;"	m	class:GBMapView
bank	src/win32/GBTileView.h	/^  int bank;$/;"	m	class:GBTileView
bank	src/wx/gfxviewers.cpp	/^	int bank, charbase, palette;$/;"	m	class:Viewers::GBTileViewer	file:
bank40_mask	src/apu/Gb_Oscs.h	/^	enum { bank40_mask = 0x40 };$/;"	e	enum:Gb_Wave::__anon137
bank_size	src/apu/Gb_Oscs.h	/^	enum { bank_size   = 32 };$/;"	e	enum:Gb_Wave::__anon138
banklab	src/wx/gfxviewers.cpp	/^	wxControl *pos, *tilelab, *prio, *oap, *pallab, *flg, *banklab;$/;"	m	class:Viewers::GBOAMViewer	file:
base_height	src/libretro/libretro.h	/^   unsigned base_height;   \/\/ Nominal video height of game.$/;"	m	struct:retro_game_geometry
base_width	src/libretro/libretro.h	/^   unsigned base_width;    \/\/ Nominal video width of game.$/;"	m	struct:retro_game_geometry
basic_height	src/wx/wxvbam.h	/^    int basic_width, basic_height;$/;"	m	class:GameArea
basic_width	src/wx/wxvbam.h	/^    int basic_width, basic_height;$/;"	m	class:GameArea
bass_freq	src/apu/Blip_Buffer.cpp	/^void Blip_Buffer::bass_freq( int freq )$/;"	f	class:Blip_Buffer
bass_freq	src/apu/Effects_Buffer.cpp	/^void Effects_Buffer::bass_freq( int freq )$/;"	f	class:Effects_Buffer
bass_freq	src/apu/Multi_Buffer.cpp	/^void Stereo_Buffer::bass_freq( int bass )$/;"	f	class:Stereo_Buffer
bass_freq	src/apu/Multi_Buffer.h	/^	void bass_freq( int ) { }$/;"	f	class:Silent_Buffer
bass_freq	src/apu/Multi_Buffer.h	/^	void bass_freq( int freq ) { buf.bass_freq( freq ); }$/;"	f	class:Mono_Buffer
bass_freq_	src/apu/Blip_Buffer.h	/^	int bass_freq_;$/;"	m	class:Blip_Buffer
bass_freq_	src/apu/Effects_Buffer.h	/^	int bass_freq_;$/;"	m	class:Effects_Buffer
bass_shift_	src/apu/Blip_Buffer.h	/^	int bass_shift_;$/;"	m	class:Blip_Buffer
bat_dir	src/wx/wxvbam.h	/^    wxString bat_dir() { return batdir; }$/;"	f	class:GameArea
batdir	src/wx/wxvbam.h	/^    wxString batdir, statedir;$/;"	m	class:GameArea
batimp_path	src/wx/cmdevents.cpp	/^static wxString batimp_path;$/;"	v	file:
batteryDir	src/sdl/SDL.cpp	/^char batteryDir[2048];$/;"	v
battery_dir	src/wx/opts.h	/^    wxString battery_dir;$/;"	m	struct:opts_t
beep	src/win32/MemoryViewer.cpp	/^void MemoryViewer::beep()$/;"	f	class:MemoryViewer
begin	fex/7z_C/7zDec.c	/^  const Byte *begin;$/;"	m	struct:__anon37	file:
begin	fex/fex/Data_Reader.h	/^	const char* const begin;$/;"	m	class:Mem_File_Reader
begin	fex/fex/Zlib_Inflater.cpp	/^blargg_err_t Zlib_Inflater::begin( callback_t new_callback, void* new_user_data,$/;"	f	class:Zlib_Inflater
begin	fex/fex/blargg_common.h	/^	      T* begin()       { return static_cast<T*> (begin_); }$/;"	f	class:blargg_vector
begin	fex/fex/blargg_common.h	/^	const T* begin() const { return static_cast<T*> (begin_); }$/;"	f	class:blargg_vector
begin	src/apu/Blip_Buffer.h	/^inline int Blip_Reader::begin( Blip_Buffer& blip_buf )$/;"	f	class:Blip_Reader
begin	src/apu/blargg_common.h	/^	T* begin() const { return begin_; }$/;"	f	class:blargg_vector
begin	src/gtk/configfile.h	/^  inline const_iterator begin() const$/;"	f	class:VBA::Config::File
begin	src/gtk/configfile.h	/^  inline const_iterator begin() const$/;"	f	class:VBA::Config::Section
begin	src/gtk/configfile.h	/^  inline iterator begin()$/;"	f	class:VBA::Config::File
begin	src/gtk/configfile.h	/^  inline iterator begin()$/;"	f	class:VBA::Config::Section
beginAscii	src/win32/MemoryViewer.h	/^  int beginAscii;$/;"	m	class:MemoryViewer
beginHex	src/win32/MemoryViewer.h	/^  int beginHex;$/;"	m	class:MemoryViewer
begin_	fex/fex/blargg_common.h	/^		void* begin_;$/;"	m	class:blargg_vector_
begin_	src/apu/blargg_common.h	/^	T* begin_;$/;"	m	class:blargg_vector
bg	src/win32/GBMapView.h	/^  int bg;$/;"	m	class:GBMapView
bg	src/win32/MapView.h	/^  int bg;$/;"	m	class:MapView
bg	src/wx/gfxviewers.cpp	/^	int frame, bg;$/;"	m	class:Viewers::MapViewer	file:
bg0	src/wx/gfxviewers.cpp	/^	wxRadioButton *fr0, *fr1, *bg0, *bg1, *bg2, *bg3;$/;"	m	class:Viewers::MapViewer	file:
bg1	src/wx/gfxviewers.cpp	/^	wxRadioButton *fr0, *fr1, *bg0, *bg1, *bg2, *bg3;$/;"	m	class:Viewers::MapViewer	file:
bg2	src/wx/gfxviewers.cpp	/^	wxRadioButton *fr0, *fr1, *bg0, *bg1, *bg2, *bg3;$/;"	m	class:Viewers::MapViewer	file:
bg3	src/wx/gfxviewers.cpp	/^	wxRadioButton *fr0, *fr1, *bg0, *bg1, *bg2, *bg3;$/;"	m	class:Viewers::MapViewer	file:
bh	src/gba/GBA-arm.cpp	315;"	d	file:
bilinear	src/wx/opts.h	/^    bool bilinear;$/;"	m	struct:opts_t
binding	src/gba/elf.h	/^  int binding;$/;"	m	struct:Symbol
binds	src/libretro/libretro.cpp	/^static const unsigned binds[] = {$/;"	v	file:
binds2	src/libretro/libretro.cpp	/^static const unsigned binds2[] = {$/;"	v	file:
bindtextdomain	src/gtk/intl.h	32;"	d
bios	src/gba/Globals.cpp	/^u8 *bios = 0;$/;"	v
biosFileName	src/sdl/SDL.cpp	/^char biosFileName[2048];$/;"	v
biosFileNameGB	src/win32/VBA.h	/^  CString biosFileNameGB;$/;"	m	class:VBA
biosFileNameGBA	src/win32/VBA.h	/^  CString biosFileNameGBA;$/;"	m	class:VBA
biosFileNameGBC	src/win32/VBA.h	/^  CString biosFileNameGBC;$/;"	m	class:VBA
biosProtected	src/gba/GBA.cpp	/^u8 biosProtected[4];$/;"	v
bit	src/wx/viewers.cpp	/^	wxCheckBox *bit[16];$/;"	m	class:Viewers::IOViewer	file:
bitChange	src/win32/IOViewer.cpp	/^void IOViewer::bitChange()$/;"	f	class:IOViewer
bitDepth	src/win32/Display.h	/^	  unsigned int bitDepth;$/;"	m	struct:IDisplay::VIDEO_MODE
bitOffset	src/gba/elf.h	/^  int bitOffset;$/;"	m	struct:Member
bitSize	src/gba/elf.h	/^  int bitSize;$/;"	m	struct:Member
bitSize	src/gba/elf.h	/^  int bitSize;$/;"	m	struct:Type
bitlab	src/wx/viewers.cpp	/^	wxControl *bitlab[16];$/;"	m	class:Viewers::IOViewer	file:
bitmap	src/win32/GBPrinterDlg.h	/^  BITMAPINFO *bitmap;$/;"	m	class:GBPrinterDlg
bitmapData	src/win32/GBPrinterDlg.h	/^  u8 *bitmapData;$/;"	m	class:GBPrinterDlg
bitmapHeader	src/win32/GBPrinterDlg.h	/^  u8 bitmapHeader[sizeof(BITMAPINFO)+4*sizeof(RGBQUAD)];$/;"	m	class:GBPrinterDlg
bits	src/gba/CheatSearch.h	/^  u8 *bits;$/;"	m	struct:CheatSearchBlock
bits	src/gba/RTC.cpp	/^  int bits;$/;"	m	struct:__anon51	file:
bits	src/win32/IOViewerRegs.h	/^  char *bits[16];$/;"	m	struct:IOData
bits	src/wx/ioregs.h	/^  const wxChar *bits[16];$/;"	m	struct:IOData
bl	src/gba/GBA-arm.cpp	314;"	d	file:
blargg_byte	fex/fex/blargg_source.h	/^typedef unsigned char blargg_byte;$/;"	t
blargg_byte	src/apu/blargg_source.h	/^typedef unsigned char blargg_byte;$/;"	t
blargg_callback	fex/fex/blargg_common.h	/^	blargg_callback() { f = NULL; }$/;"	f	struct:blargg_callback
blargg_callback	fex/fex/blargg_common.h	/^struct blargg_callback$/;"	s
blargg_code_to_err	fex/fex/blargg_errors.cpp	/^blargg_err_t blargg_code_to_err( int code, blargg_err_to_code_t const codes [] )$/;"	f
blargg_dprintf_	fex/fex/blargg_source.h	/^static inline void blargg_dprintf_( const char [], ... ) { }$/;"	f
blargg_dprintf_	src/apu/blargg_source.h	/^static inline void blargg_dprintf_( const char*, ... ) { }$/;"	f
blargg_err_caller	fex/fex/blargg_errors.cpp	/^blargg_err_def_t blargg_err_caller       = BLARGG_ERR_CALLER;$/;"	v
blargg_err_def_t	fex/fex/blargg_errors.h	/^typedef const char blargg_err_def_t [];$/;"	t
blargg_err_details	fex/fex/blargg_errors.cpp	/^const char* blargg_err_details( blargg_err_t err )$/;"	f
blargg_err_file_corrupt	fex/fex/blargg_errors.cpp	/^blargg_err_def_t blargg_err_file_corrupt = BLARGG_ERR_FILE_CORRUPT;$/;"	v
blargg_err_file_eof	fex/fex/blargg_errors.cpp	/^blargg_err_def_t blargg_err_file_eof     = BLARGG_ERR_FILE_EOF;$/;"	v
blargg_err_file_feature	fex/fex/blargg_errors.cpp	/^blargg_err_def_t blargg_err_file_feature = BLARGG_ERR_FILE_FEATURE;$/;"	v
blargg_err_file_full	fex/fex/blargg_errors.cpp	/^blargg_err_def_t blargg_err_file_full    = BLARGG_ERR_FILE_FULL;$/;"	v
blargg_err_file_io	fex/fex/blargg_errors.cpp	/^blargg_err_def_t blargg_err_file_io      = BLARGG_ERR_FILE_IO;$/;"	v
blargg_err_file_missing	fex/fex/blargg_errors.cpp	/^blargg_err_def_t blargg_err_file_missing = BLARGG_ERR_FILE_MISSING;$/;"	v
blargg_err_file_read	fex/fex/blargg_errors.cpp	/^blargg_err_def_t blargg_err_file_read    = BLARGG_ERR_FILE_READ;$/;"	v
blargg_err_file_type	fex/fex/blargg_errors.cpp	/^blargg_err_def_t blargg_err_file_type    = BLARGG_ERR_FILE_TYPE;$/;"	v
blargg_err_file_write	fex/fex/blargg_errors.cpp	/^blargg_err_def_t blargg_err_file_write   = BLARGG_ERR_FILE_WRITE;$/;"	v
blargg_err_generic	fex/fex/blargg_errors.cpp	/^blargg_err_def_t blargg_err_generic      = BLARGG_ERR_GENERIC;$/;"	v
blargg_err_internal	fex/fex/blargg_errors.cpp	/^blargg_err_def_t blargg_err_internal     = BLARGG_ERR_INTERNAL;$/;"	v
blargg_err_limitation	fex/fex/blargg_errors.cpp	/^blargg_err_def_t blargg_err_limitation   = BLARGG_ERR_LIMITATION;$/;"	v
blargg_err_memory	fex/fex/blargg_errors.cpp	/^blargg_err_def_t blargg_err_memory       = BLARGG_ERR_MEMORY;$/;"	v
blargg_err_str	fex/fex/blargg_errors.cpp	/^const char* blargg_err_str( blargg_err_t err )$/;"	f
blargg_err_t	fex/fex/blargg_common.h	/^typedef const char* blargg_err_t; \/\/ 0 on success, otherwise error string$/;"	t
blargg_err_t	src/apu/Blip_Buffer.h	/^	typedef const char* blargg_err_t;$/;"	t	class:Blip_Buffer
blargg_err_t	src/apu/blargg_common.h	/^	typedef const char* blargg_err_t;$/;"	t
blargg_err_to_code	fex/fex/blargg_errors.cpp	/^int blargg_err_to_code( blargg_err_t err, blargg_err_to_code_t const codes [] )$/;"	f
blargg_err_to_code_t	fex/fex/blargg_errors.h	/^struct blargg_err_to_code_t {$/;"	s
blargg_fopen	fex/fex/Data_Reader.cpp	/^static FILE* blargg_fopen( const char path [], const char mode [] )$/;"	f	file:
blargg_fopen	fex/fex/Data_Reader.cpp	/^static blargg_err_t blargg_fopen( FILE** out, const char path [] )$/;"	f	file:
blargg_fopen	fex/fex/Data_Reader.cpp	/^static inline FILE* blargg_fopen( const char path [], const char mode [] )$/;"	f	file:
blargg_fsize	fex/fex/Data_Reader.cpp	/^static blargg_err_t blargg_fsize( FILE* f, long* out )$/;"	f	file:
blargg_is_err_type	fex/fex/blargg_errors.cpp	/^bool blargg_is_err_type( blargg_err_t err, const char type [] )$/;"	f
blargg_long	src/apu/blargg_common.h	/^	typedef int blargg_long;$/;"	t
blargg_long	src/apu/blargg_common.h	/^	typedef long blargg_long;$/;"	t
blargg_ok	fex/fex/blargg_common.h	/^int const blargg_ok = 0;$/;"	v
blargg_to_utf8	fex/fex/Data_Reader.cpp	/^char* blargg_to_utf8( const wchar_t* wpath )$/;"	f
blargg_to_wide	fex/fex/Data_Reader.cpp	/^wchar_t* blargg_to_wide( const char* path )$/;"	f
blargg_ulong	src/apu/blargg_common.h	/^	typedef unsigned blargg_ulong;$/;"	t
blargg_ulong	src/apu/blargg_common.h	/^	typedef unsigned long blargg_ulong;$/;"	t
blargg_vector	fex/fex/blargg_common.h	/^	blargg_vector()         { init(); }$/;"	f	class:blargg_vector
blargg_vector	fex/fex/blargg_common.h	/^class blargg_vector : public blargg_vector_ {$/;"	c
blargg_vector	src/apu/blargg_common.h	/^	blargg_vector() : begin_( 0 ), size_( 0 ) { }$/;"	f	class:blargg_vector
blargg_vector	src/apu/blargg_common.h	/^class blargg_vector {$/;"	c
blargg_vector_	fex/fex/blargg_common.h	/^	class blargg_vector_ {$/;"	c
blargg_verify_byte_order	fex/fex/blargg_endian.h	/^inline void blargg_verify_byte_order()$/;"	f
blip_best_quality	src/apu/Blip_Buffer.h	/^const int blip_best_quality = blip_high_quality;$/;"	v
blip_buffer_extra_	src/apu/Blip_Buffer.h	/^	int const blip_buffer_extra_ = blip_widest_impulse_ + 2;$/;"	v
blip_buffer_state_t	src/apu/Blip_Buffer.h	/^struct blip_buffer_state_t$/;"	s
blip_default_length	src/apu/Blip_Buffer.h	/^int const blip_default_length = 250; \/\/ 1\/4 second$/;"	v
blip_eq_t	src/apu/Blip_Buffer.h	/^class blip_eq_t {$/;"	c
blip_eq_t	src/apu/Blip_Buffer.h	/^inline blip_eq_t::blip_eq_t( double t ) :$/;"	f	class:blip_eq_t
blip_eq_t	src/apu/Blip_Buffer.h	/^inline blip_eq_t::blip_eq_t( double t, long rf, long sr, long cf ) :$/;"	f	class:blip_eq_t
blip_good_quality	src/apu/Blip_Buffer.h	/^const int blip_good_quality = 12;$/;"	v
blip_high_quality	src/apu/Blip_Buffer.h	/^const int blip_high_quality = 16;$/;"	v
blip_long	src/apu/Blip_Buffer.h	/^		typedef int blip_long;$/;"	t
blip_long	src/apu/Blip_Buffer.h	/^		typedef long blip_long;$/;"	t
blip_low_quality	src/apu/Blip_Buffer.h	/^const int blip_low_quality  = blip_med_quality;$/;"	v
blip_max_length	src/apu/Blip_Buffer.h	/^int const blip_max_length = 0;$/;"	v
blip_med_quality	src/apu/Blip_Buffer.h	/^const int blip_med_quality  = 8;$/;"	v
blip_reader_default_bass	src/apu/Blip_Buffer.h	/^int const blip_reader_default_bass = 9;$/;"	v
blip_reader_idx_factor	src/apu/Blip_Buffer.h	/^blip_long const blip_reader_idx_factor = sizeof (Blip_Buffer::buf_t_);$/;"	v
blip_res	src/apu/Blip_Buffer.h	/^	int const blip_res = 1 << BLIP_PHASE_BITS;$/;"	v
blip_resampled_time_t	src/apu/Blip_Buffer.h	/^	typedef blip_ulong blip_resampled_time_t;$/;"	t	class:Blip_Buffer
blip_resampled_time_t	src/apu/Blip_Buffer.h	/^	typedef blip_ulong blip_resampled_time_t;$/;"	t
blip_sample_bits	src/apu/Blip_Buffer.h	/^int const blip_sample_bits = 30;$/;"	v
blip_sample_max	src/apu/Blip_Buffer.h	/^enum { blip_sample_max = 32767 };$/;"	e	enum:__anon128
blip_sample_t	src/apu/Blip_Buffer.h	/^typedef short blip_sample_t;$/;"	t
blip_time	src/gb/gbSound.cpp	/^static inline blip_time_t blip_time()$/;"	f	file:
blip_time	src/gba/Sound.cpp	/^static inline blip_time_t blip_time()$/;"	f	file:
blip_time_t	src/apu/Blip_Buffer.h	/^typedef blip_long blip_time_t;$/;"	t
blip_ulong	src/apu/Blip_Buffer.h	/^		typedef unsigned blip_ulong;$/;"	t
blip_ulong	src/apu/Blip_Buffer.h	/^		typedef unsigned long blip_ulong;$/;"	t
blip_unscaled	src/apu/Blip_Buffer.h	/^const long blip_unscaled = 65535;$/;"	v
blip_widest_impulse_	src/apu/Blip_Buffer.h	/^	int const blip_widest_impulse_ = 16;$/;"	v
block	src/gba/elf.h	/^    ELFBlock *block;$/;"	m	union:ELFAttr::__anon39
block_extract	src/libretro/libretro.h	/^   bool        block_extract;     \/\/ If true, the frontend is not allowed to extract any archives before loading the real ROM.$/;"	m	struct:retro_system_info
block_index	fex/fex/Zip7_Extractor.cpp	/^	UInt32  block_index;$/;"	m	struct:Zip7_Extractor_Impl	file:
block_size	fex/fex/Zlib_Inflater.cpp	/^int const block_size = 4096;$/;"	v
blocks	src/gba/CheatSearch.h	/^  CheatSearchBlock *blocks;$/;"	m	struct:CheatSearchData
bm	src/wx/viewsupt.h	/^	wxBitmap *bm;$/;"	m	class:Viewers::GfxPanel
bm	src/wx/viewsupt.h	/^	wxBitmap *bm;$/;"	m	class:Viewers::PixView
bmask	src/wx/panel.cpp	/^static uint32_t bmask[NUM_KEYS] = {$/;"	v	file:
bmh	src/wx/viewsupt.h	/^	int bmw, bmh;$/;"	m	class:Viewers::GfxPanel
bmp	src/wx/sys.cpp	/^    wxBitmap *bmp;$/;"	m	class:PrintDialog	file:
bmpInfo	src/win32/BitmapControl.h	/^  BITMAPINFO *bmpInfo;$/;"	m	class:BitmapControl
bmpInfo	src/win32/GBMapView.h	/^  BITMAPINFO bmpInfo;$/;"	m	class:GBMapView
bmpInfo	src/win32/GBOamView.h	/^  BITMAPINFO bmpInfo;$/;"	m	class:GBOamView
bmpInfo	src/win32/GBTileView.h	/^  BITMAPINFO bmpInfo;$/;"	m	class:GBTileView
bmpInfo	src/win32/MapView.h	/^  BITMAPINFO bmpInfo;$/;"	m	class:MapView
bmpInfo	src/win32/OamView.h	/^  BITMAPINFO bmpInfo;$/;"	m	class:OamView
bmpInfo	src/win32/PaletteViewControl.h	/^  BITMAPINFO bmpInfo;$/;"	m	class:PaletteViewControl
bmpInfo	src/win32/TileView.h	/^  BITMAPINFO bmpInfo;$/;"	m	class:TileView
bmp_save_dir	src/wx/viewsupt.cpp	/^    wxString GfxViewer::bmp_save_dir = wxEmptyString;$/;"	m	class:Viewers::GfxViewer	file:
bmp_save_dir	src/wx/viewsupt.h	/^	static wxString bmp_save_dir;$/;"	m	class:Viewers::GfxViewer
bmw	src/wx/viewsupt.h	/^	int bmw, bmh;$/;"	m	class:Viewers::GfxPanel
bool	src/apu/blargg_common.h	/^	typedef int bool;$/;"	t
bool	src/libretro/libretro.h	13;"	d
boolen	src/wx/widgets/wxmisc.cpp	244;"	d	file:
boolopt	src/wx/opts.h	/^    bool *boolopt;$/;"	m	struct:opt_desc
boolopt	src/wx/wxvbam.h	/^    bool *boolopt;$/;"	m	struct:checkable_mi_t
bounds	src/gba/elf.h	/^  int *bounds;$/;"	m	struct:Array
bpv	src/wx/gfxviewers.cpp	/^	PixView *bpv, *spv;$/;"	m	class:Viewers::GBPaletteViewer	file:
bpv	src/wx/gfxviewers.cpp	/^	PixView *bpv, *spv;$/;"	m	class:Viewers::PaletteViewer	file:
breakpoint	src/gb/GB.cpp	/^bool breakpoint = false;$/;"	v
breakpointInfo	src/sdl/debugger.cpp	/^struct breakpointInfo {$/;"	s	file:
browseCallbackProc	src/win32/Directories.cpp	/^static int CALLBACK browseCallbackProc(HWND hWnd, UINT msg,$/;"	f	file:
browseForDir	src/win32/Directories.cpp	/^CString Directories::browseForDir(CString title)$/;"	f	class:Directories
bs	src/wx/viewers.cpp	/^	wxChoice *bs;$/;"	m	class:Viewers::MemViewerBase	file:
bt	src/wx/viewsupt.h	/^	wxStaticText *rt, *gt, *bt;$/;"	m	class:Viewers::ColorView
buf	fex/7z_C/LzmaDec.h	/^  const Byte *buf;$/;"	m	struct:__anon17
buf	fex/7z_C/Types.h	/^  Byte buf[LookToRead_BUF_SIZE];$/;"	m	struct:__anon29
buf	fex/fex/Zip7_Extractor.cpp	/^	Byte*   buf;$/;"	m	struct:Zip7_Extractor_Impl	file:
buf	fex/fex/Zip_Extractor.h	/^	Zlib_Inflater buf;$/;"	m	class:Zip_Extractor
buf	fex/fex/Zlib_Inflater.h	/^	blargg_vector<unsigned char> buf;$/;"	m	class:Zlib_Inflater
buf	src/apu/Blip_Buffer.h	/^		Blip_Buffer* buf;$/;"	m	class:Blip_Synth_
buf	src/apu/Blip_Buffer.h	/^		Blip_Buffer* buf;$/;"	m	class:Blip_Synth_Fast_
buf	src/apu/Blip_Buffer.h	/^	blip_long buf [blip_buffer_extra_];$/;"	m	struct:blip_buffer_state_t
buf	src/apu/Blip_Buffer.h	/^	buf_t_ buf [blip_buffer_extra_ + 1];$/;"	m	class:Silent_Blip_Buffer
buf	src/apu/Blip_Buffer.h	/^	const Blip_Buffer::buf_t_* buf;$/;"	m	class:Blip_Reader
buf	src/apu/Multi_Buffer.h	/^	Blip_Buffer buf;$/;"	m	class:Mono_Buffer
buf	src/common/RingBuffer.h	/^	Array<T> buf;$/;"	m	class:RingBuffer
buf	src/win32/XAudio2.cpp	/^	XAUDIO2_BUFFER          buf;$/;"	m	class:XAudio2_Output	file:
buf	src/wx/xaudio2.cpp	/^	XAUDIO2_BUFFER          buf;$/;"	m	class:XAudio2_Output	file:
buf_size	fex/fex/Zip7_Extractor.cpp	/^	size_t  buf_size;$/;"	m	struct:Zip7_Extractor_Impl	file:
buf_t	src/apu/Effects_Buffer.h	/^	struct buf_t : Tracked_Blip_Buffer$/;"	s	class:Effects_Buffer
buf_t	src/apu/Multi_Buffer.h	/^	typedef Tracked_Blip_Buffer buf_t;$/;"	t	class:Stereo_Buffer
buf_t_	src/apu/Blip_Buffer.h	/^	typedef blip_long buf_t_;$/;"	t	class:Blip_Buffer
buffer	src/gb/gbMemory.h	/^  int buffer;$/;"	m	struct:mapperMBC7
buffer	src/gba/GBA.cpp	/^char buffer[1024];$/;"	v
buffer	src/win32/OpenAL.cpp	/^	ALuint        *buffer;$/;"	m	class:OpenAL	file:
buffer	src/win32/Reg.cpp	/^static char buffer[2048];$/;"	v	file:
buffer	src/wx/openal.cpp	/^	ALuint        *buffer;$/;"	m	class:OpenAL	file:
bufferCount	src/win32/OALConfig.h	/^	int bufferCount;$/;"	m	class:OALConfig
bufferCount	src/win32/XAudio2.cpp	/^	UINT32 bufferCount;$/;"	m	class:XAudio2_Output	file:
bufferCount	src/wx/xaudio2.cpp	/^	UINT32 bufferCount;$/;"	m	class:XAudio2_Output	file:
buffer_	src/apu/Blip_Buffer.h	/^	buf_t_* buffer_;$/;"	m	class:Blip_Buffer
buffer_size_	src/apu/Blip_Buffer.h	/^	blip_long buffer_size_;$/;"	m	class:Blip_Buffer
buffers	src/win32/XAudio2.cpp	/^	BYTE  *buffers;$/;"	m	class:XAudio2_Output	file:
buffers	src/wx/xaudio2.cpp	/^	BYTE  *buffers;$/;"	m	class:XAudio2_Output	file:
buffersLoaded	src/win32/OpenAL.cpp	/^	bool           buffersLoaded;$/;"	m	class:OpenAL	file:
buffersLoaded	src/wx/openal.cpp	/^	bool           buffersLoaded;$/;"	m	class:OpenAL	file:
bufinfo	src/wx/guiinit.cpp	/^    wxControl *bufinfo;$/;"	m	class:SoundConfig_t	file:
bufs	src/apu/Effects_Buffer.h	/^	buf_t* bufs;$/;"	m	class:Effects_Buffer
bufs	src/apu/Multi_Buffer.h	/^		Tracked_Blip_Buffer* bufs [3];$/;"	m	class:Stereo_Mixer
bufs	src/apu/Multi_Buffer.h	/^	buf_t bufs [bufs_size];$/;"	m	class:Stereo_Buffer
bufs	src/wx/guiinit.cpp	/^    wxSlider *vol, *bufs;$/;"	m	class:SoundConfig_t	file:
bufs_max	src/apu/Effects_Buffer.h	/^	int bufs_max; \/\/ bufs_size <= bufs_max, to limit memory usage$/;"	m	class:Effects_Buffer
bufs_size	src/apu/Effects_Buffer.h	/^	int bufs_size;$/;"	m	class:Effects_Buffer
bufs_size	src/apu/Multi_Buffer.h	/^	enum { bufs_size = 3 };$/;"	e	enum:Stereo_Buffer::__anon149
builtin_ff_scale	src/wx/wxvbam.h	270;"	d
busPrefetch	src/gba/GBA.cpp	/^bool busPrefetch = false;$/;"	v
busPrefetchCount	src/gba/GBA.cpp	/^u32 busPrefetchCount = 0;$/;"	v
busPrefetchEnable	src/gba/GBA.cpp	/^bool busPrefetchEnable = false;$/;"	v
buttonA	src/win32/Joypad.h	/^  JoypadEditControl  buttonA;$/;"	m	class:JoypadConfig
buttonB	src/win32/Joypad.h	/^  JoypadEditControl  buttonB;$/;"	m	class:JoypadConfig
buttonGS	src/win32/Joypad.h	/^  JoypadEditControl  buttonGS;$/;"	m	class:JoypadConfig
buttonL	src/win32/Joypad.h	/^  JoypadEditControl  buttonL;$/;"	m	class:JoypadConfig
buttonR	src/win32/Joypad.h	/^  JoypadEditControl  buttonR;$/;"	m	class:JoypadConfig
buttonSelect	src/win32/Joypad.h	/^  JoypadEditControl  buttonSelect;$/;"	m	class:JoypadConfig
buttonStart	src/win32/Joypad.h	/^  JoypadEditControl  buttonStart;$/;"	m	class:JoypadConfig
byte	fex/fex/blargg_source.h	95;"	d
byte	fex/fex/blargg_source.h	96;"	d
byte	src/apu/blargg_source.h	80;"	d
byte	src/apu/blargg_source.h	81;"	d
byte0	src/gba/RTC.cpp	/^  u8 byte0;$/;"	m	struct:__anon51	file:
byte1	src/gba/RTC.cpp	/^  u8 byte1;$/;"	m	struct:__anon51	file:
byte2	src/gba/RTC.cpp	/^  u8 byte2;$/;"	m	struct:__anon51	file:
byteSize	src/gba/elf.h	/^  int byteSize;$/;"	m	struct:Member
c	fex/7z_C/CpuArch.h	/^  UInt32 c;$/;"	m	struct:__anon35
c	src/wx/guiinit.cpp	/^    wxChoice *c;$/;"	m	class:GBColorConfig_t	file:
c1	src/filters/hq/asm/hq3x_32.asm	/^c1        equ 60$/;"	d
c1	src/filters/hq/asm/hq4x_32.asm	/^c1        equ 60$/;"	d
c2	src/filters/hq/asm/hq3x_32.asm	/^c2        equ 64$/;"	d
c2	src/filters/hq/asm/hq4x_32.asm	/^c2        equ 64$/;"	d
c3	src/filters/hq/asm/hq3x_32.asm	/^c3        equ 68$/;"	d
c3	src/filters/hq/asm/hq4x_32.asm	/^c3        equ 68$/;"	d
c4	src/filters/hq/asm/hq3x_32.asm	/^c4        equ 72$/;"	d
c4	src/filters/hq/asm/hq4x_32.asm	/^c4        equ 72$/;"	d
c5	src/filters/hq/asm/hq3x_32.asm	/^c5        equ 76$/;"	d
c5	src/filters/hq/asm/hq4x_32.asm	/^c5        equ 76$/;"	d
c6	src/filters/hq/asm/hq3x_32.asm	/^c6        equ 80$/;"	d
c6	src/filters/hq/asm/hq4x_32.asm	/^c6        equ 80$/;"	d
c7	src/filters/hq/asm/hq3x_32.asm	/^c7        equ 84$/;"	d
c7	src/filters/hq/asm/hq4x_32.asm	/^c7        equ 84$/;"	d
c8	src/filters/hq/asm/hq3x_32.asm	/^c8        equ 88$/;"	d
c8	src/filters/hq/asm/hq4x_32.asm	/^c8        equ 88$/;"	d
c9	src/filters/hq/asm/hq3x_32.asm	/^c9        equ 92$/;"	d
c9	src/filters/hq/asm/hq4x_32.asm	/^c9        equ 92$/;"	d
ca_addr	src/wx/guiinit.cpp	/^    wxControl *ca_fmt, *ca_addr;$/;"	m	class:CheatFind_t	file:
ca_desc	src/wx/guiinit.cpp	/^    wxString ca_desc, ca_val;$/;"	m	class:CheatFind_t	file:
ca_fmt	src/wx/guiinit.cpp	/^    wxControl *ca_fmt, *ca_addr;$/;"	m	class:CheatFind_t	file:
ca_val	src/wx/guiinit.cpp	/^    wxString ca_desc, ca_val;$/;"	m	class:CheatFind_t	file:
ca_val_tc	src/wx/guiinit.cpp	/^    wxTextCtrl *ca_val_tc;$/;"	m	class:CheatFind_t	file:
calc_output	src/apu/Gb_Apu.cpp	/^inline int Gb_Apu::calc_output( int osc ) const$/;"	f	class:Gb_Apu
calc_size	fex/fex/Gzip_Reader.cpp	/^blargg_err_t Gzip_Reader::calc_size()$/;"	f	class:Gzip_Reader
calc_sweep	src/apu/Gb_Oscs.cpp	/^void Gb_Sweep_Square::calc_sweep( bool update )$/;"	f	class:Gb_Sweep_Square
calculateDestRect	src/win32/Direct3D.cpp	/^void Direct3DDisplay::calculateDestRect()$/;"	f	class:Direct3DDisplay
calculateDestRect	src/win32/OpenGL.cpp	/^void OpenGLDisplay::calculateDestRect( int w, int h )$/;"	f	class:OpenGLDisplay
callback	fex/fex/Data_Reader.h	/^	callback_t const callback;$/;"	m	class:Callback_File_Reader
callback	fex/fex/Data_Reader.h	/^	callback_t const callback;$/;"	m	class:Callback_Reader
callback	fex/fex/Zlib_Inflater.h	/^	callback_t callback;$/;"	m	class:Zlib_Inflater
callback	src/libretro/libretro.h	/^    retro_keyboard_event_t callback;$/;"	m	struct:retro_keyboard_callback
callback_file_reader_func_t	fex/fex/Data_Reader.h	/^	typedef const char* (*callback_file_reader_func_t)($/;"	t
callback_reader_func_t	fex/fex/Data_Reader.h	/^	typedef const char* (*callback_reader_func_t)($/;"	t
callback_t	fex/fex/Data_Reader.h	/^	typedef callback_file_reader_func_t callback_t;$/;"	t	class:Callback_File_Reader
callback_t	fex/fex/Data_Reader.h	/^	typedef callback_reader_func_t callback_t;$/;"	t	class:Callback_Reader
callback_t	fex/fex/Zlib_Inflater.h	/^	typedef blargg_err_t (*callback_t)( void* user_data, void* out, int* count );$/;"	t	class:Zlib_Inflater
can_dupe	src/libretro/libretro.cpp	/^static bool can_dupe;$/;"	v	file:
cap_format	src/wx/opts.h	/^    int cap_format;$/;"	m	struct:opts_t
cap_size	src/wx/guiinit.cpp	/^    int cap_size; \/\/ size in effect when addrs were generated$/;"	m	class:CheatListCtrl	file:
capture	src/gba/GBA.cpp	/^int capture = 0;$/;"	v
capture	src/win32/Joypad.h	/^  JoypadEditControl  capture;$/;"	m	class:JoypadConfig
captureDir	src/sdl/SDL.cpp	/^char captureDir[2048];$/;"	v
captureFormat	src/sdl/SDL.cpp	/^int captureFormat = 0;$/;"	v
captureFormat	src/win32/VBA.h	/^  int captureFormat;$/;"	m	class:VBA
captureNumber	src/gba/GBA.cpp	/^int captureNumber = 0;$/;"	v
capturePrevious	src/gba/GBA.cpp	/^int capturePrevious = 0;$/;"	v
caret	src/wx/viewsupt.h	/^	wxCaret *caret;$/;"	m	class:Viewers::MemView
caretHeight	src/win32/MemoryViewer.h	/^  int caretHeight;$/;"	m	class:MemoryViewer
caretWidth	src/win32/MemoryViewer.h	/^  int caretWidth;$/;"	m	class:MemoryViewer
cartridgeType	src/sdl/SDL.cpp	/^int cartridgeType = 3;$/;"	v
cartridgeType	src/win32/VBA.h	/^  IMAGE_TYPE cartridgeType;$/;"	m	class:VBA
catalog	fex/fex/Zip_Extractor.h	/^	blargg_vector<char> catalog;$/;"	m	class:Zip_Extractor
catalog_begin	fex/fex/Zip_Extractor.h	/^	int catalog_begin;  \/\/ offset of first catalog entry in file (to detect corruption)$/;"	m	class:Zip_Extractor
catalog_pos	fex/fex/Zip_Extractor.h	/^	int catalog_pos;    \/\/ position of current entry in catalog$/;"	m	class:Zip_Extractor
cbOpcodes	src/gb/gbDis.cpp	/^static GBOPCODE cbOpcodes[] = {$/;"	v	file:
ce_codes	src/wx/guiinit.cpp	/^    wxString ce_codes;$/;"	m	class:CheatList_t	file:
ce_codes_tc	src/wx/guiinit.cpp	/^    wxControl *ce_codes_tc;$/;"	m	class:CheatList_t	file:
ce_desc	src/wx/guiinit.cpp	/^    wxString ce_desc;$/;"	m	class:CheatList_t	file:
ce_type	src/wx/guiinit.cpp	/^    int ce_type;$/;"	m	class:CheatList_t	file:
ce_type_ch	src/wx/guiinit.cpp	/^    wxChoice *ce_type_ch;$/;"	m	class:CheatList_t	file:
center	src/apu/Multi_Buffer.h	/^		Blip_Buffer* center;$/;"	m	struct:Multi_Buffer::channel_t
center	src/apu/Multi_Buffer.h	/^	Blip_Buffer* center()   { return &bufs [2]; }$/;"	f	class:Stereo_Buffer
center	src/apu/Multi_Buffer.h	/^	Blip_Buffer* center() { return &buf; }$/;"	f	class:Mono_Buffer
center	src/win32/DirectInput.cpp	/^        LONG center;$/;"	m	struct:deviceInfo::__anon70	file:
cf_button	src/wx/guiinit.cpp	2638;"	d	file:
cf_enbutton	src/wx/guiinit.cpp	2642;"	d	file:
cf_make_update	src/wx/guiinit.cpp	2608;"	d	file:
cf_make_valen	src/wx/guiinit.cpp	2624;"	d	file:
cf_vfmt	src/wx/guiinit.cpp	/^enum cf_vfmt {$/;"	g	file:
cfaMode	src/gba/elf.cpp	/^  ELFCfaMode cfaMode;$/;"	m	struct:ELFFrameState	file:
cfaOffset	src/gba/elf.cpp	/^  s32 cfaOffset;$/;"	m	struct:ELFFrameState	file:
cfaRegister	src/gba/elf.cpp	/^  int cfaRegister;$/;"	m	struct:ELFFrameState	file:
cfg	src/apu/Effects_Buffer.h	/^		chan_config_t cfg;$/;"	m	struct:Effects_Buffer::chan_t
cfg	src/wx/wxvbam.h	/^    wxConfig *cfg;$/;"	m	class:wxvbamApp
cgb_02	src/apu/Gb_Oscs.cpp	/^bool const cgb_02 = false; \/\/ enables bug in early CGB units that causes problems in some games$/;"	v
cgb_05	src/apu/Gb_Oscs.cpp	/^bool const cgb_05 = false; \/\/ enables CGB-05 zombie behavior$/;"	v
cgb_bass	src/apu/Gb_Apu.h	/^		cgb_bass       =  300, \/\/ CGB has much less bass$/;"	e	enum:Gb_Apu::__anon144
cgb_treble	src/apu/Gb_Apu.h	/^		cgb_treble     =    0,$/;"	e	enum:Gb_Apu::__anon144
ch	src/gba/GBA-arm.cpp	318;"	d	file:
ch	src/wx/guiinit.cpp	/^    wxWindow *lab, *ch;$/;"	m	class:PluginEnable_t	file:
ch4	src/wx/guiinit.cpp	1278;"	d	file:
chan	src/apu/Multi_Buffer.h	/^	channel_t chan;$/;"	m	class:Mono_Buffer
chan	src/apu/Multi_Buffer.h	/^	channel_t chan;$/;"	m	class:Silent_Buffer
chan	src/apu/Multi_Buffer.h	/^	channel_t chan;$/;"	m	class:Stereo_Buffer
chan_config	src/apu/Effects_Buffer.h	/^	chan_config_t& chan_config( int i ) { return chans [i + extra_chans].cfg; }$/;"	f	class:Effects_Buffer
chan_config_t	src/apu/Effects_Buffer.h	/^	struct chan_config_t : pan_vol_t$/;"	s	class:Effects_Buffer
chan_count	src/gb/gbSound.cpp	/^int const chan_count = 4;$/;"	v
chan_t	src/apu/Effects_Buffer.h	/^	struct chan_t$/;"	s	class:Effects_Buffer
changeRenderSize	src/win32/Direct3D.cpp	/^bool Direct3DDisplay::changeRenderSize( int w, int h )$/;"	f	class:Direct3DDisplay
changeRenderSize	src/win32/Display.h	/^  virtual bool changeRenderSize(int w, int h) { return true; };$/;"	f	class:IDisplay
changeRenderSize	src/win32/OpenGL.cpp	/^bool OpenGLDisplay::changeRenderSize( int w, int h )$/;"	f	class:OpenGLDisplay
change_rewind	src/sdl/SDL.cpp	/^void change_rewind(int howmuch)$/;"	f
changingVideoSize	src/win32/VBA.h	/^  bool changingVideoSize;$/;"	m	class:VBA
channel	src/apu/Effects_Buffer.cpp	/^Effects_Buffer::channel_t Effects_Buffer::channel( int i )$/;"	f	class:Effects_Buffer
channel	src/apu/Effects_Buffer.h	/^		channel_t channel;$/;"	m	struct:Effects_Buffer::chan_t
channel	src/apu/Multi_Buffer.cpp	/^Multi_Buffer::channel_t Multi_Buffer::channel( int \/*index*\/ )$/;"	f	class:Multi_Buffer
channel	src/apu/Multi_Buffer.h	/^	channel_t channel( int ) { return chan; }$/;"	f	class:Mono_Buffer
channel	src/apu/Multi_Buffer.h	/^	channel_t channel( int ) { return chan; }$/;"	f	class:Silent_Buffer
channel	src/apu/Multi_Buffer.h	/^	channel_t channel( int ) { return chan; }$/;"	f	class:Stereo_Buffer
channel_count	src/apu/Multi_Buffer.h	/^	int channel_count() const { return channel_count_; }$/;"	f	class:Multi_Buffer
channel_count_	src/apu/Multi_Buffer.h	/^	int channel_count_;$/;"	m	class:Multi_Buffer
channel_t	src/apu/Multi_Buffer.h	/^	struct channel_t {$/;"	s	class:Multi_Buffer
channel_types	src/apu/Multi_Buffer.h	/^	int const* channel_types() const { return channel_types_; }$/;"	f	class:Multi_Buffer
channel_types_	src/apu/Multi_Buffer.h	/^	int const* channel_types_;$/;"	m	class:Multi_Buffer
channels_changed	src/apu/Multi_Buffer.h	/^	void channels_changed() { channels_changed_count_++; }$/;"	f	class:Multi_Buffer
channels_changed_count	src/apu/Multi_Buffer.h	/^	unsigned channels_changed_count() { return channels_changed_count_; }$/;"	f	class:Multi_Buffer
channels_changed_count_	src/apu/Multi_Buffer.h	/^	unsigned channels_changed_count_;$/;"	m	class:Multi_Buffer
chans	src/apu/Effects_Buffer.h	/^	blargg_vector<chan_t> chans;$/;"	m	class:Effects_Buffer
charBase	src/win32/GBTileView.h	/^  int charBase;$/;"	m	class:GBTileView
charBase	src/win32/TileView.h	/^  int charBase;$/;"	m	class:TileView
charbase	src/wx/gfxviewers.cpp	/^	int bank, charbase, palette;$/;"	m	class:Viewers::GBTileViewer	file:
charbase	src/wx/gfxviewers.cpp	/^	int charbase, is256, palette;$/;"	m	class:Viewers::TileViewer	file:
charbase	src/wx/gfxviewers.cpp	/^	int charbase, mapbase;$/;"	m	class:Viewers::GBMapViewer	file:
charbase	src/wx/gfxviewers.cpp	/^	wxControl *modelab, *mapbase, *charbase, *size, *colors, *prio, *mosaic,$/;"	m	class:Viewers::MapViewer	file:
charheight	src/wx/viewsupt.h	/^	int charheight, charwidth;$/;"	m	class:Viewers::MemView
charwidth	src/wx/viewsupt.h	/^	int charheight, charwidth;$/;"	m	class:Viewers::MemView
chatsCBAScramble	src/gba/Cheats.cpp	/^void chatsCBAScramble(u8 *array, int count, u8 b)$/;"	f
cheatCode	src/gb/gbCheats.h	/^  char cheatCode[20];$/;"	m	struct:gbCheat
cheatCode	src/gb/gbCheats.h	/^  char cheatCode[20];$/;"	m	struct:gbXxCheat
cheatDesc	src/gb/gbCheats.h	/^  char cheatDesc[100];$/;"	m	struct:gbXxCheat
cheatDesc	src/gb/gbCheats.h	/^  char cheatDesc[32];$/;"	m	struct:gbCheat
cheatSearch	src/gba/CheatSearch.cpp	/^void cheatSearch(const CheatSearchData *cs, int compare, int size,$/;"	f
cheatSearchBlocks	src/gba/CheatSearch.cpp	/^CheatSearchBlock cheatSearchBlocks[4];$/;"	v
cheatSearchCleanup	src/gba/CheatSearch.cpp	/^void cheatSearchCleanup(CheatSearchData *cs)$/;"	f
cheatSearchData	src/gba/CheatSearch.cpp	/^CheatSearchData cheatSearchData = {$/;"	v
cheatSearchEQ	src/gba/CheatSearch.cpp	/^static bool cheatSearchEQ(u32 a, u32 b)$/;"	f	file:
cheatSearchFunc	src/gba/CheatSearch.cpp	/^static bool (*cheatSearchFunc[])(u32,u32) = {$/;"	v	file:
cheatSearchGE	src/gba/CheatSearch.cpp	/^static bool cheatSearchGE(u32 a, u32 b)$/;"	f	file:
cheatSearchGT	src/gba/CheatSearch.cpp	/^static bool cheatSearchGT(u32 a, u32 b)$/;"	f	file:
cheatSearchGetCount	src/gba/CheatSearch.cpp	/^int cheatSearchGetCount(const CheatSearchData *cs, int size)$/;"	f
cheatSearchLE	src/gba/CheatSearch.cpp	/^static bool cheatSearchLE(u32 a, u32 b)$/;"	f	file:
cheatSearchLT	src/gba/CheatSearch.cpp	/^static bool cheatSearchLT(u32 a, u32 b)$/;"	f	file:
cheatSearchNE	src/gba/CheatSearch.cpp	/^static bool cheatSearchNE(u32 a, u32 b)$/;"	f	file:
cheatSearchRead	src/gba/CheatSearch.cpp	/^u32 cheatSearchRead(u8 *data, int off, int size)$/;"	f
cheatSearchSignedEQ	src/gba/CheatSearch.cpp	/^static bool cheatSearchSignedEQ(s32 a, s32 b)$/;"	f	file:
cheatSearchSignedFunc	src/gba/CheatSearch.cpp	/^static bool (*cheatSearchSignedFunc[])(s32,s32) = {$/;"	v	file:
cheatSearchSignedGE	src/gba/CheatSearch.cpp	/^static bool cheatSearchSignedGE(s32 a, s32 b)$/;"	f	file:
cheatSearchSignedGT	src/gba/CheatSearch.cpp	/^static bool cheatSearchSignedGT(s32 a, s32 b)$/;"	f	file:
cheatSearchSignedLE	src/gba/CheatSearch.cpp	/^static bool cheatSearchSignedLE(s32 a, s32 b)$/;"	f	file:
cheatSearchSignedLT	src/gba/CheatSearch.cpp	/^static bool cheatSearchSignedLT(s32 a, s32 b)$/;"	f	file:
cheatSearchSignedNE	src/gba/CheatSearch.cpp	/^static bool cheatSearchSignedNE(s32 a, s32 b)$/;"	f	file:
cheatSearchSignedRead	src/gba/CheatSearch.cpp	/^s32 cheatSearchSignedRead(u8 *data, int off, int size)$/;"	f
cheatSearchStart	src/gba/CheatSearch.cpp	/^void cheatSearchStart(const CheatSearchData *cs)$/;"	f
cheatSearchUpdateValues	src/gba/CheatSearch.cpp	/^void cheatSearchUpdateValues(const CheatSearchData *cs)$/;"	f
cheatSearchValue	src/gba/CheatSearch.cpp	/^void cheatSearchValue(const CheatSearchData *cs, int compare, int size,$/;"	f
cheat_find_handler	src/wx/guiinit.cpp	/^} cheat_find_handler;$/;"	v	typeref:class:CheatFind_t	file:
cheat_list_handler	src/wx/guiinit.cpp	/^} cheat_list_handler;$/;"	v	typeref:class:CheatList_t	file:
cheatdir	src/wx/guiinit.cpp	/^    wxString cheatdir, cheatfn, deffn;$/;"	m	class:CheatList_t	file:
cheatfn	src/wx/guiinit.cpp	/^    wxString cheatdir, cheatfn, deffn;$/;"	m	class:CheatList_t	file:
cheatsAdd	src/gba/Cheats.cpp	/^void cheatsAdd(const char *codeStr,$/;"	f
cheatsAddCBACode	src/gba/Cheats.cpp	/^void cheatsAddCBACode(const char *code, const char *desc)$/;"	f
cheatsAddCheatCode	src/gba/Cheats.cpp	/^void cheatsAddCheatCode(const char *code, const char *desc)$/;"	f
cheatsAddGSACode	src/gba/Cheats.cpp	/^void cheatsAddGSACode(const char *code, const char *desc, bool v3)$/;"	f
cheatsCBAArrayToValue	src/gba/Cheats.cpp	/^void cheatsCBAArrayToValue(u8 *array, u8 *dest)$/;"	f
cheatsCBACalcCRC	src/gba/Cheats.cpp	/^u16 cheatsCBACalcCRC(u8 *rom, int count)$/;"	f
cheatsCBACalcIndex	src/gba/Cheats.cpp	/^u32 cheatsCBACalcIndex(u32 x, u32 y)$/;"	f
cheatsCBAChangeEncryption	src/gba/Cheats.cpp	/^void cheatsCBAChangeEncryption(u32 *seed)$/;"	f
cheatsCBACurrentSeed	src/gba/Cheats.cpp	/^u8 cheatsCBACurrentSeed[12] = {$/;"	v
cheatsCBADecrypt	src/gba/Cheats.cpp	/^void cheatsCBADecrypt(u8 *decrypt)$/;"	f
cheatsCBAEncWorker	src/gba/Cheats.cpp	/^u32 cheatsCBAEncWorker()$/;"	f
cheatsCBAGenTable	src/gba/Cheats.cpp	/^void cheatsCBAGenTable() {$/;"	f
cheatsCBAGenValue	src/gba/Cheats.cpp	/^u16 cheatsCBAGenValue(u32 x, u32 y, u32 z)$/;"	f
cheatsCBAGetCount	src/gba/Cheats.cpp	/^int cheatsCBAGetCount()$/;"	f
cheatsCBAGetData	src/gba/Cheats.cpp	/^u16 cheatsCBAGetData(u8 *array)$/;"	f
cheatsCBAGetValue	src/gba/Cheats.cpp	/^u32 cheatsCBAGetValue(u8 *array)$/;"	f
cheatsCBAParseSeedCode	src/gba/Cheats.cpp	/^void cheatsCBAParseSeedCode(u32 address, u32 value, u32 *array)$/;"	f
cheatsCBAReverseArray	src/gba/Cheats.cpp	/^void cheatsCBAReverseArray(u8 *array, u8 *dest)$/;"	f
cheatsCBASeed	src/gba/Cheats.cpp	/^u32 cheatsCBASeed[4];$/;"	v
cheatsCBASeedBuffer	src/gba/Cheats.cpp	/^u8 cheatsCBASeedBuffer[0x30];$/;"	v
cheatsCBAShouldDecrypt	src/gba/Cheats.cpp	/^bool cheatsCBAShouldDecrypt()$/;"	f
cheatsCBATable	src/gba/Cheats.cpp	/^u16 cheatsCBATable[256];$/;"	v
cheatsCBATableGenerated	src/gba/Cheats.cpp	/^bool cheatsCBATableGenerated = false;$/;"	v
cheatsCBATemporaryValue	src/gba/Cheats.cpp	/^u32 cheatsCBATemporaryValue = 0;$/;"	v
cheatsCBAUpdateSeedBuffer	src/gba/Cheats.cpp	/^void cheatsCBAUpdateSeedBuffer(u32 a, u8 *buffer, int count)$/;"	f
cheatsCheckKeys	src/gba/Cheats.cpp	/^int cheatsCheckKeys(u32 keys, u32 extended)$/;"	f
cheatsCheckKeys	src/libretro/libretro.cpp	/^int cheatsCheckKeys(u32 keys, u32 extended)$/;"	f
cheatsDecryptGSACode	src/gba/Cheats.cpp	/^void cheatsDecryptGSACode(u32& address, u32& value, bool v3)$/;"	f
cheatsDelete	src/gba/Cheats.cpp	/^void cheatsDelete(int number, bool restore)$/;"	f
cheatsDeleteAll	src/gba/Cheats.cpp	/^void cheatsDeleteAll(bool restore)$/;"	f
cheatsDisable	src/gba/Cheats.cpp	/^void cheatsDisable(int i)$/;"	f
cheatsEnable	src/gba/Cheats.cpp	/^void cheatsEnable(int i)$/;"	f
cheatsEnabled	src/gba/Globals.cpp	/^bool cheatsEnabled = true;$/;"	v
cheatsEnabled	src/wx/opts.h	/^    bool cheatsEnabled;$/;"	m	struct:opts_t
cheatsGSAChangeEncryption	src/gba/Cheats.cpp	/^void cheatsGSAChangeEncryption(u16 value, bool v3) {$/;"	f
cheatsGSAGetDeadface	src/gba/Cheats.cpp	/^u16 cheatsGSAGetDeadface(bool v3)$/;"	f
cheatsGetType	src/gba/Cheats.cpp	/^static u8 cheatsGetType(u32 address)$/;"	f	file:
cheatsImportGSACodeFile	src/gba/Cheats.cpp	/^bool cheatsImportGSACodeFile(const char *name, int game, bool v3)$/;"	f
cheatsList	src/gba/Cheats.cpp	/^CheatsData cheatsList[100];$/;"	v
cheatsLoadCheatList	src/gba/Cheats.cpp	/^bool cheatsLoadCheatList(const char *file)$/;"	f
cheatsNumber	src/gba/Cheats.cpp	/^int cheatsNumber = 0;$/;"	v
cheatsReadGame	src/gba/Cheats.cpp	/^void cheatsReadGame(gzFile file, int version)$/;"	f
cheatsReadGameSkip	src/gba/Cheats.cpp	/^void cheatsReadGameSkip( gzFile file, int version )$/;"	f
cheatsSaveCheatList	src/gba/Cheats.cpp	/^void cheatsSaveCheatList(const char *file)$/;"	f
cheatsSaveGame	src/gba/Cheats.cpp	/^void cheatsSaveGame(gzFile file)$/;"	f
cheatsVerifyCheatCode	src/gba/Cheats.cpp	/^bool cheatsVerifyCheatCode(const char *code, const char *desc)$/;"	f
cheatsWriteByte	src/gba/Cheats.cpp	/^void cheatsWriteByte(u32 address, u8 value)$/;"	f
cheatsWriteHalfWord	src/gba/Cheats.cpp	/^void cheatsWriteHalfWord(u32 address, u16 value)$/;"	f
cheatsWriteMemory	src/gba/Cheats.cpp	/^void cheatsWriteMemory(u32 address, u32 value)$/;"	f
cheats_dirty	src/wx/wxvbam.h	/^    bool cheats_dirty;$/;"	m	class:GameArea
check	fex/fex/blargg_source.h	51;"	d
check	fex/fex/blargg_source.h	52;"	d
check	src/apu/blargg_source.h	42;"	d
check	src/apu/blargg_source.h	43;"	d
checkDevices	src/win32/DirectInput.cpp	/^void DirectInput::checkDevices()$/;"	f	class:DirectInput
checkDicSize	fex/7z_C/LzmaDec.h	/^  UInt32 checkDicSize;$/;"	m	struct:__anon17
checkJoypads	src/win32/DirectInput.cpp	/^static void checkJoypads()$/;"	f	file:
checkKey	src/win32/DirectInput.cpp	/^BOOL checkKey(KeyList &k)$/;"	f
checkKey	src/win32/DirectInput.cpp	/^BOOL checkKey(LONG_PTR key)$/;"	f
checkKeyboard	src/win32/DirectInput.cpp	/^static void checkKeyboard()$/;"	f	file:
checkKeys	src/win32/DirectInput.cpp	/^static void checkKeys()$/;"	f	file:
checkKeys	src/win32/DirectInput.cpp	/^void DirectInput::checkKeys()$/;"	f	class:DirectInput
checkMotionKeys	src/win32/DirectInput.cpp	/^void DirectInput::checkMotionKeys()$/;"	f	class:DirectInput
check_dir	src/wx/widgets/joyedit.cpp	191;"	d	file:
check_header	src/common/memgzio.c	/^local void check_header(s)$/;"	f
check_meta	src/wx/widgets/keyedit.cpp	127;"	d	file:
checkable_mi	src/wx/wxvbam.h	/^    checkable_mi_array_t checkable_mi;$/;"	m	class:MainFrame
checkable_mi_array_t	src/wx/wxvbam.h	/^typedef std::vector<checkable_mi_t> checkable_mi_array_t;$/;"	t
checkable_mi_t	src/wx/wxvbam.h	/^struct checkable_mi_t {$/;"	s
chk_str	src/wx/widgets/keyedit.cpp	148;"	d	file:
cie	src/gba/elf.cpp	/^  ELFcie *cie;$/;"	m	struct:ELFfde	file:
cl	src/gba/GBA-arm.cpp	317;"	d	file:
clazz	src/gba/elf.h	/^  u8 clazz;$/;"	m	struct:ELFHeader
cleanup	src/win32/Direct3D.cpp	/^void Direct3DDisplay::cleanup()$/;"	f	class:Direct3DDisplay
cleanup	src/win32/OpenGL.cpp	/^void OpenGLDisplay::cleanup()$/;"	f	class:OpenGLDisplay
clear	fex/fex/blargg_common.cpp	/^void blargg_vector_::clear()$/;"	f	class:blargg_vector_
clear	src/apu/Blip_Buffer.cpp	/^void Blip_Buffer::clear( int entire_buffer )$/;"	f	class:Blip_Buffer
clear	src/apu/Effects_Buffer.cpp	/^void Effects_Buffer::clear()$/;"	f	class:Effects_Buffer
clear	src/apu/Multi_Buffer.cpp	/^void Stereo_Buffer::clear()$/;"	f	class:Stereo_Buffer
clear	src/apu/Multi_Buffer.cpp	/^void Tracked_Blip_Buffer::clear()$/;"	f	class:Tracked_Blip_Buffer
clear	src/apu/Multi_Buffer.h	/^	void clear() { buf.clear(); }$/;"	f	class:Mono_Buffer
clear	src/apu/Multi_Buffer.h	/^	void clear() { }$/;"	f	class:Silent_Buffer
clear	src/apu/blargg_common.h	/^	void clear() { void* p = begin_; begin_ = 0; size_ = 0; free( p ); }$/;"	f	class:blargg_vector
clear	src/common/RingBuffer.h	/^	void clear() {$/;"	f	class:RingBuffer
clear	src/win32/Direct3D.cpp	/^void Direct3DDisplay::clear()$/;"	f	class:Direct3DDisplay
clear	src/win32/OpenGL.cpp	/^void OpenGLDisplay::clear()$/;"	f	class:OpenGLDisplay
clearLog	src/win32/Logging.cpp	/^void Logging::clearLog()$/;"	f	class:Logging
clearTexture	src/win32/Direct3D.cpp	/^bool Direct3DDisplay::clearTexture( LPDIRECT3DTEXTURE9 texture, size_t textureHeight )$/;"	f	class:Direct3DDisplay
clear_b	src/wx/guiinit.cpp	/^    wxControl *update_b, *clear_b, *add_b;$/;"	m	class:CheatFind_t	file:
clear_echo	src/apu/Effects_Buffer.cpp	/^void Effects_Buffer::clear_echo()$/;"	f	class:Effects_Buffer
clear_file	fex/fex/File_Extractor.cpp	/^void File_Extractor::clear_file()$/;"	f	class:File_Extractor
clear_file_v	fex/fex/File_Extractor.h	/^	virtual void         clear_file_v()             { }$/;"	f	struct:fex_t
clear_file_v	fex/fex/Zip_Extractor.cpp	/^void Zip_Extractor::clear_file_v()$/;"	f	class:Zip_Extractor
clear_modified	src/apu/Blip_Buffer.h	/^	Blip_Buffer* clear_modified() { Blip_Buffer* b = modified_; modified_ = 0; return b; }$/;"	f	class:Blip_Buffer
clearable	src/wx/widgets/wx/keyedit.h	/^    bool clearable;$/;"	m	class:wxKeyTextCtrl
click	src/wx/viewsupt.cpp	/^    void PixViewEvt::click()$/;"	f	class:Viewers::PixViewEvt
client	src/gba/GBASockClient.h	/^	sf::SocketTCP client;$/;"	m	class:GBASockClient
clk_mul	src/apu/Gb_Oscs.h	/^	enum { clk_mul  = GB_APU_OVERCLOCK };$/;"	e	enum:Gb_Osc::__anon132
clockTicks	src/gb/GB.cpp	/^int clockTicks = 0;$/;"	v
clockTicks	src/gba/GBA-arm.cpp	/^static int clockTicks;$/;"	v	file:
clockTicks	src/gba/GBA-thumb.cpp	/^static int clockTicks;$/;"	v	file:
clock_envelope	src/apu/Gb_Oscs.cpp	/^void Gb_Env::clock_envelope()$/;"	f	class:Gb_Env
clock_length	src/apu/Gb_Oscs.cpp	/^void Gb_Osc::clock_length()$/;"	f	class:Gb_Osc
clock_rate	src/apu/Blip_Buffer.h	/^inline long Blip_Buffer::clock_rate() const     { return clock_rate_; }$/;"	f	class:Blip_Buffer
clock_rate	src/apu/Blip_Buffer.h	/^inline void Blip_Buffer::clock_rate( long cps ) { factor_ = clock_rate_factor( clock_rate_ = cps ); }$/;"	f	class:Blip_Buffer
clock_rate	src/apu/Effects_Buffer.cpp	/^void Effects_Buffer::clock_rate( long rate )$/;"	f	class:Effects_Buffer
clock_rate	src/apu/Gb_Apu.h	/^	enum { clock_rate = 4194304 * GB_APU_OVERCLOCK };$/;"	e	enum:Gb_Apu::__anon139
clock_rate	src/apu/Multi_Buffer.cpp	/^void Stereo_Buffer::clock_rate( long rate )$/;"	f	class:Stereo_Buffer
clock_rate	src/apu/Multi_Buffer.h	/^	void clock_rate( long ) { }$/;"	f	class:Silent_Buffer
clock_rate	src/apu/Multi_Buffer.h	/^	void clock_rate( long rate ) { buf.clock_rate( rate ); }$/;"	f	class:Mono_Buffer
clock_rate_	src/apu/Blip_Buffer.h	/^	long clock_rate_;$/;"	m	class:Blip_Buffer
clock_rate_	src/apu/Effects_Buffer.h	/^	long clock_rate_;$/;"	m	class:Effects_Buffer
clock_rate_factor	src/apu/Blip_Buffer.cpp	/^blip_resampled_time_t Blip_Buffer::clock_rate_factor( long rate ) const$/;"	f	class:Blip_Buffer
clock_sweep	src/apu/Gb_Oscs.cpp	/^void Gb_Sweep_Square::clock_sweep()$/;"	f	class:Gb_Sweep_Square
close	fex/fex/Data_Reader.cpp	/^void Gzip_File_Reader::close()$/;"	f	class:Gzip_File_Reader
close	fex/fex/Data_Reader.cpp	/^void Std_File_Reader::close()$/;"	f	class:Std_File_Reader
close	fex/fex/File_Extractor.cpp	/^void File_Extractor::close()$/;"	f	class:File_Extractor
close	fex/fex/Gzip_Reader.cpp	/^void Gzip_Reader::close()$/;"	f	class:Gzip_Reader
close	src/gba/remote.cpp	23;"	d	file:
close	src/win32/XAudio2.cpp	/^void XAudio2_Output::close()$/;"	f	class:XAudio2_Output
close	src/wx/xaudio2.cpp	/^void XAudio2_Output::close()$/;"	f	class:XAudio2_Output
close_	fex/fex/File_Extractor.cpp	/^void File_Extractor::close_()$/;"	f	class:File_Extractor
close_v	fex/fex/Binary_Extractor.cpp	/^void Binary_Extractor::close_v()$/;"	f	class:Binary_Extractor
close_v	fex/fex/File_Extractor.h	/^inline void         File_Extractor::close_v()   { }$/;"	f	class:File_Extractor
close_v	fex/fex/Gzip_Extractor.cpp	/^void Gzip_Extractor::close_v()$/;"	f	class:Gzip_Extractor
close_v	fex/fex/Rar_Extractor.cpp	/^void Rar_Extractor::close_v()$/;"	f	class:Rar_Extractor
close_v	fex/fex/Zip7_Extractor.cpp	/^void Zip7_Extractor::close_v()$/;"	f	class:Zip7_Extractor
close_v	fex/fex/Zip_Extractor.cpp	/^void Zip_Extractor::close_v()$/;"	f	class:Zip_Extractor
cmd	src/wx/wxvbam.h	/^    const wxChar *cmd, *name;$/;"	m	struct:cmditem
cmd	src/wx/wxvbam.h	/^    int cmd;$/;"	m	struct:checkable_mi_t
cmd_enable	src/wx/wxvbam.h	/^    int cmd_enable;$/;"	m	class:MainFrame
cmd_id	src/wx/wxvbam.h	/^    int cmd_id;$/;"	m	struct:cmditem
cmdid_lt	src/wx/guiinit.cpp	/^static bool cmdid_lt(const wxAcceleratorEntry &a, const wxAcceleratorEntry &b)$/;"	f	file:
cmditem	src/wx/wxvbam.h	/^extern struct cmditem {$/;"	s
cmditem_lt	src/wx/cmdevents.cpp	/^bool cmditem_lt(const struct cmditem &cmd1, const struct cmditem &cmd2)$/;"	f
code	fex/7z_C/LzmaDec.h	/^  UInt32 range, code;$/;"	m	struct:__anon17
code	fex/fex/blargg_errors.h	/^	int code;$/;"	m	struct:blargg_err_to_code_t
code	src/gb/gbCheats.h	/^  int code;$/;"	m	struct:gbCheat
code	src/gb/gbMemory.h	/^  int code;$/;"	m	struct:mapperMBC7
code	src/gba/Cheats.h	/^  int code;$/;"	m	struct:CheatsData
code	src/win32/RomInfo.cpp	/^  LPCTSTR code;$/;"	m	struct:WinGBACompanyName	file:
code	src/wx/cmdevents.cpp	/^    const wxChar *code, *name;$/;"	m	struct:rom_maker	file:
codeAlign	src/gba/elf.cpp	/^  int codeAlign;$/;"	m	struct:ELFFrameState	file:
codeAlign	src/gba/elf.cpp	/^  u32 codeAlign;$/;"	m	struct:ELFcie	file:
codeTicksAccess16	src/gba/GBAcpu.h	/^inline int codeTicksAccess16(u32 address) \/\/ THUMB NON SEQ$/;"	f
codeTicksAccess32	src/gba/GBAcpu.h	/^inline int codeTicksAccess32(u32 address) \/\/ ARM NON SEQ$/;"	f
codeTicksAccessSeq16	src/gba/GBAcpu.h	/^inline int codeTicksAccessSeq16(u32 address) \/\/ THUMB SEQ$/;"	f
codeTicksAccessSeq32	src/gba/GBAcpu.h	/^inline int codeTicksAccessSeq32(u32 address) \/\/ ARM SEQ$/;"	f
codestring	src/gba/Cheats.h	/^  char codestring[20];$/;"	m	struct:CheatsData
coeff	src/gba/GBAGfx.cpp	/^int coeff[32] = {$/;"	v
col1minw	src/wx/guiinit.cpp	/^    int col1minw;$/;"	m	class:CheatList_t	file:
colbmp	src/wx/gfxviewers.cpp	/^	u8 colbmp[16*16*3*2];$/;"	m	class:Viewers::PaletteViewer	file:
colbmp	src/wx/gfxviewers.cpp	/^	u8 colbmp[4*8*3*2];$/;"	m	class:Viewers::GBPaletteViewer	file:
color	src/win32/ColorButton.h	/^  u16 color;$/;"	m	class:ColorButton
color	src/win32/ColorControl.h	/^  u16 color;$/;"	m	class:ColorControl
color	src/win32/Direct3D.cpp	/^		D3DCOLOR color;$/;"	m	struct:Direct3DDisplay::TRANSP_VERTEX	file:
color	src/win32/GBMapView.h	/^  ColorControl color;$/;"	m	class:GBMapView
color	src/win32/GBOamView.h	/^  ColorControl color;$/;"	m	class:GBOamView
color	src/win32/GBTileView.h	/^  ColorControl color;$/;"	m	class:GBTileView
color	src/win32/MapView.h	/^  ColorControl color;$/;"	m	class:MapView
color	src/win32/OamView.h	/^  ColorControl color;$/;"	m	class:OamView
color	src/win32/TileView.h	/^  ColorControl color;$/;"	m	class:TileView
color1	src/filters/2xSaImmx.asm	/^color1   equ -2$/;"	d
color2	src/filters/2xSaImmx.asm	/^color2   equ 0$/;"	d
color3	src/filters/2xSaImmx.asm	/^color3   equ 2$/;"	d
color4	src/filters/2xSaImmx.asm	/^color4   equ -2$/;"	d
color5	src/filters/2xSaImmx.asm	/^color5   equ 0$/;"	d
color6	src/filters/2xSaImmx.asm	/^color6   equ 2$/;"	d
color7	src/filters/2xSaImmx.asm	/^color7   equ -2$/;"	d
color8	src/filters/2xSaImmx.asm	/^color8   equ 0$/;"	d
color9	src/filters/2xSaImmx.asm	/^color9   equ 2$/;"	d
colorA	src/filters/2xSaImmx.asm	/^colorA   equ 0$/;"	d
colorA0	src/filters/2xSaImmx.asm	/^colorA0   equ -2$/;"	d
colorA1	src/filters/2xSaImmx.asm	/^colorA1   equ 0$/;"	d
colorA2	src/filters/2xSaImmx.asm	/^colorA2   equ 2$/;"	d
colorA3	src/filters/2xSaImmx.asm	/^colorA3   equ 4$/;"	d
colorB	src/filters/2xSaImmx.asm	/^colorB   equ 2$/;"	d
colorB0	src/filters/2xSaImmx.asm	/^colorB0   equ -2$/;"	d
colorB1	src/filters/2xSaImmx.asm	/^colorB1   equ 0$/;"	d
colorB2	src/filters/2xSaImmx.asm	/^colorB2   equ 2$/;"	d
colorB3	src/filters/2xSaImmx.asm	/^colorB3   equ 4$/;"	d
colorBytes	src/filters/simpleFilter.cpp	136;"	d	file:
colorBytes	src/filters/simpleFilter.cpp	145;"	d	file:
colorBytes	src/filters/simpleFilter.cpp	186;"	d	file:
colorBytes	src/filters/simpleFilter.cpp	193;"	d	file:
colorBytes	src/filters/simpleFilter.cpp	234;"	d	file:
colorBytes	src/filters/simpleFilter.cpp	243;"	d	file:
colorBytes	src/filters/simpleFilter.cpp	284;"	d	file:
colorBytes	src/filters/simpleFilter.cpp	95;"	d	file:
colorC	src/filters/2xSaImmx.asm	/^colorC   equ 0$/;"	d
colorControl	src/win32/GBPaletteView.h	/^  ColorControl colorControl;$/;"	m	class:GBPaletteView
colorControl	src/win32/PaletteView.h	/^  ColorControl colorControl;$/;"	m	class:PaletteView
colorControls	src/win32/GBColorDlg.h	/^  ColorButton colorControls[8];$/;"	m	class:GBColorDlg
colorD	src/filters/2xSaImmx.asm	/^colorD   equ 2$/;"	d
colorE	src/filters/2xSaImmx.asm	/^colorE   equ 0$/;"	d
colorF	src/filters/2xSaImmx.asm	/^colorF   equ 2$/;"	d
colorG	src/filters/2xSaImmx.asm	/^colorG   equ -2$/;"	d
colorH	src/filters/2xSaImmx.asm	/^colorH   equ -2$/;"	d
colorI	src/filters/2xSaImmx.asm	/^colorI   equ -2$/;"	d
colorJ	src/filters/2xSaImmx.asm	/^colorJ   equ 4$/;"	d
colorK	src/filters/2xSaImmx.asm	/^colorK   equ 4$/;"	d
colorL	src/filters/2xSaImmx.asm	/^colorL   equ 4$/;"	d
colorM	src/filters/2xSaImmx.asm	/^colorM   equ -2$/;"	d
colorMask	src/filters/2xSaI.cpp	/^static u32 colorMask = 0xF7DEF7DE;$/;"	v	file:
colorMask	src/filters/2xSaImmx.asm	/^colorMask     dd 0xF7DEF7DE,0xF7DEF7DE$/;"	d
colorN	src/filters/2xSaImmx.asm	/^colorN   equ 0$/;"	d
colorO	src/filters/2xSaImmx.asm	/^colorO   equ 2$/;"	d
colorP	src/filters/2xSaImmx.asm	/^colorP   equ 4$/;"	d
colorS1	src/filters/2xSaImmx.asm	/^colorS1   equ 4$/;"	d
colorS2	src/filters/2xSaImmx.asm	/^colorS2   equ 4$/;"	d
colorctrl	src/wx/viewsupt.h	230;"	d
colors	src/win32/BitmapControl.h	/^  u8 colors[3*64];$/;"	m	class:BitmapControl
colors	src/win32/GBColorDlg.h	/^  u16 colors[24];$/;"	m	class:GBColorDlg
colors	src/win32/PaletteViewControl.h	/^  int colors;$/;"	m	class:PaletteViewControl
colors	src/win32/ZoomControl.h	/^  u8 colors[3*64];$/;"	m	class:ZoomControl
colors	src/wx/gfxviewers.cpp	/^	wxControl *modelab, *mapbase, *charbase, *size, *colors, *prio, *mosaic,$/;"	m	class:Viewers::MapViewer	file:
colors	src/wx/gfxviewers.cpp	/^	wxControl *pos, *mode, *colors, *pallab, *tile, *prio, *size, *rot, *flg;$/;"	m	class:Viewers::OAMViewer	file:
combo_color_depth	src/win32/FullscreenSettings.h	/^	CComboBox combo_color_depth;$/;"	m	class:FullscreenSettings
combo_device	src/win32/FullscreenSettings.h	/^	CComboBox combo_device;$/;"	m	class:FullscreenSettings
combo_refresh_rate	src/win32/FullscreenSettings.h	/^	CComboBox combo_refresh_rate;$/;"	m	class:FullscreenSettings
combo_resolution	src/win32/FullscreenSettings.h	/^	CComboBox combo_resolution;$/;"	m	class:FullscreenSettings
command	src/gba/RTC.cpp	/^  u8 command;$/;"	m	struct:__anon51	file:
command	src/win32/Commands.cpp	/^  const char *command;$/;"	m	struct:__anon87	file:
comment	fex/fex/Zip_Extractor.cpp	/^	char comment [2]; \/\/ [comment_len]$/;"	m	struct:end_entry_t	file:
comment_len	fex/fex/Zip_Extractor.cpp	/^	byte comment_len [2];$/;"	m	struct:end_entry_t	file:
comment_len	fex/fex/Zip_Extractor.cpp	/^	byte comment_len [2];$/;"	m	struct:entry_t	file:
compare	src/gb/gbCheats.h	/^  u8 compare;$/;"	m	struct:gbCheat
compdir	src/gba/elf.h	/^  char *compdir;$/;"	m	struct:CompileUnit
computePatchCRC	src/common/Patch.cpp	/^static uLong computePatchCRC(FILE *f, unsigned int size)$/;"	f	file:
cond	src/gb/gbDis.cpp	/^static const char *cond[] =$/;"	v	file:
cond_address	src/sdl/debugger.cpp	/^  u32 cond_address;$/;"	m	struct:breakpointInfo	file:
cond_rel	src/sdl/debugger.cpp	/^  char cond_rel;$/;"	m	struct:breakpointInfo	file:
cond_size	src/sdl/debugger.cpp	/^  int cond_size;$/;"	m	struct:breakpointInfo	file:
cond_value	src/sdl/debugger.cpp	/^  u32 cond_value;$/;"	m	struct:breakpointInfo	file:
conditions	src/gba/armdis.cpp	/^const char *conditions[16] = {$/;"	v
config	src/apu/Effects_Buffer.h	/^	config_t& config() { return config_; }$/;"	f	class:Effects_Buffer
config	src/apu/Effects_Buffer.h	/^	config_t& config() { return config_; }$/;"	f	class:Simple_Effects_Buffer
config_	src/apu/Effects_Buffer.h	/^	config_t config_;$/;"	m	class:Effects_Buffer
config_	src/apu/Effects_Buffer.h	/^	config_t config_;$/;"	m	class:Simple_Effects_Buffer
config_path	src/wx/wxvbam.h	/^    wxPathList config_path;$/;"	m	class:wxvbamApp
config_t	src/apu/Effects_Buffer.h	/^	struct config_t$/;"	s	class:Effects_Buffer
config_t	src/apu/Effects_Buffer.h	/^	struct config_t$/;"	s	class:Simple_Effects_Buffer
connected	src/gba/GBALink.h	/^	bool connected;$/;"	m	struct:__anon46
const	src/sdl/getopt.c	41;"	d	file:
const	src/sdl/getopt1.c	33;"	d	file:
const3	src/filters/hq/asm/hq4x_16.asm	/^const3       dd  0x00030003,0x00000003$/;"	d
const3	src/filters/hq/asm/hq4x_32.asm	/^const3       dd  0x00030003,0x00000003$/;"	d
const5	src/filters/hq/asm/hq4x_16.asm	/^const5       dd  0x00050005,0x00000005$/;"	d
const5	src/filters/hq/asm/hq4x_32.asm	/^const5       dd  0x00050005,0x00000005$/;"	d
const6	src/filters/hq/asm/hq4x_16.asm	/^const6       dd  0x00060006,0x00000006$/;"	d
const6	src/filters/hq/asm/hq4x_32.asm	/^const6       dd  0x00060006,0x00000006$/;"	d
const7	src/filters/hq/asm/hq3x_16.asm	/^const7       dd  0x00070007,0x00000007$/;"	d
const7	src/filters/hq/asm/hq3x_32.asm	/^const7       dd  0x00070007,0x00000007$/;"	d
const7	src/filters/hq/asm/hq4x_16.asm	/^const7       dd  0x00070007,0x00000007$/;"	d
const7	src/filters/hq/asm/hq4x_32.asm	/^const7       dd  0x00070007,0x00000007$/;"	d
const_iterator	src/gtk/configfile.h	/^  typedef std::list<Line>::const_iterator const_iterator;$/;"	t	class:VBA::Config::Section
const_iterator	src/gtk/configfile.h	/^  typedef std::list<Section>::const_iterator const_iterator;$/;"	t	class:VBA::Config::File
context	src/win32/OpenAL.cpp	/^	ALCcontext    *context;$/;"	m	class:OpenAL	file:
context	src/wx/openal.cpp	/^	ALCcontext    *context;$/;"	m	class:OpenAL	file:
context_reset	src/libretro/libretro.h	/^   retro_hw_context_reset_t context_reset; \/\/ Set by libretro core.$/;"	m	struct:retro_hw_render_callback
context_type	src/libretro/libretro.h	/^   enum retro_hw_context_type context_type; \/\/ Which API to use. Set by libretro core.$/;"	m	struct:retro_hw_render_callback	typeref:enum:retro_hw_render_callback::retro_hw_context_type
control	fex/7z_C/Lzma2Dec.h	/^  Byte control;$/;"	m	struct:__anon34
control	src/win32/MapView.h	/^  u16 control;$/;"	m	class:MapView
control	src/wx/gfxviewers.cpp	/^	u16 control, mode;$/;"	m	class:Viewers::MapViewer	file:
controls	src/wx/widgets/wx/wxmisc.h	/^    wxWindow_v controls;$/;"	m	class:wxBoolEnHandler
controls	src/wx/widgets/wx/wxmisc.h	/^    wxWindow_v controls;$/;"	m	class:wxBoolEnValidator
controls	src/wx/widgets/wx/wxmisc.h	/^    wxWindow_v controls;$/;"	m	class:wxBoolIntEnValidator
controls	src/wx/widgets/wx/wxmisc.h	/^    wxWindow_v controls;$/;"	m	class:wxBoolRevEnValidator
conv_surf	src/wx/drawing.h	/^    cairo_surface_t *conv_surf;$/;"	m	class:CairoDrawingPanel
convert32bpp_16bpp	src/filters/hq/asm/hq3x32.cpp	/^static inline void convert32bpp_16bpp(unsigned char *pIn, unsigned int width)$/;"	f	file:
convert_err	fex/fex/Rar_Extractor.cpp	/^blargg_err_t Rar_Extractor::convert_err( unrar_err_t err )$/;"	f	class:Rar_Extractor
convert_gz_error	fex/fex/Data_Reader.cpp	/^static blargg_err_t convert_gz_error( gzFile file )$/;"	f	file:
converter	src/common/ffmpeg.h	/^    priv_SwsContext *converter;$/;"	m	class:MediaRecorder
convpic	src/common/ffmpeg.h	/^    priv_AVFrame *pic, *convpic;$/;"	m	class:MediaRecorder
coords	src/wx/gfxviewers.cpp	/^	wxControl *coords, *addr, *tile, *flip, *palette, *prio;$/;"	m	class:Viewers::GBMapViewer	file:
coords	src/wx/gfxviewers.cpp	/^	wxControl *coords, *addr, *tile, *flip, *palette;$/;"	m	class:Viewers::MapViewer	file:
correct_crc	fex/fex/Zip_Extractor.h	/^	unsigned correct_crc;$/;"	m	class:Zip_Extractor
corrupt_wave	src/apu/Gb_Oscs.cpp	/^void Gb_Wave::corrupt_wave()$/;"	f	class:Gb_Wave
count	src/gb/gbMemory.h	/^  int count;$/;"	m	struct:mapperMBC7
count	src/gba/CheatSearch.h	/^  int count;$/;"	m	struct:CheatSearchData
count	src/gba/GBA-arm.cpp	/^static void count(u32 opcode, int cond_res)$/;"	f	file:
count	src/gba/GBA.cpp	/^int count = 0;$/;"	v
count	src/gba/Sound.cpp	/^	int  count;$/;"	m	class:Gba_Pcm_Fifo	file:
count	src/gba/elf.h	/^  int count;$/;"	m	struct:ARanges
count	src/gba/elf.h	/^  int count;$/;"	m	struct:Enum
count	src/win32/Disassemble.h	/^  int count;$/;"	m	class:Disassemble
count	src/win32/GBDisassemble.h	/^  int count;$/;"	m	class:GBDisassemble
count16	src/wx/guiinit.cpp	/^    int count8, count16, count32; \/\/ number of aligned addresses in addrs$/;"	m	class:CheatListCtrl	file:
count32	src/wx/guiinit.cpp	/^    int count8, count16, count32; \/\/ number of aligned addresses in addrs$/;"	m	class:CheatListCtrl	file:
count8	src/wx/guiinit.cpp	/^    int count8, count16, count32; \/\/ number of aligned addresses in addrs$/;"	m	class:CheatListCtrl	file:
count_clocks	src/apu/Blip_Buffer.cpp	/^blip_time_t Blip_Buffer::count_clocks( long count ) const$/;"	f	class:Blip_Buffer
count_samples	src/apu/Blip_Buffer.cpp	/^long Blip_Buffer::count_samples( blip_time_t t ) const$/;"	f	class:Blip_Buffer
counter	src/gba/GBALink.h	/^	int counter;$/;"	m	class:lserver
countof	src/win32/WinHelper.h	184;"	d
cp	src/wx/guiinit.cpp	/^    wxColourPickerCtrl *cp[8];$/;"	m	class:GBColorConfig_t	file:
cp	src/wx/viewsupt.h	/^	wxPanel *cp;$/;"	m	class:Viewers::ColorView
cpuBiosSwapped	src/gba/GBA.cpp	/^bool cpuBiosSwapped = false;$/;"	v
cpuBitsSet	src/gba/GBA.cpp	/^u8 cpuBitsSet[256];$/;"	v
cpuBreakLoop	src/gba/GBA.cpp	/^bool cpuBreakLoop = false;$/;"	v
cpuDisableSfx	src/gba/Globals.cpp	/^bool cpuDisableSfx = false;$/;"	v
cpuDmaCount	src/gba/GBA.cpp	/^int cpuDmaCount = 0;$/;"	v
cpuDmaHack	src/gba/GBA.cpp	/^bool cpuDmaHack = false;$/;"	v
cpuDmaLast	src/gba/GBA.cpp	/^u32 cpuDmaLast = 0;$/;"	v
cpuDmaTicksToUpdate	src/gba/GBA.cpp	/^int cpuDmaTicksToUpdate = 0;$/;"	v
cpuEEPROMEnabled	src/gba/GBA.cpp	/^bool cpuEEPROMEnabled = true;$/;"	v
cpuEEPROMSensorEnabled	src/gba/GBA.cpp	/^bool cpuEEPROMSensorEnabled = false;$/;"	v
cpuEnableProfiling	src/gba/GBA.cpp	/^void cpuEnableProfiling(int hz)$/;"	f
cpuFlashEnabled	src/gba/GBA.cpp	/^bool cpuFlashEnabled = true;$/;"	v
cpuIsMultiBoot	src/gba/Globals.cpp	/^bool cpuIsMultiBoot = false;$/;"	v
cpuLowestBitSet	src/gba/GBA.cpp	/^u8 cpuLowestBitSet[256];$/;"	v
cpuMasterCodeCheck	src/gba/GBAcpu.h	/^inline void cpuMasterCodeCheck()$/;"	f
cpuNextEvent	src/gba/GBA.cpp	/^int cpuNextEvent = 0;$/;"	v
cpuPrefetch	src/gba/GBA.cpp	/^u32 cpuPrefetch[2];$/;"	v
cpuProfil	src/gba/GBA.cpp	/^void cpuProfil(profile_segment *seg)$/;"	f
cpuSaveGameFunc	src/gba/GBA.cpp	/^void (*cpuSaveGameFunc)(u32,u8) = flashSaveDecide;$/;"	v
cpuSaveType	src/gba/Globals.cpp	/^int cpuSaveType = 0;$/;"	v
cpuSramEnabled	src/gba/GBA.cpp	/^bool cpuSramEnabled = true;$/;"	v
cpuTotalTicks	src/gba/GBA.cpp	/^int cpuTotalTicks = 0;$/;"	v
cpu_mmx	src/filters/2xSaI.cpp	/^  bool cpu_mmx = 1;$/;"	v
cpu_mmx	src/wx/opts.h	/^    bool cpu_mmx;$/;"	m	struct:opts_t
cpyImg16	src/win32/Display.h	/^inline void cpyImg16( unsigned char *dst, unsigned int dstPitch, unsigned char *src, unsigned int srcPitch, unsigned short width, unsigned short height )$/;"	f
cpyImg16bmp	src/win32/Display.h	/^inline void cpyImg16bmp( unsigned char *dst, unsigned char *src, unsigned int srcPitch, unsigned short width, unsigned short height )$/;"	f
cpyImg32	src/win32/Display.h	/^inline void cpyImg32( unsigned char *dst, unsigned int dstPitch, unsigned char *src, unsigned int srcPitch, unsigned short width, unsigned short height )$/;"	f
cpyImg32bmp	src/win32/Display.h	/^inline void cpyImg32bmp( unsigned char *dst, unsigned char *src, unsigned int srcPitch, unsigned short width, unsigned short height )$/;"	f
crc	fex/fex/Zip_Extractor.cpp	/^	byte crc [4];$/;"	m	struct:entry_t	file:
crc	fex/fex/Zip_Extractor.cpp	/^	byte crc [4];$/;"	m	struct:header_t	file:
crc	fex/fex/Zip_Extractor.h	/^	unsigned crc;       \/\/ ongoing CRC of extracted bytes$/;"	m	class:Zip_Extractor
crc	src/common/memgzio.c	/^    uLong    crc;     \/* crc32 of uncompressed data *\/$/;"	m	struct:mem_stream	file:
crc32	fex/fex/File_Extractor.h	/^	unsigned int crc32() const          { return crc32_; }$/;"	f	struct:fex_t
crc32	fex/fex/Gzip_Reader.h	/^	unsigned int crc32() const          { return crc32_; }$/;"	f	class:Gzip_Reader
crc32	src/libretro/scrc32.cpp	/^unsigned long crc32(unsigned long crc, const unsigned char *buf, unsigned int len)$/;"	f
crc32_	fex/fex/File_Extractor.h	/^	unsigned    crc32_;$/;"	m	struct:fex_t
crc32_	fex/fex/Gzip_Reader.h	/^	unsigned crc32_;$/;"	m	class:Gzip_Reader
crc_table	src/libretro/scrc32.cpp	/^static const unsigned long crc_table[256] = {$/;"	v	file:
createEditCaret	src/win32/MemoryViewer.cpp	/^void MemoryViewer::createEditCaret(int w, int h)$/;"	f	class:MemoryViewer
createFont	src/win32/Direct3D.cpp	/^void Direct3DDisplay::createFont()$/;"	f	class:Direct3DDisplay
createReport	src/win32/BugReport.cpp	/^CString BugReport::createReport()$/;"	f	class:BugReport
createTexture	src/win32/Direct3D.cpp	/^void Direct3DDisplay::createTexture( unsigned int textureWidth, unsigned int textureHeight )$/;"	f	class:Direct3DDisplay
cross	src/filters/hq/asm/hq3x_16.asm	/^cross     equ 12$/;"	d
cross	src/filters/hq/asm/hq3x_32.asm	/^cross     equ 12$/;"	d
cross	src/filters/hq/asm/hq4x_16.asm	/^cross     equ 12$/;"	d
cross	src/filters/hq/asm/hq4x_32.asm	/^cross     equ 12$/;"	d
cs	src/gb/gbMemory.h	/^  int cs;$/;"	m	struct:mapperMBC7
ctrl_idx	src/wx/widgets/wx/sdljoy.h	/^    unsigned short ctrl_idx;$/;"	m	class:wxSDLJoyEvent
ctrl_type	src/wx/widgets/wx/sdljoy.h	/^    unsigned short ctrl_type;$/;"	m	class:wxSDLJoyEvent
ctrl_val	src/wx/widgets/wx/sdljoy.h	/^    short ctrl_val;$/;"	m	class:wxSDLJoyEvent
ctx	src/wx/drawing.h	/^    wxGLContext ctx;$/;"	m	class:GLDrawingPanel
ctx_menu	src/wx/wxvbam.h	/^    wxMenu *ctx_menu;$/;"	m	class:MainFrame
cur	fex/7z_C/7zDec.c	/^  const Byte *cur;$/;"	m	struct:__anon37	file:
curas	src/wx/guiinit.cpp	/^    wxControl *curas;$/;"	m	class:AccelConfig_t	file:
curbool	src/wx/opts.h	125;"	d
curint	src/wx/opts.h	/^    int curint;$/;"	m	struct:opt_desc
currentAdapter	src/win32/OpenGL.cpp	/^	DWORD currentAdapter;$/;"	m	class:OpenGLDisplay	file:
currentBuffer	src/win32/XAudio2.cpp	/^	int    currentBuffer;$/;"	m	class:XAudio2_Output	file:
currentBuffer	src/wx/xaudio2.cpp	/^	int    currentBuffer;$/;"	m	class:XAudio2_Output	file:
currentDevice	src/win32/DirectInput.cpp	/^static deviceInfo *currentDevice = NULL;$/;"	v	file:
curstr	src/wx/opts.h	/^    wxString curstr;$/;"	m	struct:opt_desc
curval	src/wx/widgets/sdljoy.cpp	/^    short *curval;$/;"	m	struct:wxSDLJoyState	file:
curve	src/gba/gbafilter.cpp	/^static const unsigned char curve[32] = { 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0e, 0x10, 0x12,$/;"	v	file:
customBackdropColor	src/gba/Globals.cpp	/^int customBackdropColor = -1;$/;"	v
cutoff_freq	src/apu/Blip_Buffer.h	/^	long cutoff_freq;$/;"	m	class:blip_eq_t
cv	src/wx/gfxviewers.cpp	/^	ColorView *cv;$/;"	m	class:Viewers::GBPaletteViewer	file:
cv	src/wx/gfxviewers.cpp	/^	ColorView *cv;$/;"	m	class:Viewers::PaletteViewer	file:
cval	src/gba/armdis.cpp	/^  u32 cval;$/;"	m	struct:Opcodes	file:
cview	src/wx/viewsupt.h	/^	ColorView *cview;$/;"	m	class:Viewers::PixView
d	fex/7z_C/CpuArch.h	/^  UInt32 d;$/;"	m	struct:__anon35
d	src/wx/guiinit.cpp	2787;"	d	file:
d	src/wx/guiinit.cpp	2813;"	d	file:
d	src/wx/guiinit.cpp	3042;"	d	file:
d	src/wx/guiinit.cpp	3069;"	d	file:
d3dFilter	src/win32/VBA.h	/^  int d3dFilter;$/;"	m	class:VBA
d3dMotionBlur	src/win32/VBA.h	/^  bool d3dMotionBlur;$/;"	m	class:VBA
dac	src/gba/Sound.cpp	/^	int  dac;$/;"	m	class:Gba_Pcm_Fifo	file:
dac_bias	src/apu/Gb_Oscs.h	/^	enum { dac_bias = 7 };$/;"	e	enum:Gb_Osc::__anon133
dac_enabled	src/apu/Gb_Oscs.h	/^	int dac_enabled() const { return regs [0] & 0x80; }$/;"	f	class:Gb_Wave
dac_enabled	src/apu/Gb_Oscs.h	/^	int dac_enabled() const { return regs [2] & 0xF8; }$/;"	f	class:Gb_Env
dac_off_amp	src/apu/Gb_Oscs.h	/^	int             dac_off_amp;\/\/ amplitude when DAC is off$/;"	m	class:Gb_Osc
darkenMask	src/filters/2xSaImmx.asm	/^darkenMask    dd 0xC718C718,0xC718C718$/;"	d
data	fex/7z_C/7zBuf.h	/^  Byte *data;$/;"	m	struct:__anon3
data	fex/7z_C/7zBuf.h	/^  Byte *data;$/;"	m	struct:__anon4
data	fex/fex/File_Extractor.cpp	/^blargg_err_t File_Extractor::data( const void** data_out )$/;"	f	class:File_Extractor
data	fex/fex/Zlib_Inflater.h	/^	const unsigned char* data() const   { return zbuf.next_in; }$/;"	f	class:Zlib_Inflater
data	fex/fex/blargg_common.h	/^	void* data;$/;"	m	struct:blargg_callback
data	src/gba/CheatSearch.h	/^  u8 *data;$/;"	m	struct:CheatSearchBlock
data	src/gba/RTC.cpp	/^  u8 data[12];$/;"	m	struct:__anon51	file:
data	src/gba/elf.cpp	/^  u8 *data;$/;"	m	struct:ELFcie	file:
data	src/gba/elf.cpp	/^  u8 *data;$/;"	m	struct:ELFfde	file:
data	src/gba/elf.h	/^    u8 *data;$/;"	m	union:ELFAttr::__anon39
data	src/gba/elf.h	/^  u8 *data;$/;"	m	struct:ELFBlock
data	src/gba/elf.h	/^  u8 data;$/;"	m	struct:ELFHeader
data	src/libretro/libretro.h	/^   const void *data;       \/\/ Memory buffer of loaded game. Will be NULL if need_fullpath was set.$/;"	m	struct:retro_game_info
data	src/win32/BitmapControl.h	/^  u8 * data;$/;"	m	class:BitmapControl
data	src/win32/DirectInput.cpp	/^        UCHAR data[256];$/;"	m	union:deviceInfo::__anon71	file:
data	src/win32/GBACheats.h	/^  WinCheatsData *data;$/;"	m	class:GBACheatSearch
data	src/win32/GBCheatsDlg.h	/^  WinGbCheatsData *data;$/;"	m	class:GBCheatSearch
data	src/win32/GBMapView.h	/^  u8 *data;$/;"	m	class:GBMapView
data	src/win32/GBOamView.h	/^  u8 *data;$/;"	m	class:GBOamView
data	src/win32/GBTileView.h	/^  u8 *data;$/;"	m	class:GBTileView
data	src/win32/MapView.h	/^  u8 *data;$/;"	m	class:MapView
data	src/win32/OamView.h	/^  u8 *data;$/;"	m	class:OamView
data	src/win32/OpenGL.cpp	/^	u8 *data;$/;"	m	class:OpenGLDisplay	file:
data	src/win32/PaletteViewControl.h	/^  u8 *data;$/;"	m	class:PaletteViewControl
data	src/win32/TileView.h	/^  u8 *data;$/;"	m	class:TileView
dataAlign	src/gba/elf.cpp	/^  int dataAlign;$/;"	m	struct:ELFFrameState	file:
dataAlign	src/gba/elf.cpp	/^  s32 dataAlign;$/;"	m	struct:ELFcie	file:
dataLen	src/gba/RTC.cpp	/^  int dataLen;$/;"	m	struct:__anon51	file:
dataLen	src/gba/elf.cpp	/^  u32 dataLen;$/;"	m	struct:ELFcie	file:
dataLen	src/gba/elf.cpp	/^  u32 dataLen;$/;"	m	struct:ELFfde	file:
dataPos	fex/7z_C/7z.h	/^  UInt64 dataPos;$/;"	m	struct:__anon16
dataSize	src/win32/MemoryViewer.h	/^  int dataSize;$/;"	m	class:MemoryViewer
dataTicksAccess16	src/gba/GBAcpu.h	/^inline int dataTicksAccess16(u32 address) \/\/ DATA 8\/16bits NON SEQ$/;"	f
dataTicksAccess32	src/gba/GBAcpu.h	/^inline int dataTicksAccess32(u32 address) \/\/ DATA 32bits NON SEQ$/;"	f
dataTicksAccessSeq16	src/gba/GBAcpu.h	/^inline int dataTicksAccessSeq16(u32 address)\/\/ DATA 8\/16bits SEQ$/;"	f
dataTicksAccessSeq32	src/gba/GBAcpu.h	/^inline int dataTicksAccessSeq32(u32 address)\/\/ DATA 32bits SEQ$/;"	f
data_ptr_	fex/fex/File_Extractor.h	/^	void const* data_ptr_; \/\/ NULL if not read into memory$/;"	m	struct:fex_t
data_v	fex/fex/File_Extractor.cpp	/^blargg_err_t File_Extractor::data_v( void const** out )$/;"	f	class:File_Extractor
data_v	fex/fex/Rar_Extractor.cpp	/^blargg_err_t Rar_Extractor::data_v( void const** out )$/;"	f	class:Rar_Extractor
data_v	fex/fex/Zip7_Extractor.cpp	/^blargg_err_t Zip7_Extractor::data_v( void const** out )$/;"	f	class:Zip7_Extractor
date	fex/fex/Zip_Extractor.cpp	/^	byte date [4];$/;"	m	struct:entry_t	file:
date	fex/fex/Zip_Extractor.cpp	/^	byte date [4];$/;"	m	struct:header_t	file:
date_	fex/fex/File_Extractor.h	/^	unsigned    date_;$/;"	m	struct:fex_t
db	fex/7z_C/7z.h	/^  CSzAr db;$/;"	m	struct:__anon16
db	fex/fex/Zip7_Extractor.cpp	/^	CSzArEx db;$/;"	m	struct:Zip7_Extractor_Impl	file:
dbgMain	src/gtk/system.cpp	/^void (*dbgMain)() = debuggerMain;$/;"	v
dbgMain	src/sdl/SDL.cpp	/^void (*dbgMain)() = debuggerMain;$/;"	v
dbgMain	src/wx/sys.cpp	/^void (*dbgMain)();$/;"	v
dbgOutput	src/gtk/system.cpp	/^void (*dbgOutput)(const char *, u32) = debuggerOutput;$/;"	v
dbgOutput	src/libretro/libretro.cpp	/^void (*dbgOutput)(const char *s, u32 addr);$/;"	v
dbgOutput	src/sdl/SDL.cpp	/^void (*dbgOutput)(const char *, u32) = debuggerOutput;$/;"	v
dbgOutput	src/win32/VBA.cpp	/^void (*dbgOutput)(const char *, u32) = winOutput;$/;"	v
dbgOutput	src/wx/sys.cpp	/^void (*dbgOutput)(const char *s, u32 addr) = debuggerOutput;$/;"	v
dbgSignal	src/gtk/system.cpp	/^void (*dbgSignal)(int, int) = debuggerSignal;$/;"	v
dbgSignal	src/libretro/libretro.cpp	/^void (*dbgSignal)(int sig, int number);$/;"	v
dbgSignal	src/sdl/SDL.cpp	/^void (*dbgSignal)(int,int) = debuggerSignal;$/;"	v
dbgSignal	src/win32/VBA.cpp	/^void (*dbgSignal)(int,int) = winSignal;$/;"	v
dbgSignal	src/wx/sys.cpp	/^void (*dbgSignal)(int sig,int number) = debuggerSignal;$/;"	v
dcgettext	src/gtk/intl.h	31;"	d
dd	src/win32/ResizeDlg.h	/^  void *dd;$/;"	m	class:ResizeDlg
debugClosePty	src/wx/sys.cpp	/^static void debugClosePty()$/;"	f	file:
debugCloseSock	src/wx/sys.cpp	/^static void debugCloseSock()$/;"	f	file:
debugGetSlavePty	src/wx/sys.cpp	/^const wxString &debugGetSlavePty()$/;"	f
debugOpenPty	src/wx/sys.cpp	/^bool debugOpenPty()$/;"	f
debugReadPty	src/wx/sys.cpp	/^static int debugReadPty(char *buf, int len)$/;"	f	file:
debugReadSock	src/wx/sys.cpp	/^static int debugReadSock(char *buf, int len)$/;"	f	file:
debugStartListen	src/wx/sys.cpp	/^bool debugStartListen(int port)$/;"	f
debugState	src/win32/OpenAL.cpp	/^void OpenAL::debugState()$/;"	f	class:OpenAL
debugState	src/win32/OpenAL.cpp	31;"	d	file:
debugState	src/wx/openal.cpp	/^void OpenAL::debugState()$/;"	f	class:OpenAL
debugState	src/wx/openal.cpp	30;"	d	file:
debugWaitPty	src/wx/sys.cpp	/^bool debugWaitPty()$/;"	f
debugWaitSocket	src/wx/sys.cpp	/^bool debugWaitSocket()$/;"	f
debugWritePty	src/wx/sys.cpp	/^static int debugWritePty(\/* const *\/char *buf, int len)$/;"	f	file:
debugWriteSock	src/wx/sys.cpp	/^static int debugWriteSock(char *buf, int len)$/;"	f	file:
debug_remote	src/wx/sys.cpp	/^wxSocketBase *debug_remote = NULL;$/;"	v
debug_server	src/wx/sys.cpp	/^static wxSocketServer *debug_server = NULL;$/;"	v	file:
debugdata	src/gba/elf.h	/^  u8 *debugdata;$/;"	m	struct:DebugInfo
debugfile	src/gba/elf.h	/^  u8 *debugfile;$/;"	m	struct:DebugInfo
debugger	src/sdl/SDL.cpp	/^bool debugger = false;$/;"	v
debugger	src/win32/VBA.cpp	/^bool debugger = false;$/;"	v
debugger	src/wx/sys.cpp	/^bool debugger;$/;"	v
debuggerApplyBreakpoint	src/sdl/debugger.cpp	/^static void debuggerApplyBreakpoint(u32 address, int num, int size)$/;"	f	file:
debuggerAtBreakpoint	src/sdl/debugger.cpp	/^bool debuggerAtBreakpoint = false;$/;"	v
debuggerBreak	src/sdl/debugger.cpp	/^static void debuggerBreak(int n, char **args)$/;"	f	file:
debuggerBreakArm	src/sdl/debugger.cpp	/^static void debuggerBreakArm(int n, char **args)$/;"	f	file:
debuggerBreakChange	src/sdl/debugger.cpp	/^static void debuggerBreakChange(int n, char **args)$/;"	f	file:
debuggerBreakChangeClear	src/sdl/debugger.cpp	/^static void debuggerBreakChangeClear(int n, char **args)$/;"	f	file:
debuggerBreakDelete	src/sdl/debugger.cpp	/^static void debuggerBreakDelete(int n, char **args)$/;"	f	file:
debuggerBreakList	src/sdl/debugger.cpp	/^static void debuggerBreakList(int, char **)$/;"	f	file:
debuggerBreakOnWrite	src/gtk/system.cpp	/^void debuggerBreakOnWrite(u32 address, u32 oldvalue, u32 value, int size, int t)$/;"	f
debuggerBreakOnWrite	src/sdl/debugger.cpp	/^\/*extern*\/ void debuggerBreakOnWrite(u32 address, u32 oldvalue, u32 value,$/;"	f
debuggerBreakOnWrite	src/wx/sys.cpp	/^void debuggerBreakOnWrite(u32 address, u32 oldvalue, u32 value, int size, int t)$/;"	f
debuggerBreakThumb	src/sdl/debugger.cpp	/^static void debuggerBreakThumb(int n, char **args)$/;"	f	file:
debuggerBreakWrite	src/sdl/debugger.cpp	/^static void debuggerBreakWrite(int n, char **args)$/;"	f	file:
debuggerBreakWriteClear	src/sdl/debugger.cpp	/^static void debuggerBreakWriteClear(int n, char **args)$/;"	f	file:
debuggerBreakpointList	src/sdl/debugger.cpp	/^breakpointInfo debuggerBreakpointList[100];$/;"	v
debuggerBreakpointNumber	src/sdl/debugger.cpp	/^int debuggerBreakpointNumber = 0;$/;"	v
debuggerCommands	src/sdl/debugger.cpp	/^static DebuggerCommand debuggerCommands[] = {$/;"	v	file:
debuggerCondBreakArm	src/sdl/debugger.cpp	/^static void debuggerCondBreakArm(int n, char **args)$/;"	f	file:
debuggerCondBreakThumb	src/sdl/debugger.cpp	/^static void debuggerCondBreakThumb(int n, char **args)$/;"	f	file:
debuggerCondEvaluate	src/sdl/debugger.cpp	/^static bool debuggerCondEvaluate(int num)$/;"	f	file:
debuggerCondValidate	src/sdl/debugger.cpp	/^static void debuggerCondValidate(int n, char **args,int start)$/;"	f	file:
debuggerContinue	src/sdl/debugger.cpp	/^static void debuggerContinue(int n, char **args)$/;"	f	file:
debuggerContinueAfterBreakpoint	src/sdl/debugger.cpp	/^static void debuggerContinueAfterBreakpoint()$/;"	f	file:
debuggerDebug	src/sdl/debugger.cpp	/^static void debuggerDebug(int n, char **args)$/;"	f	file:
debuggerDisableBreakpoints	src/sdl/debugger.cpp	/^static void debuggerDisableBreakpoints()$/;"	f	file:
debuggerDisassemble	src/sdl/debugger.cpp	/^static void debuggerDisassemble(int n, char **args)$/;"	f	file:
debuggerDisassembleArm	src/sdl/debugger.cpp	/^static void debuggerDisassembleArm(FILE *f, u32 pc, int count)$/;"	f	file:
debuggerDisassembleArm	src/sdl/debugger.cpp	/^static void debuggerDisassembleArm(int n, char **args)$/;"	f	file:
debuggerDisassembleThumb	src/sdl/debugger.cpp	/^static void debuggerDisassembleThumb(FILE *f, u32 pc, int count)$/;"	f	file:
debuggerDisassembleThumb	src/sdl/debugger.cpp	/^static void debuggerDisassembleThumb(int n, char **args)$/;"	f	file:
debuggerDoSearch	src/sdl/debugger.cpp	/^void debuggerDoSearch()$/;"	f
debuggerDumpLoad	src/sdl/debugger.cpp	/^static void debuggerDumpLoad(int n, char** args)$/;"	f	file:
debuggerDumpSave	src/sdl/debugger.cpp	/^static void debuggerDumpSave(int n, char** args)$/;"	f	file:
debuggerEdit	src/sdl/debugger.cpp	/^static void debuggerEdit(int n, char **args)$/;"	f	file:
debuggerEditByte	src/sdl/debugger.cpp	/^static void debuggerEditByte(int n, char **args)$/;"	f	file:
debuggerEditHalfWord	src/sdl/debugger.cpp	/^static void debuggerEditHalfWord(int n, char **args)$/;"	f	file:
debuggerEditRegister	src/sdl/debugger.cpp	/^static void debuggerEditRegister(int n, char **args)$/;"	f	file:
debuggerEnableBreakpoints	src/sdl/debugger.cpp	/^static void debuggerEnableBreakpoints(bool skipPC)$/;"	f	file:
debuggerFileDisassemble	src/sdl/debugger.cpp	/^static void debuggerFileDisassemble(int n, char **args)$/;"	f	file:
debuggerFileDisassembleArm	src/sdl/debugger.cpp	/^static void debuggerFileDisassembleArm(int n, char **args)$/;"	f	file:
debuggerFileDisassembleThumb	src/sdl/debugger.cpp	/^static void debuggerFileDisassembleThumb(int n, char **args)$/;"	f	file:
debuggerFindHex	src/sdl/debugger.cpp	/^void debuggerFindHex(int n, char **args)$/;"	f
debuggerFindResume	src/sdl/debugger.cpp	/^void debuggerFindResume(int n, char **args)$/;"	f
debuggerFindText	src/sdl/debugger.cpp	/^void debuggerFindText(int n, char **args)$/;"	f
debuggerGetValue	src/sdl/debugger.cpp	/^static u32 debuggerGetValue(u32 location, LocationType type)$/;"	f	file:
debuggerHelp	src/sdl/debugger.cpp	/^static void debuggerHelp(int n, char **args)$/;"	f	file:
debuggerIo	src/sdl/debugger.cpp	/^static void debuggerIo(int n, char **args)$/;"	f	file:
debuggerIoDMA	src/sdl/debugger.cpp	/^static void debuggerIoDMA()$/;"	f	file:
debuggerIoMisc	src/sdl/debugger.cpp	/^static void debuggerIoMisc()$/;"	f	file:
debuggerIoTimer	src/sdl/debugger.cpp	/^static void debuggerIoTimer()$/;"	f	file:
debuggerIoVideo	src/sdl/debugger.cpp	/^static void debuggerIoVideo()$/;"	f	file:
debuggerIoVideo2	src/sdl/debugger.cpp	/^static void debuggerIoVideo2()$/;"	f	file:
debuggerLast	src/sdl/debugger.cpp	/^void debuggerLast(int n, char **args)$/;"	f
debuggerLocals	src/sdl/debugger.cpp	/^static void debuggerLocals(int n, char **args)$/;"	f	file:
debuggerMain	src/gtk/system.cpp	/^void debuggerMain()$/;"	f
debuggerMain	src/sdl/debugger.cpp	/^\/*extern*\/ void debuggerMain()$/;"	f
debuggerMain	src/wx/sys.cpp	/^void debuggerMain()$/;"	f
debuggerMemory	src/sdl/debugger.cpp	/^static void debuggerMemory(int n, char **args)$/;"	f	file:
debuggerMemoryByte	src/sdl/debugger.cpp	/^static void debuggerMemoryByte(int n, char **args)$/;"	f	file:
debuggerMemoryHalfWord	src/sdl/debugger.cpp	/^static void debuggerMemoryHalfWord(int n, char **args)$/;"	f	file:
debuggerNext	src/sdl/debugger.cpp	/^static void debuggerNext(int n, char **args)$/;"	f	file:
debuggerNumOfBreakpoints	src/sdl/debugger.cpp	/^int debuggerNumOfBreakpoints = 0;$/;"	v
debuggerOutput	src/gtk/system.cpp	/^void debuggerOutput(const char *, u32)$/;"	f
debuggerOutput	src/sdl/debugger.cpp	/^\/*extern*\/ void debuggerOutput(const char *s, u32 addr)$/;"	f
debuggerOutput	src/wx/sys.cpp	/^static void debuggerOutput(const char *s, u32 addr)$/;"	f	file:
debuggerPrefetch	src/sdl/debugger.cpp	/^static void debuggerPrefetch()$/;"	f	file:
debuggerPrint	src/sdl/debugger.cpp	/^static void debuggerPrint(int argc, char **argv)$/;"	f	file:
debuggerPrintArray	src/sdl/debugger.cpp	/^static void debuggerPrintArray(Type *t, u32 value)$/;"	f	file:
debuggerPrintBaseType	src/sdl/debugger.cpp	/^static void debuggerPrintBaseType(Type *t, u32 value, u32 location,$/;"	f	file:
debuggerPrintEnum	src/sdl/debugger.cpp	/^static void debuggerPrintEnum(Type *t, u32 value)$/;"	f	file:
debuggerPrintFunction	src/sdl/debugger.cpp	/^static void debuggerPrintFunction(Type *t, u32 value)$/;"	f	file:
debuggerPrintMember	src/sdl/debugger.cpp	/^static void debuggerPrintMember(Function *f,$/;"	f	file:
debuggerPrintPointer	src/sdl/debugger.cpp	/^static void debuggerPrintPointer(Type *t, u32 value)$/;"	f	file:
debuggerPrintReference	src/sdl/debugger.cpp	/^static void debuggerPrintReference(Type *t, u32 value)$/;"	f	file:
debuggerPrintStructure	src/sdl/debugger.cpp	/^static void debuggerPrintStructure(Function *f, Type *t, u32 objLocation)$/;"	f	file:
debuggerPrintType	src/sdl/debugger.cpp	/^static const char *debuggerPrintType(Type *t)$/;"	f	file:
debuggerPrintUnion	src/sdl/debugger.cpp	/^static void debuggerPrintUnion(Function *f, Type *t, u32 objLocation)$/;"	f	file:
debuggerPrintValue	src/sdl/debugger.cpp	/^static void debuggerPrintValue(Function *f, Object *o)$/;"	f	file:
debuggerPrintValueInternal	src/sdl/debugger.cpp	/^static void debuggerPrintValueInternal(Function *f, Type *t, ELFBlock *loc,$/;"	f	file:
debuggerPrintValueInternal	src/sdl/debugger.cpp	/^static void debuggerPrintValueInternal(Function *f, Type *t,$/;"	f	file:
debuggerQuit	src/sdl/debugger.cpp	/^static void debuggerQuit(int, char **)$/;"	f	file:
debuggerRadix	src/sdl/debugger.cpp	/^int debuggerRadix = 0;$/;"	v
debuggerReadByte	src/gba/Cheats.cpp	289;"	d	file:
debuggerReadByte	src/gba/armdis.cpp	24;"	d	file:
debuggerReadByte	src/gba/remote.cpp	254;"	d	file:
debuggerReadByte	src/sdl/debugger.cpp	46;"	d	file:
debuggerReadHalfWord	src/gba/Cheats.cpp	286;"	d	file:
debuggerReadHalfWord	src/gba/agbprint.cpp	12;"	d	file:
debuggerReadHalfWord	src/gba/armdis.cpp	21;"	d	file:
debuggerReadHalfWord	src/gba/remote.cpp	251;"	d	file:
debuggerReadHalfWord	src/sdl/debugger.cpp	43;"	d	file:
debuggerReadMemory	src/gba/Cheats.cpp	283;"	d	file:
debuggerReadMemory	src/gba/armdis.cpp	18;"	d	file:
debuggerReadMemory	src/gba/remote.cpp	248;"	d	file:
debuggerReadMemory	src/sdl/debugger.cpp	40;"	d	file:
debuggerReadMemory	src/sdl/exprNode.cpp	34;"	d	file:
debuggerReadState	src/sdl/debugger.cpp	/^static void debuggerReadState(int n, char **args)$/;"	f	file:
debuggerRegisters	src/sdl/debugger.cpp	/^static void debuggerRegisters(int, char **)$/;"	f	file:
debuggerSetRadix	src/sdl/debugger.cpp	/^static void debuggerSetRadix(int argc, char **argv)$/;"	f	file:
debuggerSignal	src/gtk/system.cpp	/^void debuggerSignal(int, int)$/;"	f
debuggerSignal	src/sdl/debugger.cpp	/^\/*extern*\/ void debuggerSignal(int sig,int number)$/;"	f
debuggerSignal	src/wx/sys.cpp	/^void debuggerSignal(int sig, int number)$/;"	f
debuggerStub	src/sdl/SDL.cpp	/^bool debuggerStub = false;$/;"	v
debuggerSymbols	src/sdl/debugger.cpp	/^static void debuggerSymbols(int argc, char **argv)$/;"	f	file:
debuggerUsage	src/sdl/debugger.cpp	/^static void debuggerUsage(const char *cmd)$/;"	f	file:
debuggerVerbose	src/sdl/debugger.cpp	/^static void debuggerVerbose(int n, char **args)$/;"	f	file:
debuggerWhere	src/sdl/debugger.cpp	/^static void debuggerWhere(int n, char **args)$/;"	f	file:
debuggerWriteByte	src/gba/Cheats.cpp	298;"	d	file:
debuggerWriteByte	src/gba/remote.cpp	263;"	d	file:
debuggerWriteByte	src/sdl/debugger.cpp	55;"	d	file:
debuggerWriteHalfWord	src/gba/Cheats.cpp	295;"	d	file:
debuggerWriteHalfWord	src/gba/agbprint.cpp	9;"	d	file:
debuggerWriteHalfWord	src/gba/remote.cpp	260;"	d	file:
debuggerWriteHalfWord	src/sdl/debugger.cpp	52;"	d	file:
debuggerWriteMemory	src/gba/Cheats.cpp	292;"	d	file:
debuggerWriteMemory	src/gba/remote.cpp	257;"	d	file:
debuggerWriteMemory	src/sdl/debugger.cpp	49;"	d	file:
debuggerWriteState	src/sdl/debugger.cpp	/^static void debuggerWriteState(int n, char **args)$/;"	f	file:
debugger_last	src/gba/GBA.cpp	/^bool debugger_last;$/;"	v
decVals	src/gba/armdis.cpp	/^const char *decVals[16] = {$/;"	v
declicking	src/gb/gbSound.cpp	/^static bool declicking     = false;$/;"	v	file:
declicking	src/win32/AudioCoreSettingsDlg.h	/^	CButton declicking;$/;"	m	class:AudioCoreSettingsDlg
decoder	fex/7z_C/Lzma2Dec.h	/^  CLzmaDec decoder;$/;"	m	struct:__anon34
defaultMotion	src/sdl/inputSDL.cpp	/^static uint32_t defaultMotion[4] = {$/;"	v	file:
defaultPalettes	src/win32/GBColorDlg.cpp	/^static u16 defaultPalettes[][24] = {$/;"	v	file:
defaultPalettes	src/wx/guiinit.cpp	/^static const u16 defaultPalettes[][8] = {$/;"	v	file:
default_accels	src/wx/opts.cpp	/^const wxAcceleratorEntry default_accels[] = {$/;"	v
default_stick	src/wx/opts.h	/^    int default_stick;$/;"	m	struct:opts_t
deffn	src/wx/guiinit.cpp	/^    wxString cheatdir, cheatfn, deffn;$/;"	m	class:CheatList_t	file:
defkeys	src/wx/opts.cpp	/^wxJoyKeyBinding defkeys[NUM_KEYS * 2] = {$/;"	v
deflated	fex/fex/Gzip_Reader.h	/^	bool deflated() const               { return inflater.deflated(); }$/;"	f	class:Gzip_Reader
deflated	fex/fex/Zlib_Inflater.h	/^	bool deflated() const               { return deflated_; }$/;"	f	class:Zlib_Inflater
deflated_	fex/fex/Zlib_Inflater.h	/^	bool deflated_;$/;"	m	class:Zlib_Inflater
defocus_pause	src/wx/opts.h	/^    bool defocus_pause;$/;"	m	struct:opts_t
defvalues	src/win32/DirectInput.cpp	/^LONG_PTR defvalues[JOYPADS * KEYS_PER_PAD + MOTION_KEYS] =$/;"	v
delay	src/apu/Effects_Buffer.h	/^		int delay [2];  \/\/ left, right delays (msec)$/;"	m	struct:Effects_Buffer::config_t
delay	src/apu/Effects_Buffer.h	/^		long delay [stereo];$/;"	m	struct:Effects_Buffer::__anon131
delay	src/apu/Gb_Apu.h	/^	val_t delay      [4];$/;"	m	struct:gb_apu_state_t
delay	src/apu/Gb_Oscs.h	/^	int         delay;      \/\/ clocks until frequency timer expires$/;"	m	class:Gb_Osc
delete_bufs	src/apu/Effects_Buffer.cpp	/^void Effects_Buffer::delete_bufs()$/;"	f	class:Effects_Buffer
delta	src/sdl/SDL.cpp	/^u8 *delta = NULL;$/;"	v
delta	src/win32/VBA.h	/^  u8 *delta[257*244*4];$/;"	m	class:VBA
delta	src/wx/panel.cpp	/^    u8 *dst, *delta;$/;"	m	class:FilterThread	file:
delta	src/wx/wxvbam.h	/^    u8 delta[257 * 4 * 226];$/;"	m	class:DrawingPanel
deltaPointer	src/win32/Direct3D.cpp	/^	u8 *deltaPointer;$/;"	m	struct:PFTHREAD_DATA	file:
deltaPtr	src/filters/2xSaImmx.asm	/^deltaPtr      equ 12$/;"	d
delta_factor	src/apu/Blip_Buffer.h	/^		int delta_factor;$/;"	m	class:Blip_Synth_
delta_factor	src/apu/Blip_Buffer.h	/^		int delta_factor;$/;"	m	class:Blip_Synth_Fast_
depth	src/libretro/libretro.h	/^   bool depth; \/\/ Set if render buffers should have depth component attached.$/;"	m	struct:retro_hw_render_callback
desc	src/gba/Cheats.h	/^  char desc[32];$/;"	m	struct:CheatsData
desc	src/wx/opts.h	/^    const wxChar *opt, *desc;$/;"	m	struct:opt_desc
description	src/libretro/libretro.h	/^   const char *description; \/\/ Human readable description for parameters.$/;"	m	struct:retro_input_descriptor
desktopHeight	src/sdl/SDL.cpp	/^int desktopHeight = 0;$/;"	v
desktopWidth	src/sdl/SDL.cpp	/^int desktopWidth = 0;$/;"	v
dest	src/win32/VBA.h	/^  RECT dest;$/;"	m	class:VBA
destHeight	src/sdl/SDL.cpp	/^int destHeight = 0;$/;"	v
destPitch	src/win32/Direct3D.cpp	/^	u32 destPitch;$/;"	m	struct:PFTHREAD_DATA	file:
destPointer	src/win32/Direct3D.cpp	/^	u8* destPointer;$/;"	m	struct:PFTHREAD_DATA	file:
destRect	src/win32/Direct3D.cpp	/^	RECT                  destRect;$/;"	m	class:Direct3DDisplay	file:
destRect	src/win32/OpenGL.cpp	/^	RECT destRect;$/;"	m	class:OpenGLDisplay	file:
destWidth	src/sdl/SDL.cpp	/^int destWidth = 0;$/;"	v
destroy	src/common/memgzio.c	/^local int destroy (s)$/;"	f
destroyEditCaret	src/win32/MemoryViewer.cpp	/^void MemoryViewer::destroyEditCaret()$/;"	f	class:MemoryViewer
destroyFont	src/win32/Direct3D.cpp	/^void Direct3DDisplay::destroyFont()$/;"	f	class:Direct3DDisplay
destroyTexture	src/win32/Direct3D.cpp	/^void Direct3DDisplay::destroyTexture()$/;"	f	class:Direct3DDisplay
detectCpuCores	src/win32/VBA.cpp	/^unsigned int VBA::detectCpuCores()$/;"	f	class:VBA
detectMMX	src/win32/VBA.cpp	/^bool VBA::detectMMX()$/;"	f	class:VBA
detect_save_type	src/libretro/gbaconv/gbaconv.c	/^static enum save_type detect_save_type(const uint8_t *data, unsigned size)$/;"	f	file:
dev	src/wx/guiinit.cpp	/^    wxChoice *dev;$/;"	m	class:SoundConfig_t	file:
dev	src/wx/widgets/sdljoy.cpp	/^    SDL_Joystick *dev;$/;"	m	struct:wxSDLJoyState	file:
dev_ids	src/wx/guiinit.cpp	/^    wxArrayString dev_ids;$/;"	m	class:SoundConfig_t	file:
device	src/libretro/libretro.h	/^   unsigned device;$/;"	m	struct:retro_input_descriptor
device	src/win32/DirectInput.cpp	/^    LPDIRECTINPUTDEVICE8 device;$/;"	m	struct:deviceInfo	file:
device	src/win32/OpenAL.cpp	/^	ALCdevice     *device;$/;"	m	class:OpenAL	file:
device	src/wx/openal.cpp	/^	ALCdevice     *device;$/;"	m	class:OpenAL	file:
deviceInfo	src/win32/DirectInput.cpp	/^struct deviceInfo {$/;"	s	file:
device_change	src/win32/XAudio2.cpp	/^void XAudio2_Output::device_change()$/;"	f	class:XAudio2_Output
device_change	src/wx/xaudio2.cpp	/^void XAudio2_Output::device_change()$/;"	f	class:XAudio2_Output
device_changed	src/win32/XAudio2.cpp	/^	volatile bool device_changed;$/;"	m	class:XAudio2_Output	file:
device_changed	src/wx/xaudio2.cpp	/^	volatile bool device_changed;$/;"	m	class:XAudio2_Output	file:
device_type	src/libretro/libretro.cpp	/^unsigned device_type = 0;$/;"	v
devnames	src/wx/dsound.cpp	/^struct devnames {$/;"	s	file:
dgettext	src/gtk/intl.h	30;"	d
dh	src/gba/GBA-arm.cpp	321;"	d	file:
dialog_list_t	src/wx/wxvbam.h	/^typedef std::list<wxDialog *> dialog_list_t;$/;"	t
dialog_opened	src/wx/wxvbam.h	/^    int menus_opened, dialog_opened;$/;"	m	class:MainFrame
dic	fex/7z_C/LzmaDec.h	/^  Byte *dic;$/;"	m	struct:__anon17
dicBufSize	fex/7z_C/LzmaDec.h	/^  SizeT dicBufSize;$/;"	m	struct:__anon17
dicPos	fex/7z_C/LzmaDec.h	/^  SizeT dicPos;$/;"	m	struct:__anon17
dicSize	fex/7z_C/LzmaDec.h	/^  UInt32 dicSize;$/;"	m	struct:_CLzmaProps
did_init	src/common/ffmpeg.cpp	/^bool MediaRecorder::did_init = false;$/;"	m	class:MediaRecorder	file:
did_init	src/common/ffmpeg.h	/^    static bool did_init;$/;"	m	class:MediaRecorder
did_init	src/wx/drawing.h	/^    bool did_init;$/;"	m	class:DXDrawingPanel
did_init	src/wx/drawing.h	/^    bool did_init;$/;"	m	class:GLDrawingPanel
did_link_init	src/wx/wxvbam.h	/^    bool did_link_init;$/;"	m	class:MainFrame
didinit	src/wx/viewsupt.h	/^	bool didinit;$/;"	m	class:Viewers::DisList
didinit	src/wx/viewsupt.h	/^	bool didinit;$/;"	m	class:Viewers::MemView
digital	src/wx/widgets/wx/sdljoy.h	/^    bool digital;$/;"	m	class:wxSDLJoy
dinputKeyFocus	src/win32/VBA.h	/^  bool dinputKeyFocus;$/;"	m	class:VBA
dir	src/win32/VBA.h	/^  CString dir;$/;"	m	class:VBA
dir_offset	fex/fex/Zip_Extractor.cpp	/^	byte dir_offset [4];$/;"	m	struct:end_entry_t	file:
dir_size	fex/fex/Zip_Extractor.cpp	/^	byte dir_size [4];$/;"	m	struct:end_entry_t	file:
directXMessage	src/win32/VBA.cpp	/^void VBA::directXMessage(const char *msg)$/;"	f	class:VBA
directXMessage	src/win32/VBA.cpp	/^void directXMessage(const char *msg)$/;"	f
directoryDoesExist	src/win32/Directories.cpp	/^bool Directories::directoryDoesExist(const char *directory)$/;"	f	class:Directories
dirty	src/wx/guiinit.cpp	/^    bool *dirty;$/;"	m	class:CheatList_t	file:
dis	src/wx/viewers.cpp	/^	DisList *dis;$/;"	m	class:Viewers::DisassembleViewer	file:
dis	src/wx/viewers.cpp	/^	DisList *dis;$/;"	m	class:Viewers::GBDisassembleViewer	file:
disArm	src/gba/armdis.cpp	/^int disArm(u32 offset, char *dest, int flags){$/;"	f
disThumb	src/gba/armdis.cpp	/^int disThumb(u32 offset, char *dest, int flags){$/;"	f
disableMMX	src/win32/VBA.h	/^  bool disableMMX;$/;"	m	class:VBA
disableStatusMessage	src/win32/VBA.h	/^  bool disableStatusMessage;$/;"	m	class:VBA
disableStatusMessages	src/sdl/SDL.cpp	/^bool disableStatusMessages = false;$/;"	v
disable_immediate_removal	src/apu/Multi_Buffer.h	/^	void disable_immediate_removal() { immediate_removal_ = false; }$/;"	f	class:Multi_Buffer
disk	fex/fex/Zip_Extractor.cpp	/^	byte disk [2];$/;"	m	struct:end_entry_t	file:
disk	fex/fex/Zip_Extractor.cpp	/^	byte disk [2];$/;"	m	struct:entry_t	file:
disk_block_size	fex/fex/Zip_Extractor.cpp	/^int const disk_block_size = 4 * 1024;$/;"	v
disk_entry_count	fex/fex/Zip_Extractor.cpp	/^	byte disk_entry_count [2];$/;"	m	struct:end_entry_t	file:
dismode	src/wx/viewers.cpp	/^	int dismode;$/;"	m	class:Viewers::DisassembleViewer	file:
disp	src/wx/viewsupt.h	/^	wxPanel disp;$/;"	m	class:Viewers::MemView
display	src/win32/VBA.h	/^  IDisplay *display;$/;"	m	class:VBA
displayedLines	src/win32/MemoryViewer.h	/^  int displayedLines;$/;"	m	class:MemoryViewer
divider	src/apu/Gb_Oscs.h	/^	int divider; \/\/ noise has more complex frequency divider setup$/;"	m	class:Gb_Noise
dl	src/gba/GBA-arm.cpp	320;"	d	file:
dlg	src/win32/LinkOptions.cpp	/^    ServerWait *dlg;$/;"	m	class:Win32ClientInfoDisplay	file:
dlg	src/win32/LinkOptions.cpp	/^    ServerWait *dlg;$/;"	m	class:Win32ServerInfoDisplay	file:
dlg	src/win32/MemoryViewer.h	/^  IMemoryViewerDlg *dlg;$/;"	m	class:MemoryViewer
dlg	src/wx/guiinit.cpp	/^    wxDialog *dlg;$/;"	m	class:CheatFind_t	file:
dlg	src/wx/guiinit.cpp	/^    wxDialog *dlg;$/;"	m	class:CheatList_t	file:
dlg	src/wx/guiinit.cpp	/^    wxDialog *dlg;$/;"	m	class:NetLink_t	file:
dlg	src/wx/guiinit.cpp	/^    wxDialog *dlg;$/;"	m	class:PluginListFiller	file:
dlg	src/wx/sys.cpp	/^    wxDialog *dlg;$/;"	m	class:PrintDialog	file:
dma0Dest	src/gba/GBA.cpp	/^u32 dma0Dest = 0;$/;"	v
dma0Source	src/gba/GBA.cpp	/^u32 dma0Source = 0;$/;"	v
dma1Dest	src/gba/GBA.cpp	/^u32 dma1Dest = 0;$/;"	v
dma1Source	src/gba/GBA.cpp	/^u32 dma1Source = 0;$/;"	v
dma2Dest	src/gba/GBA.cpp	/^u32 dma2Dest = 0;$/;"	v
dma2Source	src/gba/GBA.cpp	/^u32 dma2Source = 0;$/;"	v
dma3Dest	src/gba/GBA.cpp	/^u32 dma3Dest = 0;$/;"	v
dma3Source	src/gba/GBA.cpp	/^u32 dma3Source = 0;$/;"	v
dmg_bass	src/apu/Gb_Apu.h	/^		dmg_bass       =   30,$/;"	e	enum:Gb_Apu::__anon144
dmg_treble	src/apu/Gb_Apu.h	/^		dmg_treble     =    0, \/\/ headphones on each system$/;"	e	enum:Gb_Apu::__anon144
dname	src/wx/viewsupt.h	/^	const wxChar *dname;$/;"	m	class:Viewers::Viewer
doDMA	src/gba/GBA.cpp	/^void doDMA(u32 &s, u32 &d, u32 si, u32 di, u32 c, int transfer32)$/;"	f
doMirroring	src/gba/GBA.cpp	/^void doMirroring (bool b)$/;"	f
do_flush	src/common/memgzio.c	/^local int do_flush (file, flush)$/;"	f
do_register	src/win32/XAudio2.cpp	/^	void do_register(XAudio2_Output * p_instance)$/;"	f	class:XAudio2_Device_Notifier
do_register	src/wx/xaudio2.cpp	/^	void do_register(sound_out_i_xaudio2 * p_instance)$/;"	f	class:XAudio2_Device_Notifier
do_rewind	src/wx/wxvbam.h	/^    bool do_rewind;$/;"	m	class:GameArea
do_unregister	src/win32/XAudio2.cpp	/^	void do_unregister( XAudio2_Output * p_instance )$/;"	f	class:XAudio2_Device_Notifier
do_unregister	src/wx/xaudio2.cpp	/^	void do_unregister( sound_out_i_xaudio2 * p_instance )$/;"	f	class:XAudio2_Device_Notifier
dol	src/gba/GBALink.cpp	/^GBASockClient* dol = NULL;$/;"	v
done	fex/fex/File_Extractor.h	/^	bool done() const                   { return done_; }$/;"	f	struct:fex_t
done	src/gba/GBALink.h	/^	int done;$/;"	m	class:lserver
done	src/wx/panel.cpp	/^    wxSemaphore *done;$/;"	m	class:FilterThread	file:
done_	fex/fex/File_Extractor.h	/^	bool      done_;$/;"	m	struct:fex_t
dos_date	fex/fex/File_Extractor.h	/^	unsigned int dos_date() const       { return date_; }$/;"	f	struct:fex_t
down	src/win32/Joypad.h	/^  JoypadEditControl  down;$/;"	m	class:JoypadConfig
down	src/win32/Joypad.h	/^  JoypadEditControl  down;$/;"	m	class:MotionConfig
dpp	src/win32/Direct3D.cpp	/^	D3DPRESENT_PARAMETERS dpp;$/;"	m	class:Direct3DDisplay	file:
dprintf	fex/fex/blargg_source.h	43;"	d
dprintf	fex/fex/blargg_source.h	44;"	d
dprintf	src/apu/blargg_source.h	34;"	d
dprintf	src/apu/blargg_source.h	35;"	d
drawScreenMessage	src/sdl/SDL.cpp	/^void drawScreenMessage(u8 *screen, int pitch, int x, int y, unsigned int duration)$/;"	f
drawSpeed	src/sdl/SDL.cpp	/^void drawSpeed(u8 *screen, int pitch, int x, int y)$/;"	f
drawText	src/sdl/text.cpp	/^void drawText(u8 *screen, int pitch, int x, int y,$/;"	f
dsbEvent	src/win32/DirectSound.cpp	/^	HANDLE               dsbEvent;$/;"	m	class:DirectSound	file:
dsbEvent	src/wx/dsound.cpp	/^	HANDLE               dsbEvent;$/;"	m	class:DirectSound	file:
dsbNotify	src/win32/DirectSound.cpp	/^	LPDIRECTSOUNDNOTIFY8 dsbNotify;$/;"	m	class:DirectSound	file:
dsbNotify	src/wx/dsound.cpp	/^	LPDIRECTSOUNDNOTIFY8 dsbNotify;$/;"	m	class:DirectSound	file:
dsbPrimary	src/win32/DirectSound.cpp	/^	LPDIRECTSOUNDBUFFER  dsbPrimary;   \/\/ Primary DirectSound buffer$/;"	m	class:DirectSound	file:
dsbPrimary	src/wx/dsound.cpp	/^	LPDIRECTSOUNDBUFFER  dsbPrimary;   \/\/ Primary DirectSound buffer$/;"	m	class:DirectSound	file:
dsbSecondary	src/win32/DirectSound.cpp	/^	LPDIRECTSOUNDBUFFER  dsbSecondary; \/\/ Secondary DirectSound buffer$/;"	m	class:DirectSound	file:
dsbSecondary	src/wx/dsound.cpp	/^	LPDIRECTSOUNDBUFFER  dsbSecondary; \/\/ Secondary DirectSound buffer$/;"	m	class:DirectSound	file:
dsoundDisableHardwareAcceleration	src/win32/VBA.h	/^  bool dsoundDisableHardwareAcceleration;$/;"	m	class:VBA
dsound_hw_accel	src/wx/opts.h	/^    bool dsound_hw_accel;$/;"	m	struct:opts_t
dst	src/wx/panel.cpp	/^    u8 *dst, *delta;$/;"	m	class:FilterThread	file:
dstOffset	src/filters/2xSaImmx.asm	/^dstOffset     equ 24$/;"	d
dstPitch	src/filters/2xSaImmx.asm	/^dstPitch      equ 28$/;"	d
dstSegment	src/filters/2xSaImmx.asm	/^dstSegment    equ 32$/;"	d
dummyAddress	src/gba/GBA.cpp	/^int dummyAddress = 0;$/;"	v
dummy_state	src/gb/gbSound.cpp	/^static char dummy_state [735 * 2];$/;"	v	file:
dummy_state	src/gba/Sound.cpp	/^static int dummy_state [16];$/;"	v	file:
dump_sav	src/libretro/gbaconv/gbaconv.c	/^static void dump_sav(FILE *file, const uint8_t *data, enum save_type type)$/;"	f	file:
dump_srm	src/libretro/gbaconv/gbaconv.c	/^static void dump_srm(FILE *file, const uint8_t *data, enum save_type type)$/;"	f	file:
duringRefresh	src/win32/GBACheats.h	/^  bool duringRefresh;$/;"	m	class:GBACheatList
duringRefresh	src/win32/GBCheatsDlg.h	/^  bool duringRefresh;$/;"	m	class:GBCheatList
dwReserved	src/win32/FileDlg.h	/^  DWORD         dwReserved;$/;"	m	struct:OPENFILENAMEEX
dwTime0	src/win32/VBA.cpp	/^  u32					dwTime0;$/;"	m	namespace:Sm60FPS	file:
dwTime1	src/win32/VBA.cpp	/^  u32					dwTime1;$/;"	m	namespace:Sm60FPS	file:
dwTimeElapse	src/win32/VBA.cpp	/^  u32					dwTimeElapse;$/;"	m	namespace:Sm60FPS	file:
dx	src/win32/glfont.h	/^	float dx, dy;$/;"	m	struct:__anon68
dy	src/win32/glfont.h	/^	float dx, dy;$/;"	m	struct:__anon68
eGetCartridge	src/gtk/window.h	/^  inline ECartridge eGetCartridge() const { return m_eCartridge; }$/;"	f	class:VBA::Window
e_ehsize	src/gba/elf.h	/^  u16 e_ehsize;$/;"	m	struct:ELFHeader
e_entry	src/gba/elf.h	/^  u32 e_entry;$/;"	m	struct:ELFHeader
e_flags	src/gba/elf.h	/^  u32 e_flags;$/;"	m	struct:ELFHeader
e_machine	src/gba/elf.h	/^  u16 e_machine;$/;"	m	struct:ELFHeader
e_phentsize	src/gba/elf.h	/^  u16 e_phentsize;$/;"	m	struct:ELFHeader
e_phnum	src/gba/elf.h	/^  u16 e_phnum;$/;"	m	struct:ELFHeader
e_phoff	src/gba/elf.h	/^  u32 e_phoff;$/;"	m	struct:ELFHeader
e_shentsize	src/gba/elf.h	/^  u16 e_shentsize;$/;"	m	struct:ELFHeader
e_shnum	src/gba/elf.h	/^  u16 e_shnum;$/;"	m	struct:ELFHeader
e_shoff	src/gba/elf.h	/^  u32 e_shoff;$/;"	m	struct:ELFHeader
e_shstrndx	src/gba/elf.h	/^  u16 e_shstrndx;$/;"	m	struct:ELFHeader
e_type	src/gba/elf.h	/^  u16 e_type;$/;"	m	struct:ELFHeader
e_version	src/gba/elf.h	/^  u32 e_version;$/;"	m	struct:ELFHeader
eax	src/gba/GBA-arm.cpp	313;"	d	file:
ebp	src/gba/GBA-arm.cpp	324;"	d	file:
ebx	src/gba/GBA-arm.cpp	316;"	d	file:
echo	src/apu/Effects_Buffer.h	/^		bool echo;      \/\/ false = channel doesn't have any echo$/;"	m	struct:Effects_Buffer::chan_config_t
echo	src/apu/Effects_Buffer.h	/^		bool echo;$/;"	m	struct:Effects_Buffer::buf_t
echo	src/apu/Effects_Buffer.h	/^		float echo;     \/\/ 0.0 = none, 1.0 = lots$/;"	m	struct:Simple_Effects_Buffer::config_t
echo	src/apu/Effects_Buffer.h	/^	blargg_vector<fixed_t> echo;$/;"	m	class:Effects_Buffer
echo	src/gb/gbSound.h	/^	float echo;     \/\/ 0.0 = none, 1.0 = lots$/;"	m	struct:gb_effects_config_t
echo	src/win32/AudioCoreSettingsDlg.h	/^	CSliderCtrl echo;$/;"	m	class:AudioCoreSettingsDlg
echo_pos	src/apu/Effects_Buffer.h	/^	blargg_long echo_pos;$/;"	m	class:Effects_Buffer
echo_size	src/apu/Effects_Buffer.h	/^	blargg_long echo_size;$/;"	m	class:Effects_Buffer
ecx	src/gba/GBA-arm.cpp	319;"	d	file:
edi	src/gba/GBA-arm.cpp	326;"	d	file:
editAddress	src/win32/MemoryViewer.h	/^  u32 editAddress;$/;"	m	class:MemoryViewer
editAscii	src/win32/MemoryViewer.h	/^  bool editAscii;$/;"	m	class:MemoryViewer
editData	src/win32/GBMemoryViewerDlg.cpp	/^void GBMemoryViewer::editData(u32 address, int size, int mask, u32 value)$/;"	f	class:GBMemoryViewer
editData	src/win32/MemoryViewerDlg.cpp	/^void GBAMemoryViewer::editData(u32 address, int size, int mask, u32 value)$/;"	f	class:GBAMemoryViewer
editNibble	src/win32/MemoryViewer.h	/^  int editNibble;$/;"	m	class:MemoryViewer
edx	src/gba/GBA-arm.cpp	322;"	d	file:
eepromAddress	src/gba/EEprom.cpp	/^int eepromAddress = 0;$/;"	v
eepromBits	src/gba/EEprom.cpp	/^int eepromBits = 0;$/;"	v
eepromBuffer	src/gba/EEprom.cpp	/^u8 eepromBuffer[16];$/;"	v
eepromByte	src/gba/EEprom.cpp	/^int eepromByte = 0;$/;"	v
eepromData	src/gba/EEprom.cpp	/^u8 *eepromData = libretro_save_buf + 0x20000;$/;"	v
eepromData	src/gba/EEprom.cpp	/^u8 eepromData[0x2000];$/;"	v
eepromInUse	src/gba/EEprom.cpp	/^bool eepromInUse = false;$/;"	v
eepromInit	src/gba/EEprom.cpp	/^void eepromInit()$/;"	f
eepromMode	src/gba/EEprom.cpp	/^int eepromMode = EEPROM_IDLE;$/;"	v
eepromRead	src/gba/EEprom.cpp	/^int eepromRead(u32 \/* address *\/)$/;"	f
eepromReadGame	src/gba/EEprom.cpp	/^void eepromReadGame(const uint8_t *& data, int version)$/;"	f
eepromReadGame	src/gba/EEprom.cpp	/^void eepromReadGame(gzFile gzFile, int version)$/;"	f
eepromReadGameSkip	src/gba/EEprom.cpp	/^void eepromReadGameSkip(gzFile gzFile, int version)$/;"	f
eepromReset	src/gba/EEprom.cpp	/^void eepromReset()$/;"	f
eepromSaveData	src/gba/EEprom.cpp	/^variable_desc eepromSaveData[] = {$/;"	v
eepromSaveGame	src/gba/EEprom.cpp	/^void eepromSaveGame(gzFile gzFile)$/;"	f
eepromSaveGame	src/gba/EEprom.cpp	/^void eepromSaveGame(uint8_t *& data)$/;"	f
eepromSize	src/gba/EEprom.cpp	/^int eepromSize = 512;$/;"	v
eepromWrite	src/gba/EEprom.cpp	/^void eepromWrite(u32 \/* address *\/, u8 value)$/;"	f
elfAddLine	src/gba/elf.cpp	/^void elfAddLine(LineInfo *l, u32 a, int file, int line, int *max)$/;"	f
elfAddType	src/gba/elf.cpp	/^void elfAddType(Type *type, CompileUnit *unit, u32 offset)$/;"	f
elfCies	src/gba/elf.cpp	/^ELFcie *elfCies = NULL;$/;"	v
elfCleanUp	src/gba/elf.cpp	/^void elfCleanUp()$/;"	f
elfCleanUp	src/gba/elf.cpp	/^void elfCleanUp(CompileUnit *comp)$/;"	f
elfCleanUp	src/gba/elf.cpp	/^void elfCleanUp(ELFAbbrev **abbrevs)$/;"	f
elfCleanUp	src/gba/elf.cpp	/^void elfCleanUp(Function *func)$/;"	f
elfCleanUp	src/gba/elf.cpp	/^void elfCleanUp(Object *o)$/;"	f
elfCleanUp	src/gba/elf.cpp	/^void elfCleanUp(Type *t)$/;"	f
elfCompileUnits	src/gba/elf.cpp	/^CompileUnit *elfCompileUnits = NULL;$/;"	v
elfCurrentUnit	src/gba/elf.cpp	/^CompileUnit *elfCurrentUnit = NULL;$/;"	v
elfDebugInfo	src/gba/elf.cpp	/^DebugInfo *elfDebugInfo = NULL;$/;"	v
elfDebugStrings	src/gba/elf.cpp	/^char *elfDebugStrings = NULL;$/;"	v
elfDecodeLocation	src/gba/elf.cpp	/^u32 elfDecodeLocation(Function *f, ELFBlock *o, LocationType *type)$/;"	f
elfDecodeLocation	src/gba/elf.cpp	/^u32 elfDecodeLocation(Function *f, ELFBlock *o, LocationType *type, u32 base)$/;"	f
elfExecuteCFAInstructions	src/gba/elf.cpp	/^void elfExecuteCFAInstructions(ELFFrameState *state, u8 *data, u32 len,$/;"	f
elfFdeCount	src/gba/elf.cpp	/^int elfFdeCount = 0;$/;"	v
elfFdes	src/gba/elf.cpp	/^ELFfde **elfFdes = NULL;$/;"	v
elfFileData	src/gba/elf.cpp	/^u8 *elfFileData = NULL;$/;"	v
elfFindLine	src/gba/elf.cpp	/^int elfFindLine(CompileUnit *unit, Function * \/* func *\/, u32 addr, const char **f)$/;"	f
elfFindLineInModule	src/gba/elf.cpp	/^bool elfFindLineInModule(u32 *addr, const char *name, int line)$/;"	f
elfFindLineInUnit	src/gba/elf.cpp	/^bool elfFindLineInUnit(u32 *addr, CompileUnit *unit, int line)$/;"	f
elfGetAbbrev	src/gba/elf.cpp	/^ELFAbbrev *elfGetAbbrev(ELFAbbrev **table, u32 number)$/;"	f
elfGetAddressSymbol	src/gba/elf.cpp	/^const char *elfGetAddressSymbol(u32 addr)$/;"	f
elfGetCompileUnit	src/gba/elf.cpp	/^CompileUnit *elfGetCompileUnit(u32 addr)$/;"	f
elfGetCompileUnitForData	src/gba/elf.cpp	/^CompileUnit *elfGetCompileUnitForData(u8 *data)$/;"	f
elfGetCurrentFunction	src/gba/elf.cpp	/^bool elfGetCurrentFunction(u32 addr, Function **f, CompileUnit **u)$/;"	f
elfGetFde	src/gba/elf.cpp	/^ELFfde *elfGetFde(u32 address)$/;"	f
elfGetFrameState	src/gba/elf.cpp	/^ELFFrameState *elfGetFrameState(ELFfde *fde, u32 address)$/;"	f
elfGetFunctionAttributes	src/gba/elf.cpp	/^void elfGetFunctionAttributes(CompileUnit *unit, u32 offset, Function *func)$/;"	f
elfGetObject	src/gba/elf.cpp	/^bool elfGetObject(const char *name, Function *f, CompileUnit *u, Object **o)$/;"	f
elfGetObjectAttributes	src/gba/elf.cpp	/^void elfGetObjectAttributes(CompileUnit *unit, u32 offset, Object *o)$/;"	f
elfGetSectionByName	src/gba/elf.cpp	/^ELFSectionHeader *elfGetSectionByName(const char *name)$/;"	f
elfGetSectionByNumber	src/gba/elf.cpp	/^ELFSectionHeader *elfGetSectionByNumber(int number)$/;"	f
elfGetSymbol	src/gba/elf.cpp	/^const char *elfGetSymbol(int i, u32 *value, u32 *size, int *type)$/;"	f
elfGetSymbolAddress	src/gba/elf.cpp	/^bool elfGetSymbolAddress(const char *sym, u32 *addr, u32 *size, int *type)$/;"	f
elfParseAranges	src/gba/elf.cpp	/^void elfParseAranges(u8 *data)$/;"	f
elfParseBlock	src/gba/elf.cpp	/^u8 *elfParseBlock(u8 *data, ELFAbbrev *abbrev, CompileUnit *unit,$/;"	f
elfParseCFA	src/gba/elf.cpp	/^void elfParseCFA(u8 *top)$/;"	f
elfParseCompUnit	src/gba/elf.cpp	/^CompileUnit *elfParseCompUnit(u8 *data, u8 *abbrevData)$/;"	f
elfParseCompileUnitChildren	src/gba/elf.cpp	/^u8 *elfParseCompileUnitChildren(u8 *data, CompileUnit *unit)$/;"	f
elfParseFunction	src/gba/elf.cpp	/^u8 *elfParseFunction(u8 *data, ELFAbbrev *abbrev, CompileUnit *unit,$/;"	f
elfParseLineInfo	src/gba/elf.cpp	/^void elfParseLineInfo(CompileUnit *unit, u8 *top)$/;"	f
elfParseObject	src/gba/elf.cpp	/^u8 *elfParseObject(u8 *data, ELFAbbrev *abbrev, CompileUnit *unit,$/;"	f
elfParseType	src/gba/elf.cpp	/^Type *elfParseType(CompileUnit *unit, u32 offset)$/;"	f
elfParseType	src/gba/elf.cpp	/^void elfParseType(u8 *data, u32 offset, ELFAbbrev *abbrev, CompileUnit *unit,$/;"	f
elfParseUnknownData	src/gba/elf.cpp	/^u8 *elfParseUnknownData(u8 *data, ELFAbbrev *abbrev, ELFAbbrev **abbrevs)$/;"	f
elfPrintCallChain	src/gba/elf.cpp	/^void elfPrintCallChain(u32 address)$/;"	f
elfRead	src/gba/elf.cpp	/^bool elfRead(const char *name, int& siz, FILE *f)$/;"	f
elfRead2Bytes	src/gba/elf.cpp	/^u16 elfRead2Bytes(u8 *data)$/;"	f
elfRead4Bytes	src/gba/elf.cpp	/^u32 elfRead4Bytes(u8 *data)$/;"	f
elfReadAbbrevs	src/gba/elf.cpp	/^ELFAbbrev **elfReadAbbrevs(u8 *data, u32 offset)$/;"	f
elfReadAttribute	src/gba/elf.cpp	/^u8 *elfReadAttribute(u8 *data, ELFAttr *attr)$/;"	f
elfReadLEB128	src/gba/elf.cpp	/^u32 elfReadLEB128(u8 *data, int *bytesRead)$/;"	f
elfReadMemory	src/gba/elf.cpp	10;"	d	file:
elfReadProgram	src/gba/elf.cpp	/^bool elfReadProgram(ELFHeader *eh, u8 *data, int& size, bool parseDebug)$/;"	f
elfReadSection	src/gba/elf.cpp	/^u8 *elfReadSection(u8 *data, ELFSectionHeader *sh)$/;"	f
elfReadSignedLEB128	src/gba/elf.cpp	/^s32 elfReadSignedLEB128(u8 *data, int *bytesRead)$/;"	f
elfReadString	src/gba/elf.cpp	/^char *elfReadString(u8 *data, int *bytesRead)$/;"	f
elfReadSymtab	src/gba/elf.cpp	/^void elfReadSymtab(u8 *data)$/;"	f
elfSectionHeaders	src/gba/elf.cpp	/^ELFSectionHeader **elfSectionHeaders = NULL;$/;"	v
elfSectionHeadersCount	src/gba/elf.cpp	/^int elfSectionHeadersCount = 0;$/;"	v
elfSectionHeadersStringTable	src/gba/elf.cpp	/^char *elfSectionHeadersStringTable = NULL;$/;"	v
elfSkipData	src/gba/elf.cpp	/^u8 *elfSkipData(u8 *data, ELFAbbrev *abbrev, ELFAbbrev **abbrevs)$/;"	f
elfSymbols	src/gba/elf.cpp	/^Symbol *elfSymbols = NULL;$/;"	v
elfSymbolsCount	src/gba/elf.cpp	/^int elfSymbolsCount = 0;$/;"	v
elfSymbolsStrTab	src/gba/elf.cpp	/^char *elfSymbolsStrTab = NULL;$/;"	v
emuCleanUp	src/System.h	/^   void (*emuCleanUp)();$/;"	m	struct:EmulatedSystem
emuCount	src/System.h	/^   int emuCount;$/;"	m	struct:EmulatedSystem
emuHasDebugger	src/System.h	/^   bool emuHasDebugger;$/;"	m	struct:EmulatedSystem
emuMain	src/System.h	/^   void (*emuMain)(int);$/;"	m	struct:EmulatedSystem
emuReadBattery	src/System.h	/^   bool (*emuReadBattery)(const char *);$/;"	m	struct:EmulatedSystem
emuReadMemState	src/System.h	/^   bool (*emuReadMemState)(char *, int);$/;"	m	struct:EmulatedSystem
emuReadState	src/System.h	/^   bool (*emuReadState)(const char *);$/;"	m	struct:EmulatedSystem
emuReadState	src/System.h	/^   bool (*emuReadState)(const u8*, unsigned);$/;"	m	struct:EmulatedSystem
emuReset	src/System.h	/^   void (*emuReset)();$/;"	m	struct:EmulatedSystem
emuUpdateCPSR	src/System.h	/^   void (*emuUpdateCPSR)();$/;"	m	struct:EmulatedSystem
emuWriteBMP	src/System.h	/^   bool (*emuWriteBMP)(const char *);$/;"	m	struct:EmulatedSystem
emuWriteBattery	src/System.h	/^   bool (*emuWriteBattery)(const char *);$/;"	m	struct:EmulatedSystem
emuWriteMemState	src/System.h	/^   bool (*emuWriteMemState)(char *, int);$/;"	m	struct:EmulatedSystem
emuWritePNG	src/System.h	/^   bool (*emuWritePNG)(const char *);$/;"	m	struct:EmulatedSystem
emuWriteState	src/System.h	/^   bool (*emuWriteState)(const char *);$/;"	m	struct:EmulatedSystem
emuWriteState	src/System.h	/^   unsigned (*emuWriteState)(u8*, unsigned);$/;"	m	struct:EmulatedSystem
emulatedImage	src/win32/Direct3D.cpp	/^	LPDIRECT3DTEXTURE9    emulatedImage[2];$/;"	m	class:Direct3DDisplay	file:
emulating	src/gtk/system.cpp	/^int  emulating;$/;"	v
emulating	src/libretro/libretro.cpp	/^int emulating = 0;$/;"	v
emulating	src/sdl/SDL.cpp	/^int emulating = 0;$/;"	v
emulating	src/win32/VBA.cpp	/^int emulating = 0;$/;"	v
emulating	src/wx/panel.cpp	/^int emulating;$/;"	v
emulator	src/sdl/SDL.cpp	/^struct EmulatedSystem emulator = {$/;"	v	typeref:struct:EmulatedSystem
emulator	src/win32/VBA.h	/^  struct EmulatedSystem emulator;$/;"	m	class:VBA	typeref:struct:VBA::EmulatedSystem
emusys	src/wx/wxvbam.h	/^    struct EmulatedSystem *emusys;$/;"	m	class:GameArea	typeref:struct:GameArea::EmulatedSystem
enable	src/wx/widgets/wxmisc.cpp	/^static void enable(wxWindow_v controls, std::vector<bool>reverse, bool en)$/;"	f	file:
enableButtons	src/win32/MapView.cpp	/^void MapView::enableButtons(int mode)$/;"	f	class:MapView
enableRtc	src/libretro/libretro.cpp	/^bool enableRtc;$/;"	v
enable_check	src/win32/JoybusOptions.h	/^	CButton enable_check;$/;"	m	class:JoybusOptions
enable_menus	src/wx/wxvbam.cpp	/^void MainFrame::enable_menus()$/;"	f	class:MainFrame
enabled	src/apu/Effects_Buffer.h	/^		bool enabled;   \/\/ false = disable all effects$/;"	m	struct:Simple_Effects_Buffer::config_t
enabled	src/apu/Effects_Buffer.h	/^		bool enabled; \/\/ false = disable all effects$/;"	m	struct:Effects_Buffer::config_t
enabled	src/apu/Gb_Apu.h	/^	val_t enabled    [4];$/;"	m	struct:gb_apu_state_t
enabled	src/apu/Gb_Oscs.h	/^	bool        enabled;    \/\/ internal enabled flag$/;"	m	class:Gb_Osc
enabled	src/gb/gbCheats.h	/^  bool enabled;$/;"	m	struct:gbCheat
enabled	src/gb/gbSound.h	/^	bool enabled;   \/\/ false = disable all effects$/;"	m	struct:gb_effects_config_t
enabled	src/gba/Cheats.h	/^  bool enabled;$/;"	m	struct:CheatsData
enabled	src/gba/Sound.cpp	/^	bool enabled;$/;"	m	class:Gba_Pcm_Fifo	file:
encoding	src/gba/elf.h	/^  int encoding;$/;"	m	struct:Type
end	fex/7z_C/7zDec.c	/^  const Byte *end;$/;"	m	struct:__anon37	file:
end	fex/fex/Zlib_Inflater.cpp	/^void Zlib_Inflater::end()$/;"	f	class:Zlib_Inflater
end	fex/fex/blargg_common.h	/^	      T* end()         { return static_cast<T*> (begin_) + size_; }$/;"	f	class:blargg_vector
end	fex/fex/blargg_common.h	/^	const T* end()   const { return static_cast<T*> (begin_) + size_; }$/;"	f	class:blargg_vector
end	src/apu/Blip_Buffer.h	/^	void end( Blip_Buffer& b )      { b.reader_accum_ = accum; }$/;"	f	class:Blip_Reader
end	src/apu/blargg_common.h	/^	T* end() const { return begin_ + size_; }$/;"	f	class:blargg_vector
end	src/gba/elf.cpp	/^  u32 end;$/;"	m	struct:ELFfde	file:
end	src/gtk/configfile.h	/^  inline const_iterator end() const$/;"	f	class:VBA::Config::File
end	src/gtk/configfile.h	/^  inline const_iterator end() const$/;"	f	class:VBA::Config::Section
end	src/gtk/configfile.h	/^  inline iterator end()$/;"	f	class:VBA::Config::File
end	src/gtk/configfile.h	/^  inline iterator end()$/;"	f	class:VBA::Config::Section
end	src/libretro/msvc/msvc-2003-xbox1.bat	/^:end$/;"	l
end	src/libretro/msvc/msvc-2010-360.bat	/^:end$/;"	l
end2	src/filters/2xSaImmx.asm	/^end2:$/;"	l
end3	src/filters/2xSaImmx.asm	/^end3:$/;"	l
endScope	src/gba/elf.h	/^  u32 endScope;$/;"	m	struct:Object
end_addr	src/apu/Gb_Apu.h	/^	enum { end_addr   = 0xFF3F };$/;"	e	enum:Gb_Apu::__anon142
end_entry_size	fex/fex/Zip_Extractor.cpp	/^int const end_entry_size = 22;$/;"	v
end_entry_t	fex/fex/Zip_Extractor.cpp	/^struct end_entry_t$/;"	s	file:
end_frame	src/apu/Blip_Buffer.cpp	/^void Blip_Buffer::end_frame( blip_time_t t )$/;"	f	class:Blip_Buffer
end_frame	src/apu/Effects_Buffer.cpp	/^void Effects_Buffer::end_frame( blip_time_t time )$/;"	f	class:Effects_Buffer
end_frame	src/apu/Gb_Apu.cpp	/^void Gb_Apu::end_frame( blip_time_t end_time )$/;"	f	class:Gb_Apu
end_frame	src/apu/Multi_Buffer.cpp	/^void Stereo_Buffer::end_frame( blip_time_t time )$/;"	f	class:Stereo_Buffer
end_frame	src/apu/Multi_Buffer.cpp	/^void Tracked_Blip_Buffer::end_frame( blip_time_t t )$/;"	f	class:Tracked_Blip_Buffer
end_frame	src/apu/Multi_Buffer.h	/^	void end_frame( blip_time_t ) { }$/;"	f	class:Silent_Buffer
end_frame	src/apu/Multi_Buffer.h	/^	void end_frame( blip_time_t t ) { buf.end_frame( t ); }$/;"	f	class:Mono_Buffer
end_frame	src/gb/gbSound.cpp	/^static void end_frame( blip_time_t time )$/;"	f	file:
end_frame	src/gba/Sound.cpp	/^static void end_frame( blip_time_t time )$/;"	f	file:
end_frame	src/gba/Sound.cpp	/^void Gba_Pcm::end_frame( blip_time_t time )$/;"	f	class:Gba_Pcm
end_read_size	fex/fex/Zip_Extractor.cpp	/^int const end_read_size = 8 * 1024;$/;"	v
enhance_sound	src/win32/AudioCoreSettingsDlg.h	/^	CButton enhance_sound;$/;"	m	class:AudioCoreSettingsDlg
enlargeFactor	src/sdl/filters.cpp	/^	int enlargeFactor;$/;"	m	struct:FilterDesc	file:
entry_count	fex/fex/Zip_Extractor.cpp	/^	byte entry_count [2];$/;"	m	struct:end_entry_t	file:
entry_size	fex/fex/Zip_Extractor.cpp	/^int const entry_size = 46;$/;"	v
entry_t	fex/fex/Zip_Extractor.cpp	/^struct entry_t$/;"	s	file:
entsize	src/gba/elf.h	/^  u32 entsize;$/;"	m	struct:ELFSectionHeader
enumeration	src/gba/elf.h	/^    Enum *enumeration;$/;"	m	union:Type::__anon40
enumvals	src/wx/opts.h	/^    const wxChar *enumvals;$/;"	m	struct:opt_desc
env_delay	src/apu/Gb_Apu.h	/^	val_t env_delay   [3];$/;"	m	struct:gb_apu_state_t
env_delay	src/apu/Gb_Oscs.h	/^	int  env_delay;$/;"	m	class:Gb_Env
env_enabled	src/apu/Gb_Apu.h	/^	val_t env_enabled [3];$/;"	m	struct:gb_apu_state_t
env_enabled	src/apu/Gb_Oscs.h	/^	bool env_enabled;$/;"	m	class:Gb_Env
env_volume	src/apu/Gb_Apu.h	/^	val_t env_volume  [3];$/;"	m	struct:gb_apu_state_t
environ_cb	src/libretro/libretro.cpp	/^static retro_environment_t environ_cb;$/;"	v	file:
err	fex/fex/Rar_Extractor.h	/^		const char* err;$/;"	m	struct:Rar_Extractor::read_callback_t
err_code	fex/fex/fex.cpp	/^static int err_code( fex_err_t err )$/;"	f	file:
error	src/common/memgzio.c	/^  int error;$/;"	m	struct:_MemFile	file:
error_no_Framework35Version	src/libretro/msvc/msvc-2010-360.bat	/^:error_no_Framework35Version$/;"	l
error_no_FrameworkDIR32	src/libretro/msvc/msvc-2010-360.bat	/^:error_no_FrameworkDIR32$/;"	l
error_no_FrameworkVer32	src/libretro/msvc/msvc-2010-360.bat	/^:error_no_FrameworkVer32$/;"	l
error_no_VS100COMNTOOLSDIR	src/libretro/msvc/msvc-2010-360.bat	/^:error_no_VS100COMNTOOLSDIR$/;"	l
error_no_VSINSTALLDIR	src/libretro/msvc/msvc-2010-360.bat	/^:error_no_VSINSTALLDIR$/;"	l
esi	src/gba/GBA-arm.cpp	325;"	d	file:
esp	src/gba/GBA-arm.cpp	323;"	d	file:
evthandler	src/wx/widgets/wx/sdljoy.h	/^    wxEvtHandler *evthandler;$/;"	m	class:wxSDLJoy
exchange	src/sdl/getopt.c	/^exchange (argv)$/;"	f	file:
exprCleanBuffer	src/sdl/expr-lex.cpp	/^void exprCleanBuffer()$/;"	f
exprCol	src/sdl/expr-lex.cpp	/^int exprCol;$/;"	v
exprNodeAddr	src/sdl/exprNode.cpp	/^Node *exprNodeAddr(Node *exp)$/;"	f
exprNodeAddrPrint	src/sdl/exprNode.cpp	/^void exprNodeAddrPrint(Node *n)$/;"	f
exprNodeAddrResolve	src/sdl/exprNode.cpp	/^bool exprNodeAddrResolve(Node *n, Function *f, CompileUnit *u)$/;"	f
exprNodeArray	src/sdl/exprNode.cpp	/^Node *exprNodeArray(Node *exp, Node *number)$/;"	f
exprNodeArrayPrint	src/sdl/exprNode.cpp	/^void exprNodeArrayPrint(Node *n)$/;"	f
exprNodeArrayResolve	src/sdl/exprNode.cpp	/^bool exprNodeArrayResolve(Node *n, Function *f, CompileUnit *u)$/;"	f
exprNodeArrow	src/sdl/exprNode.cpp	/^Node *exprNodeArrow(Node *exp, Node *ident)$/;"	f
exprNodeArrowPrint	src/sdl/exprNode.cpp	/^void exprNodeArrowPrint(Node *n)$/;"	f
exprNodeArrowResolve	src/sdl/exprNode.cpp	/^bool exprNodeArrowResolve(Node *n, Function *f, CompileUnit *u)$/;"	f
exprNodeClean	src/sdl/exprNode.cpp	/^void exprNodeClean(const void *m)$/;"	f
exprNodeCleanUp	src/sdl/exprNode.cpp	/^void exprNodeCleanUp()$/;"	f
exprNodeCleanUpCount	src/sdl/exprNode.cpp	/^int exprNodeCleanUpCount = 0;$/;"	v
exprNodeCleanUpList	src/sdl/exprNode.cpp	/^const void *exprNodeCleanUpList[100];$/;"	v
exprNodeDot	src/sdl/exprNode.cpp	/^Node *exprNodeDot(Node *exp, Node *ident)$/;"	f
exprNodeDotPrint	src/sdl/exprNode.cpp	/^void exprNodeDotPrint(Node *n)$/;"	f
exprNodeDotResolve	src/sdl/exprNode.cpp	/^bool exprNodeDotResolve(Node *n, Function *f, CompileUnit *u)$/;"	f
exprNodeGetSize	src/sdl/exprNode.cpp	/^int exprNodeGetSize(Array *a, int index)$/;"	f
exprNodeIdentifier	src/sdl/exprNode.cpp	/^Node *exprNodeIdentifier()$/;"	f
exprNodeIdentifierPrint	src/sdl/exprNode.cpp	/^void exprNodeIdentifierPrint(Node *n)$/;"	f
exprNodeIdentifierResolve	src/sdl/exprNode.cpp	/^bool exprNodeIdentifierResolve(Node *n, Function *f, CompileUnit *u)$/;"	f
exprNodeNumber	src/sdl/exprNode.cpp	/^Node *exprNodeNumber()$/;"	f
exprNodeNumberPrint	src/sdl/exprNode.cpp	/^void exprNodeNumberPrint(Node *n)$/;"	f
exprNodeNumberResolve	src/sdl/exprNode.cpp	/^bool exprNodeNumberResolve(Node *n, Function *f, CompileUnit *u)$/;"	f
exprNodeSizeof	src/sdl/exprNode.cpp	/^Node *exprNodeSizeof(Node *exp)$/;"	f
exprNodeSizeofPrint	src/sdl/exprNode.cpp	/^void exprNodeSizeofPrint(Node *n)$/;"	f
exprNodeSizeofResolve	src/sdl/exprNode.cpp	/^bool exprNodeSizeofResolve(Node *n, Function *f, CompileUnit *u)$/;"	f
exprNodeStar	src/sdl/exprNode.cpp	/^Node *exprNodeStar(Node *exp)$/;"	f
exprNodeStarPrint	src/sdl/exprNode.cpp	/^void exprNodeStarPrint(Node *n)$/;"	f
exprNodeStarResolve	src/sdl/exprNode.cpp	/^bool exprNodeStarResolve(Node *n, Function *f, CompileUnit *u)$/;"	f
exprNodeType	src/sdl/exprNode.cpp	/^Type exprNodeType = { 0, TYPE_base, "int", DW_ATE_signed, 4, 0, {0}, 0 };$/;"	v
exprString	src/sdl/expr-lex.cpp	/^char *exprString;$/;"	v
expression	src/sdl/exprNode.h	/^  Node *expression;$/;"	m	struct:Node
ext_attrib	fex/fex/Zip_Extractor.cpp	/^	byte ext_attrib [4];$/;"	m	struct:entry_t	file:
extension	fex/fex/File_Extractor.h	/^	const char* extension;$/;"	m	struct:fex_type_t_
extensions	src/win32/FileDlg.h	/^  LPCTSTR *extensions;$/;"	m	class:FileDlg
external	src/gba/elf.h	/^  bool external;$/;"	m	struct:Function
external	src/gba/elf.h	/^  bool external;$/;"	m	struct:Object
extra	fex/7z_C/7zDec.c	/^  Bool extra;$/;"	m	struct:__anon37	file:
extra_chans	src/apu/Effects_Buffer.h	/^	enum { extra_chans = stereo * stereo };$/;"	e	enum:Effects_Buffer::__anon130
extra_len	fex/fex/Zip_Extractor.cpp	/^	byte extra_len [2];$/;"	m	struct:entry_t	file:
extra_len	fex/fex/Zip_Extractor.cpp	/^	byte extra_len [2];$/;"	m	struct:header_t	file:
extract_v	fex/fex/Binary_Extractor.cpp	/^blargg_err_t Binary_Extractor::extract_v( void* p, int n )$/;"	f	class:Binary_Extractor
extract_v	fex/fex/File_Extractor.cpp	/^blargg_err_t File_Extractor::extract_v( void* out, int count )$/;"	f	class:File_Extractor
extract_v	fex/fex/Gzip_Extractor.cpp	/^blargg_err_t Gzip_Extractor::extract_v( void* p, int n )$/;"	f	class:Gzip_Extractor
extract_v	fex/fex/Rar_Extractor.cpp	/^blargg_err_t Rar_Extractor::extract_v( void* out, int count )$/;"	f	class:Rar_Extractor
extract_v	fex/fex/Zip_Extractor.cpp	/^blargg_err_t Zip_Extractor::extract_v( void* out, int count )$/;"	f	class:Zip_Extractor
extraheight	src/wx/viewsupt.h	/^	int lineheight, extraheight;$/;"	m	class:Viewers::DisList
f	fex/fex/blargg_common.h	/^	T f;$/;"	m	struct:blargg_callback
fCurFPS	src/win32/VBA.cpp	/^  float					fCurFPS;$/;"	m	namespace:Sm60FPS	file:
fWantFPS	src/win32/VBA.cpp	/^  float					fWantFPS;$/;"	m	namespace:Sm60FPS	file:
factor_	src/apu/Blip_Buffer.h	/^	blip_ulong factor_;$/;"	m	class:Blip_Buffer
failed	src/win32/Direct3D.cpp	/^	bool                  failed;$/;"	m	class:Direct3DDisplay	file:
failed	src/win32/FullscreenSettings.h	/^	bool failed;$/;"	m	class:FullscreenSettings
failed	src/win32/OpenGL.cpp	/^	bool failed;$/;"	m	class:OpenGLDisplay	file:
failed	src/win32/XAudio2.cpp	/^	bool   failed;$/;"	m	class:XAudio2_Output	file:
failed	src/wx/xaudio2.cpp	/^	bool   failed;$/;"	m	class:XAudio2_Output	file:
false	src/apu/blargg_common.h	/^	const bool false = 0;$/;"	v
false	src/libretro/libretro.h	15;"	d
fdset	src/gba/GBALink.h	/^	sf::Selector<sf::SocketTCP> fdset;$/;"	m	class:lclient
fdset	src/gba/GBALink.h	/^	sf::Selector<sf::SocketTCP> fdset;$/;"	m	class:lserver
feedback	src/apu/Effects_Buffer.h	/^		fixed_t feedback;$/;"	m	struct:Effects_Buffer::__anon131
feedback	src/apu/Effects_Buffer.h	/^		float feedback; \/\/ 0.0 = no echo, 0.5 = each echo half previous, 1.0 = cacophony$/;"	m	struct:Effects_Buffer::config_t
fex_7z_type	fex/fex/Zip7_Extractor.cpp	/^fex_type_t_ const fex_7z_type [1] = {{$/;"	v
fex_bin_type	fex/fex/Binary_Extractor.cpp	/^fex_type_t_ const fex_bin_type [1] = {{$/;"	v
fex_close	fex/fex/fex.cpp	/^BLARGG_EXPORT void        fex_close           ( fex_t* fe )                         { delete fe; }$/;"	f
fex_code_to_err	fex/fex/fex.cpp	/^BLARGG_EXPORT fex_err_t fex_code_to_err( int code )$/;"	f
fex_codes	fex/fex/fex.cpp	/^static blargg_err_to_code_t const fex_codes [] =$/;"	v	file:
fex_crc32	fex/fex/fex.cpp	/^BLARGG_EXPORT unsigned    fex_crc32           ( const fex_t* fe )                   { return fe->crc32(); }$/;"	f
fex_data	fex/fex/fex.cpp	/^BLARGG_EXPORT fex_err_t   fex_data            ( fex_t* fe, const void** data_out )  { return fe->data( data_out ); }$/;"	f
fex_done	fex/fex/fex.cpp	/^BLARGG_EXPORT int         fex_done            ( const fex_t* fe )                   { return fe->done(); }$/;"	f
fex_dos_date	fex/fex/fex.cpp	/^BLARGG_EXPORT unsigned    fex_dos_date        ( const fex_t* fe )                   { return fe->dos_date(); }$/;"	f
fex_err_caller	fex/fex/fex.h	/^	fex_err_caller       = 0x03,\/**< Caller called function with bad args *\/$/;"	e	enum:__anon2
fex_err_code	fex/fex/fex.cpp	/^BLARGG_EXPORT int fex_err_code( fex_err_t err )$/;"	f
fex_err_details	fex/fex/fex.cpp	/^BLARGG_EXPORT const char* fex_err_details( fex_err_t err )$/;"	f
fex_err_file_corrupt	fex/fex/fex.h	/^	fex_err_file_corrupt = 0x33 \/**< File is corrupt *\/$/;"	e	enum:__anon2
fex_err_file_eof	fex/fex/fex.h	/^	fex_err_file_eof     = 0x25,\/**< Tried to read past end of file *\/$/;"	e	enum:__anon2
fex_err_file_feature	fex/fex/fex.h	/^	fex_err_file_feature = 0x32,\/**< File requires unsupported feature *\/$/;"	e	enum:__anon2
fex_err_file_io	fex/fex/fex.h	/^	fex_err_file_io      = 0x23,\/**< Read\/write error *\/$/;"	e	enum:__anon2
fex_err_file_missing	fex/fex/fex.h	/^	fex_err_file_missing = 0x20,\/**< File not found at specified path *\/$/;"	e	enum:__anon2
fex_err_file_read	fex/fex/fex.h	/^	fex_err_file_read    = 0x21,\/**< Couldn't open file for reading *\/$/;"	e	enum:__anon2
fex_err_file_type	fex/fex/fex.h	/^	fex_err_file_type    = 0x30,\/**< File is of wrong type *\/$/;"	e	enum:__anon2
fex_err_generic	fex/fex/fex.h	/^	fex_err_generic      = 0x01,\/**< Error of unspecified type *\/$/;"	e	enum:__anon2
fex_err_internal	fex/fex/fex.h	/^	fex_err_internal     = 0x04,\/**< Internal problem, bug, etc. *\/$/;"	e	enum:__anon2
fex_err_limitation	fex/fex/fex.h	/^	fex_err_limitation   = 0x05,\/**< Exceeded program limit *\/$/;"	e	enum:__anon2
fex_err_memory	fex/fex/fex.h	/^	fex_err_memory       = 0x02,\/**< Out of memory *\/$/;"	e	enum:__anon2
fex_err_str	fex/fex/fex.cpp	/^BLARGG_EXPORT const char* fex_err_str         ( fex_err_t err )                     { return blargg_err_str( err ); }$/;"	f
fex_err_t	fex/fex/fex.h	/^	typedef const char* fex_err_t;$/;"	t
fex_free_path	fex/fex/fex.cpp	/^void fex_free_path( char* path )$/;"	f
fex_gz_type	fex/fex/Gzip_Extractor.cpp	/^fex_type_t_ const fex_gz_type [1]  = {{$/;"	v
fex_has_extension	fex/fex/fex.cpp	/^BLARGG_EXPORT int fex_has_extension( const char str [], const char suffix [] )$/;"	f
fex_has_extension_	fex/fex/fex.cpp	/^static int fex_has_extension_( const char str [], const char suffix [], size_t str_len )$/;"	f	file:
fex_identify_extension	fex/fex/fex.cpp	/^BLARGG_EXPORT fex_type_t fex_identify_extension( const char str [] )$/;"	f
fex_identify_file	fex/fex/fex.cpp	/^BLARGG_EXPORT fex_err_t fex_identify_file( fex_type_t* type_out, const char path [] )$/;"	f
fex_identify_header	fex/fex/fex.cpp	/^BLARGG_EXPORT const char* fex_identify_header( void const* header )$/;"	f
fex_identify_header_size	fex/fex/fex.h	/^enum { fex_identify_header_size = 16 };$/;"	e	enum:__anon1
fex_init	fex/fex/fex.cpp	/^BLARGG_EXPORT fex_err_t fex_init( void )$/;"	f
fex_name	fex/fex/fex.cpp	/^BLARGG_EXPORT const char* fex_name            ( const fex_t* fe )                   { return fe->name(); }$/;"	f
fex_next	fex/fex/fex.cpp	/^BLARGG_EXPORT fex_err_t   fex_next            ( fex_t* fe )                         { return fe->next(); }$/;"	f
fex_ok	fex/fex/fex.h	/^	fex_ok               =    0,\/**< Successful call. Guaranteed to be zero. *\/$/;"	e	enum:__anon2
fex_open	fex/fex/fex.cpp	/^BLARGG_EXPORT fex_err_t fex_open( fex_t** fe_out, const char path [] )$/;"	f
fex_open_type	fex/fex/fex.cpp	/^BLARGG_EXPORT fex_err_t fex_open_type( fex_t** fe_out, const char path [], fex_type_t type )$/;"	f
fex_pos_t	fex/fex/fex.h	/^typedef int fex_pos_t;$/;"	t
fex_rar_type	fex/fex/Rar_Extractor.cpp	/^fex_type_t_ const fex_rar_type [1] = {{$/;"	v
fex_read	fex/fex/fex.cpp	/^BLARGG_EXPORT fex_err_t fex_read( fex_t* fe, void* out, int count )$/;"	f
fex_rewind	fex/fex/fex.cpp	/^BLARGG_EXPORT fex_err_t   fex_rewind          ( fex_t* fe )                         { return fe->rewind(); }$/;"	f
fex_seek_arc	fex/fex/fex.cpp	/^BLARGG_EXPORT fex_err_t   fex_seek_arc        ( fex_t* fe, fex_pos_t pos )          { return fe->seek_arc( pos ); }$/;"	f
fex_size	fex/fex/fex.cpp	/^BLARGG_EXPORT int         fex_size            ( const fex_t* fe )                   { return fe->size(); }$/;"	f
fex_stat	fex/fex/fex.cpp	/^BLARGG_EXPORT fex_err_t   fex_stat            ( fex_t* fe )                         { return fe->stat(); }$/;"	f
fex_t	fex/fex/File_Extractor.cpp	/^File_Extractor::fex_t( fex_type_t t ) :$/;"	f	class:File_Extractor
fex_t	fex/fex/File_Extractor.h	/^struct fex_t : private Data_Reader {$/;"	s
fex_t	fex/fex/fex.h	/^typedef struct fex_t fex_t;$/;"	t	typeref:struct:fex_t
fex_tell	fex/fex/fex.cpp	/^BLARGG_EXPORT int         fex_tell            ( const fex_t* fe )                   { return fe->tell(); }$/;"	f
fex_tell_arc	fex/fex/fex.cpp	/^BLARGG_EXPORT fex_pos_t   fex_tell_arc        ( const fex_t* fe )                   { return fe->tell_arc(); }$/;"	f
fex_type	fex/fex/fex.cpp	/^BLARGG_EXPORT fex_type_t  fex_type            ( const fex_t* fe )                   { return fe->type(); }$/;"	f
fex_type_extension	fex/fex/fex.cpp	/^BLARGG_EXPORT const char* fex_type_extension  ( fex_type_t t )                      { return t->extension; }$/;"	f
fex_type_list	fex/fex/fex.cpp	/^BLARGG_EXPORT const fex_type_t* fex_type_list( void )$/;"	f
fex_type_name	fex/fex/fex.cpp	/^BLARGG_EXPORT const char* fex_type_name       ( fex_type_t t )                      { return t->name; }$/;"	f
fex_type_t	fex/fex/fex.h	/^typedef const struct fex_type_t_* fex_type_t;$/;"	t	typeref:struct:fex_type_t_
fex_type_t_	fex/fex/File_Extractor.h	/^struct fex_type_t_$/;"	s
fex_wide_to_path	fex/fex/fex.cpp	/^char* fex_wide_to_path( const wchar_t* wide )$/;"	f
fex_wname	fex/fex/fex.cpp	/^BLARGG_EXPORT const wchar_t* fex_wname        ( const fex_t* fe )                   { return fe->wname(); }$/;"	f
fex_zip_type	fex/fex/Zip_Extractor.cpp	/^fex_type_t_ const fex_zip_type [1] = {{$/;"	v
fifo	src/gba/Sound.cpp	/^	u8   fifo [32];$/;"	m	class:Gba_Pcm_Fifo	file:
file	src/common/memgzio.c	/^    MEMFILE *file;    \/* memoru file *\/$/;"	m	struct:mem_stream	file:
file	src/gba/elf.h	/^  char *file;$/;"	m	struct:LineInfoItem
file	src/gba/elf.h	/^  int file;$/;"	m	struct:Function
file	src/gba/elf.h	/^  int file;$/;"	m	struct:Object
fileCount	src/gba/elf.h	/^  int fileCount;$/;"	m	struct:LineInfo
fileExists	src/win32/BIOSDialog.cpp	/^bool BIOSDialog::fileExists(CString& file)$/;"	f	class:BIOSDialog
fileExists	src/win32/MainWnd.cpp	/^bool MainWnd::fileExists( LPCTSTR lpFileName )$/;"	f	class:MainWnd
fileImportGSACodeFile	src/win32/MainWndFile.cpp	/^bool MainWnd::fileImportGSACodeFile(CString& fileName)$/;"	f	class:MainWnd
fileOpenSelect	src/win32/MainWnd.cpp	/^bool MainWnd::fileOpenSelect( int system )$/;"	f	class:MainWnd
file_	fex/fex/Data_Reader.h	/^	void* file_;$/;"	m	class:Gzip_File_Reader
file_	fex/fex/Data_Reader.h	/^	void* file_;$/;"	m	class:Std_File_Reader
file_deflated	fex/fex/Zip_Extractor.h	/^	bool file_deflated;$/;"	m	class:Zip_Extractor
file_offset	fex/fex/Zip_Extractor.cpp	/^	byte file_offset [4];$/;"	m	struct:entry_t	file:
filename	fex/fex/Zip_Extractor.cpp	/^	char filename [2]; \/\/ [filename_len]$/;"	m	struct:entry_t	file:
filename	fex/fex/Zip_Extractor.cpp	/^	char filename [2]; \/\/ [filename_len]$/;"	m	struct:header_t	file:
filename	src/sdl/SDL.cpp	/^char filename[2048];$/;"	v
filename	src/win32/VBA.h	/^  CString filename;$/;"	m	class:VBA
filename_len	fex/fex/Zip_Extractor.cpp	/^	byte filename_len [2];$/;"	m	struct:entry_t	file:
filename_len	fex/fex/Zip_Extractor.cpp	/^	byte filename_len [2];$/;"	m	struct:header_t	file:
fileno	src/sdl/expr-lex.cpp	474;"	d	file:
files	src/gba/elf.h	/^  char **files;$/;"	m	struct:LineInfo
filesz	src/gba/elf.h	/^  u32 filesz;$/;"	m	struct:ELFProgramHeader
fill	src/common/RingBuffer.h	/^void RingBuffer<T>::fill(const T value) {$/;"	f	class:RingBuffer
fill_buf	fex/fex/Zip_Extractor.cpp	/^blargg_err_t Zip_Extractor::fill_buf( int offset, int buf_size, int initial_read )$/;"	f	class:Zip_Extractor
fill_buf	fex/fex/Zlib_Inflater.cpp	/^blargg_err_t Zlib_Inflater::fill_buf( int count )$/;"	f	class:Zlib_Inflater
fill_rgb_row_16	src/filters/bilinear.cpp	/^static void fill_rgb_row_16(u16 *from, int src_width, u8 *row, int width)$/;"	f	file:
fill_rgb_row_32	src/filters/bilinear.cpp	/^static void fill_rgb_row_32(u32 *from, int src_width, u8 *row, int width)$/;"	f	file:
filled	fex/fex/Zlib_Inflater.h	/^	int filled() const                  { return zbuf.avail_in; }$/;"	f	class:Zlib_Inflater
filt_done	src/wx/wxvbam.h	/^    wxSemaphore filt_done;$/;"	m	class:DrawingPanel
filt_plugin	src/wx/wxvbam.h	/^    wxDynamicLibrary filt_plugin;$/;"	m	class:DrawingPanel
filtch	src/wx/guiinit.cpp	/^    wxChoice *filtch;$/;"	m	class:PluginListFiller	file:
filter	src/sdl/SDL.cpp	/^Filter filter = kStretch2x;$/;"	v
filter	src/wx/opts.h	/^    int filter;$/;"	m	struct:opts_t
filterData	src/win32/OpenGL.cpp	/^	u8 *filterData;$/;"	m	class:OpenGLDisplay	file:
filterFunction	src/sdl/SDL.cpp	/^FilterFunc filterFunction = 0;$/;"	v
filterFunction	src/win32/Direct3D.cpp	/^	void (*filterFunction)(u8*,u32,u8*,u8*,u32,int,int);$/;"	m	struct:PFTHREAD_DATA	file:
filterFunction	src/win32/VBA.h	/^  void (*filterFunction)(u8*,u32,u8*,u8*,u32,int,int);$/;"	m	class:VBA
filterHeight	src/win32/VBA.h	/^  int filterHeight;$/;"	m	class:VBA
filterMT	src/win32/VBA.h	/^  bool filterMT; \/\/ enable multi-threading for pixel filters$/;"	m	class:VBA
filterMagnification	src/win32/VBA.h	/^  int filterMagnification;$/;"	m	class:VBA
filterPix	src/sdl/SDL.cpp	/^u8 *filterPix = 0;$/;"	v
filterType	src/win32/VBA.h	/^  int filterType;$/;"	m	class:VBA
filterWidth	src/win32/VBA.h	/^  int filterWidth;$/;"	m	class:VBA
filter_enlarge	src/sdl/SDL.cpp	/^int filter_enlarge = 2;$/;"	v
filter_plugin	src/wx/opts.h	/^    wxString filter_plugin;$/;"	m	struct:opts_t
filtfunc	src/wx/wxvbam.h	/^enum filtfunc {$/;"	g
final1a	src/filters/2xSaImmx.asm	/^final1a       resb 8$/;"	l
final1b	src/filters/2xSaImmx.asm	/^final1b       resb 8$/;"	l
final2a	src/filters/2xSaImmx.asm	/^final2a       resb 8$/;"	l
final2b	src/filters/2xSaImmx.asm	/^final2b       resb 8$/;"	l
finish_setup	src/common/ffmpeg.cpp	/^MediaRet MediaRecorder::finish_setup(const char *fname)$/;"	f	class:MediaRecorder
first	src/win32/DirectInput.cpp	/^    BOOL first;$/;"	m	struct:deviceInfo	file:
first_disk	fex/fex/Zip_Extractor.cpp	/^	byte first_disk [2];$/;"	m	struct:end_entry_t	file:
first_nonopt	src/sdl/getopt.c	/^static int first_nonopt;$/;"	v	file:
first_read	fex/fex/Zip_Extractor.cpp	/^blargg_err_t Zip_Extractor::first_read( int count )$/;"	f	class:Zip_Extractor
fixed_shift	src/apu/Effects_Buffer.cpp	/^int const fixed_shift = 12;$/;"	v
fixed_t	src/apu/Effects_Buffer.h	/^	typedef blargg_long fixed_t;$/;"	t	class:Effects_Buffer
flag	src/gba/elf.h	/^    bool flag;$/;"	m	union:ELFAttr::__anon39
flag	src/sdl/getopt.h	/^  int *flag;$/;"	m	struct:option
flagctrl	src/wx/viewers.cpp	41;"	d	file:
flags	fex/fex/Zip_Extractor.cpp	/^	byte flags [2];$/;"	m	struct:entry_t	file:
flags	fex/fex/Zip_Extractor.cpp	/^	byte flags [2];$/;"	m	struct:header_t	file:
flags	src/gba/elf.h	/^  u32 flags;$/;"	m	struct:ELFProgramHeader
flags	src/gba/elf.h	/^  u32 flags;$/;"	m	struct:ELFSectionHeader
flashBank	src/gba/Flash.cpp	/^int flashBank = 0;$/;"	v
flashDelayedWrite	src/gba/Flash.cpp	/^void flashDelayedWrite(u32 address, u8 byte)$/;"	f
flashDeviceID	src/gba/Flash.cpp	/^int flashDeviceID = 0x1b;$/;"	v
flashInit	src/gba/Flash.cpp	/^void flashInit()$/;"	f
flashManufacturerID	src/gba/Flash.cpp	/^int flashManufacturerID = 0x32;$/;"	v
flashRead	src/gba/Flash.cpp	/^u8 flashRead(u32 address)$/;"	f
flashReadGame	src/gba/Flash.cpp	/^void flashReadGame(const uint8_t *& data, int)$/;"	f
flashReadGame	src/gba/Flash.cpp	/^void flashReadGame(gzFile gzFile, int version)$/;"	f
flashReadGameSkip	src/gba/Flash.cpp	/^void flashReadGameSkip(gzFile gzFile, int version)$/;"	f
flashReadState	src/gba/Flash.cpp	/^int flashReadState = FLASH_READ_ARRAY;$/;"	v
flashReset	src/gba/Flash.cpp	/^void flashReset()$/;"	f
flashSaveData	src/gba/Flash.cpp	/^static variable_desc flashSaveData[] = {$/;"	v	file:
flashSaveData2	src/gba/Flash.cpp	/^static variable_desc flashSaveData2[] = {$/;"	v	file:
flashSaveData3	src/gba/Flash.cpp	/^static variable_desc flashSaveData3[] = {$/;"	v	file:
flashSaveDecide	src/gba/Flash.cpp	/^void flashSaveDecide(u32 address, u8 byte)$/;"	f
flashSaveGame	src/gba/Flash.cpp	/^void flashSaveGame(gzFile gzFile)$/;"	f
flashSaveGame	src/gba/Flash.cpp	/^void flashSaveGame(uint8_t *& data)$/;"	f
flashSaveMemory	src/gba/Flash.cpp	/^uint8_t *flashSaveMemory = libretro_save_buf;$/;"	v
flashSaveMemory	src/gba/Flash.cpp	/^uint8_t flashSaveMemory[FLASH_128K_SZ];$/;"	v
flashSetSize	src/gba/Flash.cpp	/^void flashSetSize(int size)$/;"	f
flashSize	src/gba/Flash.cpp	/^int flashSize = 0x10000;$/;"	v
flashSize	src/libretro/libretro.cpp	/^	int flashSize;$/;"	m	struct:__anon59	file:
flashState	src/gba/Flash.cpp	/^int flashState = FLASH_READ_ARRAY;$/;"	v
flashWrite	src/gba/Flash.cpp	/^void flashWrite(u32 address, u8 byte)$/;"	f
flash_size	src/wx/opts.h	/^    int flash_size; \/\/ flashSetSize  \/\/ has per-game override$/;"	m	struct:opts_t
flex_int16_t	src/sdl/expr-lex.cpp	/^typedef int16_t flex_int16_t;$/;"	t	file:
flex_int16_t	src/sdl/expr-lex.cpp	/^typedef short int flex_int16_t;$/;"	t	file:
flex_int32_t	src/sdl/expr-lex.cpp	/^typedef int flex_int32_t;$/;"	t	file:
flex_int32_t	src/sdl/expr-lex.cpp	/^typedef int32_t flex_int32_t;$/;"	t	file:
flex_int8_t	src/sdl/expr-lex.cpp	/^typedef int8_t flex_int8_t;$/;"	t	file:
flex_int8_t	src/sdl/expr-lex.cpp	/^typedef signed char flex_int8_t;$/;"	t	file:
flex_uint16_t	src/sdl/expr-lex.cpp	/^typedef uint16_t flex_uint16_t;$/;"	t	file:
flex_uint16_t	src/sdl/expr-lex.cpp	/^typedef unsigned short int flex_uint16_t;$/;"	t	file:
flex_uint32_t	src/sdl/expr-lex.cpp	/^typedef uint32_t flex_uint32_t;$/;"	t	file:
flex_uint32_t	src/sdl/expr-lex.cpp	/^typedef unsigned int flex_uint32_t;$/;"	t	file:
flex_uint8_t	src/sdl/expr-lex.cpp	/^typedef uint8_t flex_uint8_t;$/;"	t	file:
flex_uint8_t	src/sdl/expr-lex.cpp	/^typedef unsigned char flex_uint8_t; $/;"	t	file:
flg	src/wx/gfxviewers.cpp	/^	wxControl *pos, *mode, *colors, *pallab, *tile, *prio, *size, *rot, *flg;$/;"	m	class:Viewers::OAMViewer	file:
flg	src/wx/gfxviewers.cpp	/^	wxControl *pos, *tilelab, *prio, *oap, *pallab, *flg, *banklab;$/;"	m	class:Viewers::GBOAMViewer	file:
flip	src/wx/gfxviewers.cpp	/^	wxControl *coords, *addr, *tile, *flip, *palette, *prio;$/;"	m	class:Viewers::GBMapViewer	file:
flip	src/wx/gfxviewers.cpp	/^	wxControl *coords, *addr, *tile, *flip, *palette;$/;"	m	class:Viewers::MapViewer	file:
flush_samples	src/gba/Sound.cpp	/^void flush_samples(Multi_Buffer * buffer)$/;"	f
fmt	src/wx/guiinit.cpp	/^    int valsrc, size, op, fmt;$/;"	m	class:CheatFind_t	file:
fmt	src/wx/viewsupt.h	/^	int fmt;$/;"	m	class:Viewers::MemView
fnGetInfo	src/win32/rpi.cpp	/^static RENDPLUG_GetInfo fnGetInfo = NULL;$/;"	v	file:
fnOutput	src/win32/rpi.cpp	/^static RENDPLUG_Output fnOutput = NULL;$/;"	v	file:
focused	src/wx/wxvbam.h	/^    bool focused;$/;"	m	class:MainFrame
font	src/win32/MemoryViewer.h	/^  HFONT font;$/;"	m	class:MemoryViewer
font	src/win32/OpenGL.cpp	/^	GLFONT font;$/;"	m	class:OpenGLDisplay	file:
fontSize	src/win32/MemoryViewer.h	/^  CSize fontSize;$/;"	m	class:MemoryViewer
fontdata2	src/sdl/text.cpp	/^static const u8 fontdata2[2048] = {$/;"	v	file:
form	src/gba/elf.h	/^  u32 form;$/;"	m	struct:ELFAttr
format	src/apu/Gb_Apu.h	/^	val_t format;   \/\/ format of all following data$/;"	m	struct:gb_apu_state_t
format0	src/apu/Gb_Apu.h	/^	enum { format0 = 0x50414247 };$/;"	e	enum:gb_apu_state_t::__anon146
fpic	src/libretro/Makefile	/^   fpic := -fPIC$/;"	m
fps	src/libretro/libretro.h	/^   double fps;             \/\/ FPS of video content.$/;"	m	struct:retro_system_timing
fr0	src/wx/gfxviewers.cpp	/^	wxRadioButton *fr0, *fr1, *bg0, *bg1, *bg2, *bg3;$/;"	m	class:Viewers::MapViewer	file:
fr1	src/wx/gfxviewers.cpp	/^	wxRadioButton *fr0, *fr1, *bg0, *bg1, *bg2, *bg3;$/;"	m	class:Viewers::MapViewer	file:
frame	src/win32/MapView.h	/^  int frame;$/;"	m	class:MapView
frame	src/wx/gfxviewers.cpp	/^	int frame, bg;$/;"	m	class:Viewers::MapViewer	file:
frame	src/wx/wxvbam.h	/^    MainFrame *frame;$/;"	m	class:wxvbamApp
frameBase	src/gba/elf.h	/^  ELFBlock *frameBase;$/;"	m	struct:Function
frameCount	src/gba/GBA.cpp	/^int frameCount = 0;$/;"	v
frameSkip	src/gba/Globals.cpp	/^int frameSkip = 1;$/;"	v
frame_len	src/common/ffmpeg.h	/^    int frame_len, sample_len, in_audio_buf2;$/;"	m	class:MediaRecorder
frame_period	src/apu/Gb_Apu.h	/^	blip_time_t frame_period;       \/\/ clocks between each frame sequencer step$/;"	m	class:Gb_Apu
frame_phase	src/apu/Gb_Apu.h	/^	int             frame_phase;    \/\/ phase of next frame sequencer step$/;"	m	class:Gb_Apu
frame_phase	src/apu/Gb_Apu.h	/^	val_t frame_phase;$/;"	m	struct:gb_apu_state_t
frame_time	src/apu/Gb_Apu.h	/^	blip_time_t     frame_time;     \/\/ time of next frame sequencer action$/;"	m	class:Gb_Apu
frame_time	src/apu/Gb_Apu.h	/^	val_t frame_time;$/;"	m	struct:gb_apu_state_t
frames	src/libretro/libretro.h	/^   unsigned    frames;     \/\/ Duration in frames of message.$/;"	m	struct:retro_message
frames	src/wx/sys.cpp	/^static int frames = 0;$/;"	v	file:
frameskipadjust	src/sdl/SDL.cpp	/^int frameskipadjust = 0;$/;"	v
frameskipadjust	src/win32/VBA.h	/^  int frameskipadjust;$/;"	m	class:VBA
freezeInternalRAM	src/gba/GBA.cpp	/^u8 freezeInternalRAM[0x8000];$/;"	v
freezeOAM	src/gba/GBA.cpp	/^u8 freezeOAM[0x400];$/;"	v
freezePRAM	src/gba/GBA.cpp	/^u8 freezePRAM[0x400];$/;"	v
freezeVRAM	src/gba/GBA.cpp	/^u8 freezeVRAM[0x18000];$/;"	v
freezeWorkRAM	src/gba/GBA.cpp	/^u8 freezeWorkRAM[0x40000];$/;"	v
freq	src/win32/OpenAL.cpp	/^	int            freq;$/;"	m	class:OpenAL	file:
freq	src/win32/XAudio2.cpp	/^	UINT32 freq;$/;"	m	class:XAudio2_Output	file:
freq	src/wx/openal.cpp	/^	int            freq;$/;"	m	class:OpenAL	file:
freq	src/wx/xaudio2.cpp	/^	UINT32 freq;$/;"	m	class:XAudio2_Output	file:
frequency	src/apu/Gb_Oscs.h	/^	int frequency() const { return (regs [4] & 7) * 0x100 + regs [3]; }$/;"	f	class:Gb_Osc
frequency	src/win32/Display.h	/^	  unsigned int frequency;$/;"	m	struct:IDisplay::VIDEO_MODE
frm1	src/filters/interframe.cpp	/^static u8 *frm1 = NULL;$/;"	v	file:
frm2	src/filters/interframe.cpp	/^static u8 *frm2 = NULL;$/;"	v	file:
frm3	src/filters/interframe.cpp	/^static u8 *frm3 = NULL;$/;"	v	file:
fsAdapter	src/win32/VBA.h	/^  int fsAdapter;$/;"	m	class:VBA
fsColorDepth	src/win32/VBA.h	/^  int fsColorDepth;$/;"	m	class:VBA
fsForceChange	src/win32/VBA.h	/^  bool fsForceChange;$/;"	m	class:VBA
fsFrequency	src/win32/VBA.h	/^  int fsFrequency;$/;"	m	class:VBA
fsHeight	src/win32/VBA.h	/^  int fsHeight;$/;"	m	class:VBA
fsWidth	src/win32/VBA.h	/^  int fsWidth;$/;"	m	class:VBA
fs_mode	src/wx/opts.h	/^    wxVideoMode fs_mode;$/;"	m	struct:opts_t
fseeko64	src/common/Patch.cpp	12;"	d	file:
fseeko64	src/common/Patch.cpp	24;"	d	file:
ftello64	src/common/Patch.cpp	13;"	d	file:
ftello64	src/common/Patch.cpp	25;"	d	file:
fullScreenStretch	src/win32/VBA.h	/^  bool fullScreenStretch;$/;"	m	class:VBA
fullscreen	src/sdl/SDL.cpp	/^int fullscreen = 0;$/;"	v
fullscreen	src/wx/opts.h	/^    bool fullscreen;$/;"	m	struct:opts_t
fullscreen	src/wx/wxvbam.h	/^    bool fullscreen;$/;"	m	class:GameArea
func16	src/sdl/filters.cpp	/^	FilterFunc func16;$/;"	m	struct:FilterDesc	file:
func16	src/sdl/filters.cpp	/^	IFBFilterFunc func16;$/;"	m	struct:IFBFilterDesc	file:
func24	src/sdl/filters.cpp	/^	FilterFunc func24;$/;"	m	struct:FilterDesc	file:
func32	src/sdl/filters.cpp	/^	FilterFunc func32;$/;"	m	struct:FilterDesc	file:
func32	src/sdl/filters.cpp	/^	IFBFilterFunc func32;$/;"	m	struct:IFBFilterDesc	file:
function	src/gba/elf.h	/^    FunctionType *function;$/;"	m	union:Type::__anon40
function	src/sdl/debugger.cpp	/^  void (*function)(int,char **);$/;"	m	struct:DebuggerCommand	file:
functions	src/gba/elf.h	/^  Function *functions;$/;"	m	struct:CompileUnit
fxOn	src/gba/GBA.cpp	/^bool fxOn = false;$/;"	v
g	src/wx/viewsupt.h	/^	int r, g, b;$/;"	m	class:Viewers::ColorView
g_CrcTable	fex/7z_C/7zCrc.c	/^UInt32 g_CrcTable[256 * CRC_NUM_TABLES];$/;"	v
g_CrcUpdate	fex/7z_C/7zCrc.c	/^static CRC_FUNC g_CrcUpdate;$/;"	v	file:
g_allocCount	fex/7z_C/7zAlloc.c	/^int g_allocCount = 0;$/;"	v
g_allocCountTemp	fex/7z_C/7zAlloc.c	/^int g_allocCountTemp = 0;$/;"	v
g_audio_frames	src/libretro/SoundRetro.cpp	/^unsigned g_audio_frames;$/;"	v
g_hOpenALDLL	src/win32/LoadOAL.cpp	/^HINSTANCE g_hOpenALDLL = NULL;$/;"	v
g_notifier	src/win32/XAudio2.cpp	/^} g_notifier;$/;"	v	typeref:class:XAudio2_Device_Notifier
g_notifier	src/wx/xaudio2.cpp	/^} g_notifier;$/;"	v	typeref:class:XAudio2_Device_Notifier
g_video_frames	src/libretro/libretro.cpp	/^static unsigned g_video_frames;$/;"	v	file:
game_dir	src/wx/wxvbam.h	/^    wxString game_dir() { return loaded_game.GetPath(); }$/;"	f	class:GameArea
game_file	src/wx/sys.cpp	/^wxFFile game_file;$/;"	v
game_frame	src/wx/sys.cpp	/^u32 game_frame;$/;"	v
game_joypad	src/wx/sys.cpp	/^u32 game_joypad;$/;"	v
game_name	src/wx/wxvbam.h	/^    wxString game_name() { return loaded_game.GetFullName(); }$/;"	f	class:GameArea
game_next_frame	src/wx/sys.cpp	/^u32 game_next_frame, game_next_joypad;$/;"	v
game_next_joypad	src/wx/sys.cpp	/^u32 game_next_frame, game_next_joypad;$/;"	v
game_playback	src/wx/sys.cpp	/^bool game_recording, game_playback;$/;"	v
game_recording	src/wx/sys.cpp	/^bool game_recording, game_playback;$/;"	v
game_size	src/wx/wxvbam.h	/^    u32 game_size() { return rom_size; }$/;"	f	class:GameArea
game_type	src/wx/wxvbam.h	/^    IMAGE_TYPE game_type() { return loaded; }$/;"	f	class:GameArea
gamepakRamWaitState	src/gba/GBA.cpp	/^const u8 gamepakRamWaitState[4] = { 4, 3, 2, 8 };$/;"	v
gamepakWaitState	src/gba/GBA.cpp	/^const u8 gamepakWaitState[4] =  { 4, 3, 2, 8 };$/;"	v
gamepakWaitState0	src/gba/GBA.cpp	/^const u8 gamepakWaitState0[2] = { 2, 1 };$/;"	v
gamepakWaitState1	src/gba/GBA.cpp	/^const u8 gamepakWaitState1[2] = { 4, 1 };$/;"	v
gamepakWaitState2	src/gba/GBA.cpp	/^const u8 gamepakWaitState2[2] = { 8, 1 };$/;"	v
gbAddGgCheat	src/gb/gbCheats.cpp	/^bool gbAddGgCheat(const char *code, const char *desc)$/;"	f
gbAddGsCheat	src/gb/gbCheats.cpp	/^bool gbAddGsCheat(const char *code, const char *desc)$/;"	f
gbBattery	src/gb/GB.cpp	/^int gbBattery = 0;$/;"	v
gbBatteryError	src/gb/GB.cpp	/^bool gbBatteryError = false;$/;"	v
gbBgp	src/gb/gbGlobals.cpp	/^u8 gbBgp[4]  = { 0, 1, 2, 3};$/;"	v
gbBgpLine	src/gb/GB.cpp	/^u8 gbBgpLine[300];$/;"	v
gbBiosFileName	src/sdl/SDL.cpp	/^char gbBiosFileName[2048];$/;"	v
gbBlackScreen	src/gb/GB.cpp	/^bool gbBlackScreen = false;$/;"	v
gbBorderAutomatic	src/gb/gbGlobals.cpp	/^int gbBorderAutomatic = 0;$/;"	v
gbBorderAutomatic	src/wx/opts.h	/^    bool gbBorderAutomatic;$/;"	m	struct:opts_t
gbBorderColumnSkip	src/gb/gbGlobals.cpp	/^int gbBorderColumnSkip = 0;$/;"	v
gbBorderLineSkip	src/gb/gbGlobals.cpp	/^int gbBorderLineSkip = 160;$/;"	v
gbBorderOn	src/gb/gbGlobals.cpp	/^int gbBorderOn = 0;$/;"	v
gbBorderOn	src/wx/opts.h	/^    bool gbBorderOn;$/;"	m	struct:opts_t
gbBorderRowSkip	src/gb/gbGlobals.cpp	/^int gbBorderRowSkip = 0;$/;"	v
gbBuffer	src/gb/GB.cpp	/^char gbBuffer[2048];$/;"	v
gbCPUInit	src/gb/GB.cpp	/^void gbCPUInit(const char *biosFileName, bool useBiosFile)$/;"	f
gbCapture	src/gb/GB.cpp	/^bool gbCapture = false;$/;"	v
gbCaptureNumber	src/gb/GB.cpp	/^int gbCaptureNumber = 0;$/;"	v
gbCapturePrevious	src/gb/GB.cpp	/^bool gbCapturePrevious = false;$/;"	v
gbCgbMode	src/gb/gbGlobals.cpp	/^int gbCgbMode = 0;$/;"	v
gbCheat	src/gb/gbCheats.h	/^struct gbCheat {$/;"	s
gbCheatDisable	src/gb/gbCheats.cpp	/^void gbCheatDisable(int i)$/;"	f
gbCheatEnable	src/gb/gbCheats.cpp	/^void gbCheatEnable(int i)$/;"	f
gbCheatList	src/gb/gbCheats.cpp	/^gbCheat gbCheatList[100];$/;"	v
gbCheatMap	src/gb/gbCheats.cpp	/^bool gbCheatMap[0x10000];$/;"	v
gbCheatNumber	src/gb/gbCheats.cpp	/^int gbCheatNumber = 0;$/;"	v
gbCheatRead	src/gb/gbCheats.cpp	/^u8 gbCheatRead(u16 address)$/;"	f
gbCheatReadGSCodeFile	src/gb/gbCheats.cpp	/^bool gbCheatReadGSCodeFile(const char *fileName)$/;"	f
gbCheatRemove	src/gb/gbCheats.cpp	/^void gbCheatRemove(int i)$/;"	f
gbCheatRemoveAll	src/gb/gbCheats.cpp	/^void gbCheatRemoveAll()$/;"	f
gbCheatUpdateMap	src/gb/gbCheats.cpp	/^void gbCheatUpdateMap()$/;"	f
gbCheatWrite	src/gb/gbCheats.cpp	/^void gbCheatWrite(bool reboot)$/;"	f
gbCheatingDevice	src/gb/GB.cpp	/^u8 gbCheatingDevice = 0; \/\/ 1 = GS, 2 = GG$/;"	v
gbCheatsLoadCheatList	src/gb/gbCheats.cpp	/^bool gbCheatsLoadCheatList(const char *file)$/;"	f
gbCheatsReadGame	src/gb/gbCheats.cpp	/^void gbCheatsReadGame(gzFile gzFile, int version)$/;"	f
gbCheatsReadGameSkip	src/gb/gbCheats.cpp	/^void gbCheatsReadGameSkip(gzFile gzFile, int version)$/;"	f
gbCheatsSaveCheatList	src/gb/gbCheats.cpp	/^void gbCheatsSaveCheatList(const char *file)$/;"	f
gbCheatsSaveGame	src/gb/gbCheats.cpp	/^void gbCheatsSaveGame(gzFile gzFile)$/;"	f
gbCleanUp	src/gb/GB.cpp	/^void gbCleanUp()$/;"	f
gbColorFilter	src/gb/gbGlobals.cpp	/^u16 gbColorFilter[32768];$/;"	v
gbColorOption	src/gb/gbGlobals.cpp	/^int gbColorOption = 0;$/;"	v
gbCompareLYToLYC	src/gb/GB.cpp	/^void gbCompareLYToLYC()$/;"	f
gbCopyMemory	src/gb/GB.cpp	/^void gbCopyMemory(u16 d, u16 s, int count)$/;"	f
gbCycles	src/gb/GB.cpp	/^int gbCycles[] = {$/;"	v
gbCyclesCB	src/gb/GB.cpp	/^int gbCyclesCB[] = {$/;"	v
gbDataGS3	src/gb/gbMemory.cpp	/^mapperGS3 gbDataGS3 = { 1 }; \/\/ ROM bank$/;"	v
gbDataHuC1	src/gb/gbMemory.cpp	/^mapperHuC1 gbDataHuC1 = {$/;"	v
gbDataHuC3	src/gb/gbMemory.cpp	/^mapperHuC3 gbDataHuC3 = {$/;"	v
gbDataMBC1	src/gb/gbMemory.cpp	/^mapperMBC1 gbDataMBC1 = {$/;"	v
gbDataMBC2	src/gb/gbMemory.cpp	/^mapperMBC2 gbDataMBC2 = {$/;"	v
gbDataMBC3	src/gb/gbMemory.cpp	/^mapperMBC3 gbDataMBC3 = {$/;"	v
gbDataMBC5	src/gb/gbMemory.cpp	/^mapperMBC5 gbDataMBC5 = {$/;"	v
gbDataMBC7	src/gb/gbMemory.cpp	/^mapperMBC7 gbDataMBC7 = {$/;"	v
gbDataMMM01	src/gb/gbMemory.cpp	/^mapperMMM01 gbDataMMM01 ={$/;"	v
gbDataTAMA5	src/gb/gbMemory.cpp	/^mapperTAMA5 gbDataTAMA5 = {$/;"	v
gbDaysinMonth	src/gb/gbMemory.cpp	/^u8 gbDaysinMonth [12] = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};$/;"	v
gbDis	src/gb/gbDis.cpp	/^int gbDis(char *buffer, u16 address)$/;"	f
gbDisabledRam	src/gb/gbMemory.cpp	/^const u8 gbDisabledRam [8] = {0x80, 0xff, 0xf0, 0x00, 0x30, 0xbf, 0xbf, 0xbf};$/;"	v
gbDivTicks	src/gb/GB.cpp	/^int gbDivTicks = GBDIV_CLOCK_TICKS;$/;"	v
gbDmaTicks	src/gb/gbGlobals.cpp	/^int gbDmaTicks = 0;$/;"	v
gbDoHdma	src/gb/GB.cpp	/^void gbDoHdma()$/;"	f
gbDrawLine	src/gb/GB.cpp	/^void gbDrawLine()$/;"	f
gbDrawSpriteTile	src/gb/gbGfx.cpp	/^void gbDrawSpriteTile(int tile, int x,int y,int t, int flags,$/;"	f
gbDrawSprites	src/gb/gbGfx.cpp	/^void gbDrawSprites(bool draw)$/;"	f
gbElapsedTime	src/gb/GB.cpp	/^u32 gbElapsedTime = 0;$/;"	v
gbEmulate	src/gb/GB.cpp	/^void gbEmulate(int ticksToStop)$/;"	f
gbEmulatorType	src/gb/gbGlobals.cpp	/^int gbEmulatorType = 0;$/;"	v
gbEmulatorType	src/wx/opts.h	/^    int gbEmulatorType;$/;"	m	struct:opts_t
gbFrameCount	src/gb/GB.cpp	/^int gbFrameCount = 0;$/;"	v
gbFrameSkip	src/gb/GB.cpp	/^int gbFrameSkip = 0;$/;"	v
gbFrameSkipCount	src/gb/GB.cpp	/^int gbFrameSkipCount = 0;$/;"	v
gbGBCColorType	src/gb/GB.cpp	/^int gbGBCColorType = 0;$/;"	v
gbGenFilter	src/gb/GB.cpp	/^void gbGenFilter()$/;"	f
gbGetHardwareType	src/gb/GB.cpp	/^void gbGetHardwareType()$/;"	f
gbGetNextEvent	src/gb/GB.cpp	/^int gbGetNextEvent (int _clockTicks)$/;"	f
gbGetValue	src/gb/GB.cpp	/^int inline gbGetValue(int min,int max,int v)$/;"	f
gbHardware	src/gb/GB.cpp	/^int gbHardware = 0;$/;"	v
gbHdmaBytes	src/gb/GB.cpp	/^int gbHdmaBytes = 0x0000;$/;"	v
gbHdmaDestination	src/gb/GB.cpp	/^int gbHdmaDestination = 0x99d0;$/;"	v
gbHdmaOn	src/gb/GB.cpp	/^int gbHdmaOn = 0;$/;"	v
gbHdmaSource	src/gb/GB.cpp	/^int gbHdmaSource = 0x99d0;$/;"	v
gbIncreased	src/gb/GB.cpp	/^bool gbIncreased = false;$/;"	v
gbInit	src/gb/GB.cpp	/^void gbInit()$/;"	f
gbInt48Signal	src/gb/GB.cpp	/^int gbInt48Signal = 0;$/;"	v
gbIntBreak	src/gb/GB.cpp	/^int gbIntBreak = 0;$/;"	v
gbInternalTimer	src/gb/GB.cpp	/^int gbInternalTimer = 0x55;$/;"	v
gbInterruptLaunched	src/gb/GB.cpp	/^int gbInterruptLaunched = 0;$/;"	v
gbInterruptWait	src/gb/GB.cpp	/^int gbInterruptWait = 0;$/;"	v
gbInvertTab	src/gb/gbGfx.cpp	/^u8 gbInvertTab[256] = {$/;"	v
gbIsGameboyRom	src/gb/GB.cpp	/^bool gbIsGameboyRom(char * file)$/;"	f
gbJoymask	src/gb/GB.cpp	/^int gbJoymask[4] = { 0, 0, 0, 0 };$/;"	v
gbJoypad_interrupt	src/gb/GB.cpp	/^void gbJoypad_interrupt()$/;"	f
gbLCDChangeHappened	src/gb/GB.cpp	/^bool gbLCDChangeHappened = false;$/;"	v
gbLYChangeHappened	src/gb/GB.cpp	/^bool gbLYChangeHappened = false;$/;"	v
gbLastTime	src/gb/GB.cpp	/^u32 gbLastTime = 0;$/;"	v
gbLcdLYIncrementTicks	src/gb/GB.cpp	/^int gbLcdLYIncrementTicks = 114;$/;"	v
gbLcdLYIncrementTicksDelayed	src/gb/GB.cpp	/^int gbLcdLYIncrementTicksDelayed = 115;$/;"	v
gbLcdMode	src/gb/GB.cpp	/^int gbLcdMode = 2;$/;"	v
gbLcdModeDelayed	src/gb/GB.cpp	/^int gbLcdModeDelayed = 2;$/;"	v
gbLcdTicks	src/gb/GB.cpp	/^int gbLcdTicks = GBLCD_MODE_2_CLOCK_TICKS-1;$/;"	v
gbLcdTicksDelayed	src/gb/GB.cpp	/^int gbLcdTicksDelayed = GBLCD_MODE_2_CLOCK_TICKS;$/;"	v
gbLcd_interrupt	src/gb/GB.cpp	/^void gbLcd_interrupt()$/;"	f
gbLine99Ticks	src/gb/GB.cpp	/^int gbLine99Ticks = 1;$/;"	v
gbLineBuffer	src/gb/gbGlobals.cpp	/^u16 *gbLineBuffer = NULL;$/;"	v
gbLineMix	src/gb/gbGfx.cpp	/^u16 gbLineMix[160];$/;"	v
gbLoadRom	src/gb/GB.cpp	/^bool gbLoadRom(const char *szFile)$/;"	f
gbMemory	src/gb/gbGlobals.cpp	/^u8 *gbMemory = NULL;$/;"	v
gbMemoryMap	src/gb/gbGlobals.cpp	/^u8 *gbMemoryMap[16];$/;"	v
gbNextCheat	src/gb/gbCheats.cpp	/^int gbNextCheat = 0;$/;"	v
gbObp0	src/gb/gbGlobals.cpp	/^u8 gbObp0[4] = { 0, 1, 2, 3};$/;"	v
gbObp0Line	src/gb/GB.cpp	/^u8 gbObp0Line [300];$/;"	v
gbObp1	src/gb/gbGlobals.cpp	/^u8 gbObp1[4] = { 0, 1, 2, 3};$/;"	v
gbObp1Line	src/gb/GB.cpp	/^u8 gbObp1Line [300];$/;"	v
gbOldClockTicks	src/gb/GB.cpp	/^int gbOldClockTicks = 0;$/;"	v
gbPalette	src/gb/gbGlobals.cpp	/^u16 gbPalette[128];$/;"	v
gbPaletteOption	src/gb/gbGlobals.cpp	/^int gbPaletteOption = 0;$/;"	v
gbPaletteOption	src/wx/opts.h	/^    int gbPaletteOption;$/;"	m	struct:opts_t
gbPrinterCheckCRC	src/gb/gbPrinter.cpp	/^bool gbPrinterCheckCRC()$/;"	f
gbPrinterCommand	src/gb/gbPrinter.cpp	/^void gbPrinterCommand()$/;"	f
gbPrinterCount	src/gb/gbPrinter.cpp	/^int gbPrinterCount = 0;$/;"	v
gbPrinterData	src/gb/gbPrinter.cpp	/^u8 gbPrinterData[0x280*9];$/;"	v
gbPrinterDataCount	src/gb/gbPrinter.cpp	/^int gbPrinterDataCount = 0;$/;"	v
gbPrinterDataSize	src/gb/gbPrinter.cpp	/^int gbPrinterDataSize = 0;$/;"	v
gbPrinterPacket	src/gb/gbPrinter.cpp	/^u8 gbPrinterPacket[0x400];$/;"	v
gbPrinterReceiveData	src/gb/gbPrinter.cpp	/^void gbPrinterReceiveData()$/;"	f
gbPrinterReset	src/gb/gbPrinter.cpp	/^void gbPrinterReset()$/;"	f
gbPrinterResult	src/gb/gbPrinter.cpp	/^int gbPrinterResult = 0;$/;"	v
gbPrinterSend	src/gb/gbPrinter.cpp	/^u8 gbPrinterSend(u8 b)$/;"	f
gbPrinterShowData	src/gb/gbPrinter.cpp	/^void gbPrinterShowData()$/;"	f
gbPrinterState	src/gb/gbPrinter.cpp	/^int gbPrinterState = 0;$/;"	v
gbPrinterStatus	src/gb/gbPrinter.cpp	/^u8 gbPrinterStatus = 0;$/;"	v
gbRam	src/gb/gbGlobals.cpp	/^u8 *gbRam = NULL;$/;"	v
gbRamFill	src/gb/GB.cpp	/^u8 gbRamFill = 0xff;$/;"	v
gbRamSize	src/gb/gbGlobals.cpp	/^int gbRamSize = 0;$/;"	v
gbRamSizeMask	src/gb/gbGlobals.cpp	/^int gbRamSizeMask = 0;$/;"	v
gbRamSizes	src/gb/GB.cpp	/^int gbRamSizes[6] = { 0x00000000, \/\/ 0K$/;"	v
gbRamSizesMasks	src/gb/GB.cpp	/^int gbRamSizesMasks[6] = { 0x00000000,$/;"	v
gbReadBatteryFile	src/gb/GB.cpp	/^bool gbReadBatteryFile(const char *file)$/;"	f
gbReadGSASnapshot	src/gb/GB.cpp	/^bool gbReadGSASnapshot(const char *fileName)$/;"	f
gbReadMemSaveState	src/gb/GB.cpp	/^bool gbReadMemSaveState(char *memory, int available)$/;"	f
gbReadMemory	src/gb/GB.cpp	/^u8 gbReadMemory(register u16 address)$/;"	f
gbReadOpcode	src/gb/GB.cpp	/^u8 gbReadOpcode(register u16 address)$/;"	f
gbReadSaveMBC1	src/gb/GB.cpp	/^bool gbReadSaveMBC1(const char * name)$/;"	f
gbReadSaveMBC2	src/gb/GB.cpp	/^bool gbReadSaveMBC2(const char * name)$/;"	f
gbReadSaveMBC3	src/gb/GB.cpp	/^bool gbReadSaveMBC3(const char * name)$/;"	f
gbReadSaveMBC5	src/gb/GB.cpp	/^bool gbReadSaveMBC5(const char * name)$/;"	f
gbReadSaveMBC7	src/gb/GB.cpp	/^bool gbReadSaveMBC7(const char * name)$/;"	f
gbReadSaveMMM01	src/gb/GB.cpp	/^bool gbReadSaveMMM01(const char * name)$/;"	f
gbReadSaveState	src/gb/GB.cpp	/^bool gbReadSaveState(const char *name)$/;"	f
gbReadSaveState	src/gb/GB.cpp	/^static bool gbReadSaveState(gzFile gzFile)$/;"	f	file:
gbReadSaveTAMA5	src/gb/GB.cpp	/^bool gbReadSaveTAMA5(const char * name)$/;"	f
gbRegister	src/gb/gb.h	/^} gbRegister;$/;"	t	typeref:union:__anon153
gbRegisterLYLCDCOffOn	src/gb/GB.cpp	/^int gbRegisterLYLCDCOffOn = 0;$/;"	v
gbRemainingClockTicks	src/gb/GB.cpp	/^int gbRemainingClockTicks = 0;$/;"	v
gbRenderLine	src/gb/gbGfx.cpp	/^void gbRenderLine()$/;"	f
gbReset	src/gb/GB.cpp	/^void gbReset()$/;"	f
gbRom	src/gb/gbGlobals.cpp	/^u8 *gbRom = NULL;$/;"	v
gbRomSize	src/gb/gbGlobals.cpp	/^int gbRomSize = 0;$/;"	v
gbRomSizeMask	src/gb/gbGlobals.cpp	/^int gbRomSizeMask = 0;$/;"	v
gbRomSizes	src/gb/GB.cpp	/^int gbRomSizes[] = { 0x00008000, \/\/ 32K$/;"	v
gbRomSizesMasks	src/gb/GB.cpp	/^int gbRomSizesMasks[] = { 0x00007fff,$/;"	v
gbRomType	src/gb/GB.cpp	/^int gbRomType = 0;$/;"	v
gbSCXLine	src/gb/GB.cpp	/^u8 gbSCXLine[300];$/;"	v
gbSCYLine	src/gb/GB.cpp	/^u8 gbSCYLine[300];$/;"	v
gbSaveGameStruct	src/gb/GB.cpp	/^variable_desc gbSaveGameStruct[] = {$/;"	v
gbScreenOn	src/gb/GB.cpp	/^bool gbScreenOn = true;$/;"	v
gbScreenTicks	src/gb/GB.cpp	/^int gbScreenTicks = 0;$/;"	v
gbSerialBits	src/gb/GB.cpp	/^int gbSerialBits = 0;$/;"	v
gbSerialFunction	src/gb/gbGlobals.cpp	/^u8 (*gbSerialFunction)(u8) = NULL;$/;"	v
gbSerialOn	src/gb/GB.cpp	/^int gbSerialOn = 0;$/;"	v
gbSerialTicks	src/gb/GB.cpp	/^int gbSerialTicks = 0;$/;"	v
gbSerial_interrupt	src/gb/GB.cpp	/^void gbSerial_interrupt()$/;"	f
gbSgbATF	src/gb/gbSGB.cpp	/^u8  gbSgbATF[20 * 18];$/;"	v
gbSgbATFList	src/gb/gbSGB.cpp	/^u8  gbSgbATFList[45 * 20 * 18];$/;"	v
gbSgbAttributeBlock	src/gb/gbSGB.cpp	/^void gbSgbAttributeBlock()$/;"	f
gbSgbAttributeCharacter	src/gb/gbSGB.cpp	/^void gbSgbAttributeCharacter()$/;"	f
gbSgbAttributeDivide	src/gb/gbSGB.cpp	/^void gbSgbAttributeDivide()$/;"	f
gbSgbAttributeLine	src/gb/gbSGB.cpp	/^void gbSgbAttributeLine()$/;"	f
gbSgbBit	src/gb/gbSGB.cpp	/^int gbSgbBit               = 0;$/;"	v
gbSgbBorder	src/gb/gbSGB.cpp	/^u8 *gbSgbBorder = NULL;$/;"	v
gbSgbBorderChar	src/gb/gbSGB.cpp	/^u8 *gbSgbBorderChar = NULL;$/;"	v
gbSgbCGBSupport	src/gb/gbSGB.cpp	/^int gbSgbCGBSupport        = 0;$/;"	v
gbSgbChrTransfer	src/gb/gbSGB.cpp	/^void gbSgbChrTransfer()$/;"	f
gbSgbCommand	src/gb/gbSGB.cpp	/^void gbSgbCommand()$/;"	f
gbSgbDoBitTransfer	src/gb/gbSGB.cpp	/^void gbSgbDoBitTransfer(u8 value)$/;"	f
gbSgbDraw16Bit	src/gb/gbSGB.cpp	/^inline void gbSgbDraw16Bit(u16 *p, u16 v)$/;"	f
gbSgbDraw24Bit	src/gb/gbSGB.cpp	/^inline void gbSgbDraw24Bit(u8 *p, u16 v)$/;"	f
gbSgbDraw32Bit	src/gb/gbSGB.cpp	/^inline void gbSgbDraw32Bit(u32 *p, u16 v)$/;"	f
gbSgbDrawBorderTile	src/gb/gbSGB.cpp	/^void gbSgbDrawBorderTile(int x, int y, int tile, int attr)$/;"	f
gbSgbFillScreen	src/gb/gbSGB.cpp	/^void gbSgbFillScreen(u16 color)$/;"	f
gbSgbFourPlayers	src/gb/gbSGB.cpp	/^int gbSgbFourPlayers       = 0;$/;"	v
gbSgbInit	src/gb/gbSGB.cpp	/^void gbSgbInit()$/;"	f
gbSgbMask	src/gb/gbSGB.cpp	/^int gbSgbMask              = 0;$/;"	v
gbSgbMaskEnable	src/gb/gbSGB.cpp	/^void gbSgbMaskEnable()$/;"	f
gbSgbMode	src/gb/gbSGB.cpp	/^int gbSgbMode              = 0;$/;"	v
gbSgbMultiRequest	src/gb/gbSGB.cpp	/^void gbSgbMultiRequest()$/;"	f
gbSgbMultiplayer	src/gb/gbSGB.cpp	/^int gbSgbMultiplayer       = 0;$/;"	v
gbSgbNextController	src/gb/gbSGB.cpp	/^u8  gbSgbNextController    = 0x0f;$/;"	v
gbSgbPacket	src/gb/gbSGB.cpp	/^u8  gbSgbPacket[16*7];$/;"	v
gbSgbPacketByte	src/gb/gbSGB.cpp	/^int gbSgbPacketByte        = 0;$/;"	v
gbSgbPacketNBits	src/gb/gbSGB.cpp	/^int gbSgbPacketNBits       = 0;$/;"	v
gbSgbPacketNumber	src/gb/gbSGB.cpp	/^int gbSgbPacketNumber      = 0;$/;"	v
gbSgbPacketState	src/gb/gbSGB.cpp	/^int gbSgbPacketState       = GBSGB_NONE;$/;"	v
gbSgbPacketTimeout	src/gb/gbSGB.cpp	/^int gbSgbPacketTimeout     = 0;$/;"	v
gbSgbPicture	src/gb/gbSGB.cpp	/^void gbSgbPicture()$/;"	f
gbSgbReadGame	src/gb/gbSGB.cpp	/^void gbSgbReadGame(gzFile gzFile, int version)$/;"	f
gbSgbReadingController	src/gb/gbSGB.cpp	/^u8  gbSgbReadingController = 0;$/;"	v
gbSgbRenderBorder	src/gb/gbSGB.cpp	/^void gbSgbRenderBorder()$/;"	f
gbSgbRenderScreenToBuffer	src/gb/gbSGB.cpp	/^void gbSgbRenderScreenToBuffer()$/;"	f
gbSgbReset	src/gb/gbSGB.cpp	/^void gbSgbReset()$/;"	f
gbSgbResetFlag	src/gb/GB.cpp	/^bool gbSgbResetFlag = false;$/;"	v
gbSgbResetPacketState	src/gb/gbSGB.cpp	/^void gbSgbResetPacketState()$/;"	f
gbSgbSCPPalette	src/gb/gbSGB.cpp	/^u16 gbSgbSCPPalette[4*512];$/;"	v
gbSgbSaveGame	src/gb/gbSGB.cpp	/^void gbSgbSaveGame(gzFile gzFile)$/;"	f
gbSgbSaveStruct	src/gb/gbSGB.cpp	/^variable_desc gbSgbSaveStruct[] = {$/;"	v
gbSgbSaveStructV3	src/gb/gbSGB.cpp	/^variable_desc gbSgbSaveStructV3[] = {$/;"	v
gbSgbScpPalette	src/gb/gbSGB.cpp	/^void gbSgbScpPalette()$/;"	f
gbSgbScreenBuffer	src/gb/gbSGB.cpp	/^u8  gbSgbScreenBuffer[4160];$/;"	v
gbSgbSetATF	src/gb/gbSGB.cpp	/^void gbSgbSetATF(int n)$/;"	f
gbSgbSetATFList	src/gb/gbSGB.cpp	/^void gbSgbSetATFList()$/;"	f
gbSgbSetColumnPalette	src/gb/gbSGB.cpp	/^void gbSgbSetColumnPalette(u8 col, u8 p)$/;"	f
gbSgbSetPalette	src/gb/gbSGB.cpp	/^void gbSgbSetPalette()$/;"	f
gbSgbSetPalette	src/gb/gbSGB.cpp	/^void gbSgbSetPalette(int a,int b,u16 *p)$/;"	f
gbSgbSetRowPalette	src/gb/gbSGB.cpp	/^void gbSgbSetRowPalette(u8 row, u8 p)$/;"	f
gbSgbShutdown	src/gb/gbSGB.cpp	/^void gbSgbShutdown()$/;"	f
gbSoundConfigEffects	src/gb/gbSound.cpp	/^void gbSoundConfigEffects( gb_effects_config_t const& c )$/;"	f
gbSoundEvent	src/gb/gbSound.cpp	/^void gbSoundEvent(register u16 address, register int data)$/;"	f
gbSoundGetDeclicking	src/gb/gbSound.cpp	/^bool gbSoundGetDeclicking()$/;"	f
gbSoundRead	src/gb/gbSound.cpp	/^u8 gbSoundRead( u16 address )$/;"	f
gbSoundReadGame	src/gb/gbSound.cpp	/^void gbSoundReadGame( int version, gzFile in )$/;"	f
gbSoundReadGameOld	src/gb/gbSound.cpp	/^static void gbSoundReadGameOld(int version,gzFile gzFile)$/;"	f	file:
gbSoundReset	src/gb/gbSound.cpp	/^void gbSoundReset()$/;"	f
gbSoundSaveGame	src/gb/gbSound.cpp	/^void gbSoundSaveGame( gzFile out )$/;"	f
gbSoundSetDeclicking	src/gb/gbSound.cpp	/^void gbSoundSetDeclicking( bool enable )$/;"	f
gbSoundSetSampleRate	src/gb/gbSound.cpp	/^void gbSoundSetSampleRate( long sampleRate )$/;"	f
gbSoundTick	src/gb/gbSound.cpp	/^void gbSoundTick()$/;"	f
gbSpeed	src/gb/GB.cpp	/^int gbSpeed = 0;$/;"	v
gbSpeedSwitch	src/gb/GB.cpp	/^void gbSpeedSwitch()$/;"	f
gbSpritesTicks	src/gb/GB.cpp	/^u8 gbSpritesTicks [300];$/;"	v
gbSynchronizeTicks	src/gb/GB.cpp	/^int gbSynchronizeTicks = GBSYNCHRONIZE_CLOCK_TICKS;$/;"	v
gbSystemMessage	src/gb/GB.cpp	/^bool gbSystemMessage = false;$/;"	v
gbTAMA5ram	src/gb/gbGlobals.cpp	/^u8 *gbTAMA5ram = NULL;$/;"	v
gbTAMA5ramSize	src/gb/gbGlobals.cpp	/^int gbTAMA5ramSize = 0;$/;"	v
gbTimeNow	src/gb/GB.cpp	/^u32 gbTimeNow = 0;$/;"	v
gbTimerBug	src/gb/GB.cpp	/^const u8 gbTimerBug [8] = {0x80, 0x80, 0x02, 0x02, 0x0, 0xff, 0x0, 0xff};$/;"	v
gbTimerClockTicks	src/gb/GB.cpp	/^int gbTimerClockTicks = GBTIMER_MODE_0_CLOCK_TICKS;$/;"	v
gbTimerMask	src/gb/GB.cpp	/^const u8 gbTimerMask [4] = {0xff, 0x3, 0xf, 0x3f};$/;"	v
gbTimerMode	src/gb/GB.cpp	/^int gbTimerMode = 0;$/;"	v
gbTimerModeChange	src/gb/GB.cpp	/^bool gbTimerModeChange = false;$/;"	v
gbTimerOn	src/gb/GB.cpp	/^bool gbTimerOn = false;$/;"	v
gbTimerOnChange	src/gb/GB.cpp	/^bool gbTimerOnChange = false;$/;"	v
gbTimerTicks	src/gb/GB.cpp	/^int gbTimerTicks = GBTIMER_MODE_0_CLOCK_TICKS;$/;"	v
gbTimer_interrupt	src/gb/GB.cpp	/^void gbTimer_interrupt()$/;"	f
gbUpdateSizes	src/gb/GB.cpp	/^bool gbUpdateSizes()$/;"	f
gbVblank_interrupt	src/gb/GB.cpp	/^void gbVblank_interrupt()$/;"	f
gbVerifyGgCode	src/gb/gbCheats.cpp	/^bool gbVerifyGgCode(const char *code)$/;"	f
gbVerifyGsCode	src/gb/gbCheats.cpp	/^bool gbVerifyGsCode(const char *code)$/;"	f
gbVram	src/gb/gbGlobals.cpp	/^u8 *gbVram = NULL;$/;"	v
gbVramBank	src/gb/GB.cpp	/^int gbVramBank = 0;$/;"	v
gbWhiteScreen	src/gb/GB.cpp	/^int gbWhiteScreen = 0;$/;"	v
gbWindowColor	src/gb/gbGfx.cpp	/^u16 gbWindowColor[160];$/;"	v
gbWindowLine	src/gb/gbGlobals.cpp	/^int gbWindowLine = -1;$/;"	v
gbWram	src/gb/gbGlobals.cpp	/^u8 *gbWram = NULL;$/;"	v
gbWramBank	src/gb/GB.cpp	/^int gbWramBank = 1;$/;"	v
gbWriteBMPFile	src/gb/GB.cpp	/^bool gbWriteBMPFile(const char *fileName)$/;"	f
gbWriteBatteryFile	src/gb/GB.cpp	/^bool gbWriteBatteryFile(const char *file)$/;"	f
gbWriteBatteryFile	src/gb/GB.cpp	/^bool gbWriteBatteryFile(const char *file, bool extendedSave)$/;"	f
gbWriteMemSaveState	src/gb/GB.cpp	/^bool gbWriteMemSaveState(char *memory, int available)$/;"	f
gbWriteMemory	src/gb/GB.cpp	/^void  gbWriteMemory(register u16 address, register u8 value)$/;"	f
gbWritePNGFile	src/gb/GB.cpp	/^bool gbWritePNGFile(const char *fileName)$/;"	f
gbWriteSaveMBC1	src/gb/GB.cpp	/^void gbWriteSaveMBC1(const char * name)$/;"	f
gbWriteSaveMBC2	src/gb/GB.cpp	/^void gbWriteSaveMBC2(const char * name)$/;"	f
gbWriteSaveMBC3	src/gb/GB.cpp	/^void gbWriteSaveMBC3(const char * name, bool extendedSave)$/;"	f
gbWriteSaveMBC5	src/gb/GB.cpp	/^void gbWriteSaveMBC5(const char * name)$/;"	f
gbWriteSaveMBC7	src/gb/GB.cpp	/^void gbWriteSaveMBC7(const char * name)$/;"	f
gbWriteSaveMMM01	src/gb/GB.cpp	/^void gbWriteSaveMMM01(const char * name)$/;"	f
gbWriteSaveState	src/gb/GB.cpp	/^bool gbWriteSaveState(const char *name)$/;"	f
gbWriteSaveState	src/gb/GB.cpp	/^static bool gbWriteSaveState(gzFile gzFile)$/;"	f	file:
gbWriteSaveTAMA5	src/gb/GB.cpp	/^void gbWriteSaveTAMA5(const char * name, bool extendedSave)$/;"	f
gbXxCheat	src/gb/gbCheats.h	/^struct gbXxCheat {$/;"	s
gb_apu	src/gb/gbSound.cpp	/^static Gb_Apu*                gb_apu;$/;"	v	file:
gb_apu	src/gba/Sound.cpp	/^static Gb_Apu*          gb_apu;$/;"	v	file:
gb_apu_state_t	src/apu/Gb_Apu.h	/^struct gb_apu_state_t$/;"	s
gb_bios	src/wx/opts.h	/^    wxString gb_bios;$/;"	m	struct:opts_t
gb_declick	src/wx/opts.h	/^    bool gb_declick;$/;"	m	struct:opts_t
gb_echo	src/wx/opts.h	/^    int gb_echo;$/;"	m	struct:opts_t
gb_effects_config	src/gb/gbSound.cpp	/^gb_effects_config_t gb_effects_config = { false, 0.20f, 0.15f, false };$/;"	v
gb_effects_config_current	src/gb/gbSound.cpp	/^static gb_effects_config_t    gb_effects_config_current;$/;"	v	file:
gb_effects_config_enabled	src/wx/opts.h	/^    bool gb_effects_config_enabled;$/;"	m	struct:opts_t
gb_effects_config_surround	src/wx/opts.h	/^    bool gb_effects_config_surround;$/;"	m	struct:opts_t
gb_effects_config_t	src/gb/gbSound.h	/^struct gb_effects_config_t$/;"	s
gb_frameskip	src/wx/opts.h	/^    int gb_frameskip; \/\/ systemFrameSkip$/;"	m	struct:opts_t
gb_rom_dir	src/wx/opts.h	/^    wxString gb_rom_dir;$/;"	m	struct:opts_t
gb_state	src/gb/gbSound.cpp	/^static variable_desc gb_state [] =$/;"	v	file:
gb_stereo	src/wx/opts.h	/^    int gb_stereo;$/;"	m	struct:opts_t
gb_use_bios	src/wx/opts.h	/^    bool gb_use_bios;$/;"	m	struct:opts_t
gbaSaveType	src/gba/GBA.cpp	/^int gbaSaveType = 0; \/\/ used to remember the save type on reset$/;"	v
gba_bios	src/wx/opts.h	/^    wxString gba_bios;$/;"	m	struct:opts_t
gba_frameskip	src/wx/opts.h	/^    int gba_frameskip; \/\/ systemFrameSkip$/;"	m	struct:opts_t
gba_init	src/libretro/libretro.cpp	/^static void gba_init(void)$/;"	f	file:
gba_joybus_enabled	src/gba/GBALink.cpp	/^bool gba_joybus_enabled = false;$/;"	v
gba_joybus_enabled	src/gba/GBALink.h	/^const bool gba_joybus_enabled = false;$/;"	v
gba_joybus_enabled	src/wx/opts.h	/^    bool gba_joybus_enabled;$/;"	m	struct:opts_t
gba_link_enabled	src/gba/GBALink.cpp	/^bool gba_link_enabled = false;$/;"	v
gba_link_enabled	src/gba/GBALink.h	/^const bool gba_link_enabled = false;$/;"	v
gba_link_enabled	src/wx/opts.h	/^    bool gba_link_enabled;$/;"	m	struct:opts_t
gba_rom_dir	src/wx/opts.h	/^    wxString gba_rom_dir;$/;"	m	struct:opts_t
gba_sound_filter	src/wx/opts.h	/^    int gba_sound_filter;$/;"	m	struct:opts_t
gba_state	src/gba/Sound.cpp	/^static variable_desc gba_state [] =$/;"	v	file:
gba_to_gb_sound	src/gba/Sound.cpp	/^static int gba_to_gb_sound( int addr )$/;"	f	file:
gba_use_bios	src/wx/opts.h	/^    bool gba_use_bios;$/;"	m	struct:opts_t
gbafilter_pad	src/gba/gbafilter.cpp	/^void gbafilter_pad(u8 * buf, int count)$/;"	f
gbafilter_pal	src/gba/gbafilter.cpp	/^void gbafilter_pal(u16 * buf, int count)$/;"	f
gbafilter_pal32	src/gba/gbafilter.cpp	/^void gbafilter_pal32(u32 * buf, int count)$/;"	f
gbaover	src/libretro/libretro.cpp	/^static const ini_t gbaover[256] = {$/;"	v	file:
gbcColorOption	src/wx/opts.h	/^    bool gbcColorOption;$/;"	m	struct:opts_t
gbc_bios	src/wx/opts.h	/^    wxString gbc_bios;$/;"	m	struct:opts_t
gbc_use_bios	src/wx/opts.h	/^    bool gbc_use_bios;$/;"	m	struct:opts_t
gbprint	src/wx/opts.h	/^    bool gbprint; \/\/ gbSerialFunction$/;"	m	struct:opts_t
gbsound_format	src/gb/gbSound.cpp	/^static variable_desc gbsound_format [] =$/;"	v	file:
gbsound_format2	src/gb/gbSound.cpp	/^static variable_desc gbsound_format2 [] =$/;"	v	file:
gbsound_format3	src/gb/gbSound.cpp	/^static variable_desc gbsound_format3 [] =$/;"	v	file:
gbtime	src/gba/GBALink.cpp	/^int gbtime = 1024;$/;"	v
gen_sinc	src/apu/Blip_Buffer.cpp	/^static void gen_sinc( float* out, int count, double oversample, double treble, double cutoff )$/;"	f	file:
generate	src/apu/Blip_Buffer.cpp	/^void blip_eq_t::generate( float* out, int count ) const$/;"	f	class:blip_eq_t
genericflashcardEnable	src/gb/gbGlobals.cpp	/^bool genericflashcardEnable = false;$/;"	v
geometry	src/libretro/libretro.h	/^   struct retro_game_geometry geometry;$/;"	m	struct:retro_system_av_info	typeref:struct:retro_system_av_info::retro_game_geometry
getAddress	src/win32/MemoryViewerAddressSize.cpp	/^u32 MemoryViewerAddressSize::getAddress()$/;"	f	class:MemoryViewerAddressSize
getBank	src/win32/GBCheatsDlg.cpp	/^int GBCheatSearch::getBank(u16 addr, int j)$/;"	f	class:GBCheatSearch
getCodeLength	src/gba/Cheats.cpp	/^static int getCodeLength(int num)$/;"	f	file:
getColors	src/win32/GBColorDlg.cpp	/^u16 * GBColorDlg::getColors()$/;"	f	class:GBColorDlg
getCurrentAddress	src/win32/MemoryViewer.cpp	/^u32 MemoryViewer::getCurrentAddress()$/;"	f	class:MemoryViewer
getDirFromFile	src/win32/MainWnd.cpp	/^CString MainWnd::getDirFromFile(CString& file)$/;"	f	class:MainWnd
getFilterEnlargeFactor	src/sdl/filters.cpp	/^int getFilterEnlargeFactor(const Filter f)$/;"	f
getFilterIndex	src/win32/FileDlg.cpp	/^int FileDlg::getFilterIndex()$/;"	f	class:FileDlg
getFilterName	src/sdl/filters.cpp	/^char* getFilterName(const Filter f)$/;"	f
getIFBFilterName	src/sdl/filters.cpp	/^char* getIFBFilterName(const IFBFilter f)$/;"	f
getKeyName	src/win32/DirectInput.cpp	/^CString DirectInput::getKeyName(LONG_PTR key)$/;"	f	class:DirectInput
getListenSocket	src/win32/GDBConnection.cpp	/^SOCKET GDBWaitingDlg::getListenSocket()$/;"	f	class:GDBWaitingDlg
getLong	src/common/memgzio.c	/^local uLong getLong (s)$/;"	f
getPort	src/win32/GDBConnection.cpp	/^int GDBPortDlg::getPort()$/;"	f	class:GDBPortDlg
getPovState	src/win32/DirectInput.cpp	/^static int getPovState(DWORD value)$/;"	f	file:
getSize	src/win32/MemoryViewer.cpp	/^int MemoryViewer::getSize()$/;"	f	class:MemoryViewer
getSize	src/win32/MemoryViewerAddressSize.cpp	/^int MemoryViewerAddressSize::getSize()$/;"	f	class:MemoryViewerAddressSize
getSocket	src/win32/GDBConnection.cpp	/^SOCKET GDBPortDlg::getSocket()$/;"	f	class:GDBPortDlg
getSocket	src/win32/GDBConnection.cpp	/^SOCKET GDBWaitingDlg::getSocket()$/;"	f	class:GDBWaitingDlg
getStretch	src/win32/BitmapControl.cpp	/^bool BitmapControl::getStretch()$/;"	f	class:BitmapControl
getType	src/win32/Direct3D.cpp	/^	virtual DISPLAY_TYPE getType() { return DIRECT_3D; };$/;"	f	class:Direct3DDisplay
getType	src/win32/OpenGL.cpp	/^	virtual DISPLAY_TYPE getType() { return OPENGL; };$/;"	f	class:OpenGLDisplay
getWhich	src/win32/GBColorDlg.cpp	/^int GBColorDlg::getWhich()$/;"	f	class:GBColorDlg
get_accels	src/wx/guiinit.cpp	/^wxAcceleratorEntry_v MainFrame::get_accels(wxAcceleratorEntry_v user_accels)$/;"	f	class:MainFrame
get_be	fex/fex/blargg_endian.h	/^inline unsigned get_be( BOOST::uint16_t const* p ) { return GET_BE16( p ); }$/;"	f
get_be	fex/fex/blargg_endian.h	/^inline unsigned get_be( BOOST::uint32_t const* p ) { return GET_BE32( p ); }$/;"	f
get_be16	fex/fex/blargg_endian.h	/^inline unsigned get_be16( void const* p )$/;"	f
get_be32	fex/fex/blargg_endian.h	/^inline unsigned get_be32( void const* p )$/;"	f
get_byte	src/common/memgzio.c	/^local int get_byte(s)$/;"	f
get_config_path	src/wx/wxvbam.cpp	/^static void get_config_path(wxPathList &path, bool exists = true)$/;"	f	file:
get_current_framebuffer	src/libretro/libretro.h	/^   retro_hw_get_current_framebuffer_t get_current_framebuffer; \/\/ Set by frontend.$/;"	m	struct:retro_hw_render_callback
get_eject_state	src/libretro/libretro.h	/^   retro_get_eject_state_t get_eject_state;$/;"	m	struct:retro_disk_control_callback
get_gzip_eof	fex/fex/Data_Reader.cpp	/^static const char* get_gzip_eof( const char path [], long* eof )$/;"	f	file:
get_image_index	src/libretro/libretro.h	/^   retro_get_image_index_t get_image_index;$/;"	m	struct:retro_disk_control_callback
get_le	fex/fex/blargg_endian.h	/^inline unsigned get_le( BOOST::uint16_t const* p ) { return GET_LE16( p ); }$/;"	f
get_le	fex/fex/blargg_endian.h	/^inline unsigned get_le( BOOST::uint32_t const* p ) { return GET_LE32( p ); }$/;"	f
get_le16	fex/fex/blargg_endian.h	/^inline unsigned get_le16( void const* p )$/;"	f
get_le32	fex/fex/blargg_endian.h	/^inline unsigned get_le32( void const* p )$/;"	f
get_num_images	src/libretro/libretro.h	/^   retro_get_num_images_t  get_num_images;$/;"	m	struct:retro_disk_control_callback
get_proc_address	src/libretro/libretro.h	/^   retro_hw_get_proc_address_t get_proc_address; \/\/ Set by frontend.$/;"	m	struct:retro_hw_render_callback
get_val	src/apu/Gb_Apu_State.cpp	/^	static blargg_ulong get_val( byte const* p )$/;"	f	file:
get_zlib_err	fex/fex/Zlib_Inflater.cpp	/^static const char* get_zlib_err( int code )$/;"	f	file:
getbe	src/wx/guiinit.cpp	2421;"	d	file:
getbie	src/wx/guiinit.cpp	2714;"	d	file:
getbre	src/wx/guiinit.cpp	2432;"	d	file:
getcbb	src/wx/guiinit.cpp	2682;"	d	file:
getcbbe	src/wx/guiinit.cpp	2712;"	d	file:
getcbi	src/wx/guiinit.cpp	2905;"	d	file:
getcbie	src/wx/guiinit.cpp	2732;"	d	file:
getch	src/wx/guiinit.cpp	2577;"	d	file:
getdp	src/wx/guiinit.cpp	3015;"	d	file:
getfld	src/wx/guiinit.cpp	2342;"	d	file:
getfldv	src/wx/guiinit.cpp	2346;"	d	file:
getfp	src/wx/guiinit.cpp	2734;"	d	file:
getgbaw	src/wx/guiinit.cpp	2827;"	d	file:
gethex	src/wx/viewers.cpp	14;"	d	file:
getlab	src/wx/gfxviewers.cpp	16;"	d	file:
getlab	src/wx/guiinit.cpp	2366;"	d	file:
getlogf	src/wx/viewers.cpp	452;"	d	file:
getmem	src/gb/gbSGB.cpp	151;"	d	file:
getopt	src/sdl/getopt.c	/^getopt (argc, argv, optstring)$/;"	f
getopt_long	src/sdl/getopt1.c	/^getopt_long (argc, argv, options, long_options, opt_index)$/;"	f
getopt_long_only	src/sdl/getopt1.c	/^getopt_long_only (argc, argv, options, long_options, opt_index)$/;"	f
getradio	src/wx/viewsupt.h	50;"	d
getrbb	src/wx/guiinit.cpp	2411;"	d	file:
getrbbd	src/wx/guiinit.cpp	2458;"	d	file:
getrbbe	src/wx/guiinit.cpp	2457;"	d	file:
getrbbr	src/wx/guiinit.cpp	2415;"	d	file:
getrbi	src/wx/guiinit.cpp	2407;"	d	file:
getsc	src/wx/guiinit.cpp	2687;"	d	file:
getsl	src/wx/guiinit.cpp	2941;"	d	file:
getslider	src/wx/viewsupt.h	52;"	d
getspin	src/wx/viewsupt.h	54;"	d
gettc	src/wx/guiinit.cpp	2460;"	d	file:
gettext	src/gtk/intl.h	29;"	d
getvfld	src/wx/viewsupt.h	44;"	d
gfxAlphaBlend	src/gba/GBAGfx.h	/^static inline u32 gfxAlphaBlend(u32 color, u32 color2, int ca, int cb)$/;"	f
gfxAlphaBlend	src/gba/GBAGfx.h	/^static inline void gfxAlphaBlend(u32 *ta, u32 *tb, int ca, int cb)$/;"	f
gfxBG2Changed	src/gba/GBAGfx.cpp	/^int gfxBG2Changed = 0;$/;"	v
gfxBG2X	src/gba/GBAGfx.cpp	/^int gfxBG2X = 0;$/;"	v
gfxBG2Y	src/gba/GBAGfx.cpp	/^int gfxBG2Y = 0;$/;"	v
gfxBG3Changed	src/gba/GBAGfx.cpp	/^int gfxBG3Changed = 0;$/;"	v
gfxBG3X	src/gba/GBAGfx.cpp	/^int gfxBG3X = 0;$/;"	v
gfxBG3Y	src/gba/GBAGfx.cpp	/^int gfxBG3Y = 0;$/;"	v
gfxClearArray	src/gba/GBAGfx.h	/^static inline void gfxClearArray(u32 *array)$/;"	f
gfxDecreaseBrightness	src/gba/GBAGfx.h	/^static inline u32 gfxDecreaseBrightness(u32 color, int coeff)$/;"	f
gfxDecreaseBrightness	src/gba/GBAGfx.h	/^static inline void gfxDecreaseBrightness(u32 *line, int coeff)$/;"	f
gfxDrawOBJWin	src/gba/GBAGfx.h	/^static inline void gfxDrawOBJWin(u32 *lineOBJWin)$/;"	f
gfxDrawPixel	src/gba/GBA.cpp	/^static inline void gfxDrawPixel(u32 *dest, const u8 color, const u16 *palette, const u32 prio)$/;"	f	file:
gfxDrawRotScreen	src/gba/GBAGfx.h	/^static inline void gfxDrawRotScreen(u16 control,$/;"	f
gfxDrawRotScreen16Bit	src/gba/GBAGfx.h	/^static inline void gfxDrawRotScreen16Bit(u16 control,$/;"	f
gfxDrawRotScreen16Bit160	src/gba/GBAGfx.h	/^static inline void gfxDrawRotScreen16Bit160(u16 control,$/;"	f
gfxDrawRotScreen256	src/gba/GBAGfx.h	/^static inline void gfxDrawRotScreen256(u16 control,$/;"	f
gfxDrawSprites	src/gba/GBAGfx.h	/^static inline void gfxDrawSprites(u32 *lineOBJ)$/;"	f
gfxDrawTextScreen	src/gba/GBA.cpp	/^static void gfxDrawTextScreen(u16 control, u16 hofs, u16 vofs,$/;"	f	file:
gfxDrawTextScreen	src/gba/GBA.cpp	/^void gfxDrawTextScreen(u16 control, u16 hofs, u16 vofs, u32 *line)$/;"	f
gfxDrawTextScreen	src/gba/GBAGfx.h	/^static inline void gfxDrawTextScreen(u16 control, u16 hofs, u16 vofs,$/;"	f
gfxDrawTile	src/gba/GBA.cpp	/^static inline void gfxDrawTile(const TileLine &tileLine, u32 *line)$/;"	f	file:
gfxDrawTileClipped	src/gba/GBA.cpp	/^static inline void gfxDrawTileClipped(const TileLine &tileLine, u32 *line, const int start, int w)$/;"	f	file:
gfxInWin0	src/gba/GBAGfx.cpp	/^bool gfxInWin0[240];$/;"	v
gfxInWin1	src/gba/GBAGfx.cpp	/^bool gfxInWin1[240];$/;"	v
gfxIncreaseBrightness	src/gba/GBAGfx.h	/^static inline u32 gfxIncreaseBrightness(u32 color, int coeff)$/;"	f
gfxIncreaseBrightness	src/gba/GBAGfx.h	/^static inline void gfxIncreaseBrightness(u32 *line, int coeff)$/;"	f
gfxLastVCOUNT	src/gba/GBAGfx.cpp	/^int gfxLastVCOUNT = 0;$/;"	v
gfxReadTile	src/gba/GBA.cpp	/^inline const TileLine gfxReadTile(const u16 *screenSource, const int yyy, const u8 *charBase, u16 *palette, const u32 prio)$/;"	f
gfxReadTilePal	src/gba/GBA.cpp	/^inline const TileLine gfxReadTilePal(const u16 *screenSource, const int yyy, const u8 *charBase, u16 *palette, const u32 prio)$/;"	f
glFilter	src/win32/VBA.h	/^  int glFilter;$/;"	m	class:VBA
glFont	src/win32/glfont.c	/^GLFONT *glFont;$/;"	v
glFontBegin	src/win32/glfont.c	/^void glFontBegin (GLFONT *Font)$/;"	f
glFontCreate	src/win32/glfont.c	/^int glFontCreate (GLFONT *Font, char *Buffer, int Tex)$/;"	f
glFontDestroy	src/win32/glfont.c	/^void glFontDestroy (GLFONT *Font)$/;"	f
glFontEnd	src/win32/glfont.c	/^void glFontEnd (void)$/;"	f
glFontTextOut	src/win32/glfont.c	/^void glFontTextOut (char *String, float x, float y,$/;"	f
glc	src/wx/panel.cpp	1590;"	d	file:
glc	src/wx/panel.cpp	1594;"	d	file:
glopts	src/wx/panel.cpp	/^static int glopts[] = {$/;"	v	file:
good_synth	src/apu/Gb_Apu.h	/^	Gb_Osc::Good_Synth  good_synth;$/;"	m	class:Gb_Apu
good_synth	src/apu/Gb_Oscs.h	/^	Good_Synth const* good_synth;$/;"	m	class:Gb_Osc
gopts	src/wx/opts.cpp	/^opts_t gopts;$/;"	v
goto_addr	src/wx/viewers.cpp	/^	wxTextCtrl *goto_addr;$/;"	m	class:Viewers::DisassembleViewer	file:
goto_addr	src/wx/viewers.cpp	/^	wxTextCtrl *goto_addr;$/;"	m	class:Viewers::GBDisassembleViewer	file:
goto_addr	src/wx/viewers.cpp	/^	wxTextCtrl *goto_addr;$/;"	m	class:Viewers::MemViewerBase	file:
gr	fex/fex/Gzip_Extractor.h	/^	Gzip_Reader gr;$/;"	m	class:Gzip_Extractor
greenMask	src/filters/2xSaI.cpp	/^static u32 greenMask = 0x7E0;$/;"	v	file:
grv16	src/wx/viewers.cpp	237;"	d	file:
gs555	src/wx/sys.cpp	19;"	d	file:
gss_path	src/wx/cmdevents.cpp	/^static wxString gss_path;$/;"	v	file:
gt	src/wx/viewsupt.h	/^	wxStaticText *rt, *gt, *bt;$/;"	m	class:Viewers::ColorView
gv	src/wx/viewsupt.h	/^	GfxPanel *gv;$/;"	m	class:Viewers::GfxViewer
gvs	src/wx/viewsupt.h	/^	wxScrolledWindow *gvs;$/;"	m	class:Viewers::GfxViewer
gz_magic	src/common/memgzio.c	/^static int gz_magic[2] = {0x1f, 0x8b}; \/* gzip magic header *\/$/;"	v	file:
gz_open	src/common/memgzio.c	/^local gzFile gz_open (memory, available, mode)$/;"	f
gzglfont	src/win32/gzglfont.h	/^unsigned char gzglfont[]=$/;"	v
gzip_reader_read	fex/fex/Gzip_Reader.cpp	/^static blargg_err_t gzip_reader_read( void* file, void* out, int* count )$/;"	f	file:
h	src/win32/BitmapControl.h	/^  int h;$/;"	m	class:BitmapControl
h	src/win32/GBMapView.h	/^  int h;$/;"	m	class:GBMapView
h	src/win32/GBOamView.h	/^  int h;$/;"	m	class:GBOamView
h	src/win32/GBTileView.h	/^  int h;$/;"	m	class:GBTileView
h	src/win32/MapView.h	/^  int h;$/;"	m	class:MapView
h	src/win32/OamView.h	/^  int h;$/;"	m	class:OamView
h	src/win32/PaletteViewControl.h	/^  int h;$/;"	m	class:PaletteViewControl
h	src/win32/TileView.h	/^  int h;$/;"	m	class:TileView
hAccel	src/win32/VBA.h	/^  HACCEL hAccel;$/;"	m	class:VBA
hBufferEndEvent	src/win32/XAudio2.cpp	/^	HANDLE hBufferEndEvent;$/;"	m	class:XAudio2_BufferNotify	file:
hBufferEndEvent	src/wx/xaudio2.cpp	/^	HANDLE hBufferEndEvent;$/;"	m	class:XAudio2_BufferNotify	file:
hDC	src/win32/OpenGL.cpp	/^	HDC hDC;$/;"	m	class:OpenGLDisplay	file:
hFlip	src/gba/GBA.cpp	/^      \/*12*\/	unsigned hFlip:1;$/;"	m	struct:TileEntry::__anon42	file:
hRC	src/win32/OpenGL.cpp	/^	HGLRC hRC;$/;"	m	class:OpenGLDisplay	file:
hThreads	src/win32/Direct3D.cpp	/^	HANDLE                *hThreads;$/;"	m	class:Direct3DDisplay	file:
handleRewinds	src/sdl/SDL.cpp	/^void handleRewinds()$/;"	f
handle_err	fex/fex/Rar_Extractor.cpp	/^static inline unrar_err_t handle_err( Rar_Extractor::read_callback_t* h, blargg_err_t err )$/;"	f	file:
hasCaret	src/win32/MemoryViewer.h	/^  bool hasCaret;$/;"	m	class:MemoryViewer
hasChildren	src/gba/elf.h	/^  bool hasChildren;$/;"	m	struct:ELFAbbrev
hasLineInfo	src/gba/elf.h	/^  bool hasLineInfo;$/;"	m	struct:CompileUnit
has_arg	src/sdl/getopt.h	/^  int has_arg;$/;"	m	struct:option
has_frame	src/libretro/libretro.cpp	/^static unsigned has_frame;$/;"	v	file:
hdig	src/gba/armdis.cpp	/^const char hdig[] = "0123456789abcdef";$/;"	v
header	fex/fex/Data_Reader.h	/^	void const* header;$/;"	m	class:Remaining_Reader
header_remain	fex/fex/Data_Reader.h	/^	int header_remain;$/;"	m	class:Remaining_Reader
header_size	fex/fex/Zip_Extractor.cpp	/^int const header_size = 30;$/;"	v
header_t	fex/fex/Zip_Extractor.cpp	/^struct header_t$/;"	s	file:
height	src/win32/Direct3D.cpp	/^	int height;$/;"	m	struct:PFTHREAD_DATA	file:
height	src/win32/Direct3D.cpp	/^	unsigned int          width, height;$/;"	m	class:Direct3DDisplay	file:
height	src/win32/Display.h	/^	  unsigned int height;$/;"	m	struct:IDisplay::VIDEO_MODE
height	src/win32/OpenGL.cpp	/^	int width,height;$/;"	m	class:OpenGLDisplay	file:
height	src/wx/panel.cpp	/^    int width, height, scale;$/;"	m	class:FilterThread	file:
height	src/wx/wxvbam.h	/^    int width, height, scale;$/;"	m	class:DrawingPanel
help	src/sdl/debugger.cpp	/^  const char *help;$/;"	m	struct:DebuggerCommand	file:
hexDigits	src/gb/gbDis.cpp	/^static char hexDigits[16] = {$/;"	v	file:
hi	src/gba/GBA.cpp	/^      \/* 4*\/	unsigned hi:4;$/;"	m	struct:u8h::__anon41	file:
highPC	src/gba/elf.h	/^  u32 highPC;$/;"	m	struct:ARange
highPC	src/gba/elf.h	/^  u32 highPC;$/;"	m	struct:CompileUnit
highPC	src/gba/elf.h	/^  u32 highPC;$/;"	m	struct:Function
hkRootSave	src/win32/ResizeDlg.cpp	/^  HKEY hkRootSave;$/;"	m	struct:DialogData	file:
holdState	src/gba/GBA.cpp	/^bool holdState = false;$/;"	v
holdType	src/gba/GBA.cpp	/^int holdType = 0;$/;"	v
homeDir	src/sdl/SDL.cpp	/^char* homeDir = NULL;$/;"	v
hostname	src/win32/JoybusOptions.h	/^	CEdit hostname;$/;"	m	class:JoybusOptions
howmanytimes	src/gba/GBALink.h	/^	int howmanytimes;$/;"	m	class:lserver
hq2x	src/filters/hq2x.cpp	/^void hq2x(u8 *srcPtr, u32 srcPitch, u8 * \/* deltaPtr *\/,$/;"	f
hq2x32	src/filters/hq2x.cpp	/^void hq2x32(u8 *srcPtr, u32 srcPitch, u8 * \/* deltaPtr *\/,$/;"	f
hq2x_16_def	src/filters/hq2x.cpp	/^static void hq2x_16_def(u16* dst0, u16* dst1, const u16* src0, const u16* src1, const u16* src2, unsigned count)$/;"	f	file:
hq2x_32_def	src/filters/hq2x.cpp	/^static void hq2x_32_def(u32* dst0, u32* dst1, const u32* src0, const u32* src1, const u32* src2, unsigned count)$/;"	f	file:
hq2x_init	src/filters/hq2x.cpp	/^void hq2x_init(unsigned bits_per_pixel)$/;"	f
hq3x16	src/filters/hq/asm/hq3x32.cpp	/^void hq3x16(unsigned char * pIn,  unsigned int srcPitch,$/;"	f
hq3x32	src/filters/hq/asm/hq3x32.cpp	/^void hq3x32(unsigned char * pIn,  unsigned int srcPitch,$/;"	f
hq3x32_32	src/filters/hq/asm/hq3x32.cpp	/^void hq3x32_32(unsigned char *pIn,  unsigned int srcPitch, unsigned char *, unsigned char *pOut, unsigned int dstPitch, int Xres, int Yres)$/;"	f
hq3xinited	src/filters/hq/asm/hq3x32.cpp	/^int hq3xinited=0;$/;"	v
hq4x16	src/filters/hq/asm/hq3x32.cpp	/^void hq4x16(unsigned char * pIn,  unsigned int srcPitch,$/;"	f
hq4x32	src/filters/hq/asm/hq3x32.cpp	/^void hq4x32(unsigned char * pIn,  unsigned int srcPitch,$/;"	f
hq4x32_32	src/filters/hq/asm/hq3x32.cpp	/^void hq4x32_32(unsigned char *pIn,  unsigned int srcPitch, unsigned char *, unsigned char *pOut, unsigned int dstPitch, int Xres, int Yres)$/;"	f
hwacc	src/wx/guiinit.cpp	/^    wxControl *umix, *hwacc;$/;"	m	class:SoundConfig_t	file:
i	src/gba/GBALink.cpp	/^static int i, j;$/;"	v	file:
iIndex	src/gtk/cheatlist.h	/^    Gtk::TreeModelColumn<int> iIndex;$/;"	m	class:VBA::ListCheatCodeColumns
iType	src/gtk/cheatedit.h	/^    Gtk::TreeModelColumn<ECheatType> iType;$/;"	m	class:VBA::EditCheatCodeColumns
ia1	src/sdl/debugger.cpp	/^  bool ia1;$/;"	m	struct:breakpointInfo	file:
ia2	src/sdl/debugger.cpp	/^  bool ia2;$/;"	m	struct:breakpointInfo	file:
iconic	src/win32/VBA.h	/^  bool iconic;$/;"	m	class:VBA
id	src/libretro/libretro.h	/^   unsigned id;$/;"	m	struct:retro_input_descriptor
id	src/win32/Commands.cpp	/^  WORD id;$/;"	m	struct:__anon87	file:
idle	src/gb/gbMemory.h	/^  int idle;$/;"	m	struct:mapperMBC7
ids	src/wx/dsound.cpp	/^	wxArrayString *names, *ids;$/;"	m	struct:devnames	file:
idx	src/wx/gfxviewers.cpp	/^	wxControl *idx, *val;$/;"	m	class:Viewers::GBPaletteViewer	file:
ifb	src/wx/opts.h	/^    int ifb;$/;"	m	struct:opts_t
ifbFunction	src/sdl/SDL.cpp	/^IFBFilterFunc ifbFunction = 0;$/;"	v
ifbFunction	src/win32/VBA.h	/^  void (*ifbFunction)(u8*,u32,int,int);$/;"	m	class:VBA
ifbType	src/sdl/SDL.cpp	/^IFBFilter ifbType = kIFBNone;$/;"	v
ifbType	src/win32/VBA.h	/^  int ifbType;$/;"	m	class:VBA
ifbfunc	src/wx/wxvbam.h	/^enum ifbfunc {$/;"	g
ignore_first_resize_event	src/sdl/SDL.cpp	/^static int        ignore_first_resize_event = 0;$/;"	v	file:
im	src/wx/viewsupt.h	/^	wxImage *im;$/;"	m	class:Viewers::GfxPanel
im	src/wx/viewsupt.h	/^	wxImage im;$/;"	m	class:Viewers::PixView
image	src/wx/viewsupt.h	/^	wxImage image;$/;"	m	class:Viewers::GfxViewer
img	src/wx/sys.cpp	/^    wxImage img;$/;"	m	class:PrintDialog	file:
immediate_removal	src/apu/Multi_Buffer.h	/^	bool immediate_removal() const { return immediate_removal_; }$/;"	f	class:Multi_Buffer
immediate_removal_	src/apu/Multi_Buffer.h	/^	bool immediate_removal_;$/;"	m	class:Multi_Buffer
imp_t	src/apu/Blip_Buffer.h	/^	typedef short imp_t;$/;"	t	class:Blip_Synth
impl	fex/fex/Zip7_Extractor.h	/^	Zip7_Extractor_Impl* impl;$/;"	m	class:Zip7_Extractor
impl	src/apu/Blip_Buffer.h	/^	Blip_Synth_ impl;$/;"	m	class:Blip_Synth
impl	src/apu/Blip_Buffer.h	/^	Blip_Synth_Fast_ impl;$/;"	m	class:Blip_Synth
impulses	src/apu/Blip_Buffer.h	/^		short* const impulses;$/;"	m	class:Blip_Synth_
impulses	src/apu/Blip_Buffer.h	/^	imp_t impulses [blip_res * (quality \/ 2) + 1];$/;"	m	class:Blip_Synth
impulses_size	src/apu/Blip_Buffer.h	/^		int impulses_size() const { return blip_res \/ 2 * width + 1; }$/;"	f	class:Blip_Synth_
in	fex/fex/Data_Reader.h	/^	Data_Reader* const in;$/;"	m	class:Remaining_Reader
in	fex/fex/Data_Reader.h	/^	Data_Reader* const in;$/;"	m	class:Subset_Reader
in	fex/fex/Gzip_Reader.h	/^	File_Reader* in;$/;"	m	class:Gzip_Reader
in	fex/fex/Rar_Extractor.h	/^		File_Reader* in;$/;"	m	struct:Rar_Extractor::read_callback_t
in	fex/fex/Zip7_Extractor.cpp	/^	File_Reader* in;$/;"	m	struct:Zip7_Extractor_Impl	file:
inBios	src/gb/GB.cpp	/^bool inBios = false;$/;"	v
inStream	fex/7z_C/7zDec.c	/^  ILookInStream *inStream;$/;"	m	struct:__anon37	file:
inUseRegister_WY	src/gb/GB.cpp	/^int inUseRegister_WY = 0;$/;"	v
in_audio_buf2	src/common/ffmpeg.h	/^    int frame_len, sample_len, in_audio_buf2;$/;"	m	class:MediaRecorder
in_err	fex/fex/Zip7_Extractor.cpp	/^	const char* in_err;$/;"	m	struct:Zip7_Extractor_Impl	file:
inbuf	src/common/memgzio.c	/^    Byte     *inbuf;  \/* input buffer *\/$/;"	m	struct:mem_stream	file:
inbuffer	src/filters/hq/asm/hq3x_16.asm	/^inbuffer     equ 8$/;"	d
inbuffer	src/filters/hq/asm/hq3x_32.asm	/^inbuffer     equ 8$/;"	d
inbuffer	src/filters/hq/asm/hq4x_16.asm	/^inbuffer     equ 8$/;"	d
inbuffer	src/filters/hq/asm/hq4x_32.asm	/^inbuffer     equ 8$/;"	d
inbuffer	src/gba/GBALink.h	/^	char inbuffer[256], outbuffer[256];$/;"	m	class:lclient
inbuffer	src/gba/GBALink.h	/^	char inbuffer[256], outbuffer[256];$/;"	m	class:lserver
index	fex/fex/Zip7_Extractor.h	/^	int index;$/;"	m	class:Zip7_Extractor
index	src/libretro/libretro.h	/^   unsigned index;$/;"	m	struct:retro_input_descriptor
index	src/sdl/exprNode.h	/^  int index;$/;"	m	struct:Node
inflater	fex/fex/Gzip_Reader.h	/^	Zlib_Inflater inflater;$/;"	m	class:Gzip_Reader
inflater_read	fex/fex/Zip_Extractor.cpp	/^blargg_err_t Zip_Extractor::inflater_read( void* data, void* out, int* count )$/;"	f	class:Zip_Extractor
influence	src/gba/gbafilter.cpp	/^static const unsigned char influence[3 * 3] = { 16,  4,  4, \/\/ red$/;"	v	file:
info	src/gba/elf.h	/^  u32 info;$/;"	m	struct:ELFSectionHeader
info	src/gba/elf.h	/^  u8 info;$/;"	m	struct:ELFSymbol
info_arch	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_compiler	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_platform	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_version	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
infodata	src/gba/elf.h	/^  u8 *infodata;$/;"	m	struct:DebugInfo
ini_t	src/libretro/libretro.cpp	/^} ini_t;$/;"	t	typeref:struct:__anon59	file:
init	fex/fex/File_Extractor.h	/^	blargg_err_t (*init)(); \/\/ Called by fex_init(). Can be NULL.$/;"	m	struct:fex_type_t_
init	fex/fex/blargg_common.cpp	/^void blargg_vector_::init()$/;"	f	class:blargg_vector_
init	src/common/SoundSDL.cpp	/^bool SoundSDL::init(long sampleRate)$/;"	f	class:SoundSDL
init	src/gba/Sound.cpp	/^void Gba_Pcm::init()$/;"	f	class:Gba_Pcm
init	src/libretro/SoundRetro.cpp	/^bool SoundRetro::init(long sampleRate)$/;"	f	class:SoundRetro
init	src/win32/DirectSound.cpp	/^bool DirectSound::init(long sampleRate)$/;"	f	class:DirectSound
init	src/win32/OpenAL.cpp	/^bool OpenAL::init(long sampleRate)$/;"	f	class:OpenAL
init	src/win32/PaletteViewControl.cpp	/^void PaletteViewControl::init(int c, int w, int h)$/;"	f	class:PaletteViewControl
init	src/win32/XAudio2.cpp	/^bool XAudio2_Output::init(long sampleRate)$/;"	f	class:XAudio2_Output
init	src/wx/dsound.cpp	/^bool DirectSound::init(long sampleRate)$/;"	f	class:DirectSound
init	src/wx/openal.cpp	/^bool OpenAL::init(long sampleRate)$/;"	f	class:OpenAL
init	src/wx/xaudio2.cpp	/^bool XAudio2_Output::init(long sampleRate)$/;"	f	class:XAudio2_Output
initDisplay	src/win32/VBA.cpp	/^bool VBA::initDisplay()$/;"	f	class:VBA
initFilter	src/sdl/filters.cpp	/^FilterFunc initFilter(const Filter f, const int colorDepth, const int srcWidth)$/;"	f
initIFBFilter	src/sdl/filters.cpp	/^IFBFilterFunc initIFBFilter(const IFBFilter f, const int colorDepth)$/;"	f
initInput	src/win32/VBA.cpp	/^bool VBA::initInput()$/;"	f	class:VBA
init_7z	fex/fex/Zip7_Extractor.cpp	/^static blargg_err_t init_7z()$/;"	f	file:
init_gzip_file	fex/fex/Gzip_Extractor.cpp	/^static blargg_err_t init_gzip_file()$/;"	f	file:
init_rar	fex/fex/Rar_Extractor.cpp	/^static blargg_err_t init_rar()$/;"	f	file:
init_zip	fex/fex/Zip_Extractor.cpp	/^static blargg_err_t init_zip()$/;"	f	file:
initialFolderDir	src/win32/Directories.h	/^	CString initialFolderDir;$/;"	m	class:Directories
initialize	src/win32/Direct3D.cpp	/^bool Direct3DDisplay::initialize()$/;"	f	class:Direct3DDisplay
initialize	src/win32/DirectInput.cpp	/^bool DirectInput::initialize()$/;"	f	class:DirectInput
initialize	src/win32/OpenGL.cpp	/^bool OpenGLDisplay::initialize()$/;"	f	class:OpenGLDisplay
initializeFont	src/win32/OpenGL.cpp	/^void OpenGLDisplay::initializeFont()$/;"	f	class:OpenGLDisplay
initializeMatrices	src/win32/OpenGL.cpp	/^void OpenGLDisplay::initializeMatrices( int w, int h )$/;"	f	class:OpenGLDisplay
initializeTexture	src/win32/OpenGL.cpp	/^bool OpenGLDisplay::initializeTexture( int w, int h )$/;"	f	class:OpenGLDisplay
initialized	src/win32/Commands.cpp	/^static bool initialized = false;$/;"	v	file:
initialized	src/win32/Direct3D.cpp	/^	bool                  initialized;$/;"	m	class:Direct3DDisplay	file:
initialized	src/win32/GDBConnection.cpp	/^static bool initialized = false;$/;"	v	file:
initialized	src/win32/OpenAL.cpp	/^	bool           initialized;$/;"	m	class:OpenAL	file:
initialized	src/win32/XAudio2.cpp	/^	bool   initialized;$/;"	m	class:XAudio2_Output	file:
initialized	src/wx/openal.cpp	/^	bool           initialized;$/;"	m	class:OpenAL	file:
initialized	src/wx/xaudio2.cpp	/^	bool   initialized;$/;"	m	class:XAudio2_Output	file:
input	src/win32/VBA.h	/^  Input *input;$/;"	m	class:VBA
inputGetAutoFire	src/sdl/inputSDL.cpp	/^bool inputGetAutoFire(EKey key)$/;"	f
inputGetDefaultJoypad	src/sdl/inputSDL.cpp	/^EPad inputGetDefaultJoypad()$/;"	f
inputGetEventCode	src/sdl/inputSDL.cpp	/^uint32_t inputGetEventCode(const SDL_Event &event)$/;"	f
inputGetKeymap	src/sdl/inputSDL.cpp	/^uint32_t inputGetKeymap(EPad pad, EKey key)$/;"	f
inputGetSensorX	src/sdl/inputSDL.cpp	/^int inputGetSensorX()$/;"	f
inputGetSensorY	src/sdl/inputSDL.cpp	/^int inputGetSensorY()$/;"	f
inputInitJoysticks	src/sdl/inputSDL.cpp	/^void inputInitJoysticks()$/;"	f
inputProcessSDLEvent	src/sdl/inputSDL.cpp	/^void inputProcessSDLEvent(const SDL_Event &event)$/;"	f
inputReadJoypad	src/sdl/inputSDL.cpp	/^uint32_t inputReadJoypad(int which)$/;"	f
inputSetDefaultJoypad	src/sdl/inputSDL.cpp	/^void inputSetDefaultJoypad(EPad pad)$/;"	f
inputSetKeymap	src/sdl/inputSDL.cpp	/^void inputSetKeymap(EPad pad, EKey key, uint32_t code)$/;"	f
inputSetMotionKeymap	src/sdl/inputSDL.cpp	/^void inputSetMotionKeymap(EKey key, uint32_t code)$/;"	f
inputToggleAutoFire	src/sdl/inputSDL.cpp	/^bool inputToggleAutoFire(EKey key)$/;"	f
inputUpdateMotionSensor	src/sdl/inputSDL.cpp	/^void inputUpdateMotionSensor()$/;"	f
input_cb	src/libretro/libretro.cpp	/^static retro_input_state_t input_cb;$/;"	v	file:
insnfunc_t	src/gba/GBA-arm.cpp	/^typedef INSN_REGPARM void (*insnfunc_t)(u32 opcode);$/;"	t	file:
instance	src/win32/FileDlg.cpp	/^static FileDlg *instance = NULL;$/;"	v	file:
instance	src/win32/Logging.cpp	/^Logging *Logging::instance = NULL;$/;"	m	class:Logging	file:
instance	src/win32/Logging.h	/^	static Logging *instance;$/;"	m	class:Logging
instances	src/win32/XAudio2.cpp	/^	std::vector<XAudio2_Output*> instances;$/;"	m	class:XAudio2_Device_Notifier	file:
instances	src/wx/xaudio2.cpp	/^	std::vector<XAudio2_Output*> instances;$/;"	m	class:XAudio2_Device_Notifier	file:
int16_t	fex/fex/blargg_common.h	/^		typedef short            int16_t;$/;"	t	struct:BOOST
int16_t	src/apu/blargg_common.h	/^			typedef short           int16_t;$/;"	t	struct:BOOST
int16_t	src/apu/blargg_common.h	/^			typedef struct see_blargg_common_h int16_t;$/;"	t	struct:BOOST	typeref:struct:BOOST::see_blargg_common_h
int16_t	src/libretro/msvc/msvc-2003-xbox1/stdint.h	/^   typedef signed __int16    int16_t;$/;"	t
int16_t	src/libretro/msvc/msvc-2003-xbox1/stdint.h	/^   typedef signed short      int16_t;$/;"	t
int32_t	fex/fex/blargg_common.h	/^		typedef int              int32_t;$/;"	t	struct:BOOST
int32_t	src/apu/blargg_common.h	/^			typedef int             int32_t;$/;"	t	struct:BOOST
int32_t	src/apu/blargg_common.h	/^			typedef long            int32_t;$/;"	t	struct:BOOST
int32_t	src/apu/blargg_common.h	/^			typedef struct see_blargg_common_h int32_t;$/;"	t	struct:BOOST	typeref:struct:BOOST::see_blargg_common_h
int32_t	src/libretro/msvc/msvc-2003-xbox1/stdint.h	/^   typedef signed __int32    int32_t;$/;"	t
int32_t	src/libretro/msvc/msvc-2003-xbox1/stdint.h	/^   typedef signed int        int32_t;$/;"	t
int64_t	src/libretro/msvc/msvc-2003-xbox1/stdint.h	/^typedef signed __int64       int64_t;$/;"	t
int8_t	fex/fex/blargg_common.h	/^		typedef signed char       int8_t;$/;"	t	struct:BOOST
int8_t	src/apu/blargg_common.h	/^			typedef signed char     int8_t;$/;"	t	struct:BOOST
int8_t	src/libretro/msvc/msvc-2003-xbox1/stdint.h	/^   typedef signed __int8     int8_t;$/;"	t
int8_t	src/libretro/msvc/msvc-2003-xbox1/stdint.h	/^   typedef signed char       int8_t;$/;"	t
intState	src/gba/GBA.cpp	/^bool intState = false;$/;"	v
int_attrib	fex/fex/Zip_Extractor.cpp	/^	byte int_attrib [2];$/;"	m	struct:entry_t	file:
int_fast16_t	src/libretro/msvc/msvc-2003-xbox1/stdint.h	/^typedef int16_t   int_fast16_t;$/;"	t
int_fast32_t	src/libretro/msvc/msvc-2003-xbox1/stdint.h	/^typedef int32_t   int_fast32_t;$/;"	t
int_fast64_t	src/libretro/msvc/msvc-2003-xbox1/stdint.h	/^typedef int64_t   int_fast64_t;$/;"	t
int_fast8_t	src/libretro/msvc/msvc-2003-xbox1/stdint.h	/^typedef int8_t    int_fast8_t;$/;"	t
int_fmt	src/wx/panel.cpp	1655;"	d	file:
int_least16_t	src/libretro/msvc/msvc-2003-xbox1/stdint.h	/^typedef int16_t   int_least16_t;$/;"	t
int_least32_t	src/libretro/msvc/msvc-2003-xbox1/stdint.h	/^typedef int32_t   int_least32_t;$/;"	t
int_least64_t	src/libretro/msvc/msvc-2003-xbox1/stdint.h	/^typedef int64_t   int_least64_t;$/;"	t
int_least8_t	src/libretro/msvc/msvc-2003-xbox1/stdint.h	/^typedef int8_t    int_least8_t;$/;"	t
internalRAM	src/gba/Globals.cpp	/^u8 *internalRAM = 0;$/;"	v
internal_scale2x_16_def	src/filters/admame.cpp	/^static void internal_scale2x_16_def(u16 *dst, const u16* src0, const u16* src1, const u16* src2, unsigned count) {$/;"	f	file:
internal_scale2x_16_mmx	src/filters/admame.cpp	/^static void internal_scale2x_16_mmx(u16* dst0, u16* dst1, const u16* src0, const u16* src1, const u16* src2, unsigned count) {$/;"	f	file:
internal_scale2x_16_mmx_single	src/filters/admame.cpp	/^static void internal_scale2x_16_mmx_single(u16* dst, const u16* src0, const u16* src1, const u16* src2, unsigned count) {$/;"	f	file:
internal_scale2x_32_def	src/filters/admame.cpp	/^static void internal_scale2x_32_def(u32* dst,$/;"	f	file:
internal_scale2x_32_mmx	src/filters/admame.cpp	/^static void internal_scale2x_32_mmx(u32* dst0, u32* dst1, const u32* src0, const u32* src1, const u32* src2, unsigned count) {$/;"	f	file:
internal_scale2x_32_mmx_single	src/filters/admame.cpp	/^static void internal_scale2x_32_mmx_single(u32* dst, const u32* src0, const u32* src1, const u32* src2, unsigned count) {$/;"	f	file:
interp_16_11	src/filters/interp.h	/^static inline u16 interp_16_11(u16 p1, u16 p2)$/;"	f
interp_16_1411	src/filters/interp.h	/^static inline u16 interp_16_1411(u16 p1, u16 p2, u16 p3)$/;"	f
interp_16_151	src/filters/interp.h	/^static inline u16 interp_16_151(u16 p1, u16 p2)$/;"	f
interp_16_211	src/filters/interp.h	/^static inline u16 interp_16_211(u16 p1, u16 p2, u16 p3)$/;"	f
interp_16_31	src/filters/interp.h	/^static inline u16 interp_16_31(u16 p1, u16 p2)$/;"	f
interp_16_332	src/filters/interp.h	/^static inline u16 interp_16_332(u16 p1, u16 p2, u16 p3)$/;"	f
interp_16_431	src/filters/interp.h	/^static inline u16 interp_16_431(u16 p1, u16 p2, u16 p3)$/;"	f
interp_16_521	src/filters/interp.h	/^static inline u16 interp_16_521(u16 p1, u16 p2, u16 p3)$/;"	f
interp_16_53	src/filters/interp.h	/^static inline u16 interp_16_53(u16 p1, u16 p2)$/;"	f
interp_16_611	src/filters/interp.h	/^static inline u16 interp_16_611(u16 p1, u16 p2, u16 p3)$/;"	f
interp_16_71	src/filters/interp.h	/^static inline u16 interp_16_71(u16 p1, u16 p2)$/;"	f
interp_16_772	src/filters/interp.h	/^static inline u16 interp_16_772(u16 p1, u16 p2, u16 p3)$/;"	f
interp_16_97	src/filters/interp.h	/^static inline u16 interp_16_97(u16 p1, u16 p2)$/;"	f
interp_16_diff	src/filters/interp.h	/^static int interp_16_diff(u16 p1, u16 p2)$/;"	f
interp_32_11	src/filters/interp.h	/^static inline u32 interp_32_11(u32 p1, u32 p2)$/;"	f
interp_32_1411	src/filters/interp.h	/^static inline u32 interp_32_1411(u32 p1, u32 p2, u32 p3)$/;"	f
interp_32_151	src/filters/interp.h	/^static inline u32 interp_32_151(u32 p1, u32 p2)$/;"	f
interp_32_211	src/filters/interp.h	/^static inline u32 interp_32_211(u32 p1, u32 p2, u32 p3)$/;"	f
interp_32_31	src/filters/interp.h	/^static inline u32 interp_32_31(u32 p1, u32 p2)$/;"	f
interp_32_332	src/filters/interp.h	/^static inline u32 interp_32_332(u32 p1, u32 p2, u32 p3)$/;"	f
interp_32_431	src/filters/interp.h	/^static inline u32 interp_32_431(u32 p1, u32 p2, u32 p3)$/;"	f
interp_32_521	src/filters/interp.h	/^static inline u32 interp_32_521(u32 p1, u32 p2, u32 p3)$/;"	f
interp_32_53	src/filters/interp.h	/^static inline u32 interp_32_53(u32 p1, u32 p2)$/;"	f
interp_32_611	src/filters/interp.h	/^static inline u32 interp_32_611(u32 p1, u32 p2, u32 p3)$/;"	f
interp_32_71	src/filters/interp.h	/^static inline u32 interp_32_71(u32 p1, u32 p2)$/;"	f
interp_32_772	src/filters/interp.h	/^static inline u32 interp_32_772(u32 p1, u32 p2, u32 p3)$/;"	f
interp_32_97	src/filters/interp.h	/^static inline u32 interp_32_97(u32 p1, u32 p2)$/;"	f
interp_32_diff	src/filters/interp.h	/^static int interp_32_diff(u32 p1, u32 p2)$/;"	f
interp_bits_per_pixel	src/filters/interp.h	/^static unsigned interp_bits_per_pixel;$/;"	v
interp_mask	src/filters/interp.h	/^static unsigned interp_mask[2];$/;"	v
interp_rate	src/gba/Sound.cpp	/^void interp_rate() { \/* empty for now *\/ }$/;"	f
interp_set	src/filters/interp.h	/^static void interp_set(unsigned bits_per_pixel)$/;"	f
interp_uint16	src/filters/interp.h	/^typedef uint16_t interp_uint16;$/;"	t
interp_uint32	src/filters/interp.h	/^typedef uint32_t interp_uint32;$/;"	t
interval	src/win32/RewindInterval.h	/^  int interval;$/;"	m	class:RewindInterval
intinbuffer	src/gba/GBALink.h	/^	s32 *intinbuffer;$/;"	m	class:lclient
intinbuffer	src/gba/GBALink.h	/^	s32 *intinbuffer;$/;"	m	class:lserver
intmax_t	src/libretro/msvc/msvc-2003-xbox1/stdint.h	/^typedef int64_t   intmax_t;$/;"	t
intopt	src/wx/opts.h	/^    int *intopt;$/;"	m	struct:opt_desc
intopt	src/wx/wxvbam.h	/^    int *intopt, mask, val;$/;"	m	struct:checkable_mi_t
intoutbuffer	src/gba/GBALink.h	/^	s32 *intoutbuffer;$/;"	m	class:lclient
intoutbuffer	src/gba/GBALink.h	/^	s32 *intoutbuffer;$/;"	m	class:lserver
intptr_t	src/libretro/msvc/msvc-2003-xbox1/stdint.h	/^   typedef _W64 signed int   intptr_t;$/;"	t
intptr_t	src/libretro/msvc/msvc-2003-xbox1/stdint.h	/^   typedef signed __int64    intptr_t;$/;"	t
ioMem	src/gba/Globals.cpp	/^u8 *ioMem = 0;$/;"	v
ioReadable	src/gba/Globals.cpp	/^bool ioReadable[0x400];$/;"	v
ioViewRegisters	src/win32/IOViewerRegs.h	/^const IOData ioViewRegisters[] = {$/;"	v
ioregs	src/wx/ioregs.h	/^\/* const *\/ IOData ioregs[] = { \/\/ not const so tranlation can be done once$/;"	v
is256	src/wx/gfxviewers.cpp	/^	int charbase, is256, palette;$/;"	m	class:Viewers::TileViewer	file:
is256Colors	src/win32/TileView.h	/^  int is256Colors;$/;"	m	class:TileView
isDriveRoot	src/win32/MainWnd.cpp	/^bool MainWnd::isDriveRoot(CString& file)$/;"	f	class:MainWnd
isInRom	src/gba/GBA.cpp	/^const bool isInRom [16]=$/;"	v
isMultilineWithData	src/gba/Cheats.cpp	/^static bool isMultilineWithData(int i)$/;"	f	file:
isPolled	src/win32/DirectInput.cpp	/^    BOOL isPolled;$/;"	m	struct:deviceInfo	file:
isRegistered	src/win32/BitmapControl.cpp	/^bool BitmapControl::isRegistered = false;$/;"	m	class:BitmapControl	file:
isRegistered	src/win32/BitmapControl.h	/^  static bool isRegistered;$/;"	m	class:BitmapControl
isRegistered	src/win32/ColorButton.cpp	/^bool ColorButton::isRegistered = false;$/;"	m	class:ColorButton	file:
isRegistered	src/win32/ColorButton.h	/^  static bool isRegistered;$/;"	m	class:ColorButton
isRegistered	src/win32/ColorControl.cpp	/^bool ColorControl::isRegistered = false;$/;"	m	class:ColorControl	file:
isRegistered	src/win32/ColorControl.h	/^  static bool isRegistered;$/;"	m	class:ColorControl
isRegistered	src/win32/MemoryViewer.cpp	/^bool MemoryViewer::isRegistered = false;$/;"	m	class:MemoryViewer	file:
isRegistered	src/win32/MemoryViewer.h	/^  static bool isRegistered;$/;"	m	class:MemoryViewer
isRegistered	src/win32/PaletteViewControl.cpp	/^bool PaletteViewControl::isRegistered = false;$/;"	m	class:PaletteViewControl	file:
isRegistered	src/win32/PaletteViewControl.h	/^  static bool isRegistered;$/;"	m	class:PaletteViewControl
isRegistered	src/win32/ZoomControl.cpp	/^bool ZoomControl::isRegistered = false;$/;"	m	class:ZoomControl	file:
isRegistered	src/win32/ZoomControl.h	/^  static bool isRegistered;$/;"	m	class:ZoomControl
isRumbleCartridge	src/gb/gbMemory.h	/^  int isRumbleCartridge;$/;"	m	struct:mapperMBC5
isSave	src/win32/FileDlg.h	/^  bool isSave;$/;"	m	class:FileDlg
is_archive_extension	fex/fex/fex.cpp	/^static int is_archive_extension( const char str [] )$/;"	f	file:
is_ctrl	src/wx/widgets/joyedit.cpp	178;"	d	file:
is_normal_file	fex/fex/Zip_Extractor.cpp	/^static bool is_normal_file( entry_t const& e, unsigned len )$/;"	f	file:
isasc	src/wx/viewsupt.h	/^	bool isasc;$/;"	m	class:Viewers::MemView
isatty	src/sdl/expr-lex.cpp	473;"	d	file:
isgb	src/wx/guiinit.cpp	/^    bool isgb;$/;"	m	class:CheatFind_t	file:
isgb	src/wx/guiinit.cpp	/^    bool isgb;$/;"	m	class:CheatList_t	file:
issel	src/wx/viewsupt.h	/^	bool issel;$/;"	m	class:Viewers::DisList
item0	src/wx/guiinit.cpp	/^    wxListItem item0, item1;$/;"	m	class:CheatList_t	file:
item1	src/wx/guiinit.cpp	/^    wxListItem item0, item1;$/;"	m	class:CheatList_t	file:
j	src/gba/GBALink.cpp	/^static int i, j;$/;"	v	file:
jasc_head	src/wx/gfxviewers.cpp	1078;"	d	file:
joy	src/wx/widgets/wx/joyedit.h	/^    int joy; \/\/ joystick # (starting at 1)$/;"	m	struct:wxJoyKeyBinding
joy	src/wx/widgets/wx/sdljoy.h	/^    unsigned short joy;$/;"	m	class:wxSDLJoyEvent
joy	src/wx/wxvbam.h	/^    wxSDLJoy joy;$/;"	m	class:MainFrame
joybusHostAddr	src/gba/GBALink.cpp	/^sf::IPAddress joybusHostAddr = sf::IPAddress::LocalHost;$/;"	v
joybus_host	src/wx/opts.h	/^    wxString joybus_host;$/;"	m	struct:opts_t
joykey_bindings	src/wx/opts.h	/^    wxJoyKeyBinding_v joykey_bindings[4][NUM_KEYS];$/;"	m	struct:opts_t
joynames	src/wx/opts.cpp	/^const wxChar * const joynames[NUM_KEYS] = {$/;"	v
joypad	src/sdl/inputSDL.cpp	/^static uint32_t joypad[5][SDLBUTTONS_NUM] = {$/;"	v	file:
joypadDefault	src/win32/VBA.h	/^  int joypadDefault;$/;"	m	class:VBA
joypaddata	src/win32/Input.h	/^  KeyList joypaddata[JOYPADS * KEYS_PER_PAD + MOTION_KEYS];$/;"	m	class:Input
joypress	src/wx/sys.cpp	/^int joypress[4], autofire;$/;"	v
joystate	src/wx/widgets/wx/sdljoy.h	/^    wxSDLJoyState_t *joystate;$/;"	m	class:wxSDLJoy
k2xSaI	src/sdl/filters.h	/^enum Filter { kStretch1x, kStretch2x, k2xSaI, kSuper2xSaI, kSuperEagle, kPixelate,$/;"	e	enum:Filter
k7zIdATime	fex/7z_C/7z.h	/^  k7zIdATime,$/;"	e	enum:EIdEnum
k7zIdAdditionalStreamsInfo	fex/7z_C/7z.h	/^  k7zIdAdditionalStreamsInfo,$/;"	e	enum:EIdEnum
k7zIdAnti	fex/7z_C/7z.h	/^  k7zIdAnti,$/;"	e	enum:EIdEnum
k7zIdArchiveProperties	fex/7z_C/7z.h	/^  k7zIdArchiveProperties,$/;"	e	enum:EIdEnum
k7zIdCRC	fex/7z_C/7z.h	/^  k7zIdCRC,$/;"	e	enum:EIdEnum
k7zIdCTime	fex/7z_C/7z.h	/^  k7zIdCTime,$/;"	e	enum:EIdEnum
k7zIdCodersUnpackSize	fex/7z_C/7z.h	/^  k7zIdCodersUnpackSize,$/;"	e	enum:EIdEnum
k7zIdComment	fex/7z_C/7z.h	/^  k7zIdComment,$/;"	e	enum:EIdEnum
k7zIdDummy	fex/7z_C/7z.h	/^  k7zIdDummy$/;"	e	enum:EIdEnum
k7zIdEmptyFile	fex/7z_C/7z.h	/^  k7zIdEmptyFile,$/;"	e	enum:EIdEnum
k7zIdEmptyStream	fex/7z_C/7z.h	/^  k7zIdEmptyStream,$/;"	e	enum:EIdEnum
k7zIdEncodedHeader	fex/7z_C/7z.h	/^  k7zIdEncodedHeader,$/;"	e	enum:EIdEnum
k7zIdEnd	fex/7z_C/7z.h	/^  k7zIdEnd,$/;"	e	enum:EIdEnum
k7zIdFilesInfo	fex/7z_C/7z.h	/^  k7zIdFilesInfo,$/;"	e	enum:EIdEnum
k7zIdFolder	fex/7z_C/7z.h	/^  k7zIdFolder,$/;"	e	enum:EIdEnum
k7zIdHeader	fex/7z_C/7z.h	/^  k7zIdHeader,$/;"	e	enum:EIdEnum
k7zIdMTime	fex/7z_C/7z.h	/^  k7zIdMTime,$/;"	e	enum:EIdEnum
k7zIdMainStreamsInfo	fex/7z_C/7z.h	/^  k7zIdMainStreamsInfo,$/;"	e	enum:EIdEnum
k7zIdName	fex/7z_C/7z.h	/^  k7zIdName,$/;"	e	enum:EIdEnum
k7zIdNumUnpackStream	fex/7z_C/7z.h	/^  k7zIdNumUnpackStream,$/;"	e	enum:EIdEnum
k7zIdPackInfo	fex/7z_C/7z.h	/^  k7zIdPackInfo,$/;"	e	enum:EIdEnum
k7zIdSize	fex/7z_C/7z.h	/^  k7zIdSize,$/;"	e	enum:EIdEnum
k7zIdStartPos	fex/7z_C/7z.h	/^  k7zIdStartPos,$/;"	e	enum:EIdEnum
k7zIdSubStreamsInfo	fex/7z_C/7z.h	/^  k7zIdSubStreamsInfo,$/;"	e	enum:EIdEnum
k7zIdUnpackInfo	fex/7z_C/7z.h	/^  k7zIdUnpackInfo,$/;"	e	enum:EIdEnum
k7zIdWinAttributes	fex/7z_C/7z.h	/^  k7zIdWinAttributes,$/;"	e	enum:EIdEnum
k7zMajorVersion	fex/7z_C/7z.h	14;"	d
k7zSignature	fex/7z_C/7zIn.c	/^Byte k7zSignature[k7zSignatureSize] = {'7', 'z', 0xBC, 0xAF, 0x27, 0x1C};$/;"	v
k7zSignatureSize	fex/7z_C/7z.h	12;"	d
k7zStartHeaderSize	fex/7z_C/7z.h	11;"	d
kAdMame2x	src/sdl/filters.h	/^				kAdMame2x, kBilinear, kBilinearPlus, kScanlines, kScanlinesTV,$/;"	e	enum:Filter
kAlignTableSize	fex/7z_C/LzmaDec.c	89;"	d	file:
kBilinear	src/sdl/filters.h	/^				kAdMame2x, kBilinear, kBilinearPlus, kScanlines, kScanlinesTV,$/;"	e	enum:Filter
kBilinearPlus	src/sdl/filters.h	/^				kAdMame2x, kBilinear, kBilinearPlus, kScanlines, kScanlinesTV,$/;"	e	enum:Filter
kBitModelTotal	fex/7z_C/Bcj2.c	19;"	d	file:
kBitModelTotal	fex/7z_C/LzmaDec.c	12;"	d	file:
kCrcPoly	fex/7z_C/7zCrc.c	7;"	d	file:
kEndPosModelIndex	fex/7z_C/LzmaDec.c	82;"	d	file:
kIBMotionBlur	src/sdl/filters.h	/^enum IFBFilter { kIFBNone, kIBMotionBlur, kIBSmart, kInvalidIFBFilter };$/;"	e	enum:IFBFilter
kIBSmart	src/sdl/filters.h	/^enum IFBFilter { kIFBNone, kIBMotionBlur, kIBSmart, kInvalidIFBFilter };$/;"	e	enum:IFBFilter
kIFBNone	src/sdl/filters.h	/^enum IFBFilter { kIFBNone, kIBMotionBlur, kIBSmart, kInvalidIFBFilter };$/;"	e	enum:IFBFilter
kInitBinEsc	fex/7z_C/Ppmd7.c	/^static const UInt16 kInitBinEsc[] = { 0x3CDD, 0x1F3F, 0x59BF, 0x48F3, 0x64A1, 0x5ABC, 0x6632, 0x6051};$/;"	v	file:
kInvalidFilter	src/sdl/filters.h	/^				klq2x, khq2x, kStretch3x, khq3x, kStretch4x, khq4x, kInvalidFilter };$/;"	e	enum:Filter
kInvalidIFBFilter	src/sdl/filters.h	/^enum IFBFilter { kIFBNone, kIBMotionBlur, kIBSmart, kInvalidIFBFilter };$/;"	e	enum:IFBFilter
kLenNumHighBits	fex/7z_C/LzmaDec.c	67;"	d	file:
kLenNumHighSymbols	fex/7z_C/LzmaDec.c	68;"	d	file:
kLenNumLowBits	fex/7z_C/LzmaDec.c	63;"	d	file:
kLenNumLowSymbols	fex/7z_C/LzmaDec.c	64;"	d	file:
kLenNumMidBits	fex/7z_C/LzmaDec.c	65;"	d	file:
kLenNumMidSymbols	fex/7z_C/LzmaDec.c	66;"	d	file:
kMaskToAllowedStatus	fex/7z_C/Bra86.c	/^const Byte kMaskToAllowedStatus[8] = {1, 1, 1, 0, 1, 0, 0, 0};$/;"	v
kMaskToBitNumber	fex/7z_C/Bra86.c	/^const Byte kMaskToBitNumber[8] = {0, 1, 2, 2, 3, 3, 3, 3};$/;"	v
kMatchMinLen	fex/7z_C/LzmaDec.c	91;"	d	file:
kMatchSpecLenStart	fex/7z_C/LzmaDec.c	92;"	d	file:
kNumAlignBits	fex/7z_C/LzmaDec.c	88;"	d	file:
kNumBitModelTotalBits	fex/7z_C/Bcj2.c	18;"	d	file:
kNumBitModelTotalBits	fex/7z_C/LzmaDec.c	11;"	d	file:
kNumFullDistances	fex/7z_C/LzmaDec.c	83;"	d	file:
kNumLenProbs	fex/7z_C/LzmaDec.c	75;"	d	file:
kNumLenToPosStates	fex/7z_C/LzmaDec.c	86;"	d	file:
kNumLitStates	fex/7z_C/LzmaDec.c	79;"	d	file:
kNumMoveBits	fex/7z_C/Bcj2.c	20;"	d	file:
kNumMoveBits	fex/7z_C/LzmaDec.c	13;"	d	file:
kNumPosBitsMax	fex/7z_C/LzmaDec.c	60;"	d	file:
kNumPosSlotBits	fex/7z_C/LzmaDec.c	85;"	d	file:
kNumPosStatesMax	fex/7z_C/LzmaDec.c	61;"	d	file:
kNumStates	fex/7z_C/LzmaDec.c	78;"	d	file:
kNumTopBits	fex/7z_C/Bcj2.c	15;"	d	file:
kNumTopBits	fex/7z_C/LzmaDec.c	8;"	d	file:
kPixelate	src/sdl/filters.h	/^enum Filter { kStretch1x, kStretch2x, k2xSaI, kSuper2xSaI, kSuperEagle, kPixelate,$/;"	e	enum:Filter
kScanlines	src/sdl/filters.h	/^				kAdMame2x, kBilinear, kBilinearPlus, kScanlines, kScanlinesTV,$/;"	e	enum:Filter
kScanlinesTV	src/sdl/filters.h	/^				kAdMame2x, kBilinear, kBilinearPlus, kScanlines, kScanlinesTV,$/;"	e	enum:Filter
kStartPosModelIndex	fex/7z_C/LzmaDec.c	81;"	d	file:
kStretch1x	src/sdl/filters.h	/^enum Filter { kStretch1x, kStretch2x, k2xSaI, kSuper2xSaI, kSuperEagle, kPixelate,$/;"	e	enum:Filter
kStretch2x	src/sdl/filters.h	/^enum Filter { kStretch1x, kStretch2x, k2xSaI, kSuper2xSaI, kSuperEagle, kPixelate,$/;"	e	enum:Filter
kStretch3x	src/sdl/filters.h	/^				klq2x, khq2x, kStretch3x, khq3x, kStretch4x, khq4x, kInvalidFilter };$/;"	e	enum:Filter
kStretch4x	src/sdl/filters.h	/^				klq2x, khq2x, kStretch3x, khq3x, kStretch4x, khq4x, kInvalidFilter };$/;"	e	enum:Filter
kSuper2xSaI	src/sdl/filters.h	/^enum Filter { kStretch1x, kStretch2x, k2xSaI, kSuper2xSaI, kSuperEagle, kPixelate,$/;"	e	enum:Filter
kSuperEagle	src/sdl/filters.h	/^enum Filter { kStretch1x, kStretch2x, k2xSaI, kSuper2xSaI, kSuperEagle, kPixelate,$/;"	e	enum:Filter
kTopValue	fex/7z_C/Bcj2.c	16;"	d	file:
kTopValue	fex/7z_C/LzmaDec.c	9;"	d	file:
kTopValue	fex/7z_C/Ppmd7Dec.c	7;"	d	file:
kVendors	fex/7z_C/CpuArch.c	/^static UInt32 kVendors[][3] =$/;"	v	file:
k_ARM	fex/7z_C/7zDec.c	24;"	d	file:
k_ARMT	fex/7z_C/7zDec.c	25;"	d	file:
k_BCJ	fex/7z_C/7zDec.c	22;"	d	file:
k_BCJ2	fex/7z_C/7zDec.c	27;"	d	file:
k_Copy	fex/7z_C/7zDec.c	19;"	d	file:
k_LZMA	fex/7z_C/7zDec.c	21;"	d	file:
k_LZMA2	fex/7z_C/7zDec.c	20;"	d	file:
k_PPC	fex/7z_C/7zDec.c	23;"	d	file:
k_PPMD	fex/7z_C/7zDec.c	31;"	d	file:
k_SPARC	fex/7z_C/7zDec.c	26;"	d	file:
kernel_unit	src/apu/Blip_Buffer.h	/^		blip_long kernel_unit;$/;"	m	class:Blip_Synth_
key	src/libretro/libretro.h	/^   const char *key;        \/\/ Variable to query in RETRO_ENVIRONMENT_GET_VARIABLE.$/;"	m	struct:retro_variable
key	src/wx/guiinit.cpp	/^    wxKeyTextCtrl *key;$/;"	m	class:AccelConfig_t	file:
key	src/wx/widgets/wx/joyedit.h	/^    int key; \/\/ key code; listed first for easy static init$/;"	m	struct:wxJoyKeyBinding
keyenter	src/wx/widgets/wx/keyedit.h	/^    bool keyenter;$/;"	m	class:wxKeyTextCtrl
keys_pressed	src/wx/panel.cpp	/^static wxJoyKeyBinding_v keys_pressed;$/;"	v	file:
khq2x	src/sdl/filters.h	/^				klq2x, khq2x, kStretch3x, khq3x, kStretch4x, khq4x, kInvalidFilter };$/;"	e	enum:Filter
khq3x	src/sdl/filters.h	/^				klq2x, khq2x, kStretch3x, khq3x, kStretch4x, khq4x, kInvalidFilter };$/;"	e	enum:Filter
khq4x	src/sdl/filters.h	/^				klq2x, khq2x, kStretch3x, khq3x, kStretch4x, khq4x, kInvalidFilter };$/;"	e	enum:Filter
klq2x	src/sdl/filters.h	/^				klq2x, khq2x, kStretch3x, khq3x, kStretch4x, khq4x, kInvalidFilter };$/;"	e	enum:Filter
lab	src/wx/guiinit.cpp	/^    wxWindow *lab, *ch;$/;"	m	class:PluginEnable_t	file:
languageModule	src/win32/VBA.h	/^  HMODULE languageModule;$/;"	m	class:VBA
languageName	src/win32/VBA.h	/^  CString languageName;$/;"	m	class:VBA
languageOption	src/win32/VBA.h	/^  int languageOption;$/;"	m	class:VBA
lanlink	src/gba/GBALink.cpp	/^LANLINKDATA lanlink;$/;"	v
lanlink_speed	src/wx/opts.h	/^    bool lanlink_speed;$/;"	m	struct:opts_t
lastAddress	src/win32/GBDisassemble.h	/^  u16 lastAddress;$/;"	m	class:GBDisassemble
lastFullscreen	src/win32/VBA.h	/^  VIDEO_SIZE lastFullscreen;$/;"	m	class:VBA
lastFunction	src/gba/elf.h	/^  Function *lastFunction;$/;"	m	struct:CompileUnit
lastTime	src/gba/GBA.cpp	/^u32 lastTime = 0;$/;"	v
lastWindowed	src/win32/VBA.h	/^  VIDEO_SIZE lastWindowed;$/;"	m	class:VBA
last_amp	src/apu/Blip_Buffer.h	/^		int last_amp;$/;"	m	class:Blip_Synth_
last_amp	src/apu/Blip_Buffer.h	/^		int last_amp;$/;"	m	class:Blip_Synth_Fast_
last_amp	src/apu/Gb_Oscs.h	/^	int             last_amp;   \/\/ current amplitude in Blip_Buffer$/;"	m	class:Gb_Osc
last_amp	src/gba/Sound.cpp	/^	int last_amp;$/;"	m	class:Gba_Pcm	file:
last_device	src/win32/XAudio2.cpp	/^	std::wstring last_device;$/;"	m	class:XAudio2_Device_Notifier	file:
last_device	src/wx/xaudio2.cpp	/^	std::wstring last_device;$/;"	m	class:XAudio2_Device_Notifier	file:
last_non_silence	src/apu/Multi_Buffer.h	/^		blip_long last_non_silence;$/;"	m	class:Tracked_Blip_Buffer
last_nonopt	src/sdl/getopt.c	/^static int last_nonopt;$/;"	v	file:
last_time	src/apu/Gb_Apu.h	/^	blip_time_t last_time;          \/\/ time sound emulator has been run to$/;"	m	class:Gb_Apu
last_time	src/gba/Sound.cpp	/^	blip_time_t last_time;$/;"	m	class:Gba_Pcm	file:
lastapi	src/wx/guiinit.cpp	/^    int lastapi;$/;"	m	class:SoundConfig_t	file:
lastkey	src/wx/widgets/wx/keyedit.h	/^    int lastmod, lastkey;$/;"	m	class:wxKeyTextCtrl
lastlinktime	src/gba/GBALink.h	/^	int lastlinktime;$/;"	m	struct:__anon45
lastmod	src/wx/widgets/wx/keyedit.h	/^    int lastmod, lastkey;$/;"	m	class:wxKeyTextCtrl
layerEnable	src/gba/Globals.cpp	/^int layerEnable = 0xff00;$/;"	v
layerEnableDelay	src/gba/GBA.cpp	/^int layerEnableDelay = 0;$/;"	v
layerSettings	src/gba/Globals.cpp	/^int layerSettings = 0xff00;$/;"	v
lb	src/wx/guiinit.cpp	/^    wxControlWithItems *lb;$/;"	m	class:AccelConfig_t	file:
lc	fex/7z_C/LzmaDec.h	/^  unsigned lc, lp, pb;$/;"	m	struct:_CLzmaProps
lc	src/gba/GBALink.cpp	/^lclient lc;$/;"	v
lcdTicks	src/gba/GBA.cpp	/^int lcdTicks = (useBios && !skipBios) ? 1008 : 208;$/;"	v
lclient	src/gba/GBALink.cpp	/^lclient::lclient(void){$/;"	f	class:lclient
lclient	src/gba/GBALink.h	/^class lclient{$/;"	c
left	src/apu/Multi_Buffer.h	/^		Blip_Buffer* left;$/;"	m	struct:Multi_Buffer::channel_t
left	src/apu/Multi_Buffer.h	/^	Blip_Buffer* left()     { return &bufs [0]; }$/;"	f	class:Stereo_Buffer
left	src/win32/Joypad.h	/^  JoypadEditControl  left;$/;"	m	class:JoypadConfig
left	src/win32/Joypad.h	/^  JoypadEditControl  left;$/;"	m	class:MotionConfig
length	src/apu/Blip_Buffer.h	/^inline int  Blip_Buffer::length() const         { return length_; }$/;"	f	class:Blip_Buffer
length	src/apu/Multi_Buffer.h	/^inline int Multi_Buffer::length() const { return length_; }$/;"	f	class:Multi_Buffer
length	src/gba/elf.h	/^  int length;$/;"	m	struct:ELFBlock
length	src/gba/elf.h	/^  u32 length;$/;"	m	struct:CompileUnit
length_	src/apu/Blip_Buffer.h	/^	int length_;$/;"	m	class:Blip_Buffer
length_	src/apu/Multi_Buffer.h	/^	int length_;$/;"	m	class:Multi_Buffer
length_ctr	src/apu/Gb_Apu.h	/^	val_t length_ctr [4];$/;"	m	struct:gb_apu_state_t
length_ctr	src/apu/Gb_Oscs.h	/^	int         length_ctr; \/\/ length counter$/;"	m	class:Gb_Osc
length_enabled	src/apu/Gb_Oscs.cpp	/^int const length_enabled = 0x40;$/;"	v
lfsr_mask	src/apu/Gb_Oscs.h	/^	unsigned lfsr_mask() const { return (regs [3] & 0x08) ? ~0x4040 : ~0x4000; }$/;"	f	class:Gb_Noise
library_name	src/libretro/libretro.h	/^   const char *library_name;      \/\/ Descriptive name of library. Should not contain any version numbers, etc.$/;"	m	struct:retro_system_info
library_version	src/libretro/libretro.h	/^   const char *library_version;   \/\/ Descriptive version of core.$/;"	m	struct:retro_system_info
libretro_save_buf	src/libretro/libretro.cpp	/^uint8_t libretro_save_buf[0x20000 + 0x2000];	\/* Workaround for broken-by-design GBA save semantics. *\/$/;"	v
libretro_save_size	src/libretro/libretro.cpp	/^static unsigned libretro_save_size = sizeof(libretro_save_buf);$/;"	v	file:
line	src/gba/elf.h	/^  int line;$/;"	m	struct:Function
line	src/gba/elf.h	/^  int line;$/;"	m	struct:LineInfoItem
line	src/gba/elf.h	/^  int line;$/;"	m	struct:Object
line0	src/gba/GBAGfx.cpp	/^u32 line0[240];$/;"	v
line1	src/gba/GBAGfx.cpp	/^u32 line1[240];$/;"	v
line2	src/gba/GBAGfx.cpp	/^u32 line2[240];$/;"	v
line3	src/gba/GBAGfx.cpp	/^u32 line3[240];$/;"	v
lineInfo	src/gba/elf.h	/^  u32 lineInfo;$/;"	m	struct:CompileUnit
lineInfoTable	src/gba/elf.h	/^  LineInfo *lineInfoTable;$/;"	m	struct:CompileUnit
lineMix	src/gba/GBAGfx.cpp	/^u32 lineMix[240];$/;"	v
lineOBJ	src/gba/GBAGfx.cpp	/^u32 lineOBJ[240];$/;"	v
lineOBJWin	src/gba/GBAGfx.cpp	/^u32 lineOBJWin[240];$/;"	v
lineOBJpixleft	src/gba/GBAGfx.cpp	/^int lineOBJpixleft[128];$/;"	v
lineheight	src/wx/viewsupt.h	/^	int lineheight, extraheight;$/;"	m	class:Viewers::DisList
lines	src/gba/elf.h	/^  LineInfoItem *lines;$/;"	m	struct:LineInfo
linesize	src/common/ffmpeg.h	/^    int linesize, pixsize;$/;"	m	class:MediaRecorder
linesleft	src/filters/hq/asm/hq3x_16.asm	/^linesleft equ 4$/;"	d
linesleft	src/filters/hq/asm/hq3x_32.asm	/^linesleft equ 4$/;"	d
linesleft	src/filters/hq/asm/hq4x_16.asm	/^linesleft equ 4$/;"	d
linesleft	src/filters/hq/asm/hq4x_32.asm	/^linesleft equ 4$/;"	d
link	src/gba/elf.h	/^  u32 link;$/;"	m	struct:ELFSectionHeader
link_host	src/wx/opts.h	/^    wxString link_host;$/;"	m	struct:opts_t
link_proto	src/wx/opts.h	/^    int link_proto;$/;"	m	struct:opts_t
linkcmd	src/gba/GBALink.h	/^	u16 linkcmd;$/;"	m	struct:__anon45
linkdata	src/gba/GBALink.cpp	/^u16 linkdata[4];$/;"	v
linkdata	src/gba/GBALink.h	/^	u16 linkdata[5];$/;"	m	struct:__anon45
linkevent	src/gba/GBALink.cpp	/^char linkevent[] =$/;"	v
linkflags	src/gba/GBALink.h	/^	u8 linkflags;$/;"	m	struct:__anon45
linkid	src/gba/GBALink.cpp	/^int linkid = 0;$/;"	v
linkmem	src/gba/GBALink.cpp	/^LINKDATA *linkmem = NULL;$/;"	v
linksync	src/gba/GBALink.cpp	/^HANDLE linksync[4];$/;"	v
linksync	src/gba/GBALink.cpp	/^sem_t *linksync[4];$/;"	v
linktime	src/gba/GBALink.cpp	/^int linktime = 0;$/;"	v
linktimeout	src/gba/GBALink.cpp	/^int linktimeout = 1000;$/;"	v
linktimeout	src/wx/opts.h	/^    int linktimeout;$/;"	m	struct:opts_t
lircCheckInput	src/sdl/SDL.cpp	/^void lircCheckInput(void)$/;"	f
list	src/wx/guiinit.cpp	/^    CheatListCtrl *list;$/;"	m	class:CheatFind_t	file:
list	src/wx/guiinit.cpp	/^    wxCheckedListCtrl *list;$/;"	m	class:CheatList_t	file:
listenSocket	src/win32/GDBConnection.h	/^  SOCKET listenSocket;$/;"	m	class:GDBWaitingDlg
lline	src/wx/viewers.cpp	/^	static const wxChar *lline;$/;"	m	class:Viewers::IOViewer	file:
lline	src/wx/viewers.cpp	/^    const wxChar *IOViewer::lline = NULL;$/;"	m	class:Viewers::IOViewer	file:
lo	src/gba/GBA.cpp	/^      \/* 0*\/	unsigned lo:4;$/;"	m	struct:u8h::__anon41	file:
loadSaveGame	src/win32/MainWnd.cpp	/^bool MainWnd::loadSaveGame(const char *name)$/;"	f	class:MainWnd
loadSettings	src/win32/DirectInput.cpp	/^void DirectInput::loadSettings()$/;"	f	class:DirectInput
loadSettings	src/win32/VBA.cpp	/^void VBA::loadSettings()$/;"	f	class:VBA
load_image_preferences	src/libretro/libretro.cpp	/^static void load_image_preferences (void)$/;"	f	file:
load_opts	src/wx/opts.cpp	/^void load_opts()$/;"	f
load_state	src/apu/Blip_Buffer.cpp	/^void Blip_Buffer::load_state( blip_buffer_state_t const& in )$/;"	f	class:Blip_Buffer
load_state	src/apu/Gb_Apu_State.cpp	/^blargg_err_t Gb_Apu::load_state( gb_apu_state_t const& in )$/;"	f	class:Gb_Apu
loaded	src/wx/wxvbam.h	/^    IMAGE_TYPE loaded;$/;"	m	class:GameArea
loaded_game	src/wx/wxvbam.h	/^    wxFileName loaded_game;$/;"	m	class:GameArea
loadfn	src/wx/openal.cpp	364;"	d	file:
loadst_mi	src/wx/wxvbam.h	/^    wxMenuItem *loadst_mi[10];$/;"	m	class:MainFrame
locType	src/sdl/exprNode.h	/^  LocationType locType;$/;"	m	struct:Node
local	src/common/memgzio.c	23;"	d	file:
locale	src/wx/wxvbam.h	/^    wxLocale locale;$/;"	m	class:wxvbamApp
localsize	src/filters/hq/asm/hq3x_16.asm	/^localsize equ 56$/;"	d
localsize	src/filters/hq/asm/hq3x_32.asm	/^localsize equ 92$/;"	d
localsize	src/filters/hq/asm/hq4x_16.asm	/^localsize equ 56$/;"	d
localsize	src/filters/hq/asm/hq4x_32.asm	/^localsize equ 92$/;"	d
location	src/gba/elf.h	/^  ELFBlock *location;$/;"	m	struct:Member
location	src/gba/elf.h	/^  ELFBlock *location;$/;"	m	struct:Object
location	src/sdl/exprNode.h	/^  u32 location;$/;"	m	struct:Node
lock	src/win32/XAudio2.cpp	/^	CRITICAL_SECTION lock;$/;"	m	class:XAudio2_Device_Notifier	file:
lock	src/wx/panel.cpp	/^    wxMutex lock;$/;"	m	class:FilterThread	file:
lock	src/wx/xaudio2.cpp	/^	CRITICAL_SECTION lock;$/;"	m	class:XAudio2_Device_Notifier	file:
log	src/gtk/system.cpp	/^void log(const char *defaultMsg, ...)$/;"	f
log	src/sdl/SDL.cpp	/^void log(const char *defaultMsg, ...)$/;"	f
log	src/win32/Logging.cpp	/^void Logging::log(const char *s)$/;"	f	class:Logging
log	src/win32/VBA.cpp	/^void log(const char *msg, ...)$/;"	f
log	src/wx/sys.cpp	/^void log(const char *defaultMsg, ...)$/;"	f
log	src/wx/wxvbam.h	/^    wxString log;$/;"	m	class:wxvbamApp
log	src/wx/wxvbam.h	/^    wxTextCtrl *log;$/;"	m	class:LogDialog
logdlg	src/wx/wxvbam.h	/^    LogDialog *logdlg;$/;"	m	class:MainFrame
look	fex/fex/Zip7_Extractor.cpp	/^	CLookToRead look;$/;"	m	struct:Zip7_Extractor_Impl	file:
lowPC	src/gba/elf.h	/^  u32 lowPC;$/;"	m	struct:ARange
lowPC	src/gba/elf.h	/^  u32 lowPC;$/;"	m	struct:CompileUnit
lowPC	src/gba/elf.h	/^  u32 lowPC;$/;"	m	struct:Function
lowPixelMask	src/filters/2xSaI.cpp	/^static u32 lowPixelMask = 0x08210821;$/;"	v	file:
lowPixelMask	src/filters/2xSaImmx.asm	/^lowPixelMask  dd 0x08210821,0x08210821$/;"	d
low_pass	src/apu/Effects_Buffer.h	/^		fixed_t low_pass [stereo];$/;"	m	struct:Effects_Buffer::__anon131
lp	fex/7z_C/LzmaDec.h	/^  unsigned lc, lp, pb;$/;"	m	struct:_CLzmaProps
lq2x	src/filters/hq2x.cpp	/^void lq2x(u8 *srcPtr, u32 srcPitch, u8 * \/* deltaPtr *\/,$/;"	f
lq2x32	src/filters/hq2x.cpp	/^void lq2x32(u8 *srcPtr, u32 srcPitch, u8 * \/* deltaPtr *\/,$/;"	f
lq2x_16_def	src/filters/hq2x.cpp	/^static void lq2x_16_def(u16* dst0, u16* dst1, const u16* src0, const u16* src1, const u16* src2, unsigned count)$/;"	f	file:
lq2x_32_def	src/filters/hq2x.cpp	/^static void lq2x_32_def(u32* dst0, u32* dst1, const u32* src0, const u32* src1, const u32* src2, unsigned count)$/;"	f	file:
ls	src/gba/GBALink.cpp	/^lserver ls;$/;"	v
lserver	src/gba/GBALink.cpp	/^lserver::lserver(void){$/;"	f	class:lserver
lserver	src/gba/GBALink.h	/^class lserver{$/;"	c
mVoice	src/win32/XAudio2.cpp	/^	IXAudio2MasteringVoice *mVoice; \/\/ listener$/;"	m	class:XAudio2_Output	file:
mVoice	src/wx/xaudio2.cpp	/^	IXAudio2MasteringVoice *mVoice; \/\/ listener$/;"	m	class:XAudio2_Output	file:
m_Accels	src/win32/CmdAccelOb.h	/^  CList< CAccelsOb*, CAccelsOb*& > m_Accels;$/;"	m	class:CCmdAccelOb
m_Keys	src/win32/Joypad.h	/^  KeyList m_Keys;$/;"	m	class:JoypadEditControl
m_address	src/win32/Disassemble.h	/^  CEdit  m_address;$/;"	m	class:Disassemble
m_address	src/win32/GBACheats.h	/^  CEdit  m_address;$/;"	m	class:AddCheat
m_address	src/win32/GBCheatsDlg.h	/^  CEdit  m_address;$/;"	m	class:AddGBCheat
m_address	src/win32/GBDisassemble.h	/^  CEdit  m_address;$/;"	m	class:GBDisassemble
m_address	src/win32/GBMemoryViewerDlg.h	/^  CEdit  m_address;$/;"	m	class:GBMemoryViewerDlg
m_address	src/win32/IOViewer.h	/^  CComboBox  m_address;$/;"	m	class:IOViewer
m_address	src/win32/MemoryViewerAddressSize.h	/^  CEdit  m_address;$/;"	m	class:MemoryViewerAddressSize
m_address	src/win32/MemoryViewerDlg.h	/^  CEdit  m_address;$/;"	m	class:MemoryViewerDlg
m_addresses	src/win32/GBMemoryViewerDlg.h	/^  CComboBox  m_addresses;$/;"	m	class:GBMemoryViewerDlg
m_addresses	src/win32/MemoryViewerDlg.h	/^  CComboBox  m_addresses;$/;"	m	class:MemoryViewerDlg
m_agb	src/win32/Associate.h	/^  BOOL  m_agb;$/;"	m	class:Associate
m_agbprint	src/win32/Logging.h	/^	BOOL   m_agbprint;$/;"	m	class:Logging
m_alreadyAffected	src/win32/AccelEditor.h	/^  CStatic  m_alreadyAffected;$/;"	m	class:AccelEditor
m_apoLoadGameItem	src/gtk/window.h	/^  Gtk::MenuItem * m_apoLoadGameItem[10];$/;"	m	class:VBA::Window
m_apoSaveGameItem	src/gtk/window.h	/^  Gtk::MenuItem * m_apoSaveGameItem[10];$/;"	m	class:VBA::Window
m_apvFunc	src/gtk/filters.cpp	/^  Filter m_apvFunc[2];$/;"	m	struct:VBA::__anon126	file:
m_apvFunc	src/gtk/filters.cpp	/^  FilterIB m_apvFunc[2];$/;"	m	struct:VBA::__anon127	file:
m_astDirs	src/gtk/directoriesconfig.cpp	/^const DirectoriesConfigDialog::SDirEntry DirectoriesConfigDialog::m_astDirs[] =$/;"	m	class:VBA::DirectoriesConfigDialog	file:
m_astDirs	src/gtk/directoriesconfig.h	/^  static const SDirEntry    m_astDirs[];$/;"	m	class:VBA::DirectoriesConfigDialog
m_astGameSlot	src/gtk/window.h	/^  SGameSlot       m_astGameSlot[10];$/;"	m	class:VBA::Window
m_astJoypad	src/gtk/window.cpp	/^const Window::SJoypadKey Window::m_astJoypad[] =$/;"	m	class:VBA::Window	file:
m_astJoypad	src/gtk/window.h	/^  static const SJoypadKey m_astJoypad[];$/;"	m	class:VBA::Window
m_astKeys	src/gtk/joypadconfig.cpp	/^const JoypadConfigDialog::SJoypadKey JoypadConfigDialog::m_astKeys[] =$/;"	m	class:VBA::JoypadConfigDialog	file:
m_astKeys	src/gtk/joypadconfig.h	/^  static const SJoypadKey   m_astKeys[];$/;"	m	class:VBA::JoypadConfigDialog
m_audioBlockAlign	src/win32/AVIWrite.h	/^	WORD m_audioBlockAlign;$/;"	m	class:AVIWrite
m_audioCompSettings	src/win32/AVIWrite.h	/^	AVICOMPRESSOPTIONS m_audioCompSettings;$/;"	m	class:AVIWrite
m_audioCompressed	src/win32/AVIWrite.h	/^	PAVISTREAM m_audioCompressed;$/;"	m	class:AVIWrite
m_audioFrameSize	src/win32/AVIWrite.h	/^	LONG m_audioFrameSize;$/;"	m	class:AVIWrite
m_audioStream	src/win32/AVIWrite.h	/^	PAVISTREAM m_audioStream;$/;"	m	class:AVIWrite
m_bAltPressed	src/win32/KeyboardEdit.h	/^  bool m_bAltPressed;$/;"	m	class:CKeyboardEdit
m_bAutoFrameskip	src/gtk/window.h	/^  bool           m_bAutoFrameskip;$/;"	m	class:VBA::Window
m_bAutoSave	src/win32/AcceleratorManager.h	/^  bool m_bAutoSave;$/;"	m	class:CAcceleratorManager
m_bCtrlPressed	src/win32/KeyboardEdit.h	/^  bool m_bCtrlPressed;$/;"	m	class:CKeyboardEdit
m_bDefaultTable	src/win32/AcceleratorManager.h	/^  bool m_bDefaultTable;$/;"	m	class:CAcceleratorManager
m_bEmpty	src/gtk/window.h	/^    bool        m_bEmpty;$/;"	m	struct:VBA::Window::SGameSlot
m_bEnableRender	src/gtk/screenarea.h	/^  bool     m_bEnableRender;$/;"	m	class:VBA::ScreenArea
m_bFullscreen	src/gtk/window.h	/^  int m_bFullscreen;$/;"	m	class:VBA::Window
m_bKeyDefined	src/win32/KeyboardEdit.h	/^  bool m_bKeyDefined;$/;"	m	class:CKeyboardEdit
m_bLargestSet	src/win32/ResizeDlg.cpp	/^  bool m_bLargestSet;$/;"	m	struct:DialogData	file:
m_bLocked	src/win32/CmdAccelOb.h	/^  bool m_bLocked;$/;"	m	class:CAccelsOb
m_bMaximised	src/win32/ResizeDlg.cpp	/^  bool m_bMaximised;$/;"	m	struct:DialogData	file:
m_bPaused	src/gtk/window.h	/^  bool           m_bPaused;$/;"	m	class:VBA::Window
m_bShiftPressed	src/win32/KeyboardEdit.h	/^  bool m_bShiftPressed;$/;"	m	class:CKeyboardEdit
m_bShowCursor	src/gtk/screenarea.h	/^  bool             m_bShowCursor;$/;"	m	class:VBA::ScreenArea
m_bShowSizingGrip	src/win32/ResizeDlg.cpp	/^  BOOL m_bShowSizingGrip;$/;"	m	struct:DialogData	file:
m_bUpdating	src/gtk/joypadconfig.h	/^  bool                      m_bUpdating;$/;"	m	class:VBA::JoypadConfigDialog
m_bWasEmulating	src/gtk/window.h	/^  bool           m_bWasEmulating;$/;"	m	class:VBA::Window
m_bank	src/win32/GBTileView.h	/^  int    m_bank;$/;"	m	class:GBTileView
m_batteryPath	src/win32/Directories.h	/^	CEdit  m_batteryPath;$/;"	m	class:Directories
m_bin	src/win32/Associate.h	/^  BOOL  m_bin;$/;"	m	class:Associate
m_bufferInfo	src/win32/OALConfig.h	/^	CStatic m_bufferInfo;$/;"	m	class:OALConfig
m_buffer_count	src/win32/XAudio2_Config.h	/^	UINT32 m_buffer_count;$/;"	m	class:XAudio2_Config
m_c	src/win32/Disassemble.h	/^  BOOL  m_c;$/;"	m	class:Disassemble
m_c	src/win32/GBDisassemble.h	/^  BOOL  m_c;$/;"	m	class:GBDisassemble
m_cVirt	src/win32/CmdAccelOb.h	/^  BYTE m_cVirt;$/;"	m	class:CAccelsOb
m_capturePath	src/win32/Directories.h	/^	CEdit  m_capturePath;$/;"	m	class:Directories
m_cbDevice	src/win32/OALConfig.h	/^	CComboBox m_cbDevice;$/;"	m	class:OALConfig
m_cgb	src/win32/Associate.h	/^  BOOL  m_cgb;$/;"	m	class:Associate
m_charBase	src/win32/GBTileView.h	/^  int    m_charBase;$/;"	m	class:GBTileView
m_charBase	src/win32/TileView.h	/^  int    m_charBase;$/;"	m	class:TileView
m_charbase	src/win32/MapView.h	/^  CStatic  m_charbase;$/;"	m	class:MapView
m_check_upmix	src/win32/XAudio2_Config.h	/^	CButton m_check_upmix;$/;"	m	class:XAudio2_Config
m_code	src/win32/GBACheats.h	/^  CEdit  m_code;$/;"	m	class:AddCBACode
m_code	src/win32/GBACheats.h	/^  CEdit  m_code;$/;"	m	class:AddCheatCode
m_code	src/win32/GBACheats.h	/^  CEdit  m_code;$/;"	m	class:AddGSACode
m_code	src/win32/GBCheatsDlg.h	/^  CEdit  m_code;$/;"	m	class:AddGBCode
m_codeVal	src/win32/GBCheatsDlg.h	/^  CString m_codeVal;$/;"	m	class:AddGBCode
m_colorDepth	src/win32/FullscreenSettings.h	/^	unsigned int m_colorDepth;$/;"	m	class:FullscreenSettings
m_colors	src/win32/TileView.h	/^  int    m_colors;$/;"	m	class:TileView
m_comboPlugin	src/win32/SelectPlugin.h	/^	CComboBox	m_comboPlugin;$/;"	m	class:SelectPlugin
m_combo_dev	src/win32/XAudio2_Config.h	/^	CComboBox m_combo_dev;$/;"	m	class:XAudio2_Config
m_commands	src/win32/AccelEditor.h	/^  CListBox  m_commands;$/;"	m	class:AccelEditor
m_comment	src/win32/GameOverrides.h	/^	CEdit m_comment;$/;"	m	class:GameOverrides
m_csFileChooserButton	src/gtk/directoriesconfig.h	/^    const char * m_csFileChooserButton;$/;"	m	struct:VBA::DirectoriesConfigDialog::SDirEntry
m_csKey	src/gtk/directoriesconfig.h	/^    const char * m_csKey;$/;"	m	struct:VBA::DirectoriesConfigDialog::SDirEntry
m_csKey	src/gtk/window.h	/^  	const char * m_csKey;$/;"	m	struct:VBA::Window::SJoypadKey
m_csKeyName	src/gtk/joypadconfig.h	/^	const char * m_csKeyName;$/;"	m	struct:VBA::JoypadConfigDialog::SJoypadKey
m_csLabel	src/gtk/directoriesconfig.h	/^    const char * m_csLabel;$/;"	m	struct:VBA::DirectoriesConfigDialog::SDirEntry
m_csName	src/gtk/filters.cpp	/^  char m_csName[30];$/;"	m	struct:VBA::__anon126	file:
m_csName	src/gtk/filters.cpp	/^  char m_csName[30];$/;"	m	struct:VBA::__anon127	file:
m_current	src/win32/GBMemoryViewerDlg.h	/^  CEdit  m_current;$/;"	m	class:GBMemoryViewerDlg
m_current	src/win32/MemoryViewerDlg.h	/^  CEdit  m_current;$/;"	m	class:MemoryViewerDlg
m_currents	src/win32/AccelEditor.h	/^  CListBox  m_currents;$/;"	m	class:AccelEditor
m_cursor	src/win32/Hyperlink.h	/^	HCURSOR m_cursor;$/;"	m	class:Hyperlink
m_dScaleFactor	src/gtk/screenarea-cairo.h	/^  double   m_dScaleFactor;$/;"	m	class:VBA::ScreenAreaCairo
m_date	src/win32/AboutDialog.h	/^	CString   m_date;$/;"	m	class:AboutDialog
m_declicking	src/win32/AudioCoreSettingsDlg.h	/^	bool m_declicking;$/;"	m	class:AudioCoreSettingsDlg
m_delim	src/win32/StringTokenizer.h	/^  CString m_delim;$/;"	m	class:StringTokenizer
m_desc	src/win32/ExportGSASnapshot.h	/^  CString  m_desc;$/;"	m	class:ExportGSASnapshot
m_desc	src/win32/GBACheats.h	/^  CEdit  m_desc;$/;"	m	class:AddCBACode
m_desc	src/win32/GBACheats.h	/^  CEdit  m_desc;$/;"	m	class:AddCheat
m_desc	src/win32/GBACheats.h	/^  CEdit  m_desc;$/;"	m	class:AddCheatCode
m_desc	src/win32/GBACheats.h	/^  CEdit  m_desc;$/;"	m	class:AddGSACode
m_desc	src/win32/GBCheatsDlg.h	/^  CEdit  m_desc;$/;"	m	class:AddGBCheat
m_desc	src/win32/GBCheatsDlg.h	/^  CEdit  m_desc;$/;"	m	class:AddGBCode
m_descVal	src/win32/GBCheatsDlg.h	/^  CString m_descVal;$/;"	m	class:AddGBCode
m_device	src/win32/FullscreenSettings.h	/^	unsigned int m_device;$/;"	m	class:FullscreenSettings
m_dim	src/win32/MapView.h	/^  CStatic  m_dim;$/;"	m	class:MapView
m_dma0	src/win32/Logging.h	/^	BOOL   m_dma0;$/;"	m	class:Logging
m_dma1	src/win32/Logging.h	/^	BOOL   m_dma1;$/;"	m	class:Logging
m_dma2	src/win32/Logging.h	/^	BOOL   m_dma2;$/;"	m	class:Logging
m_dma3	src/win32/Logging.h	/^	BOOL   m_dma3;$/;"	m	class:Logging
m_dmg	src/win32/Associate.h	/^  BOOL  m_dmg;$/;"	m	class:Associate
m_eCartridge	src/gtk/window.h	/^  ECartridge     m_eCartridge;$/;"	m	class:VBA::Window
m_eKeyFlag	src/gtk/joypadconfig.h	/^	const EKey   m_eKeyFlag;$/;"	m	struct:VBA::JoypadConfigDialog::SJoypadKey
m_eKeyFlag	src/gtk/window.h	/^  	const EKey   m_eKeyFlag;$/;"	m	struct:VBA::Window::SJoypadKey
m_ePad	src/gtk/joypadconfig.h	/^  EPad                      m_ePad;$/;"	m	class:VBA::JoypadConfigDialog
m_eShowSpeed	src/gtk/window.h	/^  EShowSpeed     m_eShowSpeed;$/;"	m	class:VBA::Window
m_echo	src/win32/AudioCoreSettingsDlg.h	/^	float m_echo;$/;"	m	class:AudioCoreSettingsDlg
m_editGB	src/win32/BIOSDialog.h	/^	CEdit m_editGB;$/;"	m	class:BIOSDialog
m_editGBA	src/win32/BIOSDialog.h	/^	CEdit m_editGBA;$/;"	m	class:BIOSDialog
m_editGBC	src/win32/BIOSDialog.h	/^	CEdit m_editGBC;$/;"	m	class:BIOSDialog
m_enableBIOS_GB	src/win32/BIOSDialog.h	/^	BOOL m_enableBIOS_GB;$/;"	m	class:BIOSDialog
m_enableBIOS_GBA	src/win32/BIOSDialog.h	/^	BOOL m_enableBIOS_GBA;$/;"	m	class:BIOSDialog
m_enableBIOS_GBC	src/win32/BIOSDialog.h	/^	BOOL m_enableBIOS_GBC;$/;"	m	class:BIOSDialog
m_enable_upmixing	src/win32/XAudio2_Config.h	/^	bool m_enable_upmixing;$/;"	m	class:XAudio2_Config
m_enabled	src/win32/AudioCoreSettingsDlg.h	/^	bool m_enabled;$/;"	m	class:AudioCoreSettingsDlg
m_f	src/win32/Disassemble.h	/^  BOOL  m_f;$/;"	m	class:Disassemble
m_fSoundVolumeMax	src/gtk/window.h	/^  const float m_fSoundVolumeMax;$/;"	m	class:VBA::Window
m_fSoundVolumeMin	src/gtk/window.h	/^  const float m_fSoundVolumeMin;$/;"	m	class:VBA::Window
m_failed	src/win32/AVIWrite.h	/^	bool m_failed;$/;"	m	class:AVIWrite
m_file	src/win32/AVIWrite.h	/^	PAVIFILE m_file;$/;"	m	class:AVIWrite
m_file	src/win32/FileDlg.h	/^  CString m_file;$/;"	m	class:FileDlg
m_file	src/win32/GSACodeSelect.h	/^  FILE *m_file;$/;"	m	class:GSACodeSelect
m_file	src/win32/WavWriter.h	/^  FILE *m_file;$/;"	m	class:WavWriter
m_filename	src/win32/ExportGSASnapshot.h	/^  CString m_filename;$/;"	m	class:ExportGSASnapshot
m_filter	src/win32/FileDlg.h	/^  CString m_filter;$/;"	m	class:FileDlg
m_flashSize	src/win32/GameOverrides.h	/^	CComboBox	m_flashSize;$/;"	m	class:GameOverrides
m_frameCounter	src/win32/AVIWrite.h	/^	LONG m_frameCounter;$/;"	m	class:AVIWrite
m_frameRate	src/win32/AVIWrite.h	/^	DWORD m_frameRate;$/;"	m	class:AVIWrite
m_games	src/win32/GSACodeSelect.h	/^  CListBox  m_games;$/;"	m	class:GSACodeSelect
m_gb	src/win32/Associate.h	/^  BOOL  m_gb;$/;"	m	class:Associate
m_gba	src/win32/Associate.h	/^  BOOL  m_gba;$/;"	m	class:Associate
m_gbc	src/win32/Associate.h	/^  BOOL  m_gbc;$/;"	m	class:Associate
m_gbcromPath	src/win32/Directories.h	/^	CEdit  m_gbcromPath;$/;"	m	class:Directories
m_gbromPath	src/win32/Directories.h	/^	CEdit  m_gbromPath;$/;"	m	class:Directories
m_h	src/win32/GBDisassemble.h	/^  BOOL  m_h;$/;"	m	class:GBDisassemble
m_hAccelTable	src/win32/MainWnd.h	/^	HACCEL m_hAccelTable;$/;"	m	class:MainWnd
m_hRegKey	src/win32/AcceleratorManager.h	/^  HKEY m_hRegKey;$/;"	m	class:CAcceleratorManager
m_hacks	src/win32/LinkOptions.h	/^	int		m_hacks;$/;"	m	class:LinkClient
m_hdlDef	src/win32/WinHelper.h	/^      HDWP m_hdlDef;$/;"	m	class:WinHelper::CDeferWindowPos
m_height	src/win32/FullscreenSettings.h	/^	unsigned int m_height;$/;"	m	class:FullscreenSettings
m_i	src/win32/Disassemble.h	/^  BOOL  m_i;$/;"	m	class:Disassemble
m_iAreaHeight	src/gtk/screenarea.h	/^  int      m_iAreaHeight;$/;"	m	class:VBA::ScreenArea
m_iAreaLeft	src/gtk/screenarea-cairo.h	/^  int      m_iAreaLeft;$/;"	m	class:VBA::ScreenAreaCairo
m_iAreaTop	src/gtk/screenarea-cairo.h	/^  int      m_iAreaTop;$/;"	m	class:VBA::ScreenAreaCairo
m_iAreaWidth	src/gtk/screenarea.h	/^  int      m_iAreaWidth;$/;"	m	class:VBA::ScreenArea
m_iCurrentEntry	src/gtk/joypadconfig.h	/^  gint                      m_iCurrentEntry;$/;"	m	class:VBA::JoypadConfigDialog
m_iEmulatorTypeMax	src/gtk/window.h	/^  const int m_iEmulatorTypeMax;$/;"	m	class:VBA::Window
m_iEmulatorTypeMin	src/gtk/window.h	/^  const int m_iEmulatorTypeMin;$/;"	m	class:VBA::Window
m_iEnlargeFactor	src/gtk/filters.cpp	/^  int m_iEnlargeFactor;$/;"	m	struct:VBA::__anon126	file:
m_iFilter2xMax	src/gtk/window.h	/^  const int m_iFilter2xMax;$/;"	m	class:VBA::Window
m_iFilter2xMin	src/gtk/window.h	/^  const int m_iFilter2xMin;$/;"	m	class:VBA::Window
m_iFilterIBMax	src/gtk/window.h	/^  const int m_iFilterIBMax;$/;"	m	class:VBA::Window
m_iFilterIBMin	src/gtk/window.h	/^  const int m_iFilterIBMin;$/;"	m	class:VBA::Window
m_iFilterScale	src/gtk/screenarea.h	/^  int      m_iFilterScale;$/;"	m	class:VBA::ScreenArea
m_iFrameCount	src/gtk/window.h	/^  int m_iFrameCount;$/;"	m	class:VBA::Window
m_iFrameskipMax	src/gtk/window.h	/^  const int m_iFrameskipMax;$/;"	m	class:VBA::Window
m_iFrameskipMin	src/gtk/window.h	/^  const int m_iFrameskipMin;$/;"	m	class:VBA::Window
m_iGBAScreenHeight	src/gtk/window.h	/^  const int m_iGBAScreenHeight;$/;"	m	class:VBA::Window
m_iGBAScreenWidth	src/gtk/window.h	/^  const int m_iGBAScreenWidth;$/;"	m	class:VBA::Window
m_iGBScreenHeight	src/gtk/window.h	/^  const int m_iGBScreenHeight;$/;"	m	class:VBA::Window
m_iGBScreenWidth	src/gtk/window.h	/^  const int m_iGBScreenWidth;$/;"	m	class:VBA::Window
m_iHeight	src/gtk/screenarea.h	/^  int      m_iHeight;$/;"	m	class:VBA::ScreenArea
m_iJoypadMax	src/gtk/window.h	/^  const EPad m_iJoypadMax;$/;"	m	class:VBA::Window
m_iJoypadMin	src/gtk/window.h	/^  const EPad m_iJoypadMin;$/;"	m	class:VBA::Window
m_iSGBScreenHeight	src/gtk/window.h	/^  const int m_iSGBScreenHeight;$/;"	m	class:VBA::Window
m_iSGBScreenWidth	src/gtk/window.h	/^  const int m_iSGBScreenWidth;$/;"	m	class:VBA::Window
m_iSaveTypeMax	src/gtk/window.h	/^  const int m_iSaveTypeMax;$/;"	m	class:VBA::Window
m_iSaveTypeMin	src/gtk/window.h	/^  const int m_iSaveTypeMin;$/;"	m	class:VBA::Window
m_iScale	src/gtk/screenarea.h	/^  int      m_iScale;$/;"	m	class:VBA::ScreenArea
m_iScaleMax	src/gtk/window.h	/^  const int m_iScaleMax;$/;"	m	class:VBA::Window
m_iScaleMin	src/gtk/window.h	/^  const int m_iScaleMin;$/;"	m	class:VBA::Window
m_iScaledHeight	src/gtk/screenarea.h	/^  int      m_iScaledHeight;$/;"	m	class:VBA::ScreenArea
m_iScaledWidth	src/gtk/screenarea.h	/^  int      m_iScaledWidth;$/;"	m	class:VBA::ScreenArea
m_iScreenHeight	src/gtk/window.h	/^  int m_iScreenHeight;$/;"	m	class:VBA::Window
m_iScreenWidth	src/gtk/window.h	/^  int m_iScreenWidth;$/;"	m	class:VBA::Window
m_iShowSpeedMax	src/gtk/window.h	/^  const int m_iShowSpeedMax;$/;"	m	class:VBA::Window
m_iShowSpeedMin	src/gtk/window.h	/^  const int m_iShowSpeedMin;$/;"	m	class:VBA::Window
m_iSoundSampleRateMax	src/gtk/window.h	/^  const int m_iSoundSampleRateMax;$/;"	m	class:VBA::Window
m_iSoundSampleRateMin	src/gtk/window.h	/^  const int m_iSoundSampleRateMin;$/;"	m	class:VBA::Window
m_iTextureSize	src/gtk/screenarea-opengl.h	/^  int m_iTextureSize;$/;"	m	class:VBA::ScreenAreaGl
m_iVideoOutputMax	src/gtk/window.h	/^  const int m_iVideoOutputMax;$/;"	m	class:VBA::Window
m_iVideoOutputMin	src/gtk/window.h	/^  const int m_iVideoOutputMin;$/;"	m	class:VBA::Window
m_iWidth	src/gtk/screenarea.h	/^  int      m_iWidth;$/;"	m	class:VBA::ScreenArea
m_illegal_read	src/win32/Logging.h	/^	BOOL   m_illegal_read;$/;"	m	class:Logging
m_illegal_write	src/win32/Logging.h	/^	BOOL   m_illegal_write;$/;"	m	class:Logging
m_imageList	src/wx/widgets/wx/checkedlistctrl.h	/^	wxImageList m_imageList;$/;"	m	class:wxCheckedListCtrl
m_info_buffer	src/win32/XAudio2_Config.h	/^	CStatic m_info_buffer;$/;"	m	class:XAudio2_Config
m_interval	src/win32/RewindInterval.h	/^  CEdit  m_interval;$/;"	m	class:RewindInterval
m_key	src/win32/AccelEditor.h	/^  CKeyboardEdit  m_key;$/;"	m	class:AccelEditor
m_langName	src/win32/LangSelect.h	/^  CStatic  m_langName;$/;"	m	class:LangSelect
m_langString	src/win32/LangSelect.h	/^  CEdit  m_langString;$/;"	m	class:LangSelect
m_len	src/win32/WavWriter.h	/^  int m_len;$/;"	m	class:WavWriter
m_link	src/win32/AboutDialog.h	/^	Hyperlink m_link;$/;"	m	class:AboutDialog
m_list	src/win32/Disassemble.h	/^  CListBox  m_list;$/;"	m	class:Disassemble
m_list	src/win32/GBACheats.h	/^  CListCtrl  m_list;$/;"	m	class:GBACheatList
m_list	src/win32/GBACheats.h	/^  CListCtrl  m_list;$/;"	m	class:GBACheatSearch
m_list	src/win32/GBCheatsDlg.h	/^  CListCtrl  m_list;$/;"	m	class:GBCheatList
m_list	src/win32/GBCheatsDlg.h	/^  CListCtrl  m_list;$/;"	m	class:GBCheatSearch
m_list	src/win32/GBDisassemble.h	/^  CListBox  m_list;$/;"	m	class:GBDisassemble
m_listSensitiveWhenPlaying	src/gtk/window.h	/^  std::list<Gtk::Widget *> m_listSensitiveWhenPlaying;$/;"	m	class:VBA::Window
m_log	src/win32/Logging.h	/^	CEdit  m_log;$/;"	m	class:Logging
m_mapAccelString	src/win32/AcceleratorManager.h	/^  CMapStringToWord m_mapAccelString;$/;"	m	class:CAcceleratorManager
m_mapAccelTable	src/win32/AcceleratorManager.h	/^  CMapWordToCCmdAccelOb m_mapAccelTable;$/;"	m	class:CAcceleratorManager
m_mapAccelTableSaved	src/win32/AcceleratorManager.h	/^  CMapWordToCCmdAccelOb m_mapAccelTableSaved;$/;"	m	class:CAcceleratorManager
m_mapbase	src/win32/MapView.h	/^  CStatic  m_mapbase;$/;"	m	class:MapView
m_menu	src/win32/VBA.h	/^  CMenu m_menu;$/;"	m	class:VBA
m_mirroring	src/win32/GameOverrides.h	/^	CComboBox	m_mirroring;$/;"	m	class:GameOverrides
m_mode	src/win32/MapView.h	/^  CStatic  m_mode;$/;"	m	class:MapView
m_mosaic	src/win32/MapView.h	/^  CStatic  m_mosaic;$/;"	m	class:MapView
m_n	src/win32/Disassemble.h	/^  BOOL  m_n;$/;"	m	class:Disassemble
m_n	src/win32/GBDisassemble.h	/^  BOOL  m_n;$/;"	m	class:GBDisassemble
m_name	src/win32/GameOverrides.h	/^	CEdit	m_name;$/;"	m	class:GameOverrides
m_notes	src/win32/ExportGSASnapshot.h	/^  CString  m_notes;$/;"	m	class:ExportGSASnapshot
m_numcolors	src/win32/MapView.h	/^  CStatic  m_numcolors;$/;"	m	class:MapView
m_numplayers	src/win32/LinkOptions.h	/^	int		m_numplayers;$/;"	m	class:LinkServer
m_oConfig	src/gtk/window.h	/^  Config::File      m_oConfig;$/;"	m	class:VBA::Window
m_oConfigSig	src/gtk/joypadconfig.h	/^  sigc::connection          m_oConfigSig;$/;"	m	class:VBA::JoypadConfigDialog
m_oCursorSig	src/gtk/screenarea.h	/^  sigc::connection m_oCursorSig;$/;"	m	class:VBA::ScreenArea
m_oDefaultJoypad	src/gtk/joypadconfig.h	/^  Gtk::CheckButton          m_oDefaultJoypad;$/;"	m	class:VBA::JoypadConfigDialog
m_oEmuSig	src/gtk/window.h	/^  sigc::connection m_oEmuSig;$/;"	m	class:VBA::Window
m_oEntries	src/gtk/joypadconfig.h	/^  std::vector<Gtk::Entry *> m_oEntries;$/;"	m	class:VBA::JoypadConfigDialog
m_oPreviousEvent	src/gtk/joypadconfig.h	/^  SDL_Event                 m_oPreviousEvent;$/;"	m	class:VBA::JoypadConfigDialog
m_oRecordModel	src/gtk/cheatlist.h	/^  ListCheatCodeColumns          m_oRecordModel;$/;"	m	class:VBA::CheatListDialog
m_oSeparator	src/gtk/joypadconfig.h	/^  Gtk::HSeparator           m_oSeparator;$/;"	m	class:VBA::JoypadConfigDialog
m_oTable	src/gtk/joypadconfig.h	/^  Gtk::Table                m_oTable;$/;"	m	class:VBA::JoypadConfigDialog
m_oTitleCombo	src/gtk/joypadconfig.h	/^  Gtk::ComboBoxText         m_oTitleCombo;$/;"	m	class:VBA::JoypadConfigDialog
m_oTitleHBox	src/gtk/joypadconfig.h	/^  Gtk::HBox                 m_oTitleHBox;$/;"	m	class:VBA::JoypadConfigDialog
m_oTitleLabel	src/gtk/joypadconfig.h	/^  Gtk::Label                m_oTitleLabel;$/;"	m	class:VBA::JoypadConfigDialog
m_oTypeModel	src/gtk/cheatedit.h	/^  EditCheatCodeColumns          m_oTypeModel;$/;"	m	class:VBA::CheatEditDialog
m_ofn	src/win32/FileDlg.h	/^  OPENFILENAMEEX m_ofn;$/;"	m	class:FileDlg
m_onlyOneLine	src/win32/GBCheatsDlg.h	/^  bool m_onlyOneLine;$/;"	m	class:AddGBCode
m_over	src/win32/Hyperlink.h	/^	bool m_over;$/;"	m	class:Hyperlink
m_overflow	src/win32/MapView.h	/^  CStatic  m_overflow;$/;"	m	class:MapView
m_pWndConnected	src/win32/AcceleratorManager.h	/^  CWnd *m_pWndConnected;$/;"	m	class:CAcceleratorManager
m_pathGB	src/win32/BIOSDialog.h	/^	CString m_pathGB;$/;"	m	class:BIOSDialog
m_pathGBA	src/win32/BIOSDialog.h	/^	CString m_pathGBA;$/;"	m	class:BIOSDialog
m_pathGBC	src/win32/BIOSDialog.h	/^	CString m_pathGBC;$/;"	m	class:BIOSDialog
m_plconn	src/win32/LinkOptions.h	/^	CString	m_plconn[3];$/;"	m	class:ServerWait
m_poBiosCheckButton	src/gtk/gameboyadvanceconfig.h	/^  Gtk::CheckButton *        m_poBiosCheckButton;$/;"	m	class:VBA::GameBoyAdvanceConfigDialog
m_poBiosFileChooserButton	src/gtk/gameboyadvanceconfig.h	/^  Gtk::FileChooserButton *  m_poBiosFileChooserButton;$/;"	m	class:VBA::GameBoyAdvanceConfigDialog
m_poBootRomCheckButton	src/gtk/gameboyconfig.h	/^  Gtk::CheckButton *        m_poBootRomCheckButton;$/;"	m	class:VBA::GameBoyConfigDialog
m_poBootRomFileChooserButton	src/gtk/gameboyconfig.h	/^  Gtk::FileChooserButton *  m_poBootRomFileChooserButton;$/;"	m	class:VBA::GameBoyConfigDialog
m_poBorderCheckButton	src/gtk/gameboyconfig.h	/^  Gtk::CheckButton *        m_poBorderCheckButton;$/;"	m	class:VBA::GameBoyConfigDialog
m_poButtons	src/gtk/directoriesconfig.h	/^  Gtk::FileChooserButton *  m_poButtons[6];$/;"	m	class:VBA::DirectoriesConfigDialog
m_poCheatAddButton	src/gtk/cheatlist.h	/^  Gtk::ToolButton *             m_poCheatAddButton;$/;"	m	class:VBA::CheatListDialog
m_poCheatApplyButton	src/gtk/cheatedit.h	/^  Gtk::Button *                 m_poCheatApplyButton;$/;"	m	class:VBA::CheatEditDialog
m_poCheatCancelButton	src/gtk/cheatedit.h	/^  Gtk::Button *                 m_poCheatCancelButton;$/;"	m	class:VBA::CheatEditDialog
m_poCheatDescEntry	src/gtk/cheatedit.h	/^  Gtk::Entry *                  m_poCheatDescEntry;$/;"	m	class:VBA::CheatEditDialog
m_poCheatInputBuffer	src/gtk/cheatedit.h	/^  Glib::RefPtr<Gtk::TextBuffer> m_poCheatInputBuffer;$/;"	m	class:VBA::CheatEditDialog
m_poCheatInputTextView	src/gtk/cheatedit.h	/^  Gtk::TextView *               m_poCheatInputTextView;$/;"	m	class:VBA::CheatEditDialog
m_poCheatListStore	src/gtk/cheatlist.h	/^  Glib::RefPtr<Gtk::ListStore>  m_poCheatListStore;$/;"	m	class:VBA::CheatListDialog
m_poCheatMarkAllButton	src/gtk/cheatlist.h	/^  Gtk::ToolButton *             m_poCheatMarkAllButton;$/;"	m	class:VBA::CheatListDialog
m_poCheatOpenButton	src/gtk/cheatlist.h	/^  Gtk::ToolButton *             m_poCheatOpenButton;$/;"	m	class:VBA::CheatListDialog
m_poCheatRemoveAllButton	src/gtk/cheatlist.h	/^  Gtk::ToolButton *             m_poCheatRemoveAllButton;$/;"	m	class:VBA::CheatListDialog
m_poCheatRemoveButton	src/gtk/cheatlist.h	/^  Gtk::ToolButton *             m_poCheatRemoveButton;$/;"	m	class:VBA::CheatListDialog
m_poCheatSaveButton	src/gtk/cheatlist.h	/^  Gtk::ToolButton *             m_poCheatSaveButton;$/;"	m	class:VBA::CheatListDialog
m_poCheatTreeView	src/gtk/cheatlist.h	/^  Gtk::TreeView *               m_poCheatTreeView;$/;"	m	class:VBA::CheatListDialog
m_poCheatTypeComboBox	src/gtk/cheatedit.h	/^  Gtk::ComboBox *               m_poCheatTypeComboBox;$/;"	m	class:VBA::CheatEditDialog
m_poCheatTypeStore	src/gtk/cheatedit.h	/^  Glib::RefPtr<Gtk::ListStore>  m_poCheatTypeStore;$/;"	m	class:VBA::CheatEditDialog
m_poConfig	src/gtk/directoriesconfig.h	/^  Config::Section *         m_poConfig;$/;"	m	class:VBA::DirectoriesConfigDialog
m_poConfig	src/gtk/displayconfig.h	/^  Config::Section *         m_poConfig;$/;"	m	class:VBA::DisplayConfigDialog
m_poConfig	src/gtk/gameboyadvanceconfig.h	/^  Config::Section *         m_poConfig;$/;"	m	class:VBA::GameBoyAdvanceConfigDialog
m_poConfig	src/gtk/gameboyconfig.h	/^  Config::Section *         m_poConfig;$/;"	m	class:VBA::GameBoyConfigDialog
m_poConfig	src/gtk/generalconfig.h	/^  Config::Section *         m_poConfig;$/;"	m	class:VBA::PreferencesDialog
m_poConfig	src/gtk/joypadconfig.h	/^  Config::Section *         m_poConfig;$/;"	m	class:VBA::JoypadConfigDialog
m_poConfig	src/gtk/soundconfig.h	/^  Config::Section *         m_poConfig;$/;"	m	class:VBA::SoundConfigDialog
m_poCoreConfig	src/gtk/window.h	/^  Config::Section * m_poCoreConfig;$/;"	m	class:VBA::Window
m_poDefaultScaleComboBox	src/gtk/displayconfig.h	/^  Gtk::ComboBox *           m_poDefaultScaleComboBox;$/;"	m	class:VBA::DisplayConfigDialog
m_poDirConfig	src/gtk/window.h	/^  Config::Section * m_poDirConfig;$/;"	m	class:VBA::Window
m_poDisplayConfig	src/gtk/window.h	/^  Config::Section * m_poDisplayConfig;$/;"	m	class:VBA::Window
m_poEmptyCursor	src/gtk/screenarea.h	/^  Gdk::Cursor *    m_poEmptyCursor;$/;"	m	class:VBA::ScreenArea
m_poFileOpenDialog	src/gtk/window.h	/^  Gtk::FileChooserDialog * m_poFileOpenDialog;$/;"	m	class:VBA::Window
m_poFilePauseItem	src/gtk/window.h	/^  Gtk::CheckMenuItem * m_poFilePauseItem;$/;"	m	class:VBA::Window
m_poFiltersComboBox	src/gtk/displayconfig.h	/^  Gtk::ComboBox *           m_poFiltersComboBox;$/;"	m	class:VBA::DisplayConfigDialog
m_poFlashSizeComboBox	src/gtk/gameboyadvanceconfig.h	/^  Gtk::ComboBox *           m_poFlashSizeComboBox; $/;"	m	class:VBA::GameBoyAdvanceConfigDialog
m_poFrameSkipAutomaticCheckButton	src/gtk/generalconfig.h	/^  Gtk::CheckButton *        m_poFrameSkipAutomaticCheckButton;$/;"	m	class:VBA::PreferencesDialog
m_poFrameSkipLevelSpinButton	src/gtk/generalconfig.h	/^  Gtk::SpinButton *         m_poFrameSkipLevelSpinButton;$/;"	m	class:VBA::PreferencesDialog
m_poIBFiltersComboBox	src/gtk/displayconfig.h	/^  Gtk::ComboBox *           m_poIBFiltersComboBox;$/;"	m	class:VBA::DisplayConfigDialog
m_poInputConfig	src/gtk/window.h	/^  Config::Section * m_poInputConfig;$/;"	m	class:VBA::Window
m_poInstance	src/gtk/window.cpp	/^Window * Window::m_poInstance = NULL;$/;"	m	class:VBA::Window	file:
m_poInstance	src/gtk/window.h	/^  static Window * m_poInstance;$/;"	m	class:VBA::Window
m_poMenuBar	src/gtk/window.h	/^  Gtk::MenuBar *       m_poMenuBar;$/;"	m	class:VBA::Window
m_poOkButton	src/gtk/joypadconfig.h	/^  Gtk::Button *             m_poOkButton;$/;"	m	class:VBA::JoypadConfigDialog
m_poOutputCairoRadioButton	src/gtk/displayconfig.h	/^  Gtk::RadioButton *        m_poOutputCairoRadioButton;$/;"	m	class:VBA::DisplayConfigDialog
m_poOutputOpenGLRadioButton	src/gtk/displayconfig.h	/^  Gtk::RadioButton *        m_poOutputOpenGLRadioButton;$/;"	m	class:VBA::DisplayConfigDialog
m_poPauseWhenInactiveCheckButton	src/gtk/generalconfig.h	/^  Gtk::CheckButton *        m_poPauseWhenInactiveCheckButton;$/;"	m	class:VBA::PreferencesDialog
m_poPrinterCheckButton	src/gtk/gameboyconfig.h	/^  Gtk::CheckButton *        m_poPrinterCheckButton;$/;"	m	class:VBA::GameBoyConfigDialog
m_poRTCCheckButton	src/gtk/gameboyadvanceconfig.h	/^  Gtk::CheckButton *        m_poRTCCheckButton;$/;"	m	class:VBA::GameBoyAdvanceConfigDialog
m_poRateComboBox	src/gtk/soundconfig.h	/^  Gtk::ComboBox *           m_poRateComboBox;$/;"	m	class:VBA::SoundConfigDialog
m_poRecentChooserMenu	src/gtk/window.h	/^  Gtk::RecentChooserMenu *         m_poRecentChooserMenu;$/;"	m	class:VBA::Window
m_poRecentManager	src/gtk/window.h	/^  Glib::RefPtr<Gtk::RecentManager> m_poRecentManager;$/;"	m	class:VBA::Window
m_poRecentMenu	src/gtk/window.h	/^  Gtk::MenuItem *                  m_poRecentMenu;$/;"	m	class:VBA::Window
m_poSaveTypeComboBox	src/gtk/gameboyadvanceconfig.h	/^  Gtk::ComboBox *           m_poSaveTypeComboBox;$/;"	m	class:VBA::GameBoyAdvanceConfigDialog
m_poScreenArea	src/gtk/window.h	/^  ScreenArea *         m_poScreenArea;$/;"	m	class:VBA::Window
m_poSoundConfig	src/gtk/window.h	/^  Config::Section * m_poSoundConfig;$/;"	m	class:VBA::Window
m_poSpeedIndicatorComboBox	src/gtk/generalconfig.h	/^  Gtk::ComboBox *           m_poSpeedIndicatorComboBox;$/;"	m	class:VBA::PreferencesDialog
m_poSystemComboBox	src/gtk/gameboyconfig.h	/^  Gtk::ComboBox *           m_poSystemComboBox;$/;"	m	class:VBA::GameBoyConfigDialog
m_poVolumeComboBox	src/gtk/soundconfig.h	/^  Gtk::ComboBox *           m_poVolumeComboBox;$/;"	m	class:VBA::SoundConfigDialog
m_poWindow	src/gtk/cheatedit.h	/^  VBA::Window *                 m_poWindow;$/;"	m	class:VBA::CheatEditDialog
m_poWindow	src/gtk/cheatlist.h	/^  VBA::Window *                 m_poWindow;$/;"	m	class:VBA::CheatListDialog
m_poWindow	src/gtk/displayconfig.h	/^  VBA::Window *             m_poWindow;$/;"	m	class:VBA::DisplayConfigDialog
m_poWindow	src/gtk/gameboyadvanceconfig.h	/^  VBA::Window *             m_poWindow;$/;"	m	class:VBA::GameBoyAdvanceConfigDialog
m_poWindow	src/gtk/gameboyconfig.h	/^  VBA::Window *             m_poWindow;$/;"	m	class:VBA::GameBoyConfigDialog
m_poWindow	src/gtk/generalconfig.h	/^  VBA::Window *             m_poWindow;$/;"	m	class:VBA::PreferencesDialog
m_poWindow	src/gtk/soundconfig.h	/^  VBA::Window *             m_poWindow;$/;"	m	class:VBA::SoundConfigDialog
m_poXml	src/gtk/window.h	/^  Glib::RefPtr<Gtk::Builder> m_poXml;$/;"	m	class:VBA::Window
m_port	src/win32/GDBConnection.h	/^  CEdit  m_port;$/;"	m	class:GDBPortDlg
m_port	src/win32/GDBConnection.h	/^  CStatic  m_port;$/;"	m	class:GDBWaitingDlg
m_posSize	src/win32/WavWriter.h	/^  long m_posSize;$/;"	m	class:WavWriter
m_predefined	src/win32/GBColorDlg.h	/^	CComboBox	m_predefined;$/;"	m	class:GBColorDlg
m_prgctrl	src/win32/LinkOptions.h	/^	CProgressCtrl m_prgctrl;$/;"	m	class:ServerWait
m_priority	src/win32/MapView.h	/^  CStatic  m_priority;$/;"	m	class:MapView
m_prottype	src/win32/LinkOptions.h	/^	int		m_prottype;$/;"	m	class:LinkClient
m_prottype	src/win32/LinkOptions.h	/^	int		m_prottype;$/;"	m	class:LinkServer
m_ptLargest	src/win32/ResizeDlg.cpp	/^  POINT m_ptLargest;$/;"	m	struct:DialogData	file:
m_ptSmallest	src/win32/ResizeDlg.cpp	/^  POINT m_ptSmallest;$/;"	m	struct:DialogData	file:
m_puiDelta	src/gtk/screenarea.h	/^  u8 *     m_puiDelta;$/;"	m	class:VBA::ScreenArea
m_puiPixels	src/gtk/screenarea.h	/^  u32 *    m_puiPixels;$/;"	m	class:VBA::ScreenArea
m_rcGrip	src/win32/ResizeDlg.cpp	/^  WinHelper::CRect m_rcGrip;$/;"	m	struct:DialogData	file:
m_refreshRate	src/win32/FullscreenSettings.h	/^	unsigned int m_refreshRate;$/;"	m	class:FullscreenSettings
m_report	src/win32/BugReport.h	/^  CEdit	m_report;$/;"	m	class:BugReport
m_restore	src/win32/GBACheats.h	/^  CButton  m_restore;$/;"	m	class:GBACheatList
m_right	src/win32/StringTokenizer.h	/^  CString m_right;$/;"	m	class:StringTokenizer
m_romPath	src/win32/Directories.h	/^	CEdit  m_romPath;$/;"	m	class:Directories
m_rtc	src/win32/GameOverrides.h	/^	CComboBox	m_rtc;$/;"	m	class:GameOverrides
m_sConfigFile	src/gtk/window.h	/^  std::string       m_sConfigFile;$/;"	m	class:VBA::Window
m_sFile	src/gtk/window.h	/^    std::string m_sFile;$/;"	m	struct:VBA::Window::SGameSlot
m_sKey	src/gtk/configfile.h	/^  std::string m_sKey;$/;"	m	class:VBA::Config::KeyNotFound
m_sKey	src/gtk/configfile.h	/^  std::string m_sKey;$/;"	m	class:VBA::Config::Line
m_sName	src/gtk/configfile.h	/^  std::string m_sName;$/;"	m	class:VBA::Config::Section
m_sName	src/gtk/configfile.h	/^  std::string m_sName;$/;"	m	class:VBA::Config::SectionNotFound
m_sRomFile	src/gtk/window.h	/^  std::string    m_sRomFile;$/;"	m	class:VBA::Window
m_sSection	src/gtk/configfile.h	/^  std::string m_sSection;$/;"	m	class:VBA::Config::KeyNotFound
m_sUserDataDir	src/gtk/window.h	/^  std::string       m_sUserDataDir;$/;"	m	class:VBA::Window
m_sValue	src/gtk/configfile.h	/^  std::string m_sValue;$/;"	m	class:VBA::Config::Line
m_sampleCounter	src/win32/AVIWrite.h	/^	LONG m_sampleCounter;$/;"	m	class:AVIWrite
m_sample_rate	src/win32/AudioCoreSettingsDlg.h	/^	unsigned int m_sample_rate;$/;"	m	class:AudioCoreSettingsDlg
m_savePath	src/win32/Directories.h	/^	CEdit  m_savePath;$/;"	m	class:Directories
m_saveType	src/win32/GameOverrides.h	/^	CComboBox	m_saveType;$/;"	m	class:GameOverrides
m_scale	src/win32/GBPrinterDlg.h	/^  int    m_scale;$/;"	m	class:GBPrinterDlg
m_sect	src/win32/WinHelper.h	/^          CCriticalSection &m_sect;$/;"	m	class:WinHelper::CCriticalSection::CLock
m_sect	src/win32/WinHelper.h	/^      CRITICAL_SECTION m_sect;$/;"	m	class:WinHelper::CCriticalSection
m_selected_device_index	src/win32/XAudio2_Config.h	/^	UINT32 m_selected_device_index;$/;"	m	class:XAudio2_Config
m_serveraddress	src/win32/LinkOptions.h	/^	CString	m_serveraddress;$/;"	m	class:ServerWait
m_serverip	src/win32/LinkOptions.h	/^	CEdit m_serverip;$/;"	m	class:LinkClient
m_sgb	src/win32/Associate.h	/^  BOOL  m_sgb;$/;"	m	class:Associate
m_size	src/win32/GBMemoryViewerDlg.h	/^  int    m_size;$/;"	m	class:GBMemoryViewerDlg
m_size	src/win32/MemoryViewerAddressSize.h	/^  CEdit  m_size;$/;"	m	class:MemoryViewerAddressSize
m_size	src/win32/MemoryViewerDlg.h	/^  int    m_size;$/;"	m	class:MemoryViewerDlg
m_sizeClient	src/win32/ResizeDlg.cpp	/^  SIZE m_sizeClient;$/;"	m	struct:DialogData	file:
m_skipLogo	src/win32/BIOSDialog.h	/^	BOOL m_skipLogo;$/;"	m	class:BIOSDialog
m_slider	src/win32/GBTileView.h	/^  CSliderCtrl  m_slider;$/;"	m	class:GBTileView
m_slider	src/win32/TileView.h	/^  CSliderCtrl  m_slider;$/;"	m	class:TileView
m_sliderBufferCount	src/win32/OALConfig.h	/^	CSliderCtrl m_sliderBufferCount;$/;"	m	class:OALConfig
m_slider_buffer	src/win32/XAudio2_Config.h	/^	CSliderCtrl m_slider_buffer;$/;"	m	class:XAudio2_Config
m_sound_filtering	src/win32/AudioCoreSettingsDlg.h	/^	float m_sound_filtering;$/;"	m	class:AudioCoreSettingsDlg
m_sound_interpolation	src/win32/AudioCoreSettingsDlg.h	/^	bool m_sound_interpolation;$/;"	m	class:AudioCoreSettingsDlg
m_sound_output	src/win32/Logging.h	/^	BOOL   m_sound_output;$/;"	m	class:Logging
m_speed	src/win32/LinkOptions.h	/^	BOOL	m_speed;$/;"	m	class:LinkServer
m_sprite	src/win32/GBOamView.h	/^  CEdit  m_sprite;$/;"	m	class:GBOamView
m_sprite	src/win32/OamView.h	/^  CEdit  m_sprite;$/;"	m	class:OamView
m_stEmulator	src/gtk/window.h	/^  EmulatedSystem m_stEmulator;$/;"	m	class:VBA::Window
m_stateList	src/wx/widgets/wx/checkedlistctrl.h	/^	wxArrayInt m_stateList;$/;"	m	class:wxCheckedListCtrl
m_stereo	src/win32/AudioCoreSettingsDlg.h	/^	float m_stereo;$/;"	m	class:AudioCoreSettingsDlg
m_stretch	src/win32/GBOamView.h	/^  BOOL  m_stretch;$/;"	m	class:GBOamView
m_stretch	src/win32/GBTileView.h	/^  BOOL  m_stretch;$/;"	m	class:GBTileView
m_stretch	src/win32/OamView.h	/^  BOOL  m_stretch;$/;"	m	class:OamView
m_stretch	src/win32/TileView.h	/^  BOOL  m_stretch;$/;"	m	class:TileView
m_surround	src/win32/AudioCoreSettingsDlg.h	/^	bool m_surround;$/;"	m	class:AudioCoreSettingsDlg
m_swi	src/win32/Logging.h	/^	BOOL   m_swi;$/;"	m	class:Logging
m_szCommand	src/win32/CmdAccelOb.h	/^  CString m_szCommand;$/;"	m	class:CCmdAccelOb
m_szRegKey	src/win32/AcceleratorManager.h	/^  CString m_szRegKey;$/;"	m	class:CAcceleratorManager
m_t	src/win32/Disassemble.h	/^  BOOL  m_t;$/;"	m	class:Disassemble
m_tabctrl	src/win32/LinkOptions.h	/^	CMyTabCtrl	m_tabctrl;$/;"	m	class:LinkOptions
m_tabdialog	src/win32/LinkOptions.h	/^	CDialog *m_tabdialog[3];$/;"	m	class:CMyTabCtrl
m_throttle	src/win32/Throttle.h	/^  int    m_throttle;$/;"	m	class:Throttle
m_timeout	src/win32/LinkOptions.h	/^	CEdit m_timeout;$/;"	m	class:LinkGeneral
m_title	src/win32/ExportGSASnapshot.h	/^  CString  m_title;$/;"	m	class:ExportGSASnapshot
m_token	src/win32/StringTokenizer.h	/^  CString m_token;$/;"	m	class:StringTokenizer
m_translator	src/win32/AboutDialog.h	/^	Hyperlink m_translator;$/;"	m	class:AboutDialog
m_type	src/win32/LinkOptions.h	/^	int m_type;$/;"	m	class:LinkGeneral
m_uiScreenTexture	src/gtk/screenarea-opengl.h	/^  GLuint m_uiScreenTexture;$/;"	m	class:VBA::ScreenAreaGl
m_uiTime	src/gtk/window.h	/^    time_t      m_uiTime;$/;"	m	struct:VBA::Window::SGameSlot
m_unaligned_access	src/win32/Logging.h	/^	BOOL   m_unaligned_access;$/;"	m	class:Logging
m_undefined	src/win32/Logging.h	/^	BOOL   m_undefined;$/;"	m	class:Logging
m_underlineFont	src/win32/Hyperlink.h	/^	CFont m_underlineFont;$/;"	m	class:Hyperlink
m_v	src/win32/Disassemble.h	/^  BOOL  m_v;$/;"	m	class:Disassemble
m_vFilter2x	src/gtk/screenarea.h	/^  Filter   m_vFilter2x;$/;"	m	class:VBA::ScreenArea
m_vFilterIB	src/gtk/screenarea.h	/^  FilterIB m_vFilterIB;$/;"	m	class:VBA::ScreenArea
m_value	src/win32/GBACheats.h	/^  CEdit  m_value;$/;"	m	class:AddCheat
m_value	src/win32/GBACheats.h	/^  CEdit  m_value;$/;"	m	class:GBACheatSearch
m_value	src/win32/GBCheatsDlg.h	/^  CEdit  m_value;$/;"	m	class:AddGBCheat
m_value	src/win32/GBCheatsDlg.h	/^  CEdit  m_value;$/;"	m	class:GBCheatSearch
m_value	src/win32/IOViewer.h	/^	CStatic	m_value;$/;"	m	class:IOViewer
m_value	src/win32/MaxScale.h	/^	CEdit	m_value;$/;"	m	class:MaxScale
m_version	src/win32/AboutDialog.h	/^	CString   m_version;$/;"	m	class:AboutDialog
m_videoCompSettings	src/win32/AVIWrite.h	/^	AVICOMPRESSOPTIONS m_videoCompSettings;$/;"	m	class:AVIWrite
m_videoCompressed	src/win32/AVIWrite.h	/^	PAVISTREAM m_videoCompressed;$/;"	m	class:AVIWrite
m_videoFrameSize	src/win32/AVIWrite.h	/^	LONG m_videoFrameSize;$/;"	m	class:AVIWrite
m_videoStream	src/win32/AVIWrite.h	/^	PAVISTREAM m_videoStream;$/;"	m	class:AVIWrite
m_viewer	src/win32/GBMemoryViewerDlg.h	/^  GBMemoryViewer m_viewer;$/;"	m	class:GBMemoryViewerDlg
m_viewer	src/win32/MemoryViewerDlg.h	/^  GBAMemoryViewer m_viewer;$/;"	m	class:MemoryViewerDlg
m_volume	src/win32/AudioCoreSettingsDlg.h	/^	float m_volume;$/;"	m	class:AudioCoreSettingsDlg
m_wIDCommand	src/win32/CmdAccelOb.h	/^  WORD m_wIDCommand;$/;"	m	class:CCmdAccelOb
m_wKey	src/win32/CmdAccelOb.h	/^  WORD m_wKey;$/;"	m	class:CAccelsOb
m_wVirtKey	src/win32/KeyboardEdit.h	/^  WORD m_wVirtKey;$/;"	m	class:CKeyboardEdit
m_width	src/win32/FullscreenSettings.h	/^	unsigned int m_width;$/;"	m	class:FullscreenSettings
m_wpl	src/win32/ResizeDlg.cpp	/^  WINDOWPLACEMENT       m_wpl;$/;"	m	struct:RegistryData	file:
m_z	src/win32/Disassemble.h	/^  BOOL  m_z;$/;"	m	class:Disassemble
m_z	src/win32/GBDisassemble.h	/^  BOOL  m_z;$/;"	m	class:GBDisassemble
made_by	fex/fex/Zip_Extractor.cpp	/^	byte made_by [2];$/;"	m	struct:entry_t	file:
mag	src/wx/sys.cpp	/^    wxControlWithItems *mag;$/;"	m	class:PrintDialog	file:
magic	src/gba/elf.h	/^  u32 magic;$/;"	m	struct:ELFHeader
magnification	src/filters/simpleFilter.cpp	135;"	d	file:
magnification	src/filters/simpleFilter.cpp	144;"	d	file:
magnification	src/filters/simpleFilter.cpp	185;"	d	file:
magnification	src/filters/simpleFilter.cpp	192;"	d	file:
magnification	src/filters/simpleFilter.cpp	233;"	d	file:
magnification	src/filters/simpleFilter.cpp	242;"	d	file:
magnification	src/filters/simpleFilter.cpp	283;"	d	file:
magnification	src/filters/simpleFilter.cpp	94;"	d	file:
main	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	/^int main(int argc, char* argv[])$/;"	f
main	CMakeFiles/2.8.12/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	CMakeFiles/2.8.12/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
main	src/gtk/main.cpp	/^int main(int argc, char * argv[])$/;"	f
main	src/libretro/gbaconv/gbaconv.c	/^int main(int argc, char *argv[])$/;"	f
main	src/sdl/SDL.cpp	/^int main(int argc, char **argv)$/;"	f
main	src/sdl/expr.cpp	/^int main(int argc, char **argv)$/;"	f
main	src/sdl/getopt.c	/^main (argc, argv)$/;"	f
main	src/sdl/getopt1.c	/^main (argc, argv)$/;"	f
make_unbuffered	fex/fex/Data_Reader.cpp	/^void Std_File_Reader::make_unbuffered()$/;"	f	class:Std_File_Reader
make_unbuffered	fex/fex/File_Extractor.cpp	/^static void make_unbuffered( Std_File_Reader* r )$/;"	f	file:
make_unbuffered	fex/fex/File_Extractor.cpp	/^static void make_unbuffered( void* )$/;"	f	file:
maker_lt	src/wx/cmdevents.cpp	/^static bool maker_lt(const rom_maker &r1, const rom_maker &r2)$/;"	f	file:
makers	src/wx/cmdevents.cpp	/^} makers[] = {$/;"	v	typeref:struct:rom_maker	file:
map	src/gba/Globals.cpp	/^memoryMap map[256];$/;"	v
mapView	src/win32/GBMapView.h	/^  BitmapControl mapView;$/;"	m	class:GBMapView
mapView	src/win32/MapView.h	/^  BitmapControl mapView;$/;"	m	class:MapView
mapViewZoom	src/win32/GBMapView.h	/^  ZoomControl mapViewZoom;$/;"	m	class:GBMapView
mapViewZoom	src/win32/MapView.h	/^  ZoomControl mapViewZoom;$/;"	m	class:MapView
mapVirtKeys	src/win32/CmdAccelOb.cpp	/^MAPVIRTKEYS mapVirtKeys[] = {$/;"	v
mapVirtKeysStringFromWORD	src/win32/CmdAccelOb.cpp	/^TCHAR* mapVirtKeysStringFromWORD(WORD wKey)$/;"	f
mapVirtSysKeys	src/win32/CmdAccelOb.cpp	/^MAPVIRTKEYS mapVirtSysKeys[] = {$/;"	v
mapbase	src/wx/gfxviewers.cpp	/^	int charbase, mapbase;$/;"	m	class:Viewers::GBMapViewer	file:
mapbase	src/wx/gfxviewers.cpp	/^	wxControl *modelab, *mapbase, *charbase, *size, *colors, *prio, *mosaic,$/;"	m	class:Viewers::MapViewer	file:
mapper	src/gb/GB.cpp	/^void (*mapper)(u16,u8) = NULL;$/;"	v
mapperAddress	src/gb/gbMemory.h	/^  int mapperAddress;$/;"	m	struct:mapperHuC3
mapperClockLatch	src/gb/gbMemory.h	/^  int mapperClockLatch;$/;"	m	struct:mapperMBC3
mapperClockLatch	src/gb/gbMemory.h	/^  int mapperClockLatch;$/;"	m	struct:mapperTAMA5
mapperClockRegister	src/gb/gbMemory.h	/^  int mapperClockRegister;$/;"	m	struct:mapperMBC3
mapperClockRegister	src/gb/gbMemory.h	/^  int mapperClockRegister;$/;"	m	struct:mapperTAMA5
mapperCommandNumber	src/gb/gbMemory.h	/^  int mapperCommandNumber;$/;"	m	struct:mapperTAMA5
mapperCommands	src/gb/gbMemory.h	/^  int mapperCommands[0x10];$/;"	m	struct:mapperTAMA5
mapperControl	src/gb/gbMemory.h	/^  int mapperControl;$/;"	m	struct:mapperMBC3
mapperControl	src/gb/gbMemory.h	/^  int mapperControl;$/;"	m	struct:mapperTAMA5
mapperDays	src/gb/gbMemory.h	/^  int mapperDays;$/;"	m	struct:mapperMBC3
mapperDays	src/gb/gbMemory.h	/^  int mapperDays;$/;"	m	struct:mapperTAMA5
mapperGGROM	src/gb/gbMemory.cpp	/^void mapperGGROM(u16 address, u8 value)$/;"	f
mapperGS3	src/gb/gbMemory.h	/^struct mapperGS3 {$/;"	s
mapperGS3ROM	src/gb/gbMemory.cpp	/^void mapperGS3ROM(u16 address, u8 value)$/;"	f
mapperHours	src/gb/gbMemory.h	/^  int mapperHours;$/;"	m	struct:mapperMBC3
mapperHours	src/gb/gbMemory.h	/^  int mapperHours;$/;"	m	struct:mapperTAMA5
mapperHuC1	src/gb/gbMemory.h	/^struct mapperHuC1 {$/;"	s
mapperHuC1RAM	src/gb/gbMemory.cpp	/^void mapperHuC1RAM(u16 address, u8 value)$/;"	f
mapperHuC1ROM	src/gb/gbMemory.cpp	/^void mapperHuC1ROM(u16 address, u8 value)$/;"	f
mapperHuC3	src/gb/gbMemory.h	/^struct mapperHuC3 {$/;"	s
mapperHuC3RAM	src/gb/gbMemory.cpp	/^void mapperHuC3RAM(u16 address, u8 value)$/;"	f
mapperHuC3ROM	src/gb/gbMemory.cpp	/^void mapperHuC3ROM(u16 address, u8 value)$/;"	f
mapperHuC3ReadRAM	src/gb/gbMemory.cpp	/^u8 mapperHuC3ReadRAM(u16 address)$/;"	f
mapperLControl	src/gb/gbMemory.h	/^  int mapperLControl;$/;"	m	struct:mapperMBC3
mapperLControl	src/gb/gbMemory.h	/^  int mapperLControl;$/;"	m	struct:mapperTAMA5
mapperLDays	src/gb/gbMemory.h	/^  int mapperLDays;$/;"	m	struct:mapperMBC3
mapperLDays	src/gb/gbMemory.h	/^  int mapperLDays;$/;"	m	struct:mapperTAMA5
mapperLHours	src/gb/gbMemory.h	/^  int mapperLHours;$/;"	m	struct:mapperMBC3
mapperLHours	src/gb/gbMemory.h	/^  int mapperLHours;$/;"	m	struct:mapperTAMA5
mapperLMinutes	src/gb/gbMemory.h	/^  int mapperLMinutes;$/;"	m	struct:mapperMBC3
mapperLMinutes	src/gb/gbMemory.h	/^  int mapperLMinutes;$/;"	m	struct:mapperTAMA5
mapperLMonths	src/gb/gbMemory.h	/^  int mapperLMonths;$/;"	m	struct:mapperTAMA5
mapperLSeconds	src/gb/gbMemory.h	/^  int mapperLSeconds;$/;"	m	struct:mapperMBC3
mapperLSeconds	src/gb/gbMemory.h	/^  int mapperLSeconds;$/;"	m	struct:mapperTAMA5
mapperLYears	src/gb/gbMemory.h	/^  int mapperLYears;$/;"	m	struct:mapperTAMA5
mapperLastCommandNumber	src/gb/gbMemory.h	/^  int mapperLastCommandNumber;$/;"	m	struct:mapperTAMA5
mapperLastTime	src/gb/gbMemory.h	/^  time_t mapperLastTime;$/;"	m	struct:mapperMBC3
mapperLastTime	src/gb/gbMemory.h	/^  time_t mapperLastTime;$/;"	m	struct:mapperTAMA5
mapperMBC1	src/gb/gbMemory.h	/^struct mapperMBC1 {$/;"	s
mapperMBC1RAM	src/gb/gbMemory.cpp	/^void mapperMBC1RAM(u16 address, u8 value)$/;"	f
mapperMBC1ROM	src/gb/gbMemory.cpp	/^void mapperMBC1ROM(u16 address, u8 value)$/;"	f
mapperMBC1ReadRAM	src/gb/gbMemory.cpp	/^u8 mapperMBC1ReadRAM(u16 address)$/;"	f
mapperMBC2	src/gb/gbMemory.h	/^struct mapperMBC2 {$/;"	s
mapperMBC2RAM	src/gb/gbMemory.cpp	/^void mapperMBC2RAM(u16 address, u8 value)$/;"	f
mapperMBC2ROM	src/gb/gbMemory.cpp	/^void mapperMBC2ROM(u16 address, u8 value)$/;"	f
mapperMBC3	src/gb/gbMemory.h	/^struct mapperMBC3 {$/;"	s
mapperMBC3RAM	src/gb/gbMemory.cpp	/^void mapperMBC3RAM(u16 address, u8 value)$/;"	f
mapperMBC3ROM	src/gb/gbMemory.cpp	/^void mapperMBC3ROM(u16 address, u8 value)$/;"	f
mapperMBC3ReadRAM	src/gb/gbMemory.cpp	/^u8 mapperMBC3ReadRAM(u16 address)$/;"	f
mapperMBC5	src/gb/gbMemory.h	/^struct mapperMBC5 {$/;"	s
mapperMBC5RAM	src/gb/gbMemory.cpp	/^void mapperMBC5RAM(u16 address, u8 value)$/;"	f
mapperMBC5ROM	src/gb/gbMemory.cpp	/^void mapperMBC5ROM(u16 address, u8 value)$/;"	f
mapperMBC5ReadRAM	src/gb/gbMemory.cpp	/^u8 mapperMBC5ReadRAM(u16 address)$/;"	f
mapperMBC7	src/gb/gbMemory.h	/^struct mapperMBC7 {$/;"	s
mapperMBC7RAM	src/gb/gbMemory.cpp	/^void mapperMBC7RAM(u16 address, u8 value)$/;"	f
mapperMBC7ROM	src/gb/gbMemory.cpp	/^void mapperMBC7ROM(u16 address, u8 value)$/;"	f
mapperMBC7ReadRAM	src/gb/gbMemory.cpp	/^u8 mapperMBC7ReadRAM(u16 address)$/;"	f
mapperMMM01	src/gb/gbMemory.h	/^struct mapperMMM01 {$/;"	s
mapperMMM01RAM	src/gb/gbMemory.cpp	/^void mapperMMM01RAM(u16 address, u8 value)$/;"	f
mapperMMM01ROM	src/gb/gbMemory.cpp	/^void mapperMMM01ROM(u16 address, u8 value)$/;"	f
mapperMemoryModel	src/gb/gbMemory.h	/^  int mapperMemoryModel;$/;"	m	struct:mapperHuC1
mapperMemoryModel	src/gb/gbMemory.h	/^  int mapperMemoryModel;$/;"	m	struct:mapperMBC1
mapperMemoryModel	src/gb/gbMemory.h	/^  int mapperMemoryModel;$/;"	m	struct:mapperMMM01
mapperMinutes	src/gb/gbMemory.h	/^  int mapperMinutes;$/;"	m	struct:mapperMBC3
mapperMinutes	src/gb/gbMemory.h	/^  int mapperMinutes;$/;"	m	struct:mapperTAMA5
mapperMonths	src/gb/gbMemory.h	/^  int mapperMonths;$/;"	m	struct:mapperTAMA5
mapperRAM	src/gb/GB.cpp	/^void (*mapperRAM)(u16,u8) = NULL;$/;"	v
mapperRAMAddress	src/gb/gbMemory.h	/^  int mapperRAMAddress;$/;"	m	struct:mapperHuC1
mapperRAMAddress	src/gb/gbMemory.h	/^  int mapperRAMAddress;$/;"	m	struct:mapperHuC3
mapperRAMAddress	src/gb/gbMemory.h	/^  int mapperRAMAddress;$/;"	m	struct:mapperMBC1
mapperRAMAddress	src/gb/gbMemory.h	/^  int mapperRAMAddress;$/;"	m	struct:mapperMBC3
mapperRAMAddress	src/gb/gbMemory.h	/^  int mapperRAMAddress;$/;"	m	struct:mapperMBC5
mapperRAMAddress	src/gb/gbMemory.h	/^  int mapperRAMAddress;$/;"	m	struct:mapperMBC7
mapperRAMAddress	src/gb/gbMemory.h	/^  int mapperRAMAddress;$/;"	m	struct:mapperMMM01
mapperRAMAddress	src/gb/gbMemory.h	/^  int mapperRAMAddress;$/;"	m	struct:mapperTAMA5
mapperRAMBank	src/gb/gbMemory.h	/^  int mapperRAMBank;$/;"	m	struct:mapperHuC1
mapperRAMBank	src/gb/gbMemory.h	/^  int mapperRAMBank;$/;"	m	struct:mapperHuC3
mapperRAMBank	src/gb/gbMemory.h	/^  int mapperRAMBank;$/;"	m	struct:mapperMBC1
mapperRAMBank	src/gb/gbMemory.h	/^  int mapperRAMBank;$/;"	m	struct:mapperMBC3
mapperRAMBank	src/gb/gbMemory.h	/^  int mapperRAMBank;$/;"	m	struct:mapperMBC5
mapperRAMBank	src/gb/gbMemory.h	/^  int mapperRAMBank;$/;"	m	struct:mapperMBC7
mapperRAMBank	src/gb/gbMemory.h	/^  int mapperRAMBank;$/;"	m	struct:mapperMMM01
mapperRAMBank	src/gb/gbMemory.h	/^  int mapperRAMBank;$/;"	m	struct:mapperTAMA5
mapperRAMEnable	src/gb/gbMemory.h	/^  int mapperRAMEnable;$/;"	m	struct:mapperHuC1
mapperRAMEnable	src/gb/gbMemory.h	/^  int mapperRAMEnable;$/;"	m	struct:mapperHuC3
mapperRAMEnable	src/gb/gbMemory.h	/^  int mapperRAMEnable;$/;"	m	struct:mapperMBC1
mapperRAMEnable	src/gb/gbMemory.h	/^  int mapperRAMEnable;$/;"	m	struct:mapperMBC2
mapperRAMEnable	src/gb/gbMemory.h	/^  int mapperRAMEnable;$/;"	m	struct:mapperMBC3
mapperRAMEnable	src/gb/gbMemory.h	/^  int mapperRAMEnable;$/;"	m	struct:mapperMBC5
mapperRAMEnable	src/gb/gbMemory.h	/^  int mapperRAMEnable;$/;"	m	struct:mapperMBC7
mapperRAMEnable	src/gb/gbMemory.h	/^  int mapperRAMEnable;$/;"	m	struct:mapperMMM01
mapperRAMEnable	src/gb/gbMemory.h	/^  int mapperRAMEnable;$/;"	m	struct:mapperTAMA5
mapperRAMFlag	src/gb/gbMemory.h	/^  int mapperRAMFlag;$/;"	m	struct:mapperHuC3
mapperRAMValue	src/gb/gbMemory.h	/^  int mapperRAMValue;$/;"	m	struct:mapperHuC3
mapperROMBank	src/gb/gbMemory.h	/^  int mapperROMBank;$/;"	m	struct:mapperGS3
mapperROMBank	src/gb/gbMemory.h	/^  int mapperROMBank;$/;"	m	struct:mapperHuC1
mapperROMBank	src/gb/gbMemory.h	/^  int mapperROMBank;$/;"	m	struct:mapperHuC3
mapperROMBank	src/gb/gbMemory.h	/^  int mapperROMBank;$/;"	m	struct:mapperMBC1
mapperROMBank	src/gb/gbMemory.h	/^  int mapperROMBank;$/;"	m	struct:mapperMBC2
mapperROMBank	src/gb/gbMemory.h	/^  int mapperROMBank;$/;"	m	struct:mapperMBC3
mapperROMBank	src/gb/gbMemory.h	/^  int mapperROMBank;$/;"	m	struct:mapperMBC5
mapperROMBank	src/gb/gbMemory.h	/^  int mapperROMBank;$/;"	m	struct:mapperMBC7
mapperROMBank	src/gb/gbMemory.h	/^  int mapperROMBank;$/;"	m	struct:mapperMMM01
mapperROMBank	src/gb/gbMemory.h	/^  int mapperROMBank;$/;"	m	struct:mapperTAMA5
mapperROMHighAddress	src/gb/gbMemory.h	/^  int mapperROMHighAddress;$/;"	m	struct:mapperHuC1
mapperROMHighAddress	src/gb/gbMemory.h	/^  int mapperROMHighAddress;$/;"	m	struct:mapperMBC1
mapperROMHighAddress	src/gb/gbMemory.h	/^  int mapperROMHighAddress;$/;"	m	struct:mapperMBC5
mapperROMHighAddress	src/gb/gbMemory.h	/^  int mapperROMHighAddress;$/;"	m	struct:mapperMMM01
mapperRamByteSelect	src/gb/gbMemory.h	/^  int mapperRamByteSelect;$/;"	m	struct:mapperTAMA5
mapperReadRAM	src/gb/GB.cpp	/^u8 (*mapperReadRAM)(u16) = NULL;$/;"	v
mapperRegister	src/gb/gbMemory.h	/^  int mapperRegister;$/;"	m	struct:mapperTAMA5
mapperRegister1	src/gb/gbMemory.h	/^  int mapperRegister1;$/;"	m	struct:mapperHuC3
mapperRegister2	src/gb/gbMemory.h	/^  int mapperRegister2;$/;"	m	struct:mapperHuC3
mapperRegister3	src/gb/gbMemory.h	/^  int mapperRegister3;$/;"	m	struct:mapperHuC3
mapperRegister4	src/gb/gbMemory.h	/^  int mapperRegister4;$/;"	m	struct:mapperHuC3
mapperRegister5	src/gb/gbMemory.h	/^  int mapperRegister5;$/;"	m	struct:mapperHuC3
mapperRegister6	src/gb/gbMemory.h	/^  int mapperRegister6;$/;"	m	struct:mapperHuC3
mapperRegister7	src/gb/gbMemory.h	/^  int mapperRegister7;$/;"	m	struct:mapperHuC3
mapperRegister8	src/gb/gbMemory.h	/^  int mapperRegister8;$/;"	m	struct:mapperHuC3
mapperRomBank0Remapping	src/gb/gbMemory.h	/^  int mapperRomBank0Remapping;$/;"	m	struct:mapperMBC1
mapperRomBank0Remapping	src/gb/gbMemory.h	/^  int mapperRomBank0Remapping;$/;"	m	struct:mapperMMM01
mapperSeconds	src/gb/gbMemory.h	/^  int mapperSeconds;$/;"	m	struct:mapperMBC3
mapperSeconds	src/gb/gbMemory.h	/^  int mapperSeconds;$/;"	m	struct:mapperTAMA5
mapperTAMA5	src/gb/gbMemory.h	/^struct mapperTAMA5 {$/;"	s
mapperTAMA5RAM	src/gb/gbMemory.cpp	/^void mapperTAMA5RAM(u16 address, u8 value)$/;"	f
mapperTAMA5ReadRAM	src/gb/gbMemory.cpp	/^u8 mapperTAMA5ReadRAM(u16 address)$/;"	f
mapperUpdateClock	src/gb/GB.cpp	/^void (*mapperUpdateClock)() = NULL;$/;"	v
mapperYears	src/gb/gbMemory.h	/^  int mapperYears;$/;"	m	struct:mapperTAMA5
margins	src/wx/sys.cpp	/^    wxRect margins;$/;"	m	class:PrintDialog	file:
mark_recursive	src/wx/guiinit.cpp	/^static void mark_recursive(wxWindowBase *w)$/;"	f	file:
mask	src/gb/gbDis.cpp	/^  u8 mask;$/;"	m	struct:__anon152	file:
mask	src/gba/GBA.h	/^  u32 mask;$/;"	m	struct:__anon47
mask	src/gba/armdis.cpp	/^  u32 mask;$/;"	m	struct:Opcodes	file:
mask	src/wx/widgets/wx/wxmisc.h	/^    int val, mask, *vptr;$/;"	m	class:wxBoolIntValidator
mask	src/wx/wxvbam.h	/^    int *intopt, mask, val;$/;"	m	struct:checkable_mi_t
mask_flags	src/wx/wxvbam.h	/^    int mask_flags; \/\/ if non-0, one of the flags must be turned on in win$/;"	m	struct:cmditem
mask_tab	fex/fex/Data_Reader.cpp	/^static const BOOST::uint8_t mask_tab[6]={0x80,0xE0,0xF0,0xF8,0xFC,0xFE};$/;"	v	file:
mastercode	src/gba/GBA.cpp	/^u32 mastercode = 0;$/;"	v
max	fex/fex/blargg_source.h	90;"	d
max	fex/fex/blargg_source.h	91;"	d
max	src/apu/blargg_source.h	75;"	d
max	src/apu/blargg_source.h	76;"	d
max	src/gtk/screenarea-cairo.cpp	/^template<typename T> T max( T x, T y ) { return x > y ? x : y; }$/;"	f	namespace:VBA
max	src/gtk/screenarea-opengl.cpp	/^template<typename T> T max( T x, T y ) { return x > y ? x : y; }$/;"	f	namespace:VBA
max	src/wx/opts.h	/^    int min, max;$/;"	m	struct:opt_desc
maxBounds	src/gba/elf.h	/^  int maxBounds;$/;"	m	struct:Array
maxCpuCores	src/win32/VBA.h	/^  unsigned int maxCpuCores; \/\/ maximum number of CPU cores VBA should use, 0 means auto-detect$/;"	m	class:VBA
maxFunc	fex/7z_C/CpuArch.h	/^  UInt32 maxFunc;$/;"	m	struct:__anon35
maxNibble	src/win32/MemoryViewer.h	/^  int maxNibble;$/;"	m	class:MemoryViewer
maxScale	src/win32/VBA.h	/^  int maxScale;$/;"	m	class:VBA
max_delay	src/apu/Effects_Buffer.cpp	/^int Effects_Buffer::max_delay() const$/;"	f	class:Effects_Buffer
max_height	src/libretro/libretro.h	/^   unsigned max_height;    \/\/ Maximum possible height of game.$/;"	m	struct:retro_game_geometry
max_read	src/apu/Effects_Buffer.cpp	/^int const max_read = 2560; \/\/ determines minimum delay$/;"	v
max_scale	src/wx/opts.h	/^    int max_scale;$/;"	m	struct:opts_t
max_threads	src/wx/opts.h	/^    int max_threads;$/;"	m	struct:opts_t
max_width	src/libretro/libretro.h	/^   unsigned max_width;     \/\/ Maximum possible width of game.$/;"	m	struct:retro_game_geometry
maxaddr	src/wx/viewsupt.h	/^	u32 maxaddr;$/;"	m	class:Viewers::DisList
maxaddr	src/wx/viewsupt.h	/^	u32 maxaddr;$/;"	m	class:Viewers::MemView
mbCurrentTexture	src/win32/Direct3D.cpp	/^	unsigned char         mbCurrentTexture; \/\/ current texture for motion blur$/;"	m	class:Direct3DDisplay	file:
mbTextureEmpty	src/win32/Direct3D.cpp	/^	bool                  mbTextureEmpty;$/;"	m	class:Direct3DDisplay	file:
mb_fn_str	src/wx/wxhead.h	110;"	d
med_synth	src/apu/Gb_Apu.h	/^	Gb_Osc::Med_Synth   med_synth;$/;"	m	class:Gb_Apu
med_synth	src/apu/Gb_Oscs.h	/^	Med_Synth  const* med_synth;$/;"	m	class:Gb_Osc
media_err	src/wx/panel.cpp	/^static const wxChar *media_err(MediaRet ret)$/;"	f	file:
memClose	src/common/memgzio.c	/^local int memClose(MEMFILE *f)$/;"	f
memError	src/common/memgzio.c	/^local int memError(MEMFILE *f)$/;"	f
memOpen	src/common/memgzio.c	/^local MEMFILE *memOpen(char *memory, int available, char mode)$/;"	f
memPrintf	src/common/memgzio.c	/^local int memPrintf(MEMFILE *f, const char *format, ...)$/;"	f
memPutc	src/common/memgzio.c	/^local int memPutc(int c, MEMFILE *file)$/;"	f
memRead	src/common/memgzio.c	/^local size_t memRead(void *buffer, size_t size, size_t count,$/;"	f
memTell	src/common/memgzio.c	/^local long memTell(MEMFILE *f)$/;"	f
memWrite	src/common/memgzio.c	/^local size_t memWrite(const void *buffer, size_t size, size_t count,$/;"	f
mem_stream	src/common/memgzio.c	/^typedef struct mem_stream {$/;"	s	file:
mem_stream	src/common/memgzio.c	/^} mem_stream;$/;"	t	typeref:struct:mem_stream	file:
member	src/sdl/exprNode.h	/^  Member *member;$/;"	m	struct:Node
memberCount	src/gba/elf.h	/^  int memberCount;$/;"	m	struct:Struct
members	src/gba/elf.h	/^  EnumMember *members;$/;"	m	struct:Enum
members	src/gba/elf.h	/^  Member *members;$/;"	m	struct:Struct
memgzclose	src/common/memgzio.c	/^int ZEXPORT memgzclose (file)$/;"	f
memgzopen	src/common/memgzio.c	/^gzFile ZEXPORT memgzopen (memory, available, mode)$/;"	f
memgzread	src/common/memgzio.c	/^int ZEXPORT memgzread (file, buf, len)$/;"	f
memgzseek	src/common/memgzio.c	/^z_off_t ZEXPORT memgzseek(gzFile file, z_off_t off, int whence)$/;"	f
memgzwrite	src/common/memgzio.c	/^int ZEXPORT memgzwrite (file, buf, len)$/;"	f
memory	src/common/memgzio.c	/^  char *memory;$/;"	m	struct:_MemFile	file:
memoryMap	src/gba/GBA.h	/^} memoryMap;$/;"	t	typeref:struct:__anon47
memoryUpdateMBC3Clock	src/gb/gbMemory.cpp	/^void memoryUpdateMBC3Clock()$/;"	f
memoryUpdateMapGS3	src/gb/gbMemory.cpp	/^void memoryUpdateMapGS3()$/;"	f
memoryUpdateMapHuC1	src/gb/gbMemory.cpp	/^void memoryUpdateMapHuC1()$/;"	f
memoryUpdateMapHuC3	src/gb/gbMemory.cpp	/^void memoryUpdateMapHuC3()$/;"	f
memoryUpdateMapMBC1	src/gb/gbMemory.cpp	/^void memoryUpdateMapMBC1()$/;"	f
memoryUpdateMapMBC2	src/gb/gbMemory.cpp	/^void memoryUpdateMapMBC2()$/;"	f
memoryUpdateMapMBC3	src/gb/gbMemory.cpp	/^void memoryUpdateMapMBC3()$/;"	f
memoryUpdateMapMBC5	src/gb/gbMemory.cpp	/^void memoryUpdateMapMBC5()$/;"	f
memoryUpdateMapMBC7	src/gb/gbMemory.cpp	/^void memoryUpdateMapMBC7()$/;"	f
memoryUpdateMapMMM01	src/gb/gbMemory.cpp	/^void memoryUpdateMapMMM01()$/;"	f
memoryUpdateMapTAMA5	src/gb/gbMemory.cpp	/^void memoryUpdateMapTAMA5()$/;"	f
memoryUpdateTAMA5Clock	src/gb/gbMemory.cpp	/^void memoryUpdateTAMA5Clock()$/;"	f
memoryWait	src/gba/GBA.cpp	/^u8 memoryWait[16] =$/;"	v
memoryWait32	src/gba/GBA.cpp	/^u8 memoryWait32[16] =$/;"	v
memoryWaitSeq	src/gba/GBA.cpp	/^u8 memoryWaitSeq[16] =$/;"	v
memoryWaitSeq32	src/gba/GBA.cpp	/^u8 memoryWaitSeq32[16] =$/;"	v
memorydebug	src/gb/GB.cpp	/^bool memorydebug = false;$/;"	v
memsave_dir	src/wx/viewers.cpp	/^    static wxString memsave_dir = wxEmptyString;$/;"	m	namespace:Viewers	file:
memsave_fn	src/wx/viewers.cpp	/^	wxString memsave_fn;$/;"	m	class:Viewers::MemViewerBase	file:
memsz	src/gba/elf.h	/^  u32 memsz;$/;"	m	struct:ELFProgramHeader
memtell	src/common/memgzio.c	/^long ZEXPORT memtell(file)$/;"	f
menu	src/win32/VBA.h	/^  HMENU menu;$/;"	m	class:VBA
menus_opened	src/wx/wxvbam.h	/^    int menus_opened, dialog_opened;$/;"	m	class:MainFrame
meta	src/libretro/libretro.h	/^   const char *meta;       \/\/ String of implementation specific meta-data.$/;"	m	struct:retro_game_info
method	fex/fex/Zip_Extractor.cpp	/^	byte method [2];$/;"	m	struct:entry_t	file:
method	fex/fex/Zip_Extractor.cpp	/^	byte method [2];$/;"	m	struct:header_t	file:
mgr	src/win32/AccelEditor.h	/^  CAcceleratorManager mgr;$/;"	m	class:AccelEditor
mi	src/wx/wxvbam.h	/^    wxMenuItem *mi;  \/\/ the menu item to invoke command, if present$/;"	m	struct:cmditem
mi	src/wx/wxvbam.h	/^    wxMenuItem *mi;$/;"	m	struct:checkable_mi_t
min	fex/fex/blargg_source.h	87;"	d
min	fex/fex/blargg_source.h	88;"	d
min	src/apu/blargg_source.h	72;"	d
min	src/apu/blargg_source.h	73;"	d
min	src/gtk/screenarea-cairo.cpp	/^template<typename T> T min( T x, T y ) { return x < y ? x : y; }$/;"	f	namespace:VBA
min	src/gtk/screenarea-opengl.cpp	/^template<typename T> T min( T x, T y ) { return x < y ? x : y; }$/;"	f	namespace:VBA
min	src/wx/opts.h	/^    int min, max;$/;"	m	struct:opt_desc
min_delay	src/apu/Effects_Buffer.cpp	/^int Effects_Buffer::min_delay() const$/;"	f	class:Effects_Buffer
mirroringEnable	src/gba/Globals.cpp	/^bool mirroringEnable = false;$/;"	v
mirroringEnabled	src/libretro/libretro.cpp	/^	int mirroringEnabled;$/;"	m	struct:__anon59	file:
mix_effects	src/apu/Effects_Buffer.cpp	/^void Effects_Buffer::mix_effects( blip_sample_t* out_, int pair_count )$/;"	f	class:Effects_Buffer
mix_mono	src/apu/Multi_Buffer.cpp	/^void Stereo_Mixer::mix_mono( blip_sample_t* out_, int count )$/;"	f	class:Stereo_Mixer
mix_samples	src/apu/Blip_Buffer.cpp	/^void Blip_Buffer::mix_samples( blip_sample_t const* in, long count )$/;"	f	class:Blip_Buffer
mix_stereo	src/apu/Multi_Buffer.cpp	/^void Stereo_Mixer::mix_stereo( blip_sample_t* out_, int count )$/;"	f	class:Stereo_Mixer
mixed_type	src/apu/Multi_Buffer.h	/^	enum { wave_type = 0x100, noise_type = 0x200, mixed_type = wave_type | noise_type };$/;"	e	enum:Multi_Buffer::__anon148
mixer	src/apu/Effects_Buffer.h	/^	Stereo_Mixer mixer;$/;"	m	class:Effects_Buffer
mixer	src/apu/Multi_Buffer.h	/^	Stereo_Mixer mixer;$/;"	m	class:Stereo_Buffer
mmf	src/gba/GBALink.cpp	/^HANDLE mmf = NULL;$/;"	v
mmf	src/gba/GBALink.cpp	/^int mmf = -1;$/;"	v
mnemonic	src/gba/armdis.cpp	/^  const char *mnemonic;$/;"	m	struct:Opcodes	file:
mnen	src/gb/gbDis.cpp	/^  const char *mnen;$/;"	m	struct:__anon152	file:
mod	src/wx/widgets/wx/joyedit.h	/^    int mod; \/\/ modifier flags$/;"	m	struct:wxJoyKeyBinding
mode	src/apu/Gb_Oscs.h	/^	int             mode;       \/\/ mode_dmg, mode_cgb, mode_agb$/;"	m	class:Gb_Osc
mode	src/common/memgzio.c	/^    char     mode;    \/* 'w' or 'r' *\/$/;"	m	struct:mem_stream	file:
mode	src/common/memgzio.c	/^  char mode;$/;"	m	struct:_MemFile	file:
mode	src/gba/elf.cpp	/^  ELFRegMode mode;$/;"	m	struct:ELFFrameStateRegister	file:
mode	src/win32/Direct3D.cpp	/^	D3DDISPLAYMODE		  mode;$/;"	m	class:Direct3DDisplay	file:
mode	src/win32/Disassemble.h	/^  int    mode;$/;"	m	class:Disassemble
mode	src/wx/gfxviewers.cpp	/^	u16 control, mode;$/;"	m	class:Viewers::MapViewer	file:
mode	src/wx/gfxviewers.cpp	/^	wxControl *pos, *mode, *colors, *pallab, *tile, *prio, *size, *rot, *flg;$/;"	m	class:Viewers::OAMViewer	file:
mode0RenderLine	src/gba/Mode0.cpp	/^void mode0RenderLine()$/;"	f
mode0RenderLineAll	src/gba/Mode0.cpp	/^void mode0RenderLineAll()$/;"	f
mode0RenderLineNoWindow	src/gba/Mode0.cpp	/^void mode0RenderLineNoWindow()$/;"	f
mode1RenderLine	src/gba/Mode1.cpp	/^void mode1RenderLine()$/;"	f
mode1RenderLineAll	src/gba/Mode1.cpp	/^void mode1RenderLineAll()$/;"	f
mode1RenderLineNoWindow	src/gba/Mode1.cpp	/^void mode1RenderLineNoWindow()$/;"	f
mode2RenderLine	src/gba/Mode2.cpp	/^void mode2RenderLine()$/;"	f
mode2RenderLineAll	src/gba/Mode2.cpp	/^void mode2RenderLineAll()$/;"	f
mode2RenderLineNoWindow	src/gba/Mode2.cpp	/^void mode2RenderLineNoWindow()$/;"	f
mode3RenderLine	src/gba/Mode3.cpp	/^void mode3RenderLine()$/;"	f
mode3RenderLineAll	src/gba/Mode3.cpp	/^void mode3RenderLineAll()$/;"	f
mode3RenderLineNoWindow	src/gba/Mode3.cpp	/^void mode3RenderLineNoWindow()$/;"	f
mode4RenderLine	src/gba/Mode4.cpp	/^void mode4RenderLine()$/;"	f
mode4RenderLineAll	src/gba/Mode4.cpp	/^void mode4RenderLineAll()$/;"	f
mode4RenderLineNoWindow	src/gba/Mode4.cpp	/^void mode4RenderLineNoWindow()$/;"	f
mode5RenderLine	src/gba/Mode5.cpp	/^void mode5RenderLine()$/;"	f
mode5RenderLineAll	src/gba/Mode5.cpp	/^void mode5RenderLineAll()$/;"	f
mode5RenderLineNoWindow	src/gba/Mode5.cpp	/^void mode5RenderLineNoWindow()$/;"	f
mode_agb	src/apu/Gb_Apu.h	/^		mode_agb    \/\/ Game Boy Advance$/;"	e	enum:Gb_Apu::mode_t
mode_auto	fex/fex/Zlib_Inflater.h	/^	enum mode_t { mode_copy, mode_ungz, mode_raw_deflate, mode_auto };$/;"	e	enum:Zlib_Inflater::mode_t
mode_cgb	src/apu/Gb_Apu.h	/^		mode_cgb,   \/\/ Game Boy Color$/;"	e	enum:Gb_Apu::mode_t
mode_copy	fex/fex/Zlib_Inflater.h	/^	enum mode_t { mode_copy, mode_ungz, mode_raw_deflate, mode_auto };$/;"	e	enum:Zlib_Inflater::mode_t
mode_dmg	src/apu/Gb_Apu.h	/^		mode_dmg,   \/\/ Game Boy monochrome$/;"	e	enum:Gb_Apu::mode_t
mode_raw_deflate	fex/fex/Zlib_Inflater.h	/^	enum mode_t { mode_copy, mode_ungz, mode_raw_deflate, mode_auto };$/;"	e	enum:Zlib_Inflater::mode_t
mode_t	fex/fex/Zlib_Inflater.h	/^	enum mode_t { mode_copy, mode_ungz, mode_raw_deflate, mode_auto };$/;"	g	class:Zlib_Inflater
mode_t	src/apu/Gb_Apu.h	/^	enum mode_t {$/;"	g	class:Gb_Apu
mode_ungz	fex/fex/Zlib_Inflater.h	/^	enum mode_t { mode_copy, mode_ungz, mode_raw_deflate, mode_auto };$/;"	e	enum:Zlib_Inflater::mode_t
modelab	src/wx/gfxviewers.cpp	/^	wxControl *modelab, *mapbase, *charbase, *size, *colors, *prio, *mosaic,$/;"	m	class:Viewers::MapViewer	file:
modified_	src/apu/Blip_Buffer.h	/^	Blip_Buffer* modified_; \/\/ non-zero = true (more optimal than using bool, heh)$/;"	m	class:Blip_Buffer
mosaic	src/wx/gfxviewers.cpp	/^	wxControl *modelab, *mapbase, *charbase, *size, *colors, *prio, *mosaic,$/;"	m	class:Viewers::MapViewer	file:
motion	src/sdl/inputSDL.cpp	/^static uint32_t motion[4] = {$/;"	v	file:
mouseCounter	src/sdl/SDL.cpp	/^int  mouseCounter = 0;$/;"	v
mouseCounter	src/win32/VBA.h	/^  int mouseCounter;$/;"	m	class:VBA
mouse_active_time	src/wx/wxvbam.h	/^    u32 mouse_active_time;$/;"	m	class:GameArea
mov_path	src/wx/cmdevents.cpp	/^static wxString mov_path;$/;"	v	file:
moveAddress	src/win32/MemoryViewer.cpp	/^void MemoryViewer::moveAddress(s32 offset, int nibbleOff)$/;"	f	class:MemoryViewer
movieFile	src/win32/VBA.h	/^  FILE *movieFile;$/;"	m	class:VBA
movieFrame	src/win32/VBA.h	/^  int movieFrame;$/;"	m	class:VBA
movieLastJoypad	src/win32/VBA.h	/^  u32 movieLastJoypad;$/;"	m	class:VBA
movieNextJoypad	src/win32/VBA.h	/^  u32 movieNextJoypad;$/;"	m	class:VBA
moviePlayFrame	src/win32/VBA.h	/^  int moviePlayFrame;$/;"	m	class:VBA
moviePlaying	src/win32/VBA.h	/^  bool moviePlaying;$/;"	m	class:VBA
movieReadNext	src/win32/VBA.cpp	/^void VBA::movieReadNext()$/;"	f	class:VBA
movieRecording	src/win32/VBA.h	/^  bool movieRecording;$/;"	m	class:VBA
movzx	src/gba/GBA-arm.cpp	327;"	d	file:
msg	src/common/memgzio.c	/^    char     *msg;    \/* error message *\/$/;"	m	struct:mem_stream	file:
msg	src/libretro/libretro.h	/^   const char *msg;        \/\/ Message to be displayed.$/;"	m	struct:retro_message
multikey	src/wx/widgets/wx/keyedit.h	/^    wxChar multikey;$/;"	m	class:wxKeyTextCtrl
mv	src/wx/viewers.cpp	/^	MemView *mv;$/;"	m	class:Viewers::MemViewerBase	file:
myROM	src/gba/GBA.cpp	/^u32 myROM[] = {$/;"	v
my_index	src/sdl/getopt.c	/^my_index (str, chr)$/;"	f	file:
my_index	src/sdl/getopt.c	205;"	d	file:
my_unrar_read	fex/fex/Rar_Extractor.cpp	/^	static unrar_err_t my_unrar_read( void* data, void* out, int* count, unrar_pos_t pos )$/;"	f	file:
nAxes	src/win32/DirectInput.cpp	/^    int nAxes;$/;"	m	struct:deviceInfo	file:
nButtons	src/win32/DirectInput.cpp	/^    int nButtons;$/;"	m	struct:deviceInfo	file:
nCurSpeed	src/win32/VBA.cpp	/^  int					nCurSpeed;$/;"	m	namespace:Sm60FPS	file:
nFrameCnt	src/win32/VBA.cpp	/^  u32					nFrameCnt;$/;"	m	namespace:Sm60FPS	file:
nItemCount	src/win32/ResizeDlg.cpp	/^  int nItemCount;$/;"	m	struct:DialogData	file:
nPovs	src/win32/DirectInput.cpp	/^    int nPovs;$/;"	m	struct:deviceInfo	file:
nScaleFactor	src/win32/rpi.cpp	/^static int nScaleFactor;$/;"	v	file:
nThreads	src/win32/Direct3D.cpp	/^	unsigned int           nThreads;$/;"	m	class:Direct3DDisplay	file:
n_players	src/wx/guiinit.cpp	/^    int n_players;$/;"	m	class:NetLink_t	file:
name	fex/fex/File_Extractor.h	/^	const char* name() const            { return name_; }$/;"	f	struct:fex_t
name	fex/fex/File_Extractor.h	/^	const char* name;$/;"	m	struct:fex_type_t_
name	fex/fex/Gzip_Extractor.h	/^	blargg_vector<char> name;$/;"	m	class:Gzip_Extractor
name	src/gba/elf.h	/^  char *name;$/;"	m	struct:CompileUnit
name	src/gba/elf.h	/^  char *name;$/;"	m	struct:EnumMember
name	src/gba/elf.h	/^  char *name;$/;"	m	struct:Function
name	src/gba/elf.h	/^  char *name;$/;"	m	struct:Member
name	src/gba/elf.h	/^  char *name;$/;"	m	struct:Object
name	src/gba/elf.h	/^  const char *name;$/;"	m	struct:Symbol
name	src/gba/elf.h	/^  const char *name;$/;"	m	struct:Type
name	src/gba/elf.h	/^  u32 name;$/;"	m	struct:ELFAttr
name	src/gba/elf.h	/^  u32 name;$/;"	m	struct:ELFSectionHeader
name	src/gba/elf.h	/^  u32 name;$/;"	m	struct:ELFSymbol
name	src/sdl/debugger.cpp	/^  const char *name;$/;"	m	struct:DebuggerCommand	file:
name	src/sdl/exprNode.h	/^  const char *name;$/;"	m	struct:Node
name	src/sdl/filters.cpp	/^	char name[30];$/;"	m	struct:FilterDesc	file:
name	src/sdl/filters.cpp	/^	char name[30];$/;"	m	struct:IFBFilterDesc	file:
name	src/sdl/getopt.h	/^  const char *name;$/;"	m	struct:option
name	src/win32/IOViewerRegs.h	/^  char *name;$/;"	m	struct:IOData
name	src/win32/RomInfo.cpp	/^  LPCTSTR name;$/;"	m	struct:WinGBACompanyName	file:
name	src/wx/cmdevents.cpp	/^    const wxChar *code, *name;$/;"	m	struct:rom_maker	file:
name	src/wx/ioregs.h	/^  const wxChar *name;$/;"	m	struct:IOData
name	src/wx/wxvbam.h	/^    const wxChar *cmd, *name;$/;"	m	struct:cmditem
name16	fex/fex/Zip7_Extractor.h	/^	blargg_vector<wchar_t> name16;$/;"	m	class:Zip7_Extractor
name8	fex/fex/Zip7_Extractor.h	/^	blargg_vector<char> name8;$/;"	m	class:Zip7_Extractor
name_	fex/fex/File_Extractor.h	/^	const char* name_;$/;"	m	struct:fex_t
names	src/wx/dsound.cpp	/^	wxArrayString *names, *ids;$/;"	m	struct:devnames	file:
nax	src/wx/widgets/sdljoy.cpp	/^    int nax, nhat, nbut;$/;"	m	struct:wxSDLJoyState	file:
nbut	src/wx/widgets/sdljoy.cpp	/^    int nax, nhat, nbut;$/;"	m	struct:wxSDLJoyState	file:
needFlush	fex/7z_C/LzmaDec.h	/^  int needFlush;$/;"	m	struct:__anon17
needInitDic	fex/7z_C/Lzma2Dec.h	/^  Bool needInitDic;$/;"	m	struct:__anon34
needInitProp	fex/7z_C/Lzma2Dec.h	/^  Bool needInitProp;$/;"	m	struct:__anon34
needInitState	fex/7z_C/Lzma2Dec.h	/^  Bool needInitState;$/;"	m	struct:__anon34
needInitState	fex/7z_C/LzmaDec.h	/^  int needInitState;$/;"	m	struct:__anon17
need_fullpath	src/libretro/libretro.h	/^   bool        need_fullpath;     \/\/ If true, retro_load_game() is guaranteed to provide a valid pathname in retro_game_info::path.$/;"	m	struct:retro_system_info
needed	src/win32/DirectInput.cpp	/^    int needed;$/;"	m	struct:deviceInfo	file:
negative	src/win32/DirectInput.cpp	/^        LONG negative;$/;"	m	struct:deviceInfo::__anon70	file:
net_link_handler	src/wx/guiinit.cpp	/^} net_link_handler;$/;"	v	typeref:class:NetLink_t	file:
new	src/win32/AboutDialog.cpp	6;"	d	file:
new	src/win32/AccelEditor.cpp	7;"	d	file:
new	src/win32/AcceleratorManager.cpp	38;"	d	file:
new	src/win32/Associate.cpp	7;"	d	file:
new	src/win32/BitmapControl.cpp	6;"	d	file:
new	src/win32/BugReport.cpp	37;"	d	file:
new	src/win32/ColorButton.cpp	6;"	d	file:
new	src/win32/ColorControl.cpp	6;"	d	file:
new	src/win32/Direct3D.cpp	36;"	d	file:
new	src/win32/DirectInput.cpp	14;"	d	file:
new	src/win32/Directories.cpp	10;"	d	file:
new	src/win32/Disassemble.cpp	11;"	d	file:
new	src/win32/ExportGSASnapshot.cpp	9;"	d	file:
new	src/win32/FileDlg.cpp	11;"	d	file:
new	src/win32/GBACheats.cpp	16;"	d	file:
new	src/win32/GBCheatsDlg.cpp	14;"	d	file:
new	src/win32/GBColorDlg.cpp	43;"	d	file:
new	src/win32/GBDisassemble.cpp	10;"	d	file:
new	src/win32/GBMapView.cpp	20;"	d	file:
new	src/win32/GBMemoryViewerDlg.cpp	13;"	d	file:
new	src/win32/GBOamView.cpp	18;"	d	file:
new	src/win32/GBPaletteView.cpp	11;"	d	file:
new	src/win32/GBPrinterDlg.cpp	17;"	d	file:
new	src/win32/GBTileView.cpp	18;"	d	file:
new	src/win32/GDBConnection.cpp	10;"	d	file:
new	src/win32/GSACodeSelect.cpp	6;"	d	file:
new	src/win32/GameOverrides.cpp	7;"	d	file:
new	src/win32/Hyperlink.cpp	6;"	d	file:
new	src/win32/IOViewer.cpp	12;"	d	file:
new	src/win32/Joypad.cpp	8;"	d	file:
new	src/win32/KeyboardEdit.cpp	33;"	d	file:
new	src/win32/LangSelect.cpp	6;"	d	file:
new	src/win32/LinkOptions.cpp	11;"	d	file:
new	src/win32/Logging.cpp	10;"	d	file:
new	src/win32/MainWnd.cpp	30;"	d	file:
new	src/win32/MainWndTools.cpp	31;"	d	file:
new	src/win32/MapView.cpp	19;"	d	file:
new	src/win32/MaxScale.cpp	6;"	d	file:
new	src/win32/MemoryViewer.cpp	9;"	d	file:
new	src/win32/MemoryViewerAddressSize.cpp	6;"	d	file:
new	src/win32/MemoryViewerDlg.cpp	14;"	d	file:
new	src/win32/OamView.cpp	19;"	d	file:
new	src/win32/OpenGL.cpp	36;"	d	file:
new	src/win32/PaletteView.cpp	12;"	d	file:
new	src/win32/PaletteViewControl.cpp	8;"	d	file:
new	src/win32/RewindInterval.cpp	6;"	d	file:
new	src/win32/RomInfo.cpp	7;"	d	file:
new	src/win32/SelectPlugin.cpp	12;"	d	file:
new	src/win32/StringTokenizer.cpp	8;"	d	file:
new	src/win32/Throttle.cpp	6;"	d	file:
new	src/win32/TileView.cpp	19;"	d	file:
new	src/win32/VBA.cpp	124;"	d	file:
new	src/win32/WavWriter.cpp	11;"	d	file:
new	src/win32/ZoomControl.cpp	6;"	d	file:
newDirect3DDisplay	src/win32/Direct3D.cpp	/^IDisplay *newDirect3DDisplay()$/;"	f
newDirectInput	src/win32/DirectInput.cpp	/^Input *newDirectInput()$/;"	f
newDirectSound	src/win32/DirectSound.cpp	/^SoundDriver *newDirectSound()$/;"	f
newDirectSound	src/wx/dsound.cpp	/^SoundDriver *newDirectSound()$/;"	f
newOpenAL	src/win32/OpenAL.cpp	/^SoundDriver *newOpenAL()$/;"	f
newOpenAL	src/wx/openal.cpp	/^SoundDriver *newOpenAL()$/;"	f
newOpenGLDisplay	src/win32/OpenGL.cpp	/^IDisplay *newOpenGLDisplay()$/;"	f
newValue	src/win32/GBACheats.h	/^  char newValue[12];$/;"	m	struct:WinCheatsData
newValue	src/win32/GBCheatsDlg.h	/^  char newValue[12];$/;"	m	struct:WinGbCheatsData
newXAudio2_Output	src/win32/XAudio2.cpp	/^SoundDriver *newXAudio2_Output()$/;"	f
newXAudio2_Output	src/wx/xaudio2.cpp	/^SoundDriver *newXAudio2_Output()$/;"	f
new_7z	fex/fex/Zip7_Extractor.cpp	/^static File_Extractor* new_7z()$/;"	f	file:
new_binary	fex/fex/Binary_Extractor.cpp	/^static File_Extractor* new_binary()$/;"	f	file:
new_bufs	src/apu/Effects_Buffer.cpp	/^blargg_err_t Effects_Buffer::new_bufs( int size )$/;"	f	class:Effects_Buffer
new_fex	fex/fex/File_Extractor.h	/^	File_Extractor* (*new_fex)();$/;"	m	struct:fex_type_t_
new_gzip	fex/fex/Gzip_Extractor.cpp	/^static File_Extractor* new_gzip()$/;"	f	file:
new_rar	fex/fex/Rar_Extractor.cpp	/^static File_Extractor* new_rar()$/;"	f	file:
new_zip	fex/fex/Zip_Extractor.cpp	/^static File_Extractor* new_zip()$/;"	f	file:
newest_state_slot	src/wx/wxvbam.cpp	/^int MainFrame::newest_state_slot()$/;"	f	class:MainFrame
next	fex/fex/File_Extractor.cpp	/^blargg_err_t File_Extractor::next()$/;"	f	class:File_Extractor
next	src/apu/Blip_Buffer.h	/^	void next( int bass_shift = 9 ) { accum += *buf++ - (accum >> bass_shift); }$/;"	f	class:Blip_Reader
next	src/common/memgzio.c	/^  char *next;$/;"	m	struct:_MemFile	file:
next	src/gba/elf.cpp	/^  ELFcie *next;$/;"	m	struct:ELFcie	file:
next	src/gba/elf.h	/^  CompileUnit *next;$/;"	m	struct:CompileUnit
next	src/gba/elf.h	/^  ELFAbbrev *next;$/;"	m	struct:ELFAbbrev
next	src/gba/elf.h	/^  Function *next;$/;"	m	struct:Function
next	src/gba/elf.h	/^  Object *next;$/;"	m	struct:Object
next	src/gba/elf.h	/^  Type *next;$/;"	m	struct:Type
next	src/win32/StringTokenizer.cpp	/^const char *StringTokenizer::next()$/;"	f	class:StringTokenizer
next_	fex/fex/File_Extractor.cpp	/^blargg_err_t File_Extractor::next_()$/;"	f	class:File_Extractor
next_raw	fex/fex/Rar_Extractor.cpp	/^blargg_err_t Rar_Extractor::next_raw()$/;"	f	class:Rar_Extractor
next_rewind_state	src/wx/wxvbam.h	/^    int next_rewind_state;$/;"	m	class:GameArea
next_v	fex/fex/Binary_Extractor.cpp	/^blargg_err_t Binary_Extractor::next_v()$/;"	f	class:Binary_Extractor
next_v	fex/fex/File_Extractor.h	/^inline blargg_err_t File_Extractor::next_v()    { return blargg_ok; }$/;"	f	class:File_Extractor
next_v	fex/fex/Gzip_Extractor.cpp	/^blargg_err_t Gzip_Extractor::next_v()$/;"	f	class:Gzip_Extractor
next_v	fex/fex/Rar_Extractor.cpp	/^blargg_err_t Rar_Extractor::next_v()$/;"	f	class:Rar_Extractor
next_v	fex/fex/Zip7_Extractor.cpp	/^blargg_err_t Zip7_Extractor::next_v()$/;"	f	class:Zip7_Extractor
next_v	fex/fex/Zip_Extractor.cpp	/^blargg_err_t Zip_Extractor::next_v()$/;"	f	class:Zip_Extractor
nextchar	src/sdl/getopt.c	/^static char *nextchar;$/;"	v	file:
nextline	src/filters/hq/asm/hq3x_16.asm	/^nextline  equ 16$/;"	d
nextline	src/filters/hq/asm/hq3x_32.asm	/^nextline  equ 16$/;"	d
nextline	src/filters/hq/asm/hq4x_16.asm	/^nextline  equ 16$/;"	d
nextline	src/filters/hq/asm/hq4x_32.asm	/^nextline  equ 16$/;"	d
nhat	src/wx/widgets/sdljoy.cpp	/^    int nax, nhat, nbut;$/;"	m	struct:wxSDLJoyState	file:
njoy	src/wx/widgets/wx/sdljoy.h	/^    int njoy;$/;"	m	class:wxSDLJoy
nlines	src/wx/viewsupt.h	/^	int nlines;$/;"	m	class:Viewers::DisList
nlines	src/wx/viewsupt.h	/^	int nlines;$/;"	m	class:Viewers::MemView
no_argument	src/sdl/getopt.h	98;"	d
no_echo	src/apu/Effects_Buffer.h	/^	bool no_echo;$/;"	m	class:Effects_Buffer
no_effects	src/apu/Effects_Buffer.h	/^	bool no_effects;$/;"	m	class:Effects_Buffer
no_osd_status	src/wx/opts.h	/^    bool no_osd_status;$/;"	m	struct:opts_t
noblock	src/gba/GBALink.h	/^	sf::SocketTCP noblock;$/;"	m	class:lclient
noise	src/apu/Gb_Apu.h	/^	Gb_Noise        noise;$/;"	m	class:Gb_Apu
noise_divider	src/apu/Gb_Apu.h	/^	val_t noise_divider;$/;"	m	struct:gb_apu_state_t
noise_type	src/apu/Multi_Buffer.h	/^	enum { wave_type = 0x100, noise_type = 0x200, mixed_type = wave_type | noise_type };$/;"	e	enum:Multi_Buffer::__anon148
non_silent	src/apu/Multi_Buffer.cpp	/^blip_ulong Tracked_Blip_Buffer::non_silent() const$/;"	f	class:Tracked_Blip_Buffer
nonoption_flags_len	src/sdl/getopt.c	/^static int nonoption_flags_len;$/;"	v	file:
nonoption_flags_max_len	src/sdl/getopt.c	/^static int nonoption_flags_max_len;$/;"	v	file:
nosticks	src/wx/widgets/wx/sdljoy.h	/^    bool nosticks;$/;"	m	class:wxSDLJoy
notify	src/win32/XAudio2.cpp	/^	XAudio2_BufferNotify    notify; \/\/ buffer end notification$/;"	m	class:XAudio2_Output	file:
notify	src/wx/xaudio2.cpp	/^	XAudio2_BufferNotify    notify; \/\/ buffer end notification$/;"	m	class:XAudio2_Output	file:
nph	src/wx/sys.cpp	/^    int npw, nph;$/;"	m	class:PrintDialog	file:
npw	src/wx/sys.cpp	/^    int npw, nph;$/;"	m	class:PrintDialog	file:
nr10	src/gb/gbSound.cpp	/^	nr10 = 0,$/;"	e	enum:__anon151	file:
nr11	src/gb/gbSound.cpp	/^	nr11, nr12, nr13, nr14,$/;"	e	enum:__anon151	file:
nr12	src/gb/gbSound.cpp	/^	nr11, nr12, nr13, nr14,$/;"	e	enum:__anon151	file:
nr13	src/gb/gbSound.cpp	/^	nr11, nr12, nr13, nr14,$/;"	e	enum:__anon151	file:
nr14	src/gb/gbSound.cpp	/^	nr11, nr12, nr13, nr14,$/;"	e	enum:__anon151	file:
nr20	src/gb/gbSound.cpp	/^	nr20, nr21, nr22, nr23, nr24,$/;"	e	enum:__anon151	file:
nr21	src/gb/gbSound.cpp	/^	nr20, nr21, nr22, nr23, nr24,$/;"	e	enum:__anon151	file:
nr22	src/gb/gbSound.cpp	/^	nr20, nr21, nr22, nr23, nr24,$/;"	e	enum:__anon151	file:
nr23	src/gb/gbSound.cpp	/^	nr20, nr21, nr22, nr23, nr24,$/;"	e	enum:__anon151	file:
nr24	src/gb/gbSound.cpp	/^	nr20, nr21, nr22, nr23, nr24,$/;"	e	enum:__anon151	file:
nr30	src/gb/gbSound.cpp	/^	nr30, nr31, nr32, nr33, nr34,$/;"	e	enum:__anon151	file:
nr31	src/gb/gbSound.cpp	/^	nr30, nr31, nr32, nr33, nr34,$/;"	e	enum:__anon151	file:
nr32	src/gb/gbSound.cpp	/^	nr30, nr31, nr32, nr33, nr34,$/;"	e	enum:__anon151	file:
nr33	src/gb/gbSound.cpp	/^	nr30, nr31, nr32, nr33, nr34,$/;"	e	enum:__anon151	file:
nr34	src/gb/gbSound.cpp	/^	nr30, nr31, nr32, nr33, nr34,$/;"	e	enum:__anon151	file:
nr40	src/gb/gbSound.cpp	/^	nr40, nr41, nr42, nr43, nr44,$/;"	e	enum:__anon151	file:
nr41	src/gb/gbSound.cpp	/^	nr40, nr41, nr42, nr43, nr44,$/;"	e	enum:__anon151	file:
nr42	src/gb/gbSound.cpp	/^	nr40, nr41, nr42, nr43, nr44,$/;"	e	enum:__anon151	file:
nr43	src/gb/gbSound.cpp	/^	nr40, nr41, nr42, nr43, nr44,$/;"	e	enum:__anon151	file:
nr44	src/gb/gbSound.cpp	/^	nr40, nr41, nr42, nr43, nr44,$/;"	e	enum:__anon151	file:
nr50	src/gb/gbSound.cpp	/^	nr50, nr51, nr52$/;"	e	enum:__anon151	file:
nr51	src/gb/gbSound.cpp	/^	nr50, nr51, nr52$/;"	e	enum:__anon151	file:
nr52	src/gb/gbSound.cpp	/^	nr50, nr51, nr52$/;"	e	enum:__anon151	file:
nthreads	src/wx/panel.cpp	/^    int nthreads, threadno;$/;"	m	class:FilterThread	file:
nthreads	src/wx/wxvbam.h	/^    int nthreads;$/;"	m	class:DrawingPanel
numAttrs	src/gba/elf.h	/^  int numAttrs;$/;"	m	struct:ELFAbbrev
numDevices	src/win32/DirectInput.cpp	/^static int numDevices = 1;$/;"	v	file:
numProbs	fex/7z_C/LzmaDec.h	/^  UInt32 numProbs;$/;"	m	struct:__anon17
numRanges	src/gba/elf.h	/^  int numRanges;$/;"	m	struct:DebugInfo
num_def_accels	src/wx/opts.cpp	/^const int num_def_accels = sizeof(default_accels)\/sizeof(default_accels[0]);$/;"	v
num_makers	src/wx/cmdevents.cpp	394;"	d	file:
num_opts	src/wx/opts.cpp	/^const int num_opts = sizeof(opts)\/sizeof(opts[0]);$/;"	v
num_rewind_states	src/wx/wxvbam.h	/^    int num_rewind_states;$/;"	m	class:GameArea
number	src/gba/elf.h	/^  int number;$/;"	m	struct:LineInfo
number	src/gba/elf.h	/^  u32 number;$/;"	m	struct:ELFAbbrev
number	src/win32/GBOamView.h	/^  int number;$/;"	m	class:GBOamView
number	src/win32/OamView.h	/^  int number;$/;"	m	class:OamView
numberType	src/win32/GBACheats.h	/^  int    numberType;$/;"	m	class:AddCheat
numberType	src/win32/GBACheats.h	/^  int    numberType;$/;"	m	class:GBACheatSearch
numberType	src/win32/GBCheatsDlg.h	/^  int    numberType;$/;"	m	class:AddGBCheat
numberType	src/win32/GBCheatsDlg.h	/^  int    numberType;$/;"	m	class:GBCheatSearch
numbytes	src/gba/GBALink.h	/^	int numbytes;$/;"	m	class:lclient
numbytes	src/gba/GBALink.h	/^	int numbytes;$/;"	m	class:lserver
numgbas	src/gba/GBALink.h	/^	u8 numgbas;$/;"	m	struct:__anon45
numslaves	src/gba/GBALink.h	/^	int numslaves;$/;"	m	struct:__anon46
numtransfers	src/gba/GBALink.cpp	/^u16 numtransfers = 0;$/;"	v
numtransfers	src/gba/GBALink.h	/^	int numtransfers;$/;"	m	class:lclient
numtransfers	src/gba/GBALink.h	/^	u16 numtransfers;$/;"	m	struct:__anon45
oGetKey	src/gtk/configfile.h	/^T Section::oGetKey(const std::string & _rsKey) const$/;"	f	class:VBA::Config::Section
oalBufferCount	src/win32/VBA.h	/^  int oalBufferCount;$/;"	m	class:VBA
oalDevice	src/win32/VBA.h	/^  TCHAR *oalDevice;$/;"	m	class:VBA
oam	src/gba/Globals.cpp	/^u8 *oam = 0;$/;"	v
oamView	src/win32/GBOamView.h	/^  BitmapControl oamView;$/;"	m	class:GBOamView
oamView	src/win32/OamView.h	/^  BitmapControl oamView;$/;"	m	class:OamView
oamZoom	src/win32/GBOamView.h	/^  ZoomControl oamZoom;$/;"	m	class:GBOamView
oamZoom	src/win32/OamView.h	/^  ZoomControl oamZoom;$/;"	m	class:OamView
oap	src/wx/gfxviewers.cpp	/^	wxControl *pos, *tilelab, *prio, *oap, *pallab, *flg, *banklab;$/;"	m	class:Viewers::GBOAMViewer	file:
objLocation	src/sdl/exprNode.h	/^  u32 objLocation;$/;"	m	struct:Node
objTilesAddress	src/gba/GBA.cpp	/^const u32  objTilesAddress [3] = {0x010000, 0x014000, 0x014000};$/;"	v
oc	src/common/ffmpeg.h	/^    priv_AVFormatContext *oc;$/;"	m	class:MediaRecorder
offset	src/apu/Blip_Buffer.h	/^	void offset( blip_time_t t, int delta ) const { offset( t, delta, impl.buf ); }$/;"	f	class:Blip_Synth
offset	src/apu/Blip_Buffer.h	/^void Blip_Synth<quality,range>::offset( blip_time_t t, int delta, Blip_Buffer* buf ) const$/;"	f	class:Blip_Synth
offset	src/filters/hq/asm/hq3x_16.asm	/^offset        equ 28$/;"	d
offset	src/filters/hq/asm/hq3x_32.asm	/^offset       equ 28$/;"	d
offset	src/filters/hq/asm/hq4x_16.asm	/^offset       equ 28$/;"	d
offset	src/filters/hq/asm/hq4x_32.asm	/^offset       equ 28$/;"	d
offset	src/gba/CheatSearch.h	/^  u32 offset;$/;"	m	struct:CheatSearchBlock
offset	src/gba/GBA-arm.cpp	31;"	d	file:
offset	src/gba/elf.cpp	/^  s32 offset;$/;"	m	struct:ELFFrameStateRegister	file:
offset	src/gba/elf.cpp	/^  u32 offset;$/;"	m	struct:ELFcie	file:
offset	src/gba/elf.h	/^  u32 offset;$/;"	m	struct:ARanges
offset	src/gba/elf.h	/^  u32 offset;$/;"	m	struct:CompileUnit
offset	src/gba/elf.h	/^  u32 offset;$/;"	m	struct:ELFProgramHeader
offset	src/gba/elf.h	/^  u32 offset;$/;"	m	struct:ELFSectionHeader
offset	src/gba/elf.h	/^  u32 offset;$/;"	m	struct:Type
offset	src/win32/DirectInput.cpp	/^        DWORD offset;$/;"	m	struct:deviceInfo::__anon70	file:
offset	src/win32/IOViewerRegs.h	/^  u16 offset;$/;"	m	struct:IOData
offset	src/wx/ioregs.h	/^  u16 offset;$/;"	m	struct:IOData
offset_	src/apu/Blip_Buffer.h	/^	blip_resampled_time_t offset_;$/;"	m	class:Blip_Buffer
offset_	src/apu/Blip_Buffer.h	/^	blip_resampled_time_t offset_;$/;"	m	struct:blip_buffer_state_t
offset_inline	src/apu/Blip_Buffer.h	/^	void offset_inline( blip_time_t t, int delta ) const {$/;"	f	class:Blip_Synth
offset_inline	src/apu/Blip_Buffer.h	/^	void offset_inline( blip_time_t t, int delta, Blip_Buffer* buf ) const {$/;"	f	class:Blip_Synth
offset_resampled	src/apu/Blip_Buffer.h	/^inline void Blip_Synth<quality,range>::offset_resampled( blip_resampled_time_t time,$/;"	f	class:Blip_Synth
ofmt	src/wx/guiinit.cpp	/^    int ofmt, osize;$/;"	m	class:CheatFind_t	file:
okb	src/wx/guiinit.cpp	/^    wxButton *okb;$/;"	m	class:NetLink_t	file:
oldRegister_WY	src/gb/GB.cpp	/^u8 oldRegister_WY;$/;"	v
oldValue	src/gba/Cheats.h	/^  u32 oldValue;$/;"	m	struct:CheatsData
oldValue	src/win32/GBACheats.h	/^  char oldValue[12];$/;"	m	struct:WinCheatsData
oldValue	src/win32/GBCheatsDlg.h	/^  char oldValue[12];$/;"	m	struct:WinGbCheatsData
old_gba_state	src/gba/Sound.cpp	/^static variable_desc old_gba_state [] =$/;"	v	file:
old_gba_state2	src/gba/Sound.cpp	/^variable_desc old_gba_state2 [] =$/;"	v
old_rb	src/wx/guiinit.cpp	/^    wxRadioButton *old_rb, *val_rb;$/;"	m	class:CheatFind_t	file:
oldbuffer	src/gba/Globals.cpp	/^char oldbuffer[10];$/;"	v
oldest_state_slot	src/wx/wxvbam.cpp	/^int MainFrame::oldest_state_slot()$/;"	f	class:MainFrame
oldreg	src/gba/Globals.cpp	/^int  oldreg[18];$/;"	v
on_configure_event	src/gtk/screenarea.cpp	/^bool ScreenArea::on_configure_event(GdkEventConfigure * event)$/;"	f	class:VBA::ScreenArea
on_enter_notify_event	src/gtk/screenarea.cpp	/^bool ScreenArea::on_enter_notify_event(GdkEventCrossing * _pstEvent)$/;"	f	class:VBA::ScreenArea
on_expose_event	src/gtk/screenarea-cairo.cpp	/^bool ScreenAreaCairo::on_expose_event(GdkEventExpose * _pstEvent)$/;"	f	class:VBA::ScreenAreaCairo
on_expose_event	src/gtk/screenarea-opengl.cpp	/^bool ScreenAreaGl::on_expose_event(GdkEventExpose * _pstEvent)$/;"	f	class:VBA::ScreenAreaGl
on_focus_in_event	src/gtk/windowcallbacks.cpp	/^bool Window::on_focus_in_event(GdkEventFocus * _pstEvent)$/;"	f	class:VBA::Window
on_focus_out_event	src/gtk/windowcallbacks.cpp	/^bool Window::on_focus_out_event(GdkEventFocus * _pstEvent)$/;"	f	class:VBA::Window
on_key_press_event	src/gtk/joypadconfig.cpp	/^bool JoypadConfigDialog::on_key_press_event(GdkEventKey * _pstEvent)$/;"	f	class:VBA::JoypadConfigDialog
on_key_press_event	src/gtk/windowcallbacks.cpp	/^bool Window::on_key_press_event(GdkEventKey * _pstEvent)$/;"	f	class:VBA::Window
on_key_release_event	src/gtk/windowcallbacks.cpp	/^bool Window::on_key_release_event(GdkEventKey * _pstEvent)$/;"	f	class:VBA::Window
on_leave_notify_event	src/gtk/screenarea.cpp	/^bool ScreenArea::on_leave_notify_event(GdkEventCrossing * _pstEvent)$/;"	f	class:VBA::ScreenArea
on_motion_notify_event	src/gtk/screenarea.cpp	/^bool ScreenArea::on_motion_notify_event(GdkEventMotion * _pstEvent)$/;"	f	class:VBA::ScreenArea
on_realize	src/gtk/screenarea-opengl.cpp	/^void ScreenAreaGl::on_realize()$/;"	f	class:VBA::ScreenAreaGl
on_response	src/gtk/directoriesconfig.cpp	/^void DirectoriesConfigDialog::on_response(int response_id)$/;"	f	class:VBA::DirectoriesConfigDialog
on_response	src/gtk/joypadconfig.cpp	/^void JoypadConfigDialog::on_response(int response_id)$/;"	f	class:VBA::JoypadConfigDialog
on_window_state_event	src/gtk/windowcallbacks.cpp	/^bool Window::on_window_state_event(GdkEventWindowState* _pstEvent)$/;"	f	class:VBA::Window
oncewait	src/gba/GBALink.cpp	/^bool oncewait = false, after = false;$/;"	v
op	src/wx/guiinit.cpp	/^    int valsrc, size, op, fmt;$/;"	m	class:CheatFind_t	file:
opcodes	src/gb/gbDis.cpp	/^static GBOPCODE opcodes[] = {$/;"	v	file:
open	fex/fex/Data_Reader.cpp	/^blargg_err_t Gzip_File_Reader::open( const char path [] )$/;"	f	class:Gzip_File_Reader
open	fex/fex/Data_Reader.cpp	/^blargg_err_t Std_File_Reader::open( const char path [] )$/;"	f	class:Std_File_Reader
open	fex/fex/File_Extractor.cpp	/^blargg_err_t File_Extractor::open( File_Reader* input, const char* path )$/;"	f	class:File_Extractor
open	fex/fex/File_Extractor.cpp	/^blargg_err_t File_Extractor::open( const char path [] )$/;"	f	class:File_Extractor
open	fex/fex/Gzip_Reader.cpp	/^blargg_err_t Gzip_Reader::open( File_Reader* new_in )$/;"	f	class:Gzip_Reader
openGL	src/sdl/SDL.cpp	/^int openGL = 1;$/;"	v
open_arc_file	fex/fex/File_Extractor.cpp	/^blargg_err_t File_Extractor::open_arc_file( bool unbuffered )$/;"	f	class:File_Extractor
open_dir	src/wx/cmdevents.cpp	/^static wxString open_dir;$/;"	v	file:
open_ft	src/wx/cmdevents.cpp	/^static int open_ft = 0;$/;"	v	file:
open_path_v	fex/fex/Binary_Extractor.cpp	/^blargg_err_t Binary_Extractor::open_path_v()$/;"	f	class:Binary_Extractor
open_path_v	fex/fex/File_Extractor.cpp	/^blargg_err_t File_Extractor::open_path_v()$/;"	f	class:File_Extractor
open_path_v	fex/fex/Gzip_Extractor.cpp	/^blargg_err_t Gzip_Extractor::open_path_v()$/;"	f	class:Gzip_Extractor
open_path_v	fex/fex/Zip_Extractor.cpp	/^blargg_err_t Zip_Extractor::open_path_v()$/;"	f	class:Zip_Extractor
open_v	fex/fex/Binary_Extractor.cpp	/^blargg_err_t Binary_Extractor::open_v()$/;"	f	class:Binary_Extractor
open_v	fex/fex/File_Extractor.h	/^inline blargg_err_t File_Extractor::open_v()    { return blargg_ok; }$/;"	f	class:File_Extractor
open_v	fex/fex/Gzip_Extractor.cpp	/^blargg_err_t Gzip_Extractor::open_v()$/;"	f	class:Gzip_Extractor
open_v	fex/fex/Rar_Extractor.cpp	/^blargg_err_t Rar_Extractor::open_v()$/;"	f	class:Rar_Extractor
open_v	fex/fex/Zip7_Extractor.cpp	/^blargg_err_t Zip7_Extractor::open_v()$/;"	f	class:Zip7_Extractor
open_v	fex/fex/Zip_Extractor.cpp	/^blargg_err_t Zip_Extractor::open_v()$/;"	f	class:Zip_Extractor
opened	fex/fex/File_Extractor.h	/^	bool opened() const                         { return opened_; }$/;"	f	struct:fex_t
opened	fex/fex/Gzip_Reader.h	/^	bool opened() const                 { return in != NULL; }$/;"	f	class:Gzip_Reader
opened_	fex/fex/File_Extractor.h	/^	bool         opened_;$/;"	m	struct:fex_t
operator !=	src/win32/WinHelper.h	/^      inline bool operator != ( const CPoint &rhs ) const { return x != rhs.x || y != rhs.y; }$/;"	f	class:WinHelper::CPoint
operator !=	src/win32/WinHelper.h	/^      inline bool operator !=( const SIZE &size ) const { return cx != size.cx || cy != size.cy;}$/;"	f	class:WinHelper::CSize
operator ()	fex/fex/blargg_common.h	/^	void operator () ( T callback, void* user_data = NULL ) { f = callback; data = user_data; }$/;"	f	struct:blargg_callback
operator <<	src/gtk/configfile.cpp	/^std::ostream & operator<<(std::ostream & _roOut, const File & _roFile)$/;"	f	namespace:VBA::Config
operator =	src/win32/AcceleratorManager.cpp	/^CAcceleratorManager& CAcceleratorManager::operator=(const CAcceleratorManager& accelmgr)$/;"	f	class:CAcceleratorManager
operator =	src/win32/CmdAccelOb.cpp	/^CAccelsOb& CAccelsOb::operator=(const CAccelsOb& from)$/;"	f	class:CAccelsOb
operator =	src/win32/CmdAccelOb.cpp	/^CCmdAccelOb& CCmdAccelOb::operator=(const CCmdAccelOb& from)$/;"	f	class:CCmdAccelOb
operator =	src/win32/WinHelper.h	/^      inline CRect &operator = ( const RECT&rhs )$/;"	f	class:WinHelper::CRect
operator =	src/win32/WinHelper.h	/^      inline CSize & operator =( const SIZE &size ) { cx = size.cx; cy = size.cy; return *this; }$/;"	f	class:WinHelper::CSize
operator ==	src/win32/WinHelper.h	/^      inline bool operator == ( const CPoint &rhs ) const { return x == rhs.x && y == rhs.y; }$/;"	f	class:WinHelper::CPoint
operator LPCRECT	src/win32/WinHelper.h	/^      inline operator LPCRECT() const { return this; };$/;"	f	class:WinHelper::CRect
operator LPPOINT	src/win32/WinHelper.h	/^      inline operator LPPOINT () { return this; }$/;"	f	class:WinHelper::CPoint
operator LPRECT	src/win32/WinHelper.h	/^      inline operator LPRECT() { return this; };$/;"	f	class:WinHelper::CRect
operator LPSIZE	src/win32/WinHelper.h	/^      inline operator LPSIZE() { return this; };$/;"	f	class:WinHelper::CSize
operator T*	src/common/Array.h	/^	operator T*() { return a; }$/;"	f	class:Array
operator []	fex/fex/blargg_common.h	/^	T& operator [] ( size_t n )$/;"	f	class:blargg_vector
operator []	fex/fex/blargg_common.h	/^	const T& operator [] ( size_t n ) const$/;"	f	class:blargg_vector
operator []	src/apu/blargg_common.h	/^	T& operator [] ( size_t n ) const$/;"	f	class:blargg_vector
operator const T*	src/common/Array.h	/^	operator const T*() const { return a; }$/;"	f	class:Array
operator delete	src/apu/Effects_Buffer.h	/^		void operator delete ( void* ) { }$/;"	f	struct:Effects_Buffer::buf_t
operator new	src/apu/Effects_Buffer.h	/^		void* operator new ( size_t, void* p ) { return p; }$/;"	f	struct:Effects_Buffer::buf_t
opt	src/wx/opts.h	/^    const wxChar *opt, *desc;$/;"	m	struct:opt_desc
opt_desc	src/wx/opts.h	/^extern struct opt_desc {$/;"	s
opt_lt	src/wx/opts.cpp	/^bool opt_lt(const opt_desc &opt1, const opt_desc &opt2)$/;"	f
opt_set	src/wx/opts.cpp	/^bool opt_set(const wxChar *name, const wxChar *val)$/;"	f
optarg	src/sdl/getopt.c	/^char *optarg = NULL;$/;"	v
opterr	src/sdl/getopt.c	/^int opterr = 1;$/;"	v
optind	src/sdl/getopt.c	/^int optind = 1;$/;"	v
option	src/sdl/getopt.h	/^struct option$/;"	s
optional_argument	src/sdl/getopt.h	100;"	d
optopt	src/sdl/getopt.c	/^int optopt = '?';$/;"	v
opts	src/wx/opts.cpp	/^opt_desc opts[] = {$/;"	v
opts_t	src/wx/opts.cpp	/^opts_t::opts_t()$/;"	f	class:opts_t
opts_t	src/wx/opts.h	/^extern struct opts_t {$/;"	s
ordering	src/sdl/getopt.c	/^} ordering;$/;"	v	typeref:enum:__anon54	file:
original_argc	src/sdl/getopt.c	/^static int original_argc;$/;"	v	file:
original_argv	src/sdl/getopt.c	/^static char *const *original_argv;$/;"	v	file:
osc_count	src/apu/Gb_Apu.h	/^	enum { osc_count = 4 }; \/\/ 0: Square 1, 1: Square 2, 2: Wave, 3: Noise$/;"	e	enum:Gb_Apu::__anon140
osc_output	src/apu/Gb_Apu.h	/^	BLARGG_DEPRECATED void osc_output( int i, Blip_Buffer* c                                 ) { set_output( c, c, c, i ); }$/;"	f	class:Gb_Apu
osc_output	src/apu/Gb_Apu.h	/^	BLARGG_DEPRECATED void osc_output( int i, Blip_Buffer* c, Blip_Buffer* l, Blip_Buffer* r ) { set_output( c, l, r, i ); }$/;"	f	class:Gb_Apu
oscs	src/apu/Gb_Apu.h	/^	Gb_Osc*     oscs [osc_count];$/;"	m	class:Gb_Apu
osd_speed	src/wx/opts.h	/^    int osd_speed;$/;"	m	struct:opts_t
osd_transparent	src/wx/opts.h	/^    bool osd_transparent;$/;"	m	struct:opts_t
osdstat	src/wx/wxvbam.h	/^    wxString osdstat;$/;"	m	class:GameArea
osdtext	src/wx/wxvbam.h	/^    wxString osdtext;$/;"	m	class:GameArea
osdtime	src/wx/wxvbam.h	/^    u32 osdtime;$/;"	m	class:GameArea
osize	src/wx/guiinit.cpp	/^    int ofmt, osize;$/;"	m	class:CheatFind_t	file:
other	src/gba/elf.h	/^  u8 other;$/;"	m	struct:ELFSymbol
out_16	src/wx/panel.cpp	1033;"	d	file:
outbuf	src/common/memgzio.c	/^    Byte     *outbuf; \/* output buffer *\/$/;"	m	struct:mem_stream	file:
outbuffer	src/filters/hq/asm/hq3x_16.asm	/^outbuffer    equ 12$/;"	d
outbuffer	src/filters/hq/asm/hq3x_32.asm	/^outbuffer    equ 12$/;"	d
outbuffer	src/filters/hq/asm/hq4x_16.asm	/^outbuffer    equ 12$/;"	d
outbuffer	src/filters/hq/asm/hq4x_32.asm	/^outbuffer    equ 12$/;"	d
outbuffer	src/gba/GBALink.h	/^	char inbuffer[256], outbuffer[256];$/;"	m	class:lclient
outbuffer	src/gba/GBALink.h	/^	char inbuffer[256], outbuffer[256];$/;"	m	class:lserver
output	src/apu/Blip_Buffer.h	/^	Blip_Buffer* output() const                 { return impl.buf; }$/;"	f	class:Blip_Synth
output	src/apu/Blip_Buffer.h	/^	void output( Blip_Buffer* b )               { impl.buf = b; impl.last_amp = 0; }$/;"	f	class:Blip_Synth
output	src/apu/Gb_Apu.h	/^	BLARGG_DEPRECATED void output    (        Blip_Buffer* c                                 ) { set_output( c, c, c    ); }$/;"	f	class:Gb_Apu
output	src/apu/Gb_Apu.h	/^	BLARGG_DEPRECATED void output    (        Blip_Buffer* c, Blip_Buffer* l, Blip_Buffer* r ) { set_output( c, l, r    ); }$/;"	f	class:Gb_Apu
output	src/apu/Gb_Oscs.h	/^	Blip_Buffer*    output;     \/\/ where to output sound$/;"	m	class:Gb_Osc
output	src/gba/Sound.cpp	/^	Blip_Buffer* output;$/;"	m	class:Gba_Pcm	file:
output_latency	src/apu/Blip_Buffer.h	/^inline int  Blip_Buffer::output_latency() const { return blip_widest_impulse_ \/ 2; }$/;"	f	class:Blip_Buffer
outputs	src/apu/Gb_Oscs.h	/^	Blip_Buffer*    outputs [4];\/\/ NULL, right, left, center$/;"	m	class:Gb_Osc
overflow	src/wx/gfxviewers.cpp	/^	    *overflow;$/;"	m	class:Viewers::MapViewer	file:
overrides	src/wx/wxvbam.h	/^    wxFileConfig *overrides;$/;"	m	class:wxvbamApp
own_data_	fex/fex/File_Extractor.h	/^	blargg_vector<char> own_data_;$/;"	m	struct:fex_t
own_file	fex/fex/File_Extractor.h	/^	void own_file()                     { own_file_ = reader_; }$/;"	f	struct:fex_t
own_file_	fex/fex/File_Extractor.h	/^	File_Reader* own_file_;$/;"	m	struct:fex_t
ox	src/wx/viewsupt.h	/^	int ox, oy, selx, sely;$/;"	m	class:Viewers::PixView
oy	src/wx/viewsupt.h	/^	int ox, oy, selx, sely;$/;"	m	class:Viewers::PixView
p	fex/7z_C/7zDec.c	/^  IByteIn p;$/;"	m	struct:__anon37	file:
p	fex/7z_C/Ppmd7.h	/^  IPpmd7_RangeDec p;$/;"	m	struct:__anon8
p	src/wx/guiinit.cpp	/^    wxWindow *p;$/;"	m	class:GBColorConfig_t	file:
p	src/wx/guiinit.cpp	/^    wxWindow *p;$/;"	m	class:JoyPadConfig_t	file:
p	src/wx/sys.cpp	/^    wxPanel *p;$/;"	m	class:PrintDialog	file:
pBuffer16	src/win32/rpi.cpp	/^u8 *pBuffer16 = NULL;$/;"	v
pD3D	src/win32/Direct3D.cpp	/^	LPDIRECT3D9           pD3D;$/;"	m	class:Direct3DDisplay	file:
pD3D	src/win32/FullscreenSettings.h	/^	LPDIRECT3D9 pD3D;$/;"	m	class:FullscreenSettings
pDevice	src/win32/Direct3D.cpp	/^	LPDIRECT3DDEVICE9     pDevice;$/;"	m	class:Direct3DDisplay	file:
pDevices	src/win32/DirectInput.cpp	/^static deviceInfo *pDevices = NULL;$/;"	v	file:
pDirectInput	src/win32/DirectInput.cpp	/^static LPDIRECTINPUT8 pDirectInput = NULL;$/;"	v	file:
pDirectSound	src/win32/DirectSound.cpp	/^	LPDIRECTSOUND8       pDirectSound; \/\/ DirectSound interface$/;"	m	class:DirectSound	file:
pDirectSound	src/wx/dsound.cpp	/^	LPDIRECTSOUND8       pDirectSound; \/\/ DirectSound interface$/;"	m	class:DirectSound	file:
pEnumerator	src/win32/XAudio2.cpp	/^	IMMDeviceEnumerator *pEnumerator;$/;"	m	class:XAudio2_Device_Notifier	file:
pEnumerator	src/wx/xaudio2.cpp	/^	IMMDeviceEnumerator *pEnumerator;$/;"	m	class:XAudio2_Device_Notifier	file:
pFont	src/win32/Direct3D.cpp	/^	ID3DXFont             *pFont;$/;"	m	class:Direct3DDisplay	file:
packSize	fex/7z_C/Lzma2Dec.h	/^  UInt32 packSize;$/;"	m	struct:__anon34
pad	src/gba/elf.h	/^  u8 pad[9];$/;"	m	struct:ELFHeader
paddr	src/gba/elf.h	/^  u32 paddr;$/;"	m	struct:ELFProgramHeader
pagedata	src/wx/sys.cpp	/^    static wxPageSetupDialogData *pagedata;$/;"	m	class:PrintDialog	file:
pagedata	src/wx/sys.cpp	/^wxPageSetupDialogData *PrintDialog::pagedata = NULL;$/;"	m	class:PrintDialog	file:
paint	src/win32/GBMapView.cpp	/^void GBMapView::paint()$/;"	f	class:GBMapView
paint	src/win32/GBOamView.cpp	/^void GBOamView::paint()$/;"	f	class:GBOamView
paint	src/win32/GBTileView.cpp	/^void GBTileView::paint()$/;"	f	class:GBTileView
paint	src/win32/MapView.cpp	/^void MapView::paint()$/;"	f	class:MapView
paint	src/win32/OamView.cpp	/^void OamView::paint()$/;"	f	class:OamView
paint	src/win32/TileView.cpp	/^void TileView::paint()$/;"	f	class:TileView
painting	src/win32/VBA.h	/^  bool painting;$/;"	m	class:VBA
palette	src/gba/GBA.cpp	/^      \/*14*\/	unsigned palette:4;$/;"	m	struct:TileEntry::__anon42	file:
palette	src/win32/GBTileView.h	/^  int palette;$/;"	m	class:GBTileView
palette	src/win32/PaletteViewControl.h	/^  u16 palette[256];$/;"	m	class:PaletteViewControl
palette	src/win32/TileView.h	/^  int palette;$/;"	m	class:TileView
palette	src/wx/gfxviewers.cpp	/^	int bank, charbase, palette;$/;"	m	class:Viewers::GBTileViewer	file:
palette	src/wx/gfxviewers.cpp	/^	int charbase, is256, palette;$/;"	m	class:Viewers::TileViewer	file:
palette	src/wx/gfxviewers.cpp	/^	wxControl *coords, *addr, *tile, *flip, *palette, *prio;$/;"	m	class:Viewers::GBMapViewer	file:
palette	src/wx/gfxviewers.cpp	/^	wxControl *coords, *addr, *tile, *flip, *palette;$/;"	m	class:Viewers::MapViewer	file:
paletteAddress	src/win32/PaletteViewControl.h	/^  int paletteAddress;$/;"	m	class:PaletteViewControl
paletteRAM	src/gba/Globals.cpp	/^u8 *paletteRAM = 0;$/;"	v
paletteView	src/win32/GBPaletteView.h	/^  GBPaletteViewControl paletteView;$/;"	m	class:GBPaletteView
paletteView	src/win32/PaletteView.h	/^  GBAPaletteViewControl paletteView;$/;"	m	class:PaletteView
paletteViewOBJ	src/win32/GBPaletteView.h	/^  GBPaletteViewControl paletteViewOBJ;$/;"	m	class:GBPaletteView
paletteViewOBJ	src/win32/PaletteView.h	/^  GBAPaletteViewControl paletteViewOBJ;$/;"	m	class:PaletteView
pallab	src/wx/gfxviewers.cpp	/^	wxControl *pos, *mode, *colors, *pallab, *tile, *prio, *size, *rot, *flg;$/;"	m	class:Viewers::OAMViewer	file:
pallab	src/wx/gfxviewers.cpp	/^	wxControl *pos, *tilelab, *prio, *oap, *pallab, *flg, *banklab;$/;"	m	class:Viewers::GBOAMViewer	file:
pan	src/apu/Effects_Buffer.h	/^		float pan; \/\/ -1.0 = left, 0.0 = center, +1.0 = right$/;"	m	struct:Effects_Buffer::pan_vol_t
pan_vol_t	src/apu/Effects_Buffer.h	/^	struct pan_vol_t$/;"	s	class:Effects_Buffer
panel	src/wx/wxvbam.h	/^    DrawingPanel *panel;$/;"	m	class:GameArea
panel	src/wx/wxvbam.h	/^    GameArea *panel;$/;"	m	class:MainFrame
parameters	src/gba/elf.h	/^  Object *parameters;$/;"	m	struct:Function
parseDebug	src/gba/Globals.cpp	/^bool parseDebug = true;$/;"	v
patchApplyIPS	src/common/Patch.cpp	/^static bool patchApplyIPS(const char *patchname, u8 **r, int *s)$/;"	f	file:
patchApplyPPF	src/common/Patch.cpp	/^static bool patchApplyPPF(const char *patchname, u8 **rom, int *size)$/;"	f	file:
patchApplyPPF1	src/common/Patch.cpp	/^static bool patchApplyPPF1(FILE *f, u8 **rom, int *size)$/;"	f	file:
patchApplyPPF2	src/common/Patch.cpp	/^static bool patchApplyPPF2(FILE *f, u8 **rom, int *size)$/;"	f	file:
patchApplyPPF3	src/common/Patch.cpp	/^static bool patchApplyPPF3(FILE *f, u8 **rom, int *size)$/;"	f	file:
patchApplyUPS	src/common/Patch.cpp	/^static bool patchApplyUPS(const char *patchname, u8 **rom, int *size)$/;"	f	file:
path	src/libretro/libretro.h	/^   const char *path;       \/\/ Path to game, UTF-8 encoded. Usually used as a reference.$/;"	m	struct:retro_game_info
path_	fex/fex/File_Extractor.h	/^	blargg_vector<char> path_;$/;"	m	struct:fex_t
pause	src/common/SoundSDL.cpp	/^void SoundSDL::pause()$/;"	f	class:SoundSDL
pause	src/libretro/SoundRetro.cpp	/^void SoundRetro::pause()$/;"	f	class:SoundRetro
pause	src/win32/DirectSound.cpp	/^void DirectSound::pause()$/;"	f	class:DirectSound
pause	src/win32/OpenAL.cpp	/^void OpenAL::pause()$/;"	f	class:OpenAL
pause	src/win32/XAudio2.cpp	/^void XAudio2_Output::pause()$/;"	f	class:XAudio2_Output
pause	src/wx/dsound.cpp	/^void DirectSound::pause()$/;"	f	class:DirectSound
pause	src/wx/openal.cpp	/^void OpenAL::pause()$/;"	f	class:OpenAL
pause	src/wx/xaudio2.cpp	/^void XAudio2_Output::pause()$/;"	f	class:XAudio2_Output
pauseNextFrame	src/sdl/SDL.cpp	/^bool pauseNextFrame = false;$/;"	v
pauseWhenInactive	src/sdl/SDL.cpp	/^int pauseWhenInactive = 0;$/;"	v
pauseWhenInactive	src/win32/VBA.h	/^  bool pauseWhenInactive;$/;"	m	class:VBA
pause_next	src/wx/sys.cpp	/^bool pause_next;$/;"	v
paused	src/sdl/SDL.cpp	/^bool paused = false;$/;"	v
paused	src/win32/VBA.h	/^  bool paused;$/;"	m	class:VBA
paused	src/wx/wxvbam.h	/^    bool paused;$/;"	m	class:GameArea
paused	src/wx/wxvbam.h	/^    bool paused;$/;"	m	class:MainFrame
pb	fex/7z_C/LzmaDec.h	/^  unsigned lc, lp, pb;$/;"	m	struct:_CLzmaProps
pc	src/gba/elf.cpp	/^  u32 pc;$/;"	m	struct:ELFFrameState	file:
pcm	src/gba/Sound.cpp	/^	Gba_Pcm pcm;$/;"	m	class:Gba_Pcm_Fifo	file:
pcm	src/gba/Sound.cpp	/^static Gba_Pcm_Fifo     pcm [2];$/;"	v	file:
pcm_synth	src/gba/Sound.cpp	/^static Blip_Synth<blip_best_quality,1> pcm_synth [3]; \/\/ 32 kHz, 16 kHz, 8 kHz$/;"	v	file:
pcsGetFilterIBName	src/gtk/filters.cpp	/^const char* pcsGetFilterIBName(const EFilterIB _eFilterIB)$/;"	f	namespace:VBA
pcsGetFilterName	src/gtk/filters.cpp	/^const char* pcsGetFilterName(const EFilter _eFilter)$/;"	f	namespace:VBA
pcszName	src/win32/ResizeDlg.cpp	/^  LPCTSTR pcszName;$/;"	m	struct:DialogData	file:
pdir	src/wx/gfxviewers.cpp	/^    static wxString pdir;$/;"	m	namespace:Viewers	file:
pending_fullscreen	src/wx/wxvbam.h	/^    bool pending_fullscreen;$/;"	m	class:wxvbamApp
pending_load	src/wx/wxvbam.h	/^    wxString pending_load;$/;"	m	class:wxvbamApp
pending_optset	src/wx/wxvbam.h	/^    wxArrayString pending_optset;$/;"	m	class:wxvbamApp
period	src/apu/Gb_Oscs.h	/^	int period() const { return (2048 - frequency()) * (2 * clk_mul); }$/;"	f	class:Gb_Wave
period	src/apu/Gb_Oscs.h	/^	int period() const { return (2048 - frequency()) * (4 * clk_mul); }$/;"	f	class:Gb_Square
period2	src/apu/Gb_Oscs.h	/^	int period2( int base = 8 ) const { return base << period2_index(); }$/;"	f	class:Gb_Noise
period2_index	src/apu/Gb_Oscs.h	/^	int period2_index() const { return regs [3] >> 4; }$/;"	f	class:Gb_Noise
period2_mask	src/apu/Gb_Oscs.h	/^	enum { period2_mask = 0x1FFFF };$/;"	e	enum:Gb_Noise::__anon136
period_mask	src/apu/Gb_Oscs.h	/^	enum { period_mask = 0x70 };$/;"	e	enum:Gb_Sweep_Square::__anon134
pfthread_data	src/win32/Direct3D.cpp	/^	PFTHREAD_DATA         *pfthread_data;$/;"	m	class:Direct3DDisplay	file:
pfthread_func	src/win32/Direct3D.cpp	/^DWORD WINAPI pfthread_func( LPVOID lpParameter )$/;"	f
phase	src/apu/Gb_Apu.h	/^	val_t phase      [4];$/;"	m	struct:gb_apu_state_t
phase	src/apu/Gb_Oscs.h	/^	unsigned    phase;      \/\/ waveform phase (or equivalent)$/;"	m	class:Gb_Osc
pic	src/common/ffmpeg.h	/^    priv_AVFrame *pic, *convpic;$/;"	m	class:MediaRecorder
pitch	src/filters/hq/asm/hq3x_16.asm	/^pitch        equ 24$/;"	d
pitch	src/filters/hq/asm/hq3x_32.asm	/^pitch        equ 24$/;"	d
pitch	src/filters/hq/asm/hq4x_16.asm	/^pitch        equ 24$/;"	d
pitch	src/filters/hq/asm/hq4x_32.asm	/^pitch        equ 24$/;"	d
pitch	src/win32/OpenGL.cpp	/^	int pitch;$/;"	m	class:OpenGLDisplay	file:
pix	src/gba/Globals.cpp	/^u8 *pix = 0;$/;"	v
pixbuf1	src/wx/wxvbam.h	/^    u8 *pixbuf1, *pixbuf2;$/;"	m	class:DrawingPanel
pixbuf2	src/wx/wxvbam.h	/^    u8 *pixbuf1, *pixbuf2;$/;"	m	class:DrawingPanel
pixelFilterType	src/win32/VBA.h	/^enum pixelFilterType$/;"	g
pixels	src/gba/GBA.cpp	/^   u32 pixels[8];$/;"	m	struct:TileLine	file:
pixfmt	src/common/ffmpeg.h	/^    priv_PixelFormat pixfmt;$/;"	m	class:MediaRecorder
pixsize	src/common/ffmpeg.h	/^    int linesize, pixsize;$/;"	m	class:MediaRecorder
pixview	src/wx/viewsupt.h	276;"	d
platform	src/libretro/Makefile	/^   platform = osx$/;"	m
platform	src/libretro/Makefile	/^   platform = win$/;"	m
platform	src/libretro/Makefile	/^platform = unix$/;"	m
playing	src/win32/XAudio2.cpp	/^	bool   playing;$/;"	m	class:XAudio2_Output	file:
playing	src/wx/xaudio2.cpp	/^	bool   playing;$/;"	m	class:XAudio2_Output	file:
pluginName	src/win32/VBA.h	/^  char pluginName[MAX_PATH];$/;"	m	class:VBA
plugins	src/wx/guiinit.cpp	/^    wxArrayString plugins;$/;"	m	class:PluginListFiller	file:
pno	src/wx/guiinit.cpp	/^    int pno;$/;"	m	class:GBColorConfig_t	file:
poAddSection	src/gtk/configfile.cpp	/^Section * File::poAddSection(const string & _rsName)$/;"	f	class:VBA::Config::File
poGetInstance	src/gtk/window.h	/^  inline static Window * poGetInstance() { return m_poInstance; }$/;"	f	class:VBA::Window
poGetSection	src/gtk/configfile.cpp	/^Section * File::poGetSection(const string & _rsName)$/;"	f	class:VBA::Config::File
pointer	src/gba/elf.h	/^    Type *pointer;$/;"	m	union:Type::__anon40
pointer_blanked	src/wx/wxvbam.h	/^    bool pointer_blanked;$/;"	m	class:GameArea
poll_cb	src/libretro/libretro.cpp	/^static retro_input_poll_t poll_cb;$/;"	v	file:
popup	src/win32/VBA.h	/^  HMENU popup;$/;"	m	class:VBA
popups	src/wx/wxvbam.h	/^    dialog_list_t popups;$/;"	m	class:MainFrame
port	src/libretro/libretro.h	/^   unsigned port;$/;"	m	struct:retro_input_descriptor
port	src/win32/GDBConnection.h	/^  int port;$/;"	m	class:GDBPortDlg
port	src/win32/GDBConnection.h	/^  int port;$/;"	m	class:GDBWaitingDlg
pos	fex/7z_C/7zBuf.h	/^  size_t pos;$/;"	m	struct:__anon4
pos	fex/7z_C/Types.h	/^  size_t pos;$/;"	m	struct:__anon29
pos	fex/fex/Rar_Extractor.h	/^		int pos;$/;"	m	struct:Rar_Extractor::read_callback_t
pos	src/wx/gfxviewers.cpp	/^	wxControl *pos, *mode, *colors, *pallab, *tile, *prio, *size, *rot, *flg;$/;"	m	class:Viewers::OAMViewer	file:
pos	src/wx/gfxviewers.cpp	/^	wxControl *pos, *tilelab, *prio, *oap, *pallab, *flg, *banklab;$/;"	m	class:Viewers::GBOAMViewer	file:
pos_offset	fex/fex/File_Extractor.cpp	/^int const pos_offset = 1;$/;"	v
positive	src/win32/DirectInput.cpp	/^        LONG positive;$/;"	m	struct:deviceInfo::__anon70	file:
posixly_correct	src/sdl/getopt.c	/^static char *posixly_correct;$/;"	v	file:
power_mask	src/apu/Gb_Apu.cpp	/^int const power_mask = 0x80;$/;"	v
ppfFileIdLen	src/common/Patch.cpp	/^static int ppfFileIdLen(FILE *f, int version)$/;"	f	file:
ppfVersion	src/common/Patch.cpp	/^static int ppfVersion(FILE *f)$/;"	f	file:
preInitialize	src/win32/VBA.cpp	/^bool VBA::preInitialize()$/;"	f	class:VBA
prepareDisplayMode	src/win32/Direct3D.cpp	/^void Direct3DDisplay::prepareDisplayMode()$/;"	f	class:Direct3DDisplay
prevSoundEnable	src/gb/gbSound.cpp	/^static int prevSoundEnable = -1;$/;"	v	file:
prev_val	src/wx/widgets/wx/sdljoy.h	/^    short prev_val;$/;"	m	class:wxSDLJoyEvent
previous	src/gba/elf.cpp	/^  ELFFrameStateRegisters *previous;$/;"	m	struct:ELFFrameStateRegisters	file:
prevline	src/filters/hq/asm/hq3x_16.asm	/^prevline  equ 20$/;"	d
prevline	src/filters/hq/asm/hq3x_32.asm	/^prevline  equ 20$/;"	d
prevline	src/filters/hq/asm/hq4x_16.asm	/^prevline  equ 20$/;"	d
prevline	src/filters/hq/asm/hq4x_32.asm	/^prevline  equ 20$/;"	d
print	src/sdl/exprNode.h	/^  void (*print)(Node *);$/;"	m	struct:Node
print_auto_page	src/wx/opts.h	/^    bool print_auto_page, print_screen_cap;$/;"	m	struct:opts_t
print_screen_cap	src/wx/opts.h	/^    bool print_auto_page, print_screen_cap;$/;"	m	struct:opts_t
printdata	src/wx/sys.cpp	/^    static wxPrintData *printdata;$/;"	m	class:PrintDialog	file:
printdata	src/wx/sys.cpp	/^wxPrintData *PrintDialog::printdata = NULL;$/;"	m	class:PrintDialog	file:
prio	src/wx/gfxviewers.cpp	/^	wxControl *coords, *addr, *tile, *flip, *palette, *prio;$/;"	m	class:Viewers::GBMapViewer	file:
prio	src/wx/gfxviewers.cpp	/^	wxControl *modelab, *mapbase, *charbase, *size, *colors, *prio, *mosaic,$/;"	m	class:Viewers::MapViewer	file:
prio	src/wx/gfxviewers.cpp	/^	wxControl *pos, *mode, *colors, *pallab, *tile, *prio, *size, *rot, *flg;$/;"	m	class:Viewers::OAMViewer	file:
prio	src/wx/gfxviewers.cpp	/^	wxControl *pos, *tilelab, *prio, *oap, *pallab, *flg, *banklab;$/;"	m	class:Viewers::GBOAMViewer	file:
priv_AVFormatContext	src/common/ffmpeg.cpp	56;"	d	file:
priv_AVFormatContext	src/common/ffmpeg.h	57;"	d
priv_AVFrame	src/common/ffmpeg.cpp	59;"	d	file:
priv_AVFrame	src/common/ffmpeg.h	60;"	d
priv_AVOutputFormat	src/common/ffmpeg.cpp	58;"	d	file:
priv_AVOutputFormat	src/common/ffmpeg.h	59;"	d
priv_AVStream	src/common/ffmpeg.cpp	57;"	d	file:
priv_AVStream	src/common/ffmpeg.h	58;"	d
priv_PixelFormat	src/common/ffmpeg.cpp	61;"	d	file:
priv_PixelFormat	src/common/ffmpeg.h	62;"	d
priv_SwsContext	src/common/ffmpeg.cpp	60;"	d	file:
priv_SwsContext	src/common/ffmpeg.h	61;"	d
probs	fex/7z_C/LzmaDec.h	/^  CLzmaProb *probs;$/;"	m	struct:__anon17
processData	src/win32/GBPrinterDlg.cpp	/^void GBPrinterDlg::processData(u8 *data)$/;"	f	class:GBPrinterDlg
process_key_press	src/wx/panel.cpp	/^static void process_key_press(bool down, int key, int mod, int joy = 0)$/;"	f	file:
processed	fex/7z_C/7zDec.c	/^  UInt64 processed;$/;"	m	struct:__anon37	file:
processedPos	fex/7z_C/LzmaDec.h	/^  UInt32 processedPos;$/;"	m	struct:__anon17
product1a	src/filters/2xSaImmx.asm	/^                   product1a = INTERPOLATE (color2, color5);$/;"	d
product1a	src/filters/2xSaImmx.asm	/^                   product1a = INTERPOLATE(color2, color5);$/;"	d
product1a	src/filters/2xSaImmx.asm	/^                   product1a = color5;$/;"	d
product1a	src/filters/2xSaImmx.asm	/^product1a     resb 8$/;"	l
product1b	src/filters/2xSaImmx.asm	/^                      product1b = INTERPOLATE (color5, color6);$/;"	d
product1b	src/filters/2xSaImmx.asm	/^                      product1b = Q_INTERPOLATE (color6, color5, color5, color5);$/;"	d
product1b	src/filters/2xSaImmx.asm	/^                      product1b = Q_INTERPOLATE (color6, color6, color6, color5);$/;"	d
product1b	src/filters/2xSaImmx.asm	/^product1b     resb 8$/;"	l
product2a	src/filters/2xSaImmx.asm	/^                   product2a = INTERPOLATE (color2, color5);$/;"	d
product2a	src/filters/2xSaImmx.asm	/^                   product2a = INTERPOLATE(color2, color5);$/;"	d
product2a	src/filters/2xSaImmx.asm	/^                   product2a = color2;$/;"	d
product2a	src/filters/2xSaImmx.asm	/^product2a     resb 8$/;"	l
product2b	src/filters/2xSaImmx.asm	/^                      product2b = INTERPOLATE (color2, color3);$/;"	d
product2b	src/filters/2xSaImmx.asm	/^                      product2b = Q_INTERPOLATE (color2, color2, color2, color3);$/;"	d
product2b	src/filters/2xSaImmx.asm	/^                      product2b = Q_INTERPOLATE (color3, color3, color3, color2);$/;"	d
product2b	src/filters/2xSaImmx.asm	/^product2b     resb 8$/;"	l
profilSegment	src/gba/GBA.cpp	/^static profile_segment *profilSegment = NULL;$/;"	v	file:
profilingTicks	src/gba/GBA.cpp	/^int profilingTicks = 0;$/;"	v
profilingTicksReload	src/gba/GBA.cpp	/^int profilingTicksReload = 0;$/;"	v
prop	fex/7z_C/LzmaDec.h	/^  CLzmaProps prop;$/;"	m	struct:__anon17
prsav_path	src/wx/sys.cpp	/^static wxString prsav_path;$/;"	v	file:
psd	src/win32/ResizeDlg.cpp	/^  DialogSizerSizingItem *psd;$/;"	m	struct:DialogData	file:
psoundTickfn	src/gba/Sound.cpp	/^void psoundTickfn()$/;"	f
ptr16	src/wx/widgets/wx/wxmisc.h	/^    uint16_t *ptr16;$/;"	m	class:wxColorValidator
ptr32	src/wx/widgets/wx/wxmisc.h	/^    uint32_t *ptr32;$/;"	m	class:wxColorValidator
pty_master	src/wx/sys.cpp	/^static int pty_master = -1;$/;"	v	file:
pty_slave	src/wx/sys.cpp	/^static wxString pty_slave;$/;"	v	file:
ptype	src/wx/gfxviewers.cpp	/^    static int ptype = 0;$/;"	m	namespace:Viewers	file:
putLong	src/common/memgzio.c	/^local void putLong (file, x)$/;"	f
pv	src/wx/viewsupt.h	/^	PixView *pv;$/;"	m	class:Viewers::GfxPanel
pvGetFilter	src/gtk/filters.cpp	/^Filter pvGetFilter(EFilter _eFilter, EFilterDepth _eDepth)$/;"	f	namespace:VBA
pvGetFilterIB	src/gtk/filters.cpp	/^FilterIB pvGetFilterIB(EFilterIB _eFilterIB, EFilterDepth _eDepth)$/;"	f	namespace:VBA
pvReserved	src/win32/FileDlg.h	/^  void *        pvReserved;$/;"	m	struct:OPENFILENAMEEX
qRGB_COLOR_MASK	src/filters/2xSaI.cpp	/^u32 qRGB_COLOR_MASK[2] = { 0xF7DEF7DE, 0xF7DEF7DE };$/;"	v
qcolorMask	src/filters/2xSaI.cpp	/^static u32 qcolorMask = 0xE79CE79C;$/;"	v	file:
qcolorMask	src/filters/2xSaImmx.asm	/^qcolorMask    dd 0xE79CE79C,0xE79CE79C$/;"	d
qlowpixelMask	src/filters/2xSaI.cpp	/^static u32 qlowpixelMask = 0x18631863;$/;"	v	file:
qlowpixelMask	src/filters/2xSaImmx.asm	/^qlowpixelMask dd 0x18631863,0x18631863$/;"	d
r	src/wx/viewsupt.h	/^	int r, g, b;$/;"	m	class:Viewers::ColorView
range	fex/7z_C/LzmaDec.h	/^  UInt32 range, code;$/;"	m	struct:__anon17
ranges	src/gba/elf.h	/^  ARange *ranges;$/;"	m	struct:ARanges
ranges	src/gba/elf.h	/^  ARanges *ranges;$/;"	m	struct:CompileUnit
ranges	src/gba/elf.h	/^  ARanges *ranges;$/;"	m	struct:DebugInfo
raw_remain	fex/fex/Zip_Extractor.h	/^	int raw_remain;     \/\/ bytes remaining to be read from zip file for current file$/;"	m	class:Zip_Extractor
raw_size	fex/fex/Zip_Extractor.cpp	/^	byte raw_size [4];$/;"	m	struct:entry_t	file:
raw_size	fex/fex/Zip_Extractor.cpp	/^	byte raw_size [4];$/;"	m	struct:header_t	file:
rawaddress	src/gba/Cheats.h	/^  u32 rawaddress;$/;"	m	struct:CheatsData
read	fex/fex/Data_Reader.cpp	/^blargg_err_t Data_Reader::read( void* p, int n )$/;"	f	class:Data_Reader
read	fex/fex/Zlib_Inflater.cpp	/^blargg_err_t Zlib_Inflater::read( void* out, int* count_io )$/;"	f	class:Zlib_Inflater
read	src/apu/Blip_Buffer.h	/^	blip_long read() const          { return accum >> (blip_sample_bits - 16); }$/;"	f	class:Blip_Reader
read	src/apu/Gb_Oscs.h	/^inline int Gb_Wave::read( unsigned addr ) const$/;"	f	class:Gb_Wave
read	src/common/RingBuffer.h	/^void RingBuffer<T>::read(T *out, std::size_t num) {$/;"	f	class:RingBuffer
read	src/common/SoundSDL.cpp	/^void SoundSDL::read(u16 * stream, int length)$/;"	f	class:SoundSDL
read	src/gba/remote.cpp	24;"	d	file:
readBatteryFile	src/win32/MainWnd.cpp	/^void MainWnd::readBatteryFile()$/;"	f	class:MainWnd
readData	src/win32/GBMemoryViewerDlg.cpp	/^void GBMemoryViewer::readData(u32 address, int len, u8 *data)$/;"	f	class:GBMemoryViewer
readData	src/win32/MemoryViewerDlg.cpp	/^void GBAMemoryViewer::readData(u32 address, int len, u8 *data)$/;"	f	class:GBAMemoryViewer
readDevice	src/win32/DirectInput.cpp	/^u32 DirectInput::readDevice(int which)$/;"	f	class:DirectInput
readDevices	src/win32/DirectInput.cpp	/^bool DirectInput::readDevices()$/;"	f	class:DirectInput
readIndex	src/gba/Sound.cpp	/^	int  readIndex;$/;"	m	class:Gba_Pcm_Fifo	file:
readInt2	src/common/Patch.cpp	/^static int readInt2(FILE *f)$/;"	f	file:
readInt3	src/common/Patch.cpp	/^static int readInt3(FILE *f)$/;"	f	file:
readInt4	src/common/Patch.cpp	/^static s64 readInt4(FILE *f)$/;"	f	file:
readInt8	src/common/Patch.cpp	/^static s64 readInt8(FILE *f)$/;"	f	file:
readJoystick	src/win32/DirectInput.cpp	/^static bool readJoystick(int joy)$/;"	f	file:
readKeyboard	src/win32/DirectInput.cpp	/^static bool readKeyboard()$/;"	f	file:
readVarPtr	src/common/Patch.cpp	/^static s64 readVarPtr(FILE *f)$/;"	f	file:
read_avail	fex/fex/Data_Reader.cpp	/^blargg_err_t Data_Reader::read_avail( void* p, int* n_ )$/;"	f	class:Data_Reader
read_avail	fex/fex/Data_Reader.cpp	/^blargg_err_t Data_Reader::read_avail( void* p, long* n )$/;"	f	class:Data_Reader
read_buf_size	fex/fex/Zip_Extractor.cpp	/^int const read_buf_size = 16 * 1024;$/;"	v
read_callback_t	fex/fex/Rar_Extractor.h	/^	struct read_callback_t$/;"	s	class:Rar_Extractor
read_pairs	src/apu/Multi_Buffer.cpp	/^void Stereo_Mixer::read_pairs( blip_sample_t* out, int count )$/;"	f	class:Stereo_Mixer
read_raw	src/apu/Blip_Buffer.h	/^	blip_long read_raw() const      { return accum; }$/;"	f	class:Blip_Reader
read_register	src/apu/Gb_Apu.cpp	/^int Gb_Apu::read_register( blip_time_t time, unsigned addr )$/;"	f	class:Gb_Apu
read_samples	src/apu/Blip_Buffer.cpp	/^long Blip_Buffer::read_samples( blip_sample_t* out_, long max_samples, int stereo )$/;"	f	class:Blip_Buffer
read_samples	src/apu/Effects_Buffer.cpp	/^long Effects_Buffer::read_samples( blip_sample_t* out, long out_size )$/;"	f	class:Effects_Buffer
read_samples	src/apu/Multi_Buffer.cpp	/^long Stereo_Buffer::read_samples( blip_sample_t* out, long out_size )$/;"	f	class:Stereo_Buffer
read_samples	src/apu/Multi_Buffer.cpp	/^long Tracked_Blip_Buffer::read_samples( blip_sample_t* out, long count )$/;"	f	class:Tracked_Blip_Buffer
read_samples	src/apu/Multi_Buffer.h	/^	long read_samples( blip_sample_t* p, long s ) { return buf.read_samples( p, s ); }$/;"	f	class:Mono_Buffer
read_samples	src/apu/Multi_Buffer.h	/^	long read_samples( blip_sample_t*, long ) { return 0; }$/;"	f	class:Silent_Buffer
read_v	fex/fex/Data_Reader.cpp	/^blargg_err_t Callback_File_Reader::read_v( void* out, int count )$/;"	f	class:Callback_File_Reader
read_v	fex/fex/Data_Reader.cpp	/^blargg_err_t Callback_Reader::read_v( void* out, int count )$/;"	f	class:Callback_Reader
read_v	fex/fex/Data_Reader.cpp	/^blargg_err_t Gzip_File_Reader::read_v( void* p, int s )$/;"	f	class:Gzip_File_Reader
read_v	fex/fex/Data_Reader.cpp	/^blargg_err_t Mem_File_Reader::read_v( void* p, int s )$/;"	f	class:Mem_File_Reader
read_v	fex/fex/Data_Reader.cpp	/^blargg_err_t Remaining_Reader::read_v( void* out, int count )$/;"	f	class:Remaining_Reader
read_v	fex/fex/Data_Reader.cpp	/^blargg_err_t Std_File_Reader::read_v( void* p, int s )$/;"	f	class:Std_File_Reader
read_v	fex/fex/Data_Reader.cpp	/^blargg_err_t Subset_Reader::read_v( void* p, int s )$/;"	f	class:Subset_Reader
read_v	fex/fex/File_Extractor.cpp	/^blargg_err_t File_Extractor::read_v( void* out, int count )$/;"	f	class:File_Extractor
read_v	fex/fex/Gzip_Reader.cpp	/^blargg_err_t Gzip_Reader::read_v( void* out, int count )$/;"	f	class:Gzip_Reader
reader	fex/fex/File_Extractor.h	/^	Data_Reader& reader()               { assert( stat_called ); return *this; }$/;"	f	struct:fex_t
reader	fex/fex/Rar_Extractor.h	/^	read_callback_t reader;$/;"	m	class:Rar_Extractor
reader_	fex/fex/File_Extractor.h	/^	File_Reader* reader_;$/;"	m	struct:fex_t
reader_accum_	src/apu/Blip_Buffer.h	/^	blip_long reader_accum_;$/;"	m	class:Blip_Buffer
reader_accum_	src/apu/Blip_Buffer.h	/^	blip_long reader_accum_;$/;"	m	struct:blip_buffer_state_t
realStream	fex/7z_C/Types.h	/^  ILookInStream *realStream;$/;"	m	struct:__anon30
realStream	fex/7z_C/Types.h	/^  ILookInStream *realStream;$/;"	m	struct:__anon31
realStream	fex/7z_C/Types.h	/^  ISeekInStream *realStream;$/;"	m	struct:__anon29
realsystemBlueShift	src/win32/VBA.cpp	/^int realsystemBlueShift = 0;$/;"	v
realsystemColorDepth	src/win32/VBA.cpp	/^int realsystemColorDepth = 16;$/;"	v
realsystemGreenShift	src/win32/VBA.cpp	/^int realsystemGreenShift = 0;$/;"	v
realsystemRedShift	src/win32/VBA.cpp	/^int realsystemRedShift = 0;$/;"	v
recent	src/wx/opts.h	/^    wxFileHistory *recent;$/;"	m	struct:opts_t
recent	src/wx/wxvbam.h	/^    wxMenu *recent;$/;"	m	class:MainFrame
recentFiles	src/win32/VBA.h	/^  CString recentFiles[10];$/;"	m	class:VBA
recentFreeze	src/win32/VBA.h	/^  bool recentFreeze;$/;"	m	class:VBA
recent_accel	src/wx/wxvbam.h	/^    wxAcceleratorEntry recent_accel[10];$/;"	m	class:MainFrame
recent_freeze	src/wx/opts.h	/^    bool recent_freeze;$/;"	m	struct:opts_t
recompute_dirs	src/wx/panel.cpp	/^void GameArea::recompute_dirs()$/;"	f	class:GameArea
recording_dir	src/wx/opts.h	/^    wxString recording_dir;$/;"	m	struct:opts_t
recs	src/wx/widgets/joyedit.cpp	/^static wxCriticalSection recs;$/;"	v	file:
rect	src/win32/VBA.h	/^  RECT rect;$/;"	m	class:VBA
rectangleFillsScreen	src/win32/Direct3D.cpp	/^	bool                  rectangleFillsScreen;$/;"	m	class:Direct3DDisplay	file:
redblueMask	src/filters/2xSaI.cpp	/^static u32 redblueMask = 0xF81F;$/;"	v	file:
reduce_clicks	src/apu/Gb_Apu.cpp	/^void Gb_Apu::reduce_clicks( bool reduce )$/;"	f	class:Gb_Apu
reduce_clicks_	src/apu/Gb_Apu.h	/^	bool        reduce_clicks_;$/;"	m	class:Gb_Apu
refresh	src/win32/BitmapControl.cpp	/^void BitmapControl::refresh()$/;"	f	class:BitmapControl
refresh	src/win32/Disassemble.cpp	/^void Disassemble::refresh()$/;"	f	class:Disassemble
refresh	src/win32/GBACheats.cpp	/^void GBACheatList::refresh()$/;"	f	class:GBACheatList
refresh	src/win32/GBCheatsDlg.cpp	/^void GBCheatList::refresh()$/;"	f	class:GBCheatList
refresh	src/win32/GBDisassemble.cpp	/^void GBDisassemble::refresh()$/;"	f	class:GBDisassemble
refresh	src/win32/PaletteViewControl.cpp	/^void PaletteViewControl::refresh()$/;"	f	class:PaletteViewControl
reg	src/gba/Globals.cpp	/^reg_pair reg[45];$/;"	v
reg	src/gba/elf.cpp	/^  int reg;$/;"	m	struct:ELFFrameStateRegister	file:
regAssociateType	src/win32/Reg.cpp	/^bool regAssociateType( const char *type, const char *desc, const char *application, const char *icon )$/;"	f
regCreateFileType	src/win32/Reg.cpp	/^bool regCreateFileType( const char *ext, const char *type )$/;"	f
regDeleteValue	src/win32/Reg.cpp	/^void regDeleteValue(char *key)$/;"	f
regEnabled	src/win32/Reg.cpp	/^bool regEnabled = true;$/;"	v
regExportSettingsToINI	src/win32/Reg.cpp	/^static void regExportSettingsToINI(HKEY key, const char *section)$/;"	f	file:
regExportSettingsToINI	src/win32/Reg.cpp	/^void regExportSettingsToINI()$/;"	f
regGetINIPath	src/win32/Reg.cpp	/^const char *regGetINIPath()$/;"	f
regInit	src/win32/Reg.cpp	/^void regInit(const char *path, bool force)$/;"	f
regQueryBinaryValue	src/win32/Reg.cpp	/^BOOL regQueryBinaryValue(const char * key, char *value, int count)$/;"	f
regQueryDwordValue	src/win32/Reg.cpp	/^DWORD regQueryDwordValue(const char * key, DWORD def, bool force)$/;"	f
regQueryStringValue	src/win32/Reg.cpp	/^char *regQueryStringValue(const char * key, char *def)$/;"	f
regSetBinaryValue	src/win32/Reg.cpp	/^void regSetBinaryValue(const char *key, char *value, int count)$/;"	f
regSetDwordValue	src/win32/Reg.cpp	/^void regSetDwordValue(const char * key, DWORD value, bool force)$/;"	f
regSetStringValue	src/win32/Reg.cpp	/^void regSetStringValue(const char * key, const char * value)$/;"	f
regShutdown	src/win32/Reg.cpp	/^void regShutdown()$/;"	f
regVbaPath	src/win32/Reg.cpp	/^static CString *regVbaPath = NULL;$/;"	v	file:
reg_blank	src/filters/hq/asm/hq3x_16.asm	/^reg_blank    dd  0,0$/;"	d
reg_blank	src/filters/hq/asm/hq3x_32.asm	/^reg_blank    dd  0,0$/;"	d
reg_blank	src/filters/hq/asm/hq4x_16.asm	/^reg_blank    dd  0,0$/;"	d
reg_blank	src/filters/hq/asm/hq4x_32.asm	/^reg_blank    dd  0,0$/;"	d
reg_pair	src/gba/GBA.h	/^} reg_pair;$/;"	t	typeref:union:__anon48
regctrl	src/wx/viewers.cpp	46;"	d	file:
registerClass	src/win32/BitmapControl.cpp	/^void BitmapControl::registerClass()$/;"	f	class:BitmapControl
registerClass	src/win32/ColorButton.cpp	/^void ColorButton::registerClass()$/;"	f	class:ColorButton
registerClass	src/win32/ColorControl.cpp	/^void ColorControl::registerClass()$/;"	f	class:ColorControl
registerClass	src/win32/MemoryViewer.cpp	/^void MemoryViewer::registerClass()$/;"	f	class:MemoryViewer
registerClass	src/win32/PaletteViewControl.cpp	/^void PaletteViewControl::registerClass()$/;"	f	class:PaletteViewControl
registerClass	src/win32/ZoomControl.cpp	/^void ZoomControl::registerClass()$/;"	f	class:ZoomControl
register_DIV	src/gb/GB.cpp	/^u8 register_DIV   = 0;$/;"	v
register_DMA	src/gb/GB.cpp	/^u8 register_DMA   = 0;$/;"	v
register_HDMA1	src/gb/GB.cpp	/^u8 register_HDMA1 = 0;$/;"	v
register_HDMA2	src/gb/GB.cpp	/^u8 register_HDMA2 = 0;$/;"	v
register_HDMA3	src/gb/GB.cpp	/^u8 register_HDMA3 = 0;$/;"	v
register_HDMA4	src/gb/GB.cpp	/^u8 register_HDMA4 = 0;$/;"	v
register_HDMA5	src/gb/GB.cpp	/^u8 register_HDMA5 = 0;$/;"	v
register_IE	src/gb/GB.cpp	/^u8 register_IE    = 0;$/;"	v
register_IF	src/gb/GB.cpp	/^u8 register_IF    = 0;$/;"	v
register_LCDC	src/gb/GB.cpp	/^u8 register_LCDC  = 0;$/;"	v
register_LCDCBusy	src/gb/GB.cpp	/^int register_LCDCBusy = 0;$/;"	v
register_LY	src/gb/GB.cpp	/^u8 register_LY    = 0;$/;"	v
register_LYC	src/gb/GB.cpp	/^u8 register_LYC   = 0;$/;"	v
register_SCX	src/gb/GB.cpp	/^u8 register_SCX   = 0;$/;"	v
register_SCY	src/gb/GB.cpp	/^u8 register_SCY   = 0;$/;"	v
register_STAT	src/gb/GB.cpp	/^u8 register_STAT  = 0;$/;"	v
register_SVBK	src/gb/GB.cpp	/^u8 register_SVBK  = 0;$/;"	v
register_TAC	src/gb/GB.cpp	/^u8 register_TAC   = 0;$/;"	v
register_TIMA	src/gb/GB.cpp	/^u8 register_TIMA  = 0;$/;"	v
register_TMA	src/gb/GB.cpp	/^u8 register_TMA   = 0;$/;"	v
register_VBK	src/gb/GB.cpp	/^u8 register_VBK   = 0;$/;"	v
register_WX	src/gb/GB.cpp	/^u8 register_WX    = 0;$/;"	v
register_WY	src/gb/GB.cpp	/^u8 register_WY    = 0;$/;"	v
register_count	src/apu/Gb_Apu.h	/^	enum { register_count = end_addr - start_addr + 1 };$/;"	e	enum:Gb_Apu::__anon143
registered	src/win32/XAudio2.cpp	/^	volatile LONG registered;$/;"	m	class:XAudio2_Device_Notifier	file:
registered	src/wx/xaudio2.cpp	/^	volatile LONG registered;$/;"	m	class:XAudio2_Device_Notifier	file:
registers	src/gb/gbDis.cpp	/^static const char *registers[] =$/;"	v	file:
registers	src/gba/elf.cpp	/^  ELFFrameStateRegisters registers;$/;"	m	struct:ELFFrameState	file:
registers16	src/gb/gbDis.cpp	/^static const char *registers16[] =$/;"	v	file:
regs	src/apu/Gb_Apu.h	/^	BOOST::uint8_t  regs [regs_size];\/\/ last values written to registers$/;"	m	class:Gb_Apu
regs	src/apu/Gb_Apu.h	/^	unsigned char regs [0x40];$/;"	m	struct:gb_apu_state_t
regs	src/apu/Gb_Oscs.h	/^	BOOST::uint8_t* regs;       \/\/ osc's 5 registers$/;"	m	class:Gb_Osc
regs	src/gba/armdis.cpp	/^const char *regs[16] = {$/;"	v
regs	src/gba/elf.cpp	/^  ELFFrameStateRegister regs[16];$/;"	m	struct:ELFFrameStateRegisters	file:
regs_size	src/apu/Gb_Apu.h	/^	enum { regs_size = register_count + 0x10 };$/;"	e	enum:Gb_Apu::__anon145
regv	src/wx/viewers.cpp	/^	wxControl *regv[17], *Modev;$/;"	m	class:Viewers::DisassembleViewer	file:
reload_env_timer	src/apu/Gb_Oscs.cpp	/^inline int Gb_Env::reload_env_timer()$/;"	f	class:Gb_Env
reload_sweep_timer	src/apu/Gb_Oscs.cpp	/^inline void Gb_Sweep_Square::reload_sweep_timer()$/;"	f	class:Gb_Sweep_Square
remain	fex/fex/Data_Reader.h	/^	int remain() const                              { return remain_; }$/;"	f	class:Data_Reader
remainLen	fex/7z_C/LzmaDec.h	/^  unsigned remainLen;$/;"	m	struct:__anon17
remain_	fex/fex/Data_Reader.h	/^	int remain_;$/;"	m	class:Data_Reader
remake_stereo_buffer	src/gb/gbSound.cpp	/^static void remake_stereo_buffer()$/;"	f	file:
remake_stereo_buffer	src/gba/Sound.cpp	/^static void remake_stereo_buffer()$/;"	f	file:
remb	src/wx/guiinit.cpp	/^    wxWindow *asb, *remb;$/;"	m	class:AccelConfig_t	file:
remoteBinaryWrite	src/gba/remote.cpp	/^void remoteBinaryWrite(char *p)$/;"	f
remoteCleanUp	src/gba/remote.cpp	/^void remoteCleanUp()$/;"	f
remoteCleanUpFnc	src/gba/remote.cpp	/^void (*remoteCleanUpFnc)() = NULL;$/;"	v
remoteConnected	src/gba/remote.cpp	/^bool remoteConnected = false;$/;"	v
remoteInit	src/gba/remote.cpp	/^void remoteInit()$/;"	f
remoteInitFnc	src/gba/remote.cpp	/^bool (*remoteInitFnc)() = NULL;$/;"	v
remoteListenSocket	src/gba/remote.cpp	/^SOCKET remoteListenSocket = -1;$/;"	v
remoteMemoryRead	src/gba/remote.cpp	/^void remoteMemoryRead(char *p)$/;"	f
remoteMemoryWrite	src/gba/remote.cpp	/^void remoteMemoryWrite(char *p)$/;"	f
remoteOutput	src/gba/remote.cpp	/^void remoteOutput(const char *s, u32 addr)$/;"	f
remotePipeCleanUp	src/gba/remote.cpp	/^void remotePipeCleanUp()$/;"	f
remotePipeInit	src/gba/remote.cpp	/^bool remotePipeInit()$/;"	f
remotePipeRecv	src/gba/remote.cpp	/^int remotePipeRecv(char *data, int len)$/;"	f
remotePipeSend	src/gba/remote.cpp	/^int remotePipeSend(char *data, int len)$/;"	f
remotePort	src/gba/remote.cpp	/^int remotePort = 55555;$/;"	v
remotePutPacket	src/gba/remote.cpp	/^void remotePutPacket(const char *packet)$/;"	f
remoteReadRegisters	src/gba/remote.cpp	/^void remoteReadRegisters(char *p)$/;"	f
remoteRecvFnc	src/gba/remote.cpp	/^int (*remoteRecvFnc)(char *, int) = NULL;$/;"	v
remoteResumed	src/gba/remote.cpp	/^bool remoteResumed = false;$/;"	v
remoteSendFnc	src/gba/remote.cpp	/^int (*remoteSendFnc)(char *, int) = NULL;$/;"	v
remoteSendSignal	src/gba/remote.cpp	/^void remoteSendSignal()$/;"	f
remoteSendStatus	src/gba/remote.cpp	/^void remoteSendStatus()$/;"	f
remoteSetPort	src/gba/remote.cpp	/^void remoteSetPort(int port)$/;"	f
remoteSetProtocol	src/gba/remote.cpp	/^void remoteSetProtocol(int p)$/;"	f
remoteSetSockets	src/gba/remote.cpp	/^void remoteSetSockets(SOCKET l, SOCKET r)$/;"	f
remoteSignal	src/gba/remote.cpp	/^int remoteSignal = 5;$/;"	v
remoteSocket	src/gba/remote.cpp	/^SOCKET remoteSocket = -1;$/;"	v
remoteStepOverRange	src/gba/remote.cpp	/^void remoteStepOverRange(char *p)$/;"	f
remoteStubMain	src/gba/remote.cpp	/^void remoteStubMain()$/;"	f
remoteStubSignal	src/gba/remote.cpp	/^void remoteStubSignal(int sig, int number)$/;"	f
remoteTcpCleanUp	src/gba/remote.cpp	/^void remoteTcpCleanUp()$/;"	f
remoteTcpInit	src/gba/remote.cpp	/^bool remoteTcpInit()$/;"	f
remoteTcpRecv	src/gba/remote.cpp	/^int remoteTcpRecv(char *data, int len)$/;"	f
remoteTcpSend	src/gba/remote.cpp	/^int remoteTcpSend(char *data, int len)$/;"	f
remoteWriteRegister	src/gba/remote.cpp	/^void remoteWriteRegister(char *p)$/;"	f
remoteWriteWatch	src/gba/remote.cpp	/^void remoteWriteWatch(char *p, bool active)$/;"	f
removeIntros	src/win32/VBA.h	/^  bool removeIntros;$/;"	m	class:VBA
remove_	src/apu/Multi_Buffer.cpp	/^inline void Tracked_Blip_Buffer::remove_( long n )$/;"	f	class:Tracked_Blip_Buffer
remove_all_samples	src/apu/Multi_Buffer.cpp	/^void Tracked_Blip_Buffer::remove_all_samples()$/;"	f	class:Tracked_Blip_Buffer
remove_samples	src/apu/Blip_Buffer.cpp	/^void Blip_Buffer::remove_samples( long count )$/;"	f	class:Blip_Buffer
remove_samples	src/apu/Multi_Buffer.cpp	/^void Tracked_Blip_Buffer::remove_samples( long n )$/;"	f	class:Tracked_Blip_Buffer
remove_silence	src/apu/Blip_Buffer.h	/^inline void Blip_Buffer::remove_silence( long count )$/;"	f	class:Blip_Buffer
remove_silence	src/apu/Multi_Buffer.cpp	/^void Tracked_Blip_Buffer::remove_silence( long n )$/;"	f	class:Tracked_Blip_Buffer
render	src/win32/Direct3D.cpp	/^void Direct3DDisplay::render()$/;"	f	class:Direct3DDisplay
render	src/win32/GBMapView.cpp	/^void GBMapView::render()$/;"	f	class:GBMapView
render	src/win32/GBOamView.cpp	/^void GBOamView::render()$/;"	f	class:GBOamView
render	src/win32/GBTileView.cpp	/^void GBTileView::render()$/;"	f	class:GBTileView
render	src/win32/OamView.cpp	/^void OamView::render()$/;"	f	class:OamView
render	src/win32/OpenGL.cpp	/^void OpenGLDisplay::render()$/;"	f	class:OpenGLDisplay
render	src/win32/PaletteViewControl.cpp	/^void PaletteViewControl::render(u16 color, int x, int y)$/;"	f	class:PaletteViewControl
render	src/win32/TileView.cpp	/^void TileView::render()$/;"	f	class:TileView
render	src/wx/gfxviewers.cpp	/^	void render(int tile, int x, int y, u8 *charBase)$/;"	f	class:Viewers::GBTileViewer
render16	src/wx/gfxviewers.cpp	/^	void render16(int tile, int x, int y, u8 *charBase, u16 *palette)$/;"	f	class:Viewers::TileViewer
render256	src/wx/gfxviewers.cpp	/^	void render256(int tile, int x, int y, u8 *charBase, u16 *palette)$/;"	f	class:Viewers::TileViewer
renderLine	src/gba/GBA.cpp	/^void (*renderLine)() = mode0RenderLine;$/;"	v
renderMethod	src/win32/VBA.h	/^  DISPLAY_TYPE renderMethod;$/;"	m	class:VBA
renderMode0	src/win32/MapView.cpp	/^void MapView::renderMode0()$/;"	f	class:MapView
renderMode1	src/win32/MapView.cpp	/^void MapView::renderMode1()$/;"	f	class:MapView
renderMode2	src/win32/MapView.cpp	/^void MapView::renderMode2()$/;"	f	class:MapView
renderMode3	src/win32/MapView.cpp	/^void MapView::renderMode3()$/;"	f	class:MapView
renderMode3	src/wx/gfxviewers.cpp	/^	void renderMode3()$/;"	f	class:Viewers::MapViewer
renderMode4	src/win32/MapView.cpp	/^void MapView::renderMode4()$/;"	f	class:MapView
renderMode4	src/wx/gfxviewers.cpp	/^	void renderMode4()$/;"	f	class:Viewers::MapViewer
renderMode5	src/win32/MapView.cpp	/^void MapView::renderMode5()$/;"	f	class:MapView
renderMode5	src/wx/gfxviewers.cpp	/^	void renderMode5()$/;"	f	class:Viewers::MapViewer
renderRotScreen	src/win32/MapView.cpp	/^void MapView::renderRotScreen(u16 control)$/;"	f	class:MapView
renderRotScreen	src/wx/gfxviewers.cpp	/^	void renderRotScreen()$/;"	f	class:Viewers::MapViewer
renderTextScreen	src/win32/MapView.cpp	/^void MapView::renderTextScreen(u16 control)$/;"	f	class:MapView
renderTextScreen	src/wx/gfxviewers.cpp	/^	void renderTextScreen()$/;"	f	class:Viewers::MapViewer
renderTile	src/win32/GBTileView.cpp	/^void GBTileView::renderTile(int tile, int x, int y, u8 *charBase)$/;"	f	class:GBTileView
renderTile16	src/win32/TileView.cpp	/^void TileView::renderTile16(int tile, int x, int y, u8 *charBase, u16 *palette)$/;"	f	class:TileView
renderTile256	src/win32/TileView.cpp	/^void TileView::renderTile256(int tile, int x, int y, u8 *charBase, u16 *palette)$/;"	f	class:TileView
render_method	src/wx/opts.h	/^    int render_method;$/;"	m	struct:opts_t
renderedFrames	src/libretro/libretro.cpp	/^u32 renderedFrames = 0;$/;"	v
renderedFrames	src/sdl/SDL.cpp	/^int renderedFrames = 0;$/;"	v
renderedFrames	src/win32/VBA.h	/^  int renderedFrames;$/;"	m	class:VBA
renderer	src/wx/wxvbam.h	/^enum renderer {$/;"	g
reorder_entry_header	fex/fex/Zip_Extractor.cpp	/^void Zip_Extractor::reorder_entry_header( int offset )$/;"	f	class:Zip_Extractor
replace_image_index	src/libretro/libretro.h	/^   retro_replace_image_index_t replace_image_index;$/;"	m	struct:retro_disk_control_callback
reps	fex/7z_C/LzmaDec.h	/^  UInt32 reps[4];$/;"	m	struct:__anon17
require	fex/fex/blargg_source.h	36;"	d
require	fex/fex/blargg_source.h	37;"	d
require	src/apu/blargg_source.h	27;"	d
require	src/apu/blargg_source.h	28;"	d
required_argument	src/sdl/getopt.h	99;"	d
res	fex/7z_C/7zDec.c	/^  SRes res;$/;"	m	struct:__anon37	file:
resampled_duration	src/apu/Blip_Buffer.h	/^	blip_resampled_time_t resampled_duration( int t ) const     { return t * factor_; }$/;"	f	class:Blip_Buffer
resampled_time	src/apu/Blip_Buffer.h	/^	blip_resampled_time_t resampled_time( blip_time_t t ) const { return t * factor_ + offset_; }$/;"	f	class:Blip_Buffer
resampled_time_t	src/apu/Blip_Buffer.h	/^	typedef blip_resampled_time_t resampled_time_t;$/;"	t	class:Blip_Buffer
reserved	src/gba/RTC.cpp	/^  u8 reserved[12];$/;"	m	struct:__anon51	file:
reserved2	src/gba/RTC.cpp	/^  bool reserved2;$/;"	m	struct:__anon51	file:
reserved3	src/gba/RTC.cpp	/^  u32 reserved3;$/;"	m	struct:__anon51	file:
reset	src/apu/Gb_Apu.cpp	/^void Gb_Apu::reset( mode_t mode, bool agb_wave )$/;"	f	class:Gb_Apu
reset	src/apu/Gb_Oscs.cpp	/^void Gb_Osc::reset()$/;"	f	class:Gb_Osc
reset	src/apu/Gb_Oscs.h	/^	void reset()$/;"	f	class:Gb_Env
reset	src/apu/Gb_Oscs.h	/^	void reset()$/;"	f	class:Gb_Noise
reset	src/apu/Gb_Oscs.h	/^	void reset()$/;"	f	class:Gb_Square
reset	src/apu/Gb_Oscs.h	/^	void reset()$/;"	f	class:Gb_Sweep_Square
reset	src/apu/Gb_Oscs.h	/^	void reset()$/;"	f	class:Gb_Wave
reset	src/common/Array.h	/^	void reset(const std::size_t size) { delete []a; a = size ? new T[size] : 0; sz = size; }$/;"	f	class:Array
reset	src/common/RingBuffer.h	/^void RingBuffer<T>::reset(const std::size_t sz_in) {$/;"	f	class:RingBuffer
reset	src/common/SoundSDL.cpp	/^void SoundSDL::reset()$/;"	f	class:SoundSDL
reset	src/libretro/SoundRetro.cpp	/^void SoundRetro::reset()$/;"	f	class:SoundRetro
reset	src/win32/DirectSound.cpp	/^void DirectSound::reset()$/;"	f	class:DirectSound
reset	src/win32/OpenAL.cpp	/^void OpenAL::reset()$/;"	f	class:OpenAL
reset	src/win32/XAudio2.cpp	/^void XAudio2_Output::reset()$/;"	f	class:XAudio2_Output
reset	src/wx/dsound.cpp	/^void DirectSound::reset()$/;"	f	class:DirectSound
reset	src/wx/openal.cpp	/^void OpenAL::reset()$/;"	f	class:OpenAL
reset	src/wx/xaudio2.cpp	/^void XAudio2_Output::reset()$/;"	f	class:XAudio2_Output
resetDevice	src/win32/Direct3D.cpp	/^bool Direct3DDisplay::resetDevice()$/;"	f	class:Direct3DDisplay
reset_apu	src/gb/gbSound.cpp	/^static void reset_apu()$/;"	f	file:
reset_apu	src/gba/Sound.cpp	/^static void reset_apu()$/;"	f	file:
reset_lengths	src/apu/Gb_Apu.cpp	/^void Gb_Apu::reset_lengths()$/;"	f	class:Gb_Apu
reset_regs	src/apu/Gb_Apu.cpp	/^void Gb_Apu::reset_regs()$/;"	f	class:Gb_Apu
resize	fex/fex/blargg_common.h	/^	blargg_err_t resize( size_t n ) { return resize_( n, sizeof (T) ); }$/;"	f	class:blargg_vector
resize	src/apu/blargg_common.h	/^	blargg_err_t resize( size_t n )$/;"	f	class:blargg_vector
resize	src/win32/Direct3D.cpp	/^void Direct3DDisplay::resize( int w, int h )$/;"	f	class:Direct3DDisplay
resize	src/win32/Display.h	/^  virtual void resize(int w, int h) {};$/;"	f	class:IDisplay
resize	src/win32/OpenGL.cpp	/^void OpenGLDisplay::resize( int w, int h )$/;"	f	class:OpenGLDisplay
resize_	fex/fex/blargg_common.cpp	/^blargg_err_t blargg_vector_::resize_( size_t n, size_t elem_size )$/;"	f	class:blargg_vector_
resolve	src/sdl/exprNode.h	/^  bool (*resolve)(Node *, Function *f, CompileUnit *u);$/;"	m	struct:Node
restoreValues	src/win32/GBACheats.h	/^  bool restoreValues;$/;"	m	class:GBACheatList
result	src/sdl/expr.cpp	/^ Node *result = NULL;$/;"	v
resume	src/common/SoundSDL.cpp	/^void SoundSDL::resume()$/;"	f	class:SoundSDL
resume	src/libretro/SoundRetro.cpp	/^void SoundRetro::resume()$/;"	f	class:SoundRetro
resume	src/win32/DirectSound.cpp	/^void DirectSound::resume()$/;"	f	class:DirectSound
resume	src/win32/OpenAL.cpp	/^void OpenAL::resume()$/;"	f	class:OpenAL
resume	src/win32/XAudio2.cpp	/^void XAudio2_Output::resume()$/;"	f	class:XAudio2_Output
resume	src/wx/dsound.cpp	/^void DirectSound::resume()$/;"	f	class:DirectSound
resume	src/wx/openal.cpp	/^void OpenAL::resume()$/;"	f	class:OpenAL
resume	src/wx/xaudio2.cpp	/^void XAudio2_Output::resume()$/;"	f	class:XAudio2_Output
retain_aspect	src/wx/opts.h	/^    bool retain_aspect;$/;"	m	struct:opts_t
retro_add_image_index_t	src/libretro/libretro.h	/^typedef bool (*retro_add_image_index_t)(void);$/;"	t
retro_api_version	src/libretro/libretro.cpp	/^unsigned retro_api_version(void)$/;"	f
retro_audio_sample_batch_t	src/libretro/libretro.h	/^typedef size_t (*retro_audio_sample_batch_t)(const int16_t *data, size_t frames);$/;"	t
retro_audio_sample_t	src/libretro/libretro.h	/^typedef void (*retro_audio_sample_t)(int16_t left, int16_t right);$/;"	t
retro_cheat_reset	src/libretro/libretro.cpp	/^void retro_cheat_reset(void)$/;"	f
retro_cheat_set	src/libretro/libretro.cpp	/^void retro_cheat_set(unsigned, bool, const char*)$/;"	f
retro_deinit	src/libretro/libretro.cpp	/^void retro_deinit(void)$/;"	f
retro_disk_control_callback	src/libretro/libretro.h	/^struct retro_disk_control_callback$/;"	s
retro_environment_t	src/libretro/libretro.h	/^typedef bool (*retro_environment_t)(unsigned cmd, void *data);$/;"	t
retro_game_geometry	src/libretro/libretro.h	/^struct retro_game_geometry$/;"	s
retro_game_info	src/libretro/libretro.h	/^struct retro_game_info$/;"	s
retro_get_eject_state_t	src/libretro/libretro.h	/^typedef bool (*retro_get_eject_state_t)(void);$/;"	t
retro_get_image_index_t	src/libretro/libretro.h	/^typedef unsigned (*retro_get_image_index_t)(void);$/;"	t
retro_get_memory_data	src/libretro/libretro.cpp	/^void *retro_get_memory_data(unsigned id)$/;"	f
retro_get_memory_size	src/libretro/libretro.cpp	/^size_t retro_get_memory_size(unsigned id)$/;"	f
retro_get_num_images_t	src/libretro/libretro.h	/^typedef unsigned (*retro_get_num_images_t)(void);$/;"	t
retro_get_region	src/libretro/libretro.cpp	/^unsigned retro_get_region(void)$/;"	f
retro_get_system_av_info	src/libretro/libretro.cpp	/^void retro_get_system_av_info(struct retro_system_av_info *info)$/;"	f
retro_get_system_info	src/libretro/libretro.cpp	/^void retro_get_system_info(struct retro_system_info *info)$/;"	f
retro_hw_context_reset_t	src/libretro/libretro.h	/^typedef void (*retro_hw_context_reset_t)(void);$/;"	t
retro_hw_context_type	src/libretro/libretro.h	/^enum retro_hw_context_type$/;"	g
retro_hw_get_current_framebuffer_t	src/libretro/libretro.h	/^typedef uintptr_t (*retro_hw_get_current_framebuffer_t)(void);$/;"	t
retro_hw_get_proc_address_t	src/libretro/libretro.h	/^typedef retro_proc_address_t (*retro_hw_get_proc_address_t)(const char *sym);$/;"	t
retro_hw_render_callback	src/libretro/libretro.h	/^struct retro_hw_render_callback$/;"	s
retro_init	src/libretro/libretro.cpp	/^void retro_init(void)$/;"	f
retro_input_descriptor	src/libretro/libretro.h	/^struct retro_input_descriptor$/;"	s
retro_input_poll_t	src/libretro/libretro.h	/^typedef void (*retro_input_poll_t)(void);$/;"	t
retro_input_state_t	src/libretro/libretro.h	/^typedef int16_t (*retro_input_state_t)(unsigned port, unsigned device, unsigned index, unsigned id);$/;"	t
retro_key	src/libretro/libretro.h	/^enum retro_key$/;"	g
retro_keyboard_callback	src/libretro/libretro.h	/^struct retro_keyboard_callback$/;"	s
retro_keyboard_event_t	src/libretro/libretro.h	/^typedef void (*retro_keyboard_event_t)(bool down, unsigned keycode, uint32_t character, uint16_t key_modifiers);$/;"	t
retro_load_game	src/libretro/libretro.cpp	/^bool retro_load_game(const struct retro_game_info *game)$/;"	f
retro_load_game_special	src/libretro/libretro.cpp	/^bool retro_load_game_special($/;"	f
retro_message	src/libretro/libretro.h	/^struct retro_message$/;"	s
retro_mod	src/libretro/libretro.h	/^enum retro_mod$/;"	g
retro_pixel_format	src/libretro/libretro.h	/^enum retro_pixel_format$/;"	g
retro_proc_address_t	src/libretro/libretro.h	/^typedef void (*retro_proc_address_t)(void);$/;"	t
retro_replace_image_index_t	src/libretro/libretro.h	/^typedef bool (*retro_replace_image_index_t)(unsigned index, const struct retro_game_info *info);$/;"	t
retro_reset	src/libretro/libretro.cpp	/^void retro_reset(void)$/;"	f
retro_run	src/libretro/libretro.cpp	/^void retro_run(void)$/;"	f
retro_serialize	src/libretro/libretro.cpp	/^bool retro_serialize(void *data, size_t size)$/;"	f
retro_serialize_size	src/libretro/libretro.cpp	/^size_t retro_serialize_size(void)$/;"	f
retro_set_audio_sample	src/libretro/libretro.cpp	/^void retro_set_audio_sample(retro_audio_sample_t cb)$/;"	f
retro_set_audio_sample_batch	src/libretro/libretro.cpp	/^void retro_set_audio_sample_batch(retro_audio_sample_batch_t cb)$/;"	f
retro_set_controller_port_device	src/libretro/libretro.cpp	/^void retro_set_controller_port_device(unsigned port, unsigned device)$/;"	f
retro_set_eject_state_t	src/libretro/libretro.h	/^typedef bool (*retro_set_eject_state_t)(bool ejected);$/;"	t
retro_set_environment	src/libretro/libretro.cpp	/^void retro_set_environment(retro_environment_t cb)$/;"	f
retro_set_image_index_t	src/libretro/libretro.h	/^typedef bool (*retro_set_image_index_t)(unsigned index);$/;"	t
retro_set_input_poll	src/libretro/libretro.cpp	/^void retro_set_input_poll(retro_input_poll_t cb)$/;"	f
retro_set_input_state	src/libretro/libretro.cpp	/^void retro_set_input_state(retro_input_state_t cb)$/;"	f
retro_set_video_refresh	src/libretro/libretro.cpp	/^void retro_set_video_refresh(retro_video_refresh_t cb)$/;"	f
retro_system_av_info	src/libretro/libretro.h	/^struct retro_system_av_info$/;"	s
retro_system_info	src/libretro/libretro.h	/^struct retro_system_info$/;"	s
retro_system_timing	src/libretro/libretro.h	/^struct retro_system_timing$/;"	s
retro_unload_game	src/libretro/libretro.cpp	/^void retro_unload_game(void)$/;"	f
retro_unserialize	src/libretro/libretro.cpp	/^bool retro_unserialize(const void *data, size_t size)$/;"	f
retro_variable	src/libretro/libretro.h	/^struct retro_variable$/;"	s
retro_video_refresh_t	src/libretro/libretro.h	/^typedef void (*retro_video_refresh_t)(const void *data, unsigned width, unsigned height, size_t pitch);$/;"	t
returnAddress	src/gba/elf.cpp	/^  int returnAddress;$/;"	m	struct:ELFFrameState	file:
returnAddress	src/gba/elf.cpp	/^  int returnAddress;$/;"	m	struct:ELFcie	file:
returnType	src/gba/elf.h	/^  Type *returnType;$/;"	m	struct:Function
returnType	src/gba/elf.h	/^  Type *returnType;$/;"	m	struct:FunctionType
reverse	src/wx/widgets/wx/wxmisc.h	/^    std::vector<bool> reverse;$/;"	m	class:wxBoolEnHandler
reverse	src/wx/widgets/wx/wxmisc.h	/^    std::vector<bool> reverse;$/;"	m	class:wxBoolEnValidator
reverse	src/wx/widgets/wx/wxmisc.h	/^    std::vector<bool> reverse;$/;"	m	class:wxBoolIntEnValidator
reverse	src/wx/widgets/wx/wxmisc.h	/^    std::vector<bool> reverse;$/;"	m	class:wxBoolRevEnValidator
rewind	fex/fex/File_Extractor.cpp	/^blargg_err_t File_Extractor::rewind()$/;"	f	class:File_Extractor
rewindCount	src/sdl/SDL.cpp	/^static int rewindCount = 0;$/;"	v	file:
rewindCount	src/win32/VBA.h	/^  int rewindCount;$/;"	m	class:VBA
rewindCounter	src/sdl/SDL.cpp	/^static int rewindCounter = 0;$/;"	v	file:
rewindCounter	src/win32/VBA.h	/^  int rewindCounter;$/;"	m	class:VBA
rewindMemory	src/sdl/SDL.cpp	/^static char *rewindMemory = NULL;$/;"	v	file:
rewindMemory	src/win32/VBA.h	/^  char *rewindMemory;$/;"	m	class:VBA
rewindPos	src/sdl/SDL.cpp	/^static int rewindPos = 0;$/;"	v	file:
rewindPos	src/win32/VBA.h	/^  int rewindPos;$/;"	m	class:VBA
rewindSaveNeeded	src/sdl/SDL.cpp	/^static bool rewindSaveNeeded = false;$/;"	v	file:
rewindSaveNeeded	src/win32/VBA.h	/^  bool rewindSaveNeeded;$/;"	m	class:VBA
rewindSerial	src/sdl/SDL.cpp	/^static int rewindSerial = 0;$/;"	v	file:
rewindSerials	src/sdl/SDL.cpp	/^static int *rewindSerials = NULL;$/;"	v	file:
rewindTimer	src/sdl/SDL.cpp	/^static int rewindTimer = 0;$/;"	v	file:
rewindTimer	src/win32/VBA.h	/^  int rewindTimer;$/;"	m	class:VBA
rewindTopPos	src/sdl/SDL.cpp	/^static int rewindTopPos = 0;$/;"	v	file:
rewindTopPos	src/win32/VBA.h	/^  int rewindTopPos;$/;"	m	class:VBA
rewind_file	fex/fex/File_Extractor.cpp	/^blargg_err_t File_Extractor::rewind_file()$/;"	f	class:File_Extractor
rewind_interval	src/wx/opts.h	/^    int rewind_interval;$/;"	m	struct:opts_t
rewind_mem	src/wx/wxvbam.h	/^    char *rewind_mem; \/\/ should be u8, really$/;"	m	class:GameArea
rewind_time	src/wx/wxvbam.h	/^    u32 rewind_time;$/;"	m	class:GameArea
rewind_v	fex/fex/Binary_Extractor.cpp	/^blargg_err_t Binary_Extractor::rewind_v()$/;"	f	class:Binary_Extractor
rewind_v	fex/fex/File_Extractor.h	/^inline blargg_err_t File_Extractor::rewind_v()  { return blargg_ok; }$/;"	f	class:File_Extractor
rewind_v	fex/fex/Gzip_Extractor.cpp	/^blargg_err_t Gzip_Extractor::rewind_v()$/;"	f	class:Gzip_Extractor
rewind_v	fex/fex/Rar_Extractor.cpp	/^blargg_err_t Rar_Extractor::rewind_v()$/;"	f	class:Rar_Extractor
rewind_v	fex/fex/Zip7_Extractor.cpp	/^blargg_err_t Zip7_Extractor::rewind_v()$/;"	f	class:Zip7_Extractor
rewind_v	fex/fex/Zip_Extractor.cpp	/^blargg_err_t Zip_Extractor::rewind_v()$/;"	f	class:Zip_Extractor
rfu_bdata	src/gba/GBALink.h	/^	u32 rfu_bdata[4][7];$/;"	m	struct:__anon45
rfu_cmd	src/gba/GBALink.cpp	/^u8 rfu_cmd, rfu_qsend, rfu_qrecv;$/;"	v
rfu_counter	src/gba/GBALink.cpp	/^int rfu_state, rfu_polarity, rfu_counter, rfu_masterq;$/;"	v
rfu_data	src/gba/GBALink.h	/^	u32 rfu_data[4][32];$/;"	m	struct:__anon45
rfu_enabled	src/gba/GBALink.cpp	/^bool rfu_enabled = false;$/;"	v
rfu_enabled	src/wx/opts.h	/^    bool rfu_enabled;$/;"	m	struct:opts_t
rfu_linktime	src/gba/GBALink.h	/^	int rfu_linktime[4];$/;"	m	struct:__anon45
rfu_masterdata	src/gba/GBALink.cpp	/^u32 rfu_masterdata[32];$/;"	v
rfu_masterq	src/gba/GBALink.cpp	/^int rfu_state, rfu_polarity, rfu_counter, rfu_masterq;$/;"	v
rfu_polarity	src/gba/GBALink.cpp	/^int rfu_state, rfu_polarity, rfu_counter, rfu_masterq;$/;"	v
rfu_q	src/gba/GBALink.h	/^	int rfu_q[4];$/;"	m	struct:__anon45
rfu_qrecv	src/gba/GBALink.cpp	/^u8 rfu_cmd, rfu_qsend, rfu_qrecv;$/;"	v
rfu_qsend	src/gba/GBALink.cpp	/^u8 rfu_cmd, rfu_qsend, rfu_qrecv;$/;"	v
rfu_request	src/gba/GBALink.h	/^	u8 rfu_request[4];$/;"	m	struct:__anon45
rfu_state	src/gba/GBALink.cpp	/^int rfu_state, rfu_polarity, rfu_counter, rfu_masterq;$/;"	v
rfu_transfer_end	src/gba/GBALink.cpp	/^int rfu_transfer_end;$/;"	v
rhw	src/win32/Direct3D.cpp	/^		FLOAT x, y, z, rhw; \/\/ screen coordinates$/;"	m	struct:Direct3DDisplay::VERTEX	file:
rhw	src/win32/Direct3D.cpp	/^		FLOAT x, y, z, rhw;$/;"	m	struct:Direct3DDisplay::TRANSP_VERTEX	file:
right	src/apu/Multi_Buffer.h	/^		Blip_Buffer* right;$/;"	m	struct:Multi_Buffer::channel_t
right	src/apu/Multi_Buffer.h	/^	Blip_Buffer* right()    { return &bufs [1]; }$/;"	f	class:Stereo_Buffer
right	src/win32/Joypad.h	/^  JoypadEditControl  right;$/;"	m	class:JoypadConfig
right	src/win32/Joypad.h	/^  JoypadEditControl  right;$/;"	m	class:MotionConfig
rolloff_freq	src/apu/Blip_Buffer.h	/^	long rolloff_freq;$/;"	m	class:blip_eq_t
rom	src/gba/Globals.cpp	/^u8 *rom = 0;$/;"	v
rom	src/win32/RomInfo.h	/^  u8 *rom;$/;"	m	class:RomInfoGB
rom	src/win32/RomInfo.h	/^  u8 *rom;$/;"	m	class:RomInfoGBA
romSize	src/gba/GBA.cpp	/^static int romSize = 0x2000000;$/;"	v	file:
romSize	src/win32/VBA.h	/^  int romSize;$/;"	m	class:VBA
rom_maker	src/wx/cmdevents.cpp	/^static const struct rom_maker {$/;"	s	file:
rom_size	src/wx/wxvbam.h	/^    u32 rom_size;$/;"	m	class:GameArea
romid	src/libretro/libretro.cpp	/^	char romid[5];$/;"	m	struct:__anon59	file:
rompatch2addr	src/gba/Cheats.cpp	/^u32 rompatch2addr [4];$/;"	v
rompatch2oldval	src/gba/Cheats.cpp	/^u16 rompatch2oldval [4];$/;"	v
rompatch2val	src/gba/Cheats.cpp	/^u16 rompatch2val [4];$/;"	v
romtitle	src/libretro/libretro.cpp	/^	char romtitle[256];$/;"	m	struct:__anon59	file:
rot	src/wx/gfxviewers.cpp	/^	wxControl *pos, *mode, *colors, *pallab, *tile, *prio, *size, *rot, *flg;$/;"	m	class:Viewers::OAMViewer	file:
rpi	src/wx/panel.cpp	/^    const RENDER_PLUGIN_INFO *rpi;$/;"	m	class:FilterThread	file:
rpi	src/wx/wxvbam.h	/^    const RENDER_PLUGIN_INFO *rpi; \/\/ also flag indicating plugin loaded$/;"	m	class:DrawingPanel
rpiCleanup	src/win32/rpi.cpp	/^void rpiCleanup()$/;"	f
rpiDLL	src/win32/rpi.cpp	/^static HINSTANCE rpiDLL = NULL;$/;"	v	file:
rpiFilter	src/win32/rpi.cpp	/^void rpiFilter(u8 *srcPtr, u32 srcPitch, u8 *deltaPtr, u8 *dstPtr, u32 dstPitch, int width, int height)$/;"	f
rpiInit	src/win32/rpi.cpp	/^bool rpiInit(const char *sPluginName)$/;"	f
rpiPool	src/win32/SelectPlugin.cpp	/^vector<PluginDesc> rpiPool;$/;"	v
rpiScaleFactor	src/win32/rpi.cpp	/^int rpiScaleFactor()$/;"	f
rpos	src/common/RingBuffer.h	/^	std::size_t rpos;$/;"	m	class:RingBuffer
rt	src/wx/viewsupt.h	/^	wxStaticText *rt, *gt, *bt;$/;"	m	class:Viewers::ColorView
rtc	src/wx/opts.h	/^    bool rtc; \/\/ rtcEnable  \/\/ has per-game override$/;"	m	struct:opts_t
rtcClockData	src/gba/RTC.cpp	/^static RTCCLOCKDATA rtcClockData;$/;"	v	file:
rtcEnable	src/gba/RTC.cpp	/^void rtcEnable(bool e)$/;"	f
rtcEnabled	src/gba/RTC.cpp	/^static bool rtcEnabled = false;$/;"	v	file:
rtcEnabled	src/libretro/libretro.cpp	/^	int rtcEnabled;$/;"	m	struct:__anon59	file:
rtcIsEnabled	src/gba/RTC.cpp	/^bool rtcIsEnabled()$/;"	f
rtcRead	src/gba/RTC.cpp	/^u16 rtcRead(u32 address)$/;"	f
rtcReadGame	src/gba/RTC.cpp	/^void rtcReadGame(const u8 *&data)$/;"	f
rtcReadGame	src/gba/RTC.cpp	/^void rtcReadGame(gzFile gzFile)$/;"	f
rtcReset	src/gba/RTC.cpp	/^void rtcReset()$/;"	f
rtcSaveGame	src/gba/RTC.cpp	/^void rtcSaveGame(gzFile gzFile)$/;"	f
rtcSaveGame	src/gba/RTC.cpp	/^void rtcSaveGame(u8 *&data)$/;"	f
rtcWrite	src/gba/RTC.cpp	/^bool rtcWrite(u32 address, u16 value)$/;"	f
run	src/apu/Gb_Oscs.cpp	/^void Gb_Noise::run( blip_time_t time, blip_time_t end_time )$/;"	f	class:Gb_Noise
run	src/apu/Gb_Oscs.cpp	/^void Gb_Square::run( blip_time_t time, blip_time_t end_time )$/;"	f	class:Gb_Square
run	src/apu/Gb_Oscs.cpp	/^void Gb_Wave::run( blip_time_t time, blip_time_t end_time )$/;"	f	class:Gb_Wave
run_lfsr	src/apu/Gb_Oscs.cpp	/^static unsigned run_lfsr( unsigned s, unsigned mask, int count )$/;"	f	file:
run_until	src/apu/Gb_Apu.cpp	/^inline void Gb_Apu::run_until( blip_time_t time )$/;"	f	class:Gb_Apu
run_until_	src/apu/Gb_Apu.cpp	/^void Gb_Apu::run_until_( blip_time_t end_time )$/;"	f	class:Gb_Apu
rv16	src/wx/viewers.cpp	242;"	d	file:
s	fex/7z_C/Types.h	/^  ILookInStream s;$/;"	m	struct:__anon29
s	fex/7z_C/Types.h	/^  ISeqInStream s;$/;"	m	struct:__anon30
s	fex/7z_C/Types.h	/^  ISeqInStream s;$/;"	m	struct:__anon31
s	src/apu/Effects_Buffer.h	/^	} s;$/;"	m	class:Effects_Buffer	typeref:struct:Effects_Buffer::__anon131
s16	src/common/Types.h	/^typedef int16_t s16;$/;"	t
s32	src/common/Types.h	/^typedef int32_t s32;$/;"	t
s64	src/common/Types.h	/^typedef int64_t s64;$/;"	t
s8	src/common/Types.h	/^typedef int8_t s8;$/;"	t
sCutSuffix	src/gtk/tools.cpp	/^Glib::ustring sCutSuffix(const Glib::ustring & _rsString,$/;"	f	namespace:VBA
sCutSuffix	src/gtk/tools.cpp	/^std::string sCutSuffix(const std::string & _rsString,$/;"	f	namespace:VBA
sDesc	src/win32/SelectPlugin.h	/^	char sDesc[60];$/;"	m	struct:PluginDesc
sFile	src/win32/SelectPlugin.h	/^	char sFile[MAX_PATH];$/;"	m	struct:PluginDesc
sGetKey	src/gtk/configfile.cpp	/^string Section::sGetKey(const string & _rsKey) const$/;"	f	class:VBA::Config::Section
sGetKey	src/gtk/configfile.h	/^  inline std::string sGetKey() const { return m_sKey; }$/;"	f	class:VBA::Config::KeyNotFound
sGetName	src/gtk/configfile.h	/^  inline std::string sGetName() const { return m_sName; }$/;"	f	class:VBA::Config::Section
sGetName	src/gtk/configfile.h	/^  inline std::string sGetName() const { return m_sName; }$/;"	f	class:VBA::Config::SectionNotFound
sGetSection	src/gtk/configfile.h	/^  inline std::string sGetSection() const { return m_sSection; }$/;"	f	class:VBA::Config::KeyNotFound
sGetUiFilePath	src/gtk/window.cpp	/^std::string Window::sGetUiFilePath(const std::string &_sFileName)$/;"	f	class:VBA::Window
sVoice	src/win32/XAudio2.cpp	/^	IXAudio2SourceVoice    *sVoice; \/\/ sound source$/;"	m	class:XAudio2_Output	file:
sVoice	src/wx/xaudio2.cpp	/^	IXAudio2SourceVoice    *sVoice; \/\/ sound source$/;"	m	class:XAudio2_Output	file:
sample_buf	src/apu/Gb_Oscs.h	/^	int sample_buf; \/\/ last wave RAM byte read (hardware has this as well)$/;"	m	class:Gb_Wave
sample_len	src/common/ffmpeg.h	/^    int frame_len, sample_len, in_audio_buf2;$/;"	m	class:MediaRecorder
sample_rate	src/apu/Blip_Buffer.h	/^	blargg_err_t sample_rate( long r ) { return set_sample_rate( r ); }$/;"	f	class:Blip_Buffer
sample_rate	src/apu/Blip_Buffer.h	/^	blargg_err_t sample_rate( long r, int msec ) { return set_sample_rate( r, msec ); }$/;"	f	class:Blip_Buffer
sample_rate	src/apu/Blip_Buffer.h	/^	long sample_rate;$/;"	m	class:blip_eq_t
sample_rate	src/apu/Blip_Buffer.h	/^inline long Blip_Buffer::sample_rate() const    { return sample_rate_; }$/;"	f	class:Blip_Buffer
sample_rate	src/apu/Multi_Buffer.h	/^inline long Multi_Buffer::sample_rate() const { return sample_rate_; }$/;"	f	class:Multi_Buffer
sample_rate	src/libretro/libretro.h	/^   double sample_rate;     \/\/ Sampling rate of audio.$/;"	m	struct:retro_system_timing
sample_rate	src/win32/AudioCoreSettingsDlg.h	/^	CComboBox sample_rate;$/;"	m	class:AudioCoreSettingsDlg
sample_rate_	src/apu/Blip_Buffer.h	/^	long sample_rate_;$/;"	m	class:Blip_Buffer
sample_rate_	src/apu/Multi_Buffer.h	/^	long sample_rate_;$/;"	m	class:Multi_Buffer
samples_avail	src/apu/Blip_Buffer.h	/^inline long Blip_Buffer::samples_avail() const  { return (long) (offset_ >> BLIP_BUFFER_ACCURACY); }$/;"	f	class:Blip_Buffer
samples_avail	src/apu/Effects_Buffer.h	/^	long samples_avail() const { return (bufs [0].samples_avail() - mixer.samples_read) * 2; }$/;"	f	class:Effects_Buffer
samples_avail	src/apu/Multi_Buffer.h	/^	long samples_avail() const { return (bufs [0].samples_avail() - mixer.samples_read) * 2; }$/;"	f	class:Stereo_Buffer
samples_avail	src/apu/Multi_Buffer.h	/^	long samples_avail() const { return 0; }$/;"	f	class:Silent_Buffer
samples_avail	src/apu/Multi_Buffer.h	/^	long samples_avail() const { return buf.samples_avail(); }$/;"	f	class:Mono_Buffer
samples_avail_	src/apu/Multi_Buffer.h	/^	long samples_avail_;$/;"	m	class:Stereo_Buffer
samples_per_frame	src/apu/Multi_Buffer.h	/^inline int Multi_Buffer::samples_per_frame() const { return samples_per_frame_; }$/;"	f	class:Multi_Buffer
samples_per_frame_	src/apu/Multi_Buffer.h	/^	int const samples_per_frame_;$/;"	m	class:Multi_Buffer
samples_read	src/apu/Multi_Buffer.h	/^		blargg_long samples_read;$/;"	m	class:Stereo_Mixer
save	src/win32/GBOamView.cpp	/^void GBOamView::save()$/;"	f	class:GBOamView
save	src/win32/GBPaletteView.cpp	/^void GBPaletteView::save(int which)$/;"	f	class:GBPaletteView
save	src/win32/PaletteView.cpp	/^void PaletteView::save(int which)$/;"	f	class:PaletteView
saveAdobe	src/win32/PaletteViewControl.cpp	/^bool PaletteViewControl::saveAdobe(const char *name)$/;"	f	class:PaletteViewControl
saveAsBMP	src/win32/GBPrinterDlg.cpp	/^void GBPrinterDlg::saveAsBMP(const char *name)$/;"	f	class:GBPrinterDlg
saveAsPNG	src/win32/GBPrinterDlg.cpp	/^void GBPrinterDlg::saveAsPNG(const char *name)$/;"	f	class:GBPrinterDlg
saveBMP	src/win32/GBMapView.cpp	/^void GBMapView::saveBMP(const char *name)$/;"	f	class:GBMapView
saveBMP	src/win32/GBOamView.cpp	/^void GBOamView::saveBMP(const char *name)$/;"	f	class:GBOamView
saveBMP	src/win32/GBTileView.cpp	/^void GBTileView::saveBMP(const char *name)$/;"	f	class:GBTileView
saveBMP	src/win32/MapView.cpp	/^void MapView::saveBMP(const char *name)$/;"	f	class:MapView
saveBMP	src/win32/OamView.cpp	/^void OamView::saveBMP(const char *name)$/;"	f	class:OamView
saveBMP	src/win32/TileView.cpp	/^void TileView::saveBMP(const char *name)$/;"	f	class:TileView
saveDir	src/sdl/SDL.cpp	/^char saveDir[2048];$/;"	v
saveGameStruct	src/gba/GBA.cpp	/^variable_desc saveGameStruct[] = {$/;"	v
saveJASCPAL	src/win32/PaletteViewControl.cpp	/^bool PaletteViewControl::saveJASCPAL(const char *name)$/;"	f	class:PaletteViewControl
saveMSPAL	src/win32/PaletteViewControl.cpp	/^bool PaletteViewControl::saveMSPAL(const char *name)$/;"	f	class:PaletteViewControl
savePNG	src/win32/GBMapView.cpp	/^void GBMapView::savePNG(const char *name)$/;"	f	class:GBMapView
savePNG	src/win32/GBOamView.cpp	/^void GBOamView::savePNG(const char *name)$/;"	f	class:GBOamView
savePNG	src/win32/GBTileView.cpp	/^void GBTileView::savePNG(const char *name)$/;"	f	class:GBTileView
savePNG	src/win32/MapView.cpp	/^void MapView::savePNG(const char *name)$/;"	f	class:MapView
savePNG	src/win32/OamView.cpp	/^void OamView::savePNG(const char *name)$/;"	f	class:OamView
savePNG	src/win32/TileView.cpp	/^void TileView::savePNG(const char *name)$/;"	f	class:TileView
saveSettings	src/win32/DirectInput.cpp	/^void DirectInput::saveSettings()$/;"	f	class:DirectInput
saveSettings	src/win32/VBA.cpp	/^void VBA::saveSettings()$/;"	f	class:VBA
saveSlotPosition	src/sdl/SDL.cpp	/^static int saveSlotPosition = 0; \/\/ default is the slot from normal F1$/;"	v	file:
saveType	src/gba/Globals.cpp	/^int saveType = 0;$/;"	v
saveType	src/libretro/libretro.cpp	/^	int saveType;$/;"	m	struct:__anon59	file:
save_load	src/apu/Gb_Apu_State.cpp	/^inline const char* Gb_Apu::save_load( gb_apu_state_t* io, bool save )$/;"	f	class:Gb_Apu
save_load2	src/apu/Gb_Apu_State.cpp	/^inline void Gb_Apu::save_load2( gb_apu_state_t* io, bool save )$/;"	f	class:Gb_Apu
save_state	src/apu/Blip_Buffer.cpp	/^void Blip_Buffer::save_state( blip_buffer_state_t* out )$/;"	f	class:Blip_Buffer
save_state	src/apu/Gb_Apu_State.cpp	/^void Gb_Apu::save_state( gb_apu_state_t* out )$/;"	f	class:Gb_Apu
save_type	src/libretro/gbaconv/gbaconv.c	/^enum save_type$/;"	g	file:
save_type	src/wx/opts.h	/^    int save_type; \/\/ cpuSaveType$/;"	m	struct:opts_t
save_type_to_string	src/libretro/gbaconv/gbaconv.c	/^static const char *save_type_to_string(enum save_type type)$/;"	f	file:
saved	src/gba/CheatSearch.h	/^  u8 *saved;$/;"	m	struct:CheatSearchBlock
savedlinktime	src/gba/GBALink.cpp	/^int savedlinktime = 0;$/;"	v
savepal	src/wx/gfxviewers.cpp	/^    void savepal(wxWindow *parent, const u8 *data, int ncols, const wxChar *type)$/;"	f	namespace:Viewers
savest_mi	src/wx/wxvbam.h	/^    wxMenuItem *savest_mi[10];$/;"	m	class:MainFrame
sb	src/wx/viewsupt.h	/^	wxScrollBar sb;$/;"	m	class:Viewers::DisList
sb	src/wx/viewsupt.h	/^	wxScrollBar sb;$/;"	m	class:Viewers::MemView
scale	src/win32/GBPrinterDlg.h	/^  int scale;$/;"	m	class:GBPrinterDlg
scale	src/wx/panel.cpp	/^    int width, height, scale;$/;"	m	class:FilterThread	file:
scale	src/wx/wxvbam.h	/^    int width, height, scale;$/;"	m	class:DrawingPanel
scan_arc	src/Util.cpp	/^static fex_t* scan_arc(const char *file, bool (*accept)(const char *),$/;"	f	file:
scan_area	src/libretro/libretro.cpp	/^static bool scan_area(const uint8_t *data, unsigned size)$/;"	f	file:
scan_section	src/libretro/gbaconv/gbaconv.c	/^static bool scan_section(const uint8_t *data, unsigned size)$/;"	f	file:
screenCapture	src/win32/MainWnd.cpp	/^void MainWnd::screenCapture(int captureNumber)$/;"	f	class:MainWnd
screenFormat	src/win32/Direct3D.cpp	/^	D3DFORMAT             screenFormat;$/;"	m	class:Direct3DDisplay	file:
screenMessage	src/sdl/SDL.cpp	/^bool screenMessage = false;$/;"	v
screenMessage	src/win32/VBA.h	/^  bool screenMessage;$/;"	m	class:VBA
screenMessageBuffer	src/sdl/SDL.cpp	/^char screenMessageBuffer[21];$/;"	v
screenMessageBuffer	src/win32/VBA.h	/^  CString screenMessageBuffer;$/;"	m	class:VBA
screenMessageTime	src/sdl/SDL.cpp	/^u32  screenMessageTime = 0;$/;"	v
screenMessageTime	src/win32/VBA.h	/^  DWORD screenMessageTime;$/;"	m	class:VBA
screenTexture	src/sdl/SDL.cpp	/^GLuint screenTexture = 0;$/;"	v
scrshot_dir	src/wx/opts.h	/^    wxString scrshot_dir;$/;"	m	struct:opts_t
sdlAgbPrint	src/sdl/SDL.cpp	/^int sdlAgbPrint = 0;$/;"	v
sdlApplyPerImagePreferences	src/sdl/SDL.cpp	/^static void sdlApplyPerImagePreferences()$/;"	f	file:
sdlAutoPatch	src/sdl/SDL.cpp	/^int sdlAutoPatch = 1;$/;"	v
sdlButtons	src/sdl/inputSDL.cpp	/^static bool sdlButtons[4][SDLBUTTONS_NUM] = {$/;"	v	file:
sdlCalculateShift	src/sdl/SDL.cpp	/^static int sdlCalculateShift(u32 mask)$/;"	f	file:
sdlChangeVolume	src/sdl/SDL.cpp	/^static void sdlChangeVolume(float d)$/;"	f	file:
sdlCheckDirectory	src/sdl/SDL.cpp	/^void sdlCheckDirectory(char *dir)$/;"	f
sdlCheckJoyKey	src/sdl/inputSDL.cpp	/^static bool sdlCheckJoyKey(int key)$/;"	f	file:
sdlDefaultJoypad	src/sdl/inputSDL.cpp	/^static EPad sdlDefaultJoypad = PAD_MAIN;$/;"	v	file:
sdlDevices	src/sdl/inputSDL.cpp	/^static SDL_Joystick **sdlDevices = NULL;$/;"	v	file:
sdlFindFile	src/sdl/SDL.cpp	/^FILE *sdlFindFile(const char *name)$/;"	f
sdlFlashSize	src/sdl/SDL.cpp	/^int sdlFlashSize = 0;$/;"	v
sdlFromDec	src/sdl/SDL.cpp	/^u32 sdlFromDec(char *s)$/;"	f
sdlFromHex	src/sdl/SDL.cpp	/^u32 sdlFromHex(char *s)$/;"	f
sdlGetAxisCode	src/sdl/inputSDL.cpp	/^static uint32_t sdlGetAxisCode(const SDL_Event &event)$/;"	f	file:
sdlGetButtonCode	src/sdl/inputSDL.cpp	/^static uint32_t sdlGetButtonCode(const SDL_Event &event)$/;"	f	file:
sdlGetFilename	src/sdl/SDL.cpp	/^char *sdlGetFilename(char *name)$/;"	f
sdlGetHatCode	src/sdl/inputSDL.cpp	/^static uint32_t sdlGetHatCode(const SDL_Event &event)$/;"	f	file:
sdlHandleSavestateKey	src/sdl/SDL.cpp	/^static void sdlHandleSavestateKey(int num, int shifted)$/;"	f	file:
sdlInitVideo	src/sdl/SDL.cpp	/^void sdlInitVideo() {$/;"	f
sdlMakeStretcher	src/sdl/filters.cpp	/^void sdlMakeStretcher(int width, int sizeOption)$/;"	f
sdlMirroringEnable	src/sdl/SDL.cpp	/^int sdlMirroringEnable = 0;$/;"	v
sdlMotionButtons	src/sdl/inputSDL.cpp	/^static bool sdlMotionButtons[4] = { false, false, false, false };$/;"	v	file:
sdlNumDevices	src/sdl/inputSDL.cpp	/^static int sdlNumDevices = 0;$/;"	v	file:
sdlOpenGLInit	src/sdl/SDL.cpp	/^void sdlOpenGLInit(int w, int h)$/;"	f
sdlOpenglScale	src/sdl/SDL.cpp	/^static int sdlOpenglScale = 1;$/;"	v	file:
sdlOptions	src/sdl/SDL.cpp	/^struct option sdlOptions[] = {$/;"	v	typeref:struct:option
sdlPollEvents	src/sdl/SDL.cpp	/^void sdlPollEvents()$/;"	f
sdlPreparedCheatCodes	src/sdl/SDL.cpp	/^const char * sdlPreparedCheatCodes[MAX_CHEATS];$/;"	v
sdlPreparedCheats	src/sdl/SDL.cpp	/^int sdlPreparedCheats	= 0;$/;"	v
sdlPrintUsage	src/sdl/SDL.cpp	/^int sdlPrintUsage = 0;$/;"	v
sdlReadBattery	src/sdl/SDL.cpp	/^void sdlReadBattery()$/;"	f
sdlReadDesktopVideoMode	src/sdl/SDL.cpp	/^void sdlReadDesktopVideoMode() {$/;"	f
sdlReadPreferences	src/sdl/SDL.cpp	/^void sdlReadPreferences()$/;"	f
sdlReadPreferences	src/sdl/SDL.cpp	/^void sdlReadPreferences(FILE *f)$/;"	f
sdlReadState	src/sdl/SDL.cpp	/^void sdlReadState(int num)$/;"	f
sdlRtcEnable	src/sdl/SDL.cpp	/^int sdlRtcEnable = 0;$/;"	v
sdlSaveKeysSwitch	src/sdl/SDL.cpp	/^static int sdlSaveKeysSwitch = 0;$/;"	v	file:
sdlSoundToggledOff	src/sdl/SDL.cpp	/^static int sdlSoundToggledOff = 0;$/;"	v	file:
sdlStateName	src/sdl/SDL.cpp	/^static char * sdlStateName(int num)$/;"	f	file:
sdlStretch1x	src/sdl/filters.cpp	/^void sdlStretch1x(u8 *srcPtr, u32 srcPitch, u8 * \/* deltaPtr *\/, u8 *dstPtr, u32 dstPitch, int width, int height) {$/;"	f
sdlStretch24x1	src/sdl/filters.cpp	/^void sdlStretch24x1(u8 *src, u8 *dest, int width)$/;"	f
sdlStretch24x2	src/sdl/filters.cpp	/^void sdlStretch24x2(u8 *src, u8 *dest, int width)$/;"	f
sdlStretch24x3	src/sdl/filters.cpp	/^void sdlStretch24x3(u8 *src, u8 *dest, int width)$/;"	f
sdlStretch24x4	src/sdl/filters.cpp	/^void sdlStretch24x4(u8 *src, u8 *dest, int width)$/;"	f
sdlStretch2x	src/sdl/filters.cpp	/^void sdlStretch2x(u8 *srcPtr, u32 srcPitch, u8 * \/* deltaPtr *\/, u8 *dstPtr, u32 dstPitch, int width, int height) {$/;"	f
sdlStretch3x	src/sdl/filters.cpp	/^void sdlStretch3x(u8 *srcPtr, u32 srcPitch, u8 * \/* deltaPtr *\/, u8 *dstPtr, u32 dstPitch, int width, int height) {$/;"	f
sdlStretch4x	src/sdl/filters.cpp	/^void sdlStretch4x(u8 *srcPtr, u32 srcPitch, u8 * \/* deltaPtr *\/, u8 *dstPtr, u32 dstPitch, int width, int height) {$/;"	f
sdlStretchInit	src/sdl/filters.cpp	/^bool sdlStretchInit(int colorDepth, int sizeMultiplier, int srcWidth)$/;"	f
sdlStretcher	src/sdl/filters.cpp	/^u8 sdlStretcher[16384];$/;"	v
sdlStretcher	src/sdl/filters.cpp	/^void (*sdlStretcher)(u8 *, u8*, int) = 0;$/;"	v
sdlStretcher16	src/sdl/filters.cpp	/^void (*sdlStretcher16[4])(u8 *, u8 *, int) = {$/;"	v
sdlStretcher24	src/sdl/filters.cpp	/^void (*sdlStretcher24[4])(u8 *, u8 *, int) = {$/;"	v
sdlStretcher32	src/sdl/filters.cpp	/^void (*sdlStretcher32[4])(u8 *, u8 *, int) = {$/;"	v
sdlStretchx1	src/sdl/filters.cpp	/^void sdlStretchx1(u8 *src, u8 *dest, int width)$/;"	f
sdlStretchx2	src/sdl/filters.cpp	/^void sdlStretchx2(u8 *src, u8 *dest, int width)$/;"	f
sdlStretchx3	src/sdl/filters.cpp	/^void sdlStretchx3(u8 *src, u8 *dest, int width)$/;"	f
sdlStretchx4	src/sdl/filters.cpp	/^void sdlStretchx4(u8 *src, u8 *dest, int width)$/;"	f
sdlUpdateJoyAxis	src/sdl/inputSDL.cpp	/^static void sdlUpdateJoyAxis(int which,$/;"	f	file:
sdlUpdateJoyButton	src/sdl/inputSDL.cpp	/^static void sdlUpdateJoyButton(int which,$/;"	f	file:
sdlUpdateJoyHat	src/sdl/inputSDL.cpp	/^static void sdlUpdateJoyHat(int which,$/;"	f	file:
sdlUpdateKey	src/sdl/inputSDL.cpp	/^static void sdlUpdateKey(uint32_t key, bool down)$/;"	f	file:
sdlWriteBackupStateExchange	src/sdl/SDL.cpp	/^void sdlWriteBackupStateExchange(int from, int to, int backup)$/;"	f
sdlWriteBattery	src/sdl/SDL.cpp	/^void sdlWriteBattery()$/;"	f
sdlWriteState	src/sdl/SDL.cpp	/^void sdlWriteState(int num)$/;"	f
sdl_patch_names	src/sdl/SDL.cpp	/^char *	(sdl_patch_names[PATCH_MAX_NUM])	= { NULL }; \/\/ and so on$/;"	v
sdl_patch_num	src/sdl/SDL.cpp	/^int	sdl_patch_num	= 0;$/;"	v
searchType	src/win32/GBACheats.h	/^  int    searchType;$/;"	m	class:GBACheatSearch
searchType	src/win32/GBCheatsDlg.h	/^  int    searchType;$/;"	m	class:GBCheatSearch
seed_gen	src/gba/Cheats.cpp	/^u32 seed_gen(u8 upper, u8 seed, u8 *deadtable1, u8 *deadtable2) {$/;"	f
seeds_v1	src/gba/Cheats.cpp	/^u32 seeds_v1[4];$/;"	v
seeds_v3	src/gba/Cheats.cpp	/^u32 seeds_v3[4];$/;"	v
seek	fex/fex/Data_Reader.cpp	/^blargg_err_t File_Reader::seek( int n )$/;"	f	class:File_Reader
seek_arc	fex/fex/File_Extractor.cpp	/^blargg_err_t File_Extractor::seek_arc( fex_pos_t pos )$/;"	f	class:File_Extractor
seek_arc_v	fex/fex/File_Extractor.cpp	/^blargg_err_t File_Extractor::seek_arc_v( fex_pos_t pos )$/;"	f	class:File_Extractor
seek_arc_v	fex/fex/Rar_Extractor.cpp	/^blargg_err_t Rar_Extractor::seek_arc_v( fex_pos_t pos )$/;"	f	class:Rar_Extractor
seek_arc_v	fex/fex/Zip7_Extractor.cpp	/^blargg_err_t Zip7_Extractor::seek_arc_v( fex_pos_t pos )$/;"	f	class:Zip7_Extractor
seek_arc_v	fex/fex/Zip_Extractor.cpp	/^blargg_err_t Zip_Extractor::seek_arc_v( fex_pos_t pos )$/;"	f	class:Zip_Extractor
seek_v	fex/fex/Data_Reader.cpp	/^blargg_err_t Callback_File_Reader::seek_v( int )$/;"	f	class:Callback_File_Reader
seek_v	fex/fex/Data_Reader.cpp	/^blargg_err_t Gzip_File_Reader::seek_v( int n )$/;"	f	class:Gzip_File_Reader
seek_v	fex/fex/Data_Reader.cpp	/^blargg_err_t Mem_File_Reader::seek_v( int )$/;"	f	class:Mem_File_Reader
seek_v	fex/fex/Data_Reader.cpp	/^blargg_err_t Std_File_Reader::seek_v( int n )$/;"	f	class:Std_File_Reader
seladdr	src/wx/viewsupt.h	/^	int selnib, seladdr;$/;"	m	class:Viewers::MemView
seladdr	src/wx/viewsupt.h	/^	u32 seladdr;$/;"	m	class:Viewers::DisList
selectFullScreenMode	src/win32/Direct3D.cpp	/^bool Direct3DDisplay::selectFullScreenMode( VIDEO_MODE &mode )$/;"	f	class:Direct3DDisplay
selectFullScreenMode	src/win32/OpenGL.cpp	/^bool OpenGLDisplay::selectFullScreenMode( VIDEO_MODE &mode )$/;"	f	class:OpenGLDisplay
selected	src/win32/IOViewer.h	/^  int selected;$/;"	m	class:IOViewer
selected	src/win32/PaletteViewControl.h	/^  int selected;$/;"	m	class:PaletteViewControl
selected	src/win32/ZoomControl.h	/^  int selected;$/;"	m	class:ZoomControl
selectedDevice	src/win32/OALConfig.h	/^	CString selectedDevice;$/;"	m	class:OALConfig
selnib	src/wx/viewsupt.h	/^	int selnib, seladdr;$/;"	m	class:Viewers::MemView
selreg_addr	src/wx/viewers.cpp	/^	wxTextCtrl *selreg_addr, *selreg_len;$/;"	m	class:Viewers::MemViewerBase	file:
selreg_len	src/wx/viewers.cpp	/^	wxTextCtrl *selreg_addr, *selreg_len;$/;"	m	class:Viewers::MemViewerBase	file:
selreg_lenlab	src/wx/viewers.cpp	/^	wxControl *selreg_lenlab;$/;"	m	class:Viewers::MemViewerBase	file:
selregion	src/wx/viewers.cpp	/^	wxDialog *selregion;$/;"	m	class:Viewers::MemViewerBase	file:
selx	src/wx/gfxviewers.cpp	/^	int selx, sely;$/;"	m	class:Viewers::GBMapViewer	file:
selx	src/wx/gfxviewers.cpp	/^	int selx, sely;$/;"	m	class:Viewers::GBTileViewer	file:
selx	src/wx/gfxviewers.cpp	/^	int selx, sely;$/;"	m	class:Viewers::MapViewer	file:
selx	src/wx/gfxviewers.cpp	/^	int selx, sely;$/;"	m	class:Viewers::TileViewer	file:
selx	src/wx/viewsupt.h	/^	int ox, oy, selx, sely;$/;"	m	class:Viewers::PixView
selx	src/wx/viewsupt.h	/^	int selx, sely;$/;"	m	class:Viewers::GfxPanel
sely	src/wx/gfxviewers.cpp	/^	int selx, sely;$/;"	m	class:Viewers::GBMapViewer	file:
sely	src/wx/gfxviewers.cpp	/^	int selx, sely;$/;"	m	class:Viewers::GBTileViewer	file:
sely	src/wx/gfxviewers.cpp	/^	int selx, sely;$/;"	m	class:Viewers::MapViewer	file:
sely	src/wx/gfxviewers.cpp	/^	int selx, sely;$/;"	m	class:Viewers::TileViewer	file:
sely	src/wx/viewsupt.h	/^	int ox, oy, selx, sely;$/;"	m	class:Viewers::PixView
sely	src/wx/viewsupt.h	/^	int selx, sely;$/;"	m	class:Viewers::GfxPanel
sensorX	src/sdl/inputSDL.cpp	/^static int sensorX = 2047;$/;"	v	file:
sensorX	src/win32/VBA.h	/^  int sensorX;$/;"	m	class:VBA
sensorY	src/sdl/inputSDL.cpp	/^static int sensorY = 2047;$/;"	v	file:
sensorY	src/win32/VBA.h	/^  int sensorY;$/;"	m	class:VBA
sensorx	src/wx/sys.cpp	/^static int sensorx[4], sensory[4];$/;"	v	file:
sensory	src/wx/sys.cpp	/^static int sensorx[4], sensory[4];$/;"	v	file:
serialize_size	src/libretro/libretro.cpp	/^static unsigned serialize_size = 0;$/;"	v	file:
server	src/gba/GBALink.h	/^	bool server;$/;"	m	struct:__anon46
server_addr	src/gba/GBASockClient.h	/^	sf::IPAddress server_addr;$/;"	m	class:GBASockClient
serveraddr	src/gba/GBALink.h	/^	sf::IPAddress serveraddr;$/;"	m	class:lclient
serverport	src/gba/GBALink.h	/^	unsigned short serverport;$/;"	m	class:lclient
setAPI	src/win32/FullscreenSettings.cpp	/^void FullscreenSettings::setAPI( DISPLAY_TYPE type )$/;"	f	class:FullscreenSettings
setAddress	src/win32/MemoryViewer.cpp	/^void MemoryViewer::setAddress(u32 a)$/;"	f	class:MemoryViewer
setAddress	src/win32/MemoryViewerAddressSize.cpp	/^void MemoryViewerAddressSize::setAddress(u32 a)$/;"	f	class:MemoryViewerAddressSize
setAddressSize	src/win32/MemoryViewer.cpp	/^void MemoryViewer::setAddressSize(int s)$/;"	f	class:MemoryViewer
setAttributes	src/win32/GBOamView.cpp	/^void GBOamView::setAttributes(int y, int x, int tile, int flags)$/;"	f	class:GBOamView
setAttributes	src/win32/OamView.cpp	/^void OamView::setAttributes(u16 a0, u16 a1, u16 a2)$/;"	f	class:OamView
setBmpInfo	src/win32/BitmapControl.cpp	/^void BitmapControl::setBmpInfo(BITMAPINFO *info)$/;"	f	class:BitmapControl
setCaretPos	src/win32/MemoryViewer.cpp	/^void MemoryViewer::setCaretPos()$/;"	f	class:MemoryViewer
setColor	src/win32/ColorButton.cpp	/^void ColorButton::setColor(u16 c)$/;"	f	class:ColorButton
setColor	src/win32/ColorControl.cpp	/^void ColorControl::setColor(u16 c)$/;"	f	class:ColorControl
setColors	src/win32/ZoomControl.cpp	/^void ZoomControl::setColors(const u8 *c)$/;"	f	class:ZoomControl
setCurrentAddress	src/win32/GBMemoryViewerDlg.cpp	/^void GBMemoryViewerDlg::setCurrentAddress(u32 address)$/;"	f	class:GBMemoryViewerDlg
setCurrentAddress	src/win32/MemoryViewerDlg.cpp	/^void MemoryViewerDlg::setCurrentAddress(u32 address)$/;"	f	class:MemoryViewerDlg
setData	src/win32/BitmapControl.cpp	/^void BitmapControl::setData(u8 *d)$/;"	f	class:BitmapControl
setDialog	src/win32/MemoryViewer.cpp	/^void MemoryViewer::setDialog(IMemoryViewerDlg *d)$/;"	f	class:MemoryViewer
setOption	src/win32/Direct3D.cpp	/^void Direct3DDisplay::setOption( const char *option, int value )$/;"	f	class:Direct3DDisplay
setOption	src/win32/Display.h	/^  virtual void setOption(const char *option, int value) {};$/;"	f	class:IDisplay
setOption	src/win32/OpenGL.cpp	/^void OpenGLDisplay::setOption( const char *option, int value )$/;"	f	class:OpenGLDisplay
setPaletteAddress	src/win32/PaletteViewControl.cpp	/^void PaletteViewControl::setPaletteAddress(int address)$/;"	f	class:PaletteViewControl
setSelected	src/win32/PaletteViewControl.cpp	/^void PaletteViewControl::setSelected(int s)$/;"	f	class:PaletteViewControl
setSize	src/win32/BitmapControl.cpp	/^void BitmapControl::setSize(int w1, int h1)$/;"	f	class:BitmapControl
setSize	src/win32/MemoryViewer.cpp	/^void MemoryViewer::setSize(int s)$/;"	f	class:MemoryViewer
setSize	src/win32/MemoryViewerAddressSize.cpp	/^void MemoryViewerAddressSize::setSize(int s)$/;"	f	class:MemoryViewerAddressSize
setStretch	src/win32/BitmapControl.cpp	/^void BitmapControl::setStretch(bool b)$/;"	f	class:BitmapControl
setThrottle	src/common/SoundDriver.h	/^	virtual void setThrottle(unsigned short throttle) { };$/;"	f	class:SoundDriver
setThrottle	src/win32/XAudio2.cpp	/^void XAudio2_Output::setThrottle( unsigned short throttle )$/;"	f	class:XAudio2_Output
setThrottle	src/wx/xaudio2.cpp	/^void XAudio2_Output::setThrottle( unsigned short throttle )$/;"	f	class:XAudio2_Output
setVSync	src/win32/OpenGL.cpp	/^void OpenGLDisplay::setVSync( int interval )$/;"	f	class:OpenGLDisplay
setWhich	src/win32/GBColorDlg.cpp	/^void GBColorDlg::setWhich(int w)$/;"	f	class:GBColorDlg
set_be	fex/fex/blargg_endian.h	/^inline void set_be( BOOST::uint16_t* p, unsigned n ) { SET_BE16( p, n ); }$/;"	f
set_be	fex/fex/blargg_endian.h	/^inline void set_be( BOOST::uint32_t* p, unsigned n ) { SET_BE32( p, n ); }$/;"	f
set_be16	fex/fex/blargg_endian.h	/^inline void set_be16( void* p, unsigned n )$/;"	f
set_be32	fex/fex/blargg_endian.h	/^inline void set_be32( void* p, unsigned n )$/;"	f
set_channel_count	src/apu/Effects_Buffer.cpp	/^blargg_err_t Effects_Buffer::set_channel_count( int count, int const* types )$/;"	f	class:Effects_Buffer
set_channel_count	src/apu/Multi_Buffer.h	/^inline blargg_err_t Multi_Buffer::set_channel_count( int n, int const* types )$/;"	f	class:Multi_Buffer
set_eject_state	src/libretro/libretro.h	/^   retro_set_eject_state_t set_eject_state;$/;"	m	struct:retro_disk_control_callback
set_global_accels	src/wx/guiinit.cpp	/^void MainFrame::set_global_accels()$/;"	f	class:MainFrame
set_image_index	src/libretro/libretro.h	/^   retro_set_image_index_t set_image_index;$/;"	m	struct:retro_disk_control_callback
set_info	fex/fex/File_Extractor.cpp	/^void File_Extractor::set_info( int new_size, unsigned date, unsigned crc )$/;"	f	class:File_Extractor
set_le	fex/fex/blargg_endian.h	/^inline void set_le( BOOST::uint16_t* p, unsigned n ) { SET_LE16( p, n ); }$/;"	f
set_le	fex/fex/blargg_endian.h	/^inline void set_le( BOOST::uint32_t* p, unsigned n ) { SET_LE32( p, n ); }$/;"	f
set_le16	fex/fex/blargg_endian.h	/^inline void set_le16( void* p, unsigned n )$/;"	f
set_le32	fex/fex/blargg_endian.h	/^inline void set_le32( void* p, unsigned n )$/;"	f
set_mode	fex/fex/Zlib_Inflater.cpp	/^blargg_err_t Zlib_Inflater::set_mode( mode_t mode, int data_offset )$/;"	f	class:Zlib_Inflater
set_modified	src/apu/Blip_Buffer.h	/^	void set_modified() { modified_ = this; }$/;"	f	class:Blip_Buffer
set_name	fex/fex/File_Extractor.cpp	/^void File_Extractor::set_name( const char new_name [], const wchar_t* new_wname )$/;"	f	class:File_Extractor
set_output	src/apu/Gb_Apu.cpp	/^void Gb_Apu::set_output( Blip_Buffer* center, Blip_Buffer* left, Blip_Buffer* right, int osc )$/;"	f	class:Gb_Apu
set_path	fex/fex/File_Extractor.cpp	/^blargg_err_t File_Extractor::set_path( const char* path )$/;"	f	class:File_Extractor
set_remain	fex/fex/Data_Reader.h	/^	void set_remain( int n )                        { assert( n >= 0 ); remain_ = n; }$/;"	f	class:Data_Reader
set_sample_rate	src/apu/Blip_Buffer.cpp	/^Blip_Buffer::blargg_err_t Blip_Buffer::set_sample_rate( long new_rate, int msec )$/;"	f	class:Blip_Buffer
set_sample_rate	src/apu/Effects_Buffer.cpp	/^blargg_err_t Effects_Buffer::set_sample_rate( long rate, int msec )$/;"	f	class:Effects_Buffer
set_sample_rate	src/apu/Multi_Buffer.cpp	/^blargg_err_t Mono_Buffer::set_sample_rate( long rate, int msec )$/;"	f	class:Mono_Buffer
set_sample_rate	src/apu/Multi_Buffer.cpp	/^blargg_err_t Stereo_Buffer::set_sample_rate( long rate, int msec )$/;"	f	class:Stereo_Buffer
set_sample_rate	src/apu/Multi_Buffer.h	/^inline blargg_err_t Multi_Buffer::set_sample_rate( long rate, int msec )$/;"	f	class:Multi_Buffer
set_sample_rate	src/apu/Multi_Buffer.h	/^inline blargg_err_t Silent_Buffer::set_sample_rate( long rate, int msec )$/;"	f	class:Silent_Buffer
set_size	fex/fex/Data_Reader.h	/^	void set_size( int n )              { size_ = n; Data_Reader::set_remain( n ); }$/;"	f	class:File_Reader
set_size	fex/fex/Data_Reader.h	/^	void set_size( long n )             { set_size( STATIC_CAST(int, n) ); }$/;"	f	class:File_Reader
set_tell	fex/fex/Data_Reader.h	/^	void set_tell( int i )              { assert( 0 <= i && i <= size_ ); Data_Reader::set_remain( size_ - i ); }$/;"	f	class:File_Reader
set_tempo	src/apu/Gb_Apu.cpp	/^void Gb_Apu::set_tempo( double t )$/;"	f	class:Gb_Apu
set_val	src/apu/Gb_Apu_State.cpp	/^	static void set_val( byte* p, blargg_ulong n )$/;"	f	file:
set_vl	src/wx/cmdevents.cpp	1483;"	d	file:
setblab	src/wx/cmdevents.cpp	408;"	d	file:
setblabs	src/wx/cmdevents.cpp	412;"	d	file:
setlab	src/wx/cmdevents.cpp	403;"	d	file:
setlabs	src/wx/cmdevents.cpp	416;"	d	file:
setup_sound_stream	src/common/ffmpeg.cpp	/^MediaRet MediaRecorder::setup_sound_stream(const char *fname, AVOutputFormat *fmt)$/;"	f	class:MediaRecorder
setup_video_stream	src/common/ffmpeg.cpp	/^MediaRet MediaRecorder::setup_video_stream(const char *fname, int w, int h, int d)$/;"	f	class:MediaRecorder
shift	src/gba/Sound.cpp	/^	int shift;$/;"	m	class:Gba_Pcm	file:
shift_mask	src/apu/Gb_Oscs.h	/^	enum { shift_mask  = 0x07 };$/;"	e	enum:Gb_Sweep_Square::__anon135
shifts	src/gba/armdis.cpp	/^const char *shifts[5] = {$/;"	v
shndx	src/gba/elf.h	/^  u16 shndx;$/;"	m	struct:ELFSymbol
short	src/sdl/expr.cpp	151;"	d	file:
showRenderedFrames	src/sdl/SDL.cpp	/^int showRenderedFrames = 0;$/;"	v
showRenderedFrames	src/win32/VBA.h	/^  int showRenderedFrames;$/;"	m	class:VBA
showSpeed	src/sdl/SDL.cpp	/^int showSpeed = 1;$/;"	v
showSpeed	src/win32/VBA.h	/^  int showSpeed;$/;"	m	class:VBA
showSpeedTransparent	src/sdl/SDL.cpp	/^int showSpeedTransparent = 1;$/;"	v
showSpeedTransparent	src/win32/VBA.h	/^  BOOL showSpeedTransparent;$/;"	m	class:VBA
showspeed	src/wx/wxvbam.h	/^enum showspeed {$/;"	g
shutdownDisplay	src/win32/VBA.cpp	/^void VBA::shutdownDisplay()$/;"	f	class:VBA
side_chans	src/apu/Effects_Buffer.h	/^		pan_vol_t side_chans [2]; \/\/ left and right side channel volume and pan$/;"	m	struct:Effects_Buffer::config_t
sig	src/wx/panel.cpp	/^    wxCondition sig;$/;"	m	class:FilterThread	file:
silence_osc	src/apu/Gb_Apu.cpp	/^void Gb_Apu::silence_osc( Gb_Osc& o )$/;"	f	class:Gb_Apu
silent_buf_size	src/apu/Blip_Buffer.cpp	/^int const silent_buf_size = 1; \/\/ size used for Silent_Blip_Buffer$/;"	v
simple_atoi	src/wx/widgets/joyedit.cpp	/^static int simple_atoi(const wxChar *s, int len)$/;"	f	file:
simple_bufs	src/apu/Effects_Buffer.cpp	/^int const simple_bufs = 3 * 2 + 2 - 1;$/;"	v
sineTable	src/gba/bios.cpp	/^s16 sineTable[256] = {$/;"	v
size	fex/7z_C/7zBuf.h	/^  size_t size;$/;"	m	struct:__anon3
size	fex/7z_C/7zBuf.h	/^  size_t size;$/;"	m	struct:__anon4
size	fex/7z_C/Types.h	/^  size_t size;$/;"	m	struct:__anon29
size	fex/fex/Data_Reader.h	/^	int size() const                    { return size_; }$/;"	f	class:File_Reader
size	fex/fex/File_Extractor.h	/^	int size() const                    { assert( stat_called ); return size_; }$/;"	f	struct:fex_t
size	fex/fex/Zip_Extractor.cpp	/^	byte size [4];$/;"	m	struct:entry_t	file:
size	fex/fex/Zip_Extractor.cpp	/^	byte size [4];$/;"	m	struct:header_t	file:
size	fex/fex/blargg_common.h	/^		size_t size() const { return size_; }$/;"	f	class:blargg_vector_
size	src/Util.h	/^	int size;$/;"	m	struct:__anon58
size	src/apu/blargg_common.h	/^	size_t size() const { return size_; }$/;"	f	class:blargg_vector
size	src/common/Array.h	/^	std::size_t size() const { return sz; }$/;"	f	class:Array
size	src/common/RingBuffer.h	/^	std::size_t size() const {$/;"	f	class:RingBuffer
size	src/gba/CheatSearch.h	/^  int size;$/;"	m	struct:CheatSearchBlock
size	src/gba/Cheats.h	/^  int size;$/;"	m	struct:CheatsData
size	src/gba/elf.h	/^  int size;$/;"	m	struct:Type
size	src/gba/elf.h	/^  u32 size;$/;"	m	struct:ELFSectionHeader
size	src/gba/elf.h	/^  u32 size;$/;"	m	struct:ELFSymbol
size	src/gba/elf.h	/^  u32 size;$/;"	m	struct:Symbol
size	src/libretro/libretro.h	/^   size_t      size;       \/\/ Size of memory buffer.$/;"	m	struct:retro_game_info
size	src/sdl/debugger.cpp	/^  int size;$/;"	m	struct:breakpointInfo	file:
size	src/win32/MemoryViewerAddressSize.h	/^  int size;$/;"	m	class:MemoryViewerAddressSize
size	src/win32/OpenGL.cpp	/^	float size;$/;"	m	class:OpenGLDisplay	file:
size	src/wx/gfxviewers.cpp	/^	wxControl *modelab, *mapbase, *charbase, *size, *colors, *prio, *mosaic,$/;"	m	class:Viewers::MapViewer	file:
size	src/wx/gfxviewers.cpp	/^	wxControl *pos, *mode, *colors, *pallab, *tile, *prio, *size, *rot, *flg;$/;"	m	class:Viewers::OAMViewer	file:
size	src/wx/guiinit.cpp	/^    int valsrc, size, op, fmt;$/;"	m	class:CheatFind_t	file:
size	src/wx/guiinit.cpp	/^    wxChoice *type, *size;$/;"	m	class:BatConfig_t	file:
sizeType	src/win32/GBACheats.h	/^  int    sizeType;$/;"	m	class:AddCheat
sizeType	src/win32/GBACheats.h	/^  int    sizeType;$/;"	m	class:GBACheatSearch
sizeType	src/win32/GBCheatsDlg.h	/^  int    sizeType;$/;"	m	class:AddGBCheat
sizeType	src/win32/GBCheatsDlg.h	/^  int    sizeType;$/;"	m	class:GBCheatSearch
sizeX	src/win32/VBA.h	/^  int sizeX;$/;"	m	class:VBA
sizeY	src/win32/VBA.h	/^  int sizeY;$/;"	m	class:VBA
size_	fex/fex/Data_Reader.h	/^	int size_;$/;"	m	class:File_Reader
size_	fex/fex/File_Extractor.h	/^	int         size_;$/;"	m	struct:fex_t
size_	fex/fex/Gzip_Reader.h	/^	int size_;$/;"	m	class:Gzip_Reader
size_	fex/fex/blargg_common.h	/^		size_t size_;$/;"	m	class:blargg_vector_
size_	src/apu/blargg_common.h	/^	size_t size_;$/;"	m	class:blargg_vector
sizetable	src/win32/CmdAccelOb.h	45;"	d
sk	src/gb/gbMemory.h	/^  int sk;$/;"	m	struct:mapperMBC7
skip	fex/fex/Data_Reader.cpp	/^blargg_err_t Data_Reader::skip( int n )$/;"	f	class:Data_Reader
skipAudioFrames	src/win32/VBA.h	/^  unsigned int skipAudioFrames;$/;"	m	class:VBA
skipBios	src/gba/Globals.cpp	/^bool skipBios = false;$/;"	v
skipBios	src/wx/opts.h	/^    bool skipBios;$/;"	m	struct:opts_t
skipBiosFile	src/win32/VBA.h	/^  bool skipBiosFile;$/;"	m	class:VBA
skipSaveGameBattery	src/gba/Globals.cpp	/^bool skipSaveGameBattery = false;$/;"	v
skipSaveGameBattery	src/wx/opts.h	/^    bool skipSaveGameBattery, skipSaveGameCheats;$/;"	m	struct:opts_t
skipSaveGameCheats	src/gba/Globals.cpp	/^bool skipSaveGameCheats = false;$/;"	v
skipSaveGameCheats	src/wx/opts.h	/^    bool skipSaveGameBattery, skipSaveGameCheats;$/;"	m	struct:opts_t
skip_intro	src/wx/opts.h	/^    bool skip_intro;$/;"	m	struct:opts_t
skip_read	src/gba/Sound.cpp	/^static void skip_read( gzFile in, int count )$/;"	f	file:
skip_unextractables	fex/fex/Rar_Extractor.cpp	/^blargg_err_t Rar_Extractor::skip_unextractables()$/;"	f	class:Rar_Extractor
skip_v	fex/fex/Data_Reader.cpp	/^blargg_err_t Data_Reader::skip_v( int count )$/;"	f	class:Data_Reader
skip_v	fex/fex/Data_Reader.cpp	/^blargg_err_t File_Reader::skip_v( int n )$/;"	f	class:File_Reader
snd_rec	src/wx/wxvbam.h	/^    MediaRecorder snd_rec, vid_rec;$/;"	m	class:GameArea
snprintf	src/gba/GBA-thumb.cpp	27;"	d	file:
sock	src/win32/GDBConnection.h	/^  SOCKET sock;$/;"	m	class:GDBPortDlg
sock	src/win32/GDBConnection.h	/^  SOCKET sock;$/;"	m	class:GDBWaitingDlg
socklen_t	src/gba/remote.cpp	16;"	d	file:
socklen_t	src/gba/remote.cpp	22;"	d	file:
soundBufferLen	src/win32/DirectSound.cpp	/^	int					 soundBufferLen;$/;"	m	class:DirectSound	file:
soundBufferLen	src/win32/OpenAL.cpp	/^	int			   soundBufferLen;$/;"	m	class:OpenAL	file:
soundBufferLen	src/win32/XAudio2.cpp	/^	int    soundBufferLen;$/;"	m	class:XAudio2_Output	file:
soundBufferLen	src/wx/dsound.cpp	/^	int					 soundBufferLen;$/;"	m	class:DirectSound	file:
soundBufferLen	src/wx/openal.cpp	/^	int			   soundBufferLen;$/;"	m	class:OpenAL	file:
soundBufferLen	src/wx/xaudio2.cpp	/^	int    soundBufferLen;$/;"	m	class:XAudio2_Output	file:
soundBufferLow	src/win32/VBA.cpp	/^bool soundBufferLow = 0;$/;"	v
soundBufferLow	src/wx/sys.cpp	/^bool soundBufferLow;$/;"	v
soundBufferTotalLen	src/win32/DirectSound.cpp	/^	int                  soundBufferTotalLen;$/;"	m	class:DirectSound	file:
soundBufferTotalLen	src/wx/dsound.cpp	/^	int                  soundBufferTotalLen;$/;"	m	class:DirectSound	file:
soundCallback	src/common/SoundSDL.cpp	/^void SoundSDL::soundCallback(void *data, u8 *stream, int len)$/;"	f	class:SoundSDL
soundDSAValue	src/gba/Sound.cpp	/^	u8 soundDSAValue;$/;"	m	struct:__anon43	file:
soundDSBValue	src/gba/Sound.cpp	/^	int soundDSBValue;$/;"	m	struct:__anon43	file:
soundDriver	src/gba/Sound.cpp	/^SoundDriver * soundDriver = 0;$/;"	v
soundEnableFlag	src/gba/Sound.cpp	/^static int soundEnableFlag   = 0x3ff; \/\/ emulator channels enabled$/;"	v	file:
soundEvent	src/gba/Sound.cpp	/^void soundEvent(u32 address, u16 data)$/;"	f
soundEvent	src/gba/Sound.cpp	/^void soundEvent(u32 address, u8 data)$/;"	f
soundFiltering	src/gba/Sound.cpp	/^float soundFiltering     = 0.5f;$/;"	v
soundFiltering_	src/gba/Sound.cpp	/^static float soundFiltering_ = -1;$/;"	v	file:
soundFinalWave	src/gba/Sound.cpp	/^static u16   soundFinalWave [1600];$/;"	v	file:
soundGetEnable	src/gba/Sound.cpp	/^int soundGetEnable()$/;"	f
soundGetSampleRate	src/gba/Sound.cpp	/^long soundGetSampleRate()$/;"	f
soundGetVolume	src/gba/Sound.cpp	/^float soundGetVolume()$/;"	f
soundInit	src/gba/Sound.cpp	/^bool soundInit()$/;"	f
soundInitialized	src/win32/VBA.h	/^  bool soundInitialized;$/;"	m	class:VBA
soundInterpolation	src/gba/Sound.cpp	/^bool  soundInterpolation = true;$/;"	v
soundInterpolation	src/wx/opts.h	/^    bool soundInterpolation;$/;"	m	struct:opts_t
soundNextPosition	src/win32/DirectSound.cpp	/^	unsigned int         soundNextPosition;$/;"	m	class:DirectSound	file:
soundNextPosition	src/wx/dsound.cpp	/^	unsigned int         soundNextPosition;$/;"	m	class:DirectSound	file:
soundPause	src/gba/Sound.cpp	/^void soundPause()$/;"	f
soundPaused	src/gba/Sound.cpp	/^bool  soundPaused        = true;$/;"	v
soundReadGame	src/gba/Sound.cpp	/^void soundReadGame(const u8*& in, int version )$/;"	f
soundReadGameOld	src/gba/Sound.cpp	/^static void soundReadGameOld( gzFile in, int version )$/;"	f	file:
soundRecordName	src/win32/VBA.h	/^  CString soundRecordName;$/;"	m	class:VBA
soundRecorder	src/win32/VBA.h	/^  WavWriter *soundRecorder;$/;"	m	class:VBA
soundRecording	src/win32/VBA.h	/^  bool soundRecording;$/;"	m	class:VBA
soundReset	src/gba/Sound.cpp	/^void soundReset()$/;"	f
soundResume	src/gba/Sound.cpp	/^void soundResume()$/;"	f
soundSampleRate	src/gba/Sound.cpp	/^long  soundSampleRate    = 44100;$/;"	v
soundSaveGame	src/gba/Sound.cpp	/^void soundSaveGame( u8 *&out )$/;"	f
soundSetEnable	src/gba/Sound.cpp	/^void soundSetEnable(int channels)$/;"	f
soundSetSampleRate	src/gba/Sound.cpp	/^void soundSetSampleRate(long sampleRate)$/;"	f
soundSetThrottle	src/gba/Sound.cpp	/^void soundSetThrottle(unsigned short throttle)$/;"	f
soundSetVolume	src/gba/Sound.cpp	/^void soundSetVolume( float volume )$/;"	f
soundShutdown	src/gba/Sound.cpp	/^void soundShutdown()$/;"	f
soundTicks	src/gba/Sound.cpp	/^int   soundTicks         = SOUND_CLOCK_TICKS_;$/;"	v
soundTimerOverflow	src/gba/Sound.cpp	/^void soundTimerOverflow(int timer)$/;"	f
soundVolume	src/gba/Sound.cpp	/^static float soundVolume     = 1.0f;$/;"	v	file:
soundVolume_	src/gb/gbSound.cpp	/^static float soundVolume_  = -1;$/;"	v	file:
soundVolume_	src/gba/Sound.cpp	/^static float soundVolume_    = -1;$/;"	v	file:
sound_config_handler	src/wx/guiinit.cpp	/^} sound_config_handler;$/;"	v	typeref:class:SoundConfig_t	file:
sound_en	src/wx/opts.h	/^    int sound_en; \/\/ soundSetEnable()$/;"	m	struct:opts_t
sound_filtering	src/win32/AudioCoreSettingsDlg.h	/^	CSliderCtrl sound_filtering;$/;"	m	class:AudioCoreSettingsDlg
sound_interpolation	src/win32/AudioCoreSettingsDlg.h	/^	CButton sound_interpolation;$/;"	m	class:AudioCoreSettingsDlg
sound_qual	src/wx/opts.h	/^    int sound_qual; \/\/ soundSetSampleRate() \/ gbSoundSetSampleRate()$/;"	m	struct:opts_t
sound_vol	src/wx/opts.h	/^    int sound_vol; \/\/ soundSetVolume()$/;"	m	struct:opts_t
source	src/win32/OpenAL.cpp	/^	ALuint         source;$/;"	m	class:OpenAL	file:
source	src/wx/openal.cpp	/^	ALuint         source;$/;"	m	class:OpenAL	file:
sourcePitch	src/win32/Direct3D.cpp	/^	u32 sourcePitch;$/;"	m	struct:PFTHREAD_DATA	file:
sourcePointer	src/win32/Direct3D.cpp	/^	u8 *sourcePointer;$/;"	m	struct:PFTHREAD_DATA	file:
speaker_bass	src/apu/Gb_Apu.h	/^		speaker_bass   = 2000,$/;"	e	enum:Gb_Apu::__anon144
speaker_treble	src/apu/Gb_Apu.h	/^		speaker_treble =  -47, \/\/ speaker on system$/;"	e	enum:Gb_Apu::__anon144
speed	src/gba/GBALink.h	/^	bool speed;$/;"	m	struct:__anon46
speed	src/win32/Joypad.h	/^  JoypadEditControl  speed;$/;"	m	class:JoypadConfig
speedHack	src/gba/Globals.cpp	/^bool speedHack = false;$/;"	v
speedup	src/gba/Globals.cpp	/^bool speedup = false;$/;"	v
speedupToggle	src/win32/VBA.h	/^  bool speedupToggle;$/;"	m	class:VBA
sprite	src/wx/gfxviewers.cpp	/^	int sprite;$/;"	m	class:Viewers::GBOAMViewer	file:
sprite	src/wx/gfxviewers.cpp	/^	int sprite;$/;"	m	class:Viewers::OAMViewer	file:
spv	src/wx/gfxviewers.cpp	/^	PixView *bpv, *spv;$/;"	m	class:Viewers::GBPaletteViewer	file:
spv	src/wx/gfxviewers.cpp	/^	PixView *bpv, *spv;$/;"	m	class:Viewers::PaletteViewer	file:
square1	src/apu/Gb_Apu.h	/^	Gb_Sweep_Square square1;$/;"	m	class:Gb_Apu
square2	src/apu/Gb_Apu.h	/^	Gb_Square       square2;$/;"	m	class:Gb_Apu
sramDelayedWrite	src/gba/Sram.cpp	/^void sramDelayedWrite(u32 address, u8 byte)$/;"	f
sramRead	src/gba/Sram.cpp	/^u8 sramRead(u32 address)$/;"	f
sramWrite	src/gba/Sram.cpp	/^void sramWrite(u32 address, u8 byte)$/;"	f
src	src/wx/panel.cpp	/^    u8 *src;$/;"	m	class:FilterThread	file:
srcHeight	src/sdl/SDL.cpp	/^int srcHeight = 0;$/;"	v
srcPitch	src/filters/2xSaImmx.asm	/^srcPitch      equ 16$/;"	d
srcPitch	src/sdl/SDL.cpp	/^int srcPitch = 0;$/;"	v
srcPtr	src/filters/2xSaImmx.asm	/^srcPtr        equ 8$/;"	d
srcWidth	src/sdl/SDL.cpp	/^int srcWidth = 0;$/;"	v
srv16	src/wx/viewers.cpp	243;"	d	file:
st_dir	src/wx/cmdevents.cpp	/^static wxString st_dir;$/;"	v	file:
startPosAfterHeader	fex/7z_C/7z.h	/^  UInt64 startPosAfterHeader;$/;"	m	struct:__anon16
startScope	src/gba/elf.h	/^  u32 startScope;$/;"	m	struct:Object
startTime	src/libretro/libretro.cpp	/^u64 startTime = 0;$/;"	v
start_addr	src/apu/Gb_Apu.h	/^	enum { start_addr = 0xFF10 };$/;"	e	enum:Gb_Apu::__anon141
startpos	src/common/memgzio.c	/^    long     startpos; \/* start of compressed data in file (header skipped) *\/$/;"	m	struct:mem_stream	file:
stat	fex/fex/File_Extractor.cpp	/^blargg_err_t File_Extractor::stat()$/;"	f	class:File_Extractor
stat	src/sdl/SDL.cpp	374;"	d	file:
stat_called	fex/fex/File_Extractor.h	/^	bool        stat_called;$/;"	m	struct:fex_t
stat_v	fex/fex/Binary_Extractor.cpp	/^blargg_err_t Binary_Extractor::stat_v()$/;"	f	class:Binary_Extractor
stat_v	fex/fex/File_Extractor.h	/^	virtual blargg_err_t stat_v()                   { return blargg_ok; }$/;"	f	struct:fex_t
stat_v	fex/fex/Gzip_Extractor.cpp	/^blargg_err_t Gzip_Extractor::stat_v()$/;"	f	class:Gzip_Extractor
state	fex/7z_C/Lzma2Dec.h	/^  int state;$/;"	m	struct:__anon34
state	fex/7z_C/LzmaDec.h	/^  unsigned state;$/;"	m	struct:__anon17
state	src/gb/gbMemory.h	/^  int state;$/;"	m	struct:mapperMBC7
state	src/gb/gbSound.cpp	/^} state;$/;"	v	typeref:struct:__anon150	file:
state	src/gba/RTC.cpp	/^  RTCSTATE state;$/;"	m	struct:__anon51	file:
state	src/gba/Sound.cpp	/^} state;$/;"	v	typeref:struct:__anon43	file:
state	src/win32/DirectInput.cpp	/^        DIJOYSTATE state;$/;"	m	union:deviceInfo::__anon71	file:
state_dir	src/wx/opts.h	/^    wxString state_dir;$/;"	m	struct:opts_t
state_dir	src/wx/wxvbam.h	/^    wxString state_dir() { return statedir; }$/;"	f	class:GameArea
state_slot	src/wx/cmdevents.cpp	/^static int state_slot = 0;$/;"	v	file:
state_ts	src/wx/wxvbam.h	/^    wxDateTime state_ts[10];$/;"	m	class:MainFrame
statedir	src/wx/wxvbam.h	/^    wxString batdir, statedir;$/;"	m	class:GameArea
status	src/gba/Cheats.h	/^  int status;$/;"	m	struct:CheatsData
status_reg	src/apu/Gb_Apu.cpp	/^unsigned const status_reg = 0xFF26;$/;"	v
std	src/sdl/expr.cpp	/^namespace std {  $/;"	n	file:
stereo	src/apu/Effects_Buffer.h	/^		float stereo;   \/\/ 0.0 = channels in center, 1.0 = channels on left\/right$/;"	m	struct:Simple_Effects_Buffer::config_t
stereo	src/apu/Effects_Buffer.h	/^	enum { stereo = 2 };$/;"	e	enum:Effects_Buffer::__anon129
stereo	src/apu/Multi_Buffer.cpp	/^int const stereo = 2;$/;"	v
stereo	src/gb/gbSound.h	/^	float stereo;   \/\/ 0.0 = channels in center, 1.0 = channels on left\/right$/;"	m	struct:gb_effects_config_t
stereo	src/win32/AudioCoreSettingsDlg.h	/^	CSliderCtrl stereo;$/;"	m	class:AudioCoreSettingsDlg
stereo_buffer	src/gb/gbSound.cpp	/^static Simple_Effects_Buffer* stereo_buffer;$/;"	v	file:
stereo_buffer	src/gba/Sound.cpp	/^static Stereo_Buffer*   stereo_buffer;$/;"	v	file:
stereo_reg	src/apu/Gb_Apu.cpp	/^unsigned const stereo_reg = 0xFF25;$/;"	v
stop	src/gba/Globals.cpp	/^u32 stop = 0x08000568;$/;"	v
stopState	src/gba/GBA.cpp	/^bool stopState = false;$/;"	v
store_args_and_env	src/sdl/getopt.c	/^store_args_and_env (int argc, char *const *argv)$/;"	f	file:
str	fex/fex/blargg_errors.h	/^	const char* str;$/;"	m	struct:blargg_err_to_code_t
str	src/wx/viewsupt.h	/^	wxCheckBox *str;$/;"	m	class:Viewers::GfxViewer
strdup	src/sdl/exprNode.cpp	29;"	d	file:
stream	src/common/memgzio.c	/^    z_stream stream;$/;"	m	struct:mem_stream	file:
stretch	src/win32/BitmapControl.h	/^  bool stretch;$/;"	m	class:BitmapControl
string	src/gba/elf.h	/^    char *string;$/;"	m	union:ELFAttr::__anon39
strings	src/wx/viewsupt.h	/^	wxArrayString strings;$/;"	m	class:Viewers::DisList
stropt	src/wx/opts.h	/^    wxString *stropt;$/;"	m	struct:opt_desc
strqtok	src/sdl/debugger.cpp	/^char* strqtok (char* string, const char* ctrl)$/;"	f
structure	src/gba/elf.h	/^    Struct *structure;$/;"	m	union:Type::__anon40
subsample_mask	src/apu/Blip_Buffer.cpp	/^blip_ulong const subsample_mask = (1L << BLIP_BUFFER_ACCURACY) - 1;$/;"	v
super	src/gba/Cheats.cpp	/^u16 super = 0;$/;"	v
surface	src/sdl/SDL.cpp	/^SDL_Surface *surface = NULL;$/;"	v
surfaceSizeX	src/win32/VBA.h	/^  int surfaceSizeX;$/;"	m	class:VBA
surfaceSizeY	src/win32/VBA.h	/^  int surfaceSizeY;$/;"	m	class:VBA
surround	src/apu/Effects_Buffer.h	/^		bool surround;  \/\/ if true, negates left volume to put sound in back$/;"	m	struct:Effects_Buffer::chan_config_t
surround	src/apu/Effects_Buffer.h	/^		bool surround;  \/\/ true = put some channels in back$/;"	m	struct:Simple_Effects_Buffer::config_t
surround	src/gb/gbSound.h	/^	bool surround;  \/\/ true = put some channels in back$/;"	m	struct:gb_effects_config_t
surround	src/win32/AudioCoreSettingsDlg.h	/^	CButton surround;$/;"	m	class:AudioCoreSettingsDlg
swap	src/gba/gbafilter.cpp	/^inline void swap(short & a, short & b)$/;"	f
swap16	src/common/Port.h	/^static inline u16 swap16(u16 v)$/;"	f
swap32	src/common/Port.h	/^static inline u32 swap32(u32 v)$/;"	f
sweep_delay	src/apu/Gb_Apu.h	/^	val_t sweep_delay;$/;"	m	struct:gb_apu_state_t
sweep_delay	src/apu/Gb_Oscs.h	/^	int  sweep_delay;$/;"	m	class:Gb_Sweep_Square
sweep_enabled	src/apu/Gb_Apu.h	/^	val_t sweep_enabled;$/;"	m	struct:gb_apu_state_t
sweep_enabled	src/apu/Gb_Oscs.h	/^	bool sweep_enabled;$/;"	m	class:Gb_Sweep_Square
sweep_freq	src/apu/Gb_Apu.h	/^	val_t sweep_freq;$/;"	m	struct:gb_apu_state_t
sweep_freq	src/apu/Gb_Oscs.h	/^	int  sweep_freq;$/;"	m	class:Gb_Sweep_Square
sweep_neg	src/apu/Gb_Apu.h	/^	val_t sweep_neg;$/;"	m	struct:gb_apu_state_t
sweep_neg	src/apu/Gb_Oscs.h	/^	bool sweep_neg;$/;"	m	class:Gb_Sweep_Square
synchronize	src/gba/Globals.cpp	/^bool synchronize = true;$/;"	v
synchronize	src/wx/opts.h	/^    bool synchronize;$/;"	m	struct:opts_t
syntax	src/sdl/debugger.cpp	/^  const char *syntax;$/;"	m	struct:DebuggerCommand	file:
synth_volume	src/apu/Gb_Apu.cpp	/^void Gb_Apu::synth_volume( int iv )$/;"	f	class:Gb_Apu
sys_accels	src/wx/opts.cpp	/^wxAcceleratorEntry_v sys_accels;$/;"	v
sys_accels	src/wx/wxvbam.h	/^    wxAcceleratorEntry_v sys_accels;$/;"	m	class:MainFrame
system10Frames	src/gtk/system.cpp	/^void system10Frames(int _iRate)$/;"	f
system10Frames	src/libretro/libretro.cpp	/^void system10Frames(int rate) {}$/;"	f
system10Frames	src/sdl/SDL.cpp	/^void system10Frames(int rate)$/;"	f
system10Frames	src/win32/VBA.cpp	/^void system10Frames(int rate)$/;"	f
system10Frames	src/wx/sys.cpp	/^void system10Frames(int rate)$/;"	f
systemBlueShift	src/gtk/system.cpp	/^int  systemBlueShift;$/;"	v
systemBlueShift	src/libretro/libretro.cpp	/^int systemBlueShift = 0;$/;"	v
systemBlueShift	src/sdl/SDL.cpp	/^int systemBlueShift = 0;$/;"	v
systemBlueShift	src/win32/VBA.cpp	/^int systemBlueShift = 0;$/;"	v
systemBlueShift	src/wx/sys.cpp	/^int systemBlueShift;$/;"	v
systemCanChangeSoundQuality	src/gtk/system.cpp	/^bool systemCanChangeSoundQuality()$/;"	f
systemCanChangeSoundQuality	src/libretro/libretro.cpp	/^bool systemCanChangeSoundQuality() { return true; }$/;"	f
systemCanChangeSoundQuality	src/sdl/SDL.cpp	/^bool systemCanChangeSoundQuality()$/;"	f
systemCanChangeSoundQuality	src/win32/VBA.cpp	/^bool systemCanChangeSoundQuality()$/;"	f
systemCanChangeSoundQuality	src/wx/sys.cpp	/^bool systemCanChangeSoundQuality()$/;"	f
systemCartridgeRumble	src/win32/VBA.cpp	/^void systemCartridgeRumble(bool) { }$/;"	f
systemColorDepth	src/gtk/system.cpp	/^int  systemColorDepth;$/;"	v
systemColorDepth	src/libretro/libretro.cpp	/^int systemColorDepth = 32;$/;"	v
systemColorDepth	src/sdl/SDL.cpp	/^int systemColorDepth = 0;$/;"	v
systemColorDepth	src/win32/VBA.cpp	/^int systemColorDepth = 16;$/;"	v
systemColorDepth	src/wx/sys.cpp	/^int systemColorDepth;$/;"	v
systemColorMap16	src/gtk/system.cpp	/^u16  systemColorMap16[0x10000];$/;"	v
systemColorMap16	src/libretro/libretro.cpp	/^u16 systemColorMap16[0x10000];$/;"	v
systemColorMap16	src/sdl/SDL.cpp	/^u16 systemColorMap16[0x10000];$/;"	v
systemColorMap16	src/win32/VBA.cpp	/^u16 systemColorMap16[0x10000];$/;"	v
systemColorMap16	src/wx/sys.cpp	/^u16 systemColorMap16[0x10000];$/;"	v
systemColorMap32	src/gtk/system.cpp	/^u32  systemColorMap32[0x10000];$/;"	v
systemColorMap32	src/libretro/libretro.cpp	/^u32 systemColorMap32[0x10000];$/;"	v
systemColorMap32	src/sdl/SDL.cpp	/^u32 systemColorMap32[0x10000];$/;"	v
systemColorMap32	src/win32/VBA.cpp	/^u32 systemColorMap32[0x10000];$/;"	v
systemColorMap32	src/wx/sys.cpp	/^u32 systemColorMap32[0x10000];$/;"	v
systemConsoleMessage	src/sdl/SDL.cpp	/^void systemConsoleMessage(const char *msg)$/;"	f
systemDebug	src/libretro/libretro.cpp	/^int systemDebug = 0;$/;"	v
systemDebug	src/sdl/SDL.cpp	/^int systemDebug = 0;$/;"	v
systemDebug	src/win32/VBA.cpp	/^int systemDebug = 0;$/;"	v
systemDrawScreen	src/gtk/system.cpp	/^void systemDrawScreen()$/;"	f
systemDrawScreen	src/libretro/libretro.cpp	/^void systemDrawScreen()$/;"	f
systemDrawScreen	src/sdl/SDL.cpp	/^void systemDrawScreen()$/;"	f
systemDrawScreen	src/win32/VBA.cpp	/^void systemDrawScreen()$/;"	f
systemDrawScreen	src/wx/sys.cpp	/^void systemDrawScreen()$/;"	f
systemFrame	src/gtk/system.cpp	/^void systemFrame()$/;"	f
systemFrame	src/libretro/libretro.cpp	/^void systemFrame() {}$/;"	f
systemFrame	src/sdl/SDL.cpp	/^void systemFrame()$/;"	f
systemFrame	src/win32/VBA.cpp	/^void systemFrame()$/;"	f
systemFrame	src/wx/sys.cpp	/^void systemFrame()$/;"	f
systemFrameSkip	src/gtk/system.cpp	/^int  systemFrameSkip;$/;"	v
systemFrameSkip	src/libretro/libretro.cpp	/^int systemFrameSkip = 0;$/;"	v
systemFrameSkip	src/sdl/SDL.cpp	/^int systemFrameSkip = 0;$/;"	v
systemFrameSkip	src/win32/VBA.cpp	/^int systemFrameSkip = 0;$/;"	v
systemFrameSkip	src/wx/sys.cpp	/^int systemFrameSkip;$/;"	v
systemGbBorderOn	src/gtk/system.cpp	/^void systemGbBorderOn()$/;"	f
systemGbBorderOn	src/sdl/SDL.cpp	/^void systemGbBorderOn()$/;"	f
systemGbBorderOn	src/win32/VBA.cpp	/^void systemGbBorderOn()$/;"	f
systemGbBorderOn	src/wx/sys.cpp	/^void systemGbBorderOn()$/;"	f
systemGbPalette	src/gtk/system.cpp	/^u16  systemGbPalette[24];$/;"	v
systemGbPalette	src/libretro/libretro.cpp	/^u16 systemGbPalette[24];$/;"	v
systemGbPalette	src/sdl/SDL.cpp	/^u16 systemGbPalette[24];$/;"	v
systemGbPalette	src/win32/VBA.cpp	/^u16 systemGbPalette[24];$/;"	v
systemGbPalette	src/wx/sys.cpp	/^u16 systemGbPalette[24] = {$/;"	v
systemGbPrint	src/gtk/system.cpp	/^void systemGbPrint(u8 * _puiData,$/;"	f
systemGbPrint	src/libretro/libretro.cpp	/^void systemGbPrint(u8 *data,int pages, int feed, int palette, int contrast) {}$/;"	f
systemGbPrint	src/sdl/SDL.cpp	/^void systemGbPrint(u8 *data,int len,int pages,int feed,int palette, int contrast)$/;"	f
systemGbPrint	src/win32/GBPrinterDlg.cpp	/^void systemGbPrint(u8 *data,$/;"	f
systemGbPrint	src/wx/sys.cpp	/^void systemGbPrint(u8 *data,int len, int pages,int feed,int pal,int cont)$/;"	f
systemGetClock	src/gtk/system.cpp	/^u32 systemGetClock()$/;"	f
systemGetClock	src/libretro/libretro.cpp	/^u32 systemGetClock()$/;"	f
systemGetClock	src/sdl/SDL.cpp	/^u32 systemGetClock()$/;"	f
systemGetClock	src/win32/VBA.cpp	/^u32 systemGetClock()$/;"	f
systemGetClock	src/wx/sys.cpp	/^u32 systemGetClock()$/;"	f
systemGetSensorDarkness	src/win32/VBA.cpp	/^u8 systemGetSensorDarkness() { return 0; }$/;"	f
systemGetSensorX	src/gtk/system.cpp	/^int systemGetSensorX()$/;"	f
systemGetSensorX	src/libretro/libretro.cpp	/^int systemGetSensorX(void)$/;"	f
systemGetSensorX	src/sdl/SDL.cpp	/^int systemGetSensorX()$/;"	f
systemGetSensorX	src/win32/VBA.cpp	/^int systemGetSensorX()$/;"	f
systemGetSensorX	src/wx/sys.cpp	/^int  systemGetSensorX()$/;"	f
systemGetSensorY	src/gtk/system.cpp	/^int systemGetSensorY()$/;"	f
systemGetSensorY	src/libretro/libretro.cpp	/^int systemGetSensorY(void)$/;"	f
systemGetSensorY	src/sdl/SDL.cpp	/^int systemGetSensorY()$/;"	f
systemGetSensorY	src/win32/VBA.cpp	/^int systemGetSensorY()$/;"	f
systemGetSensorY	src/wx/sys.cpp	/^int  systemGetSensorY()$/;"	f
systemGetSensorZ	src/win32/VBA.cpp	/^int systemGetSensorZ() { return 0; }$/;"	f
systemGreenShift	src/gtk/system.cpp	/^int  systemGreenShift;$/;"	v
systemGreenShift	src/libretro/libretro.cpp	/^int systemGreenShift = 0;$/;"	v
systemGreenShift	src/sdl/SDL.cpp	/^int systemGreenShift = 0;$/;"	v
systemGreenShift	src/win32/VBA.cpp	/^int systemGreenShift = 0;$/;"	v
systemGreenShift	src/wx/sys.cpp	/^int systemGreenShift;$/;"	v
systemMessage	src/gtk/system.cpp	/^void systemMessage(int _iId, const char * _csFormat, ...)$/;"	f
systemMessage	src/libretro/libretro.cpp	/^void systemMessage(const char* str, ...)$/;"	f
systemMessage	src/libretro/libretro.cpp	/^void systemMessage(int, const char* str, ...)$/;"	f
systemMessage	src/sdl/SDL.cpp	/^void systemMessage(int num, const char *msg, ...)$/;"	f
systemMessage	src/win32/VBA.cpp	/^void systemMessage(int number, const char *defaultMsg, ...)$/;"	f
systemMessage	src/wx/sys.cpp	/^void systemMessage(int id, const char * fmt, ...)$/;"	f
systemOnSoundShutdown	src/gtk/system.cpp	/^void systemOnSoundShutdown()$/;"	f
systemOnSoundShutdown	src/libretro/libretro.cpp	/^void systemOnSoundShutdown() {}$/;"	f
systemOnSoundShutdown	src/sdl/SDL.cpp	/^void systemOnSoundShutdown()$/;"	f
systemOnSoundShutdown	src/win32/VBA.cpp	/^void systemOnSoundShutdown()$/;"	f
systemOnSoundShutdown	src/wx/sys.cpp	/^void systemOnSoundShutdown()$/;"	f
systemOnWriteDataToSoundBuffer	src/gtk/system.cpp	/^void systemOnWriteDataToSoundBuffer(const u16 * finalWave, int length)$/;"	f
systemOnWriteDataToSoundBuffer	src/libretro/libretro.cpp	/^void systemOnWriteDataToSoundBuffer(const u16 *finalWave, int length)$/;"	f
systemOnWriteDataToSoundBuffer	src/sdl/SDL.cpp	/^void systemOnWriteDataToSoundBuffer(const u16 * finalWave, int length)$/;"	f
systemOnWriteDataToSoundBuffer	src/win32/VBA.cpp	/^void systemOnWriteDataToSoundBuffer(const u16 * finalWave, int length)$/;"	f
systemOnWriteDataToSoundBuffer	src/wx/sys.cpp	/^void systemOnWriteDataToSoundBuffer(const u16 * finalWave, int length)$/;"	f
systemPauseOnFrame	src/gtk/system.cpp	/^bool systemPauseOnFrame()$/;"	f
systemPauseOnFrame	src/libretro/libretro.cpp	/^bool systemPauseOnFrame() { return false; }$/;"	f
systemPauseOnFrame	src/sdl/SDL.cpp	/^bool systemPauseOnFrame()$/;"	f
systemPauseOnFrame	src/win32/VBA.cpp	/^bool systemPauseOnFrame()$/;"	f
systemPauseOnFrame	src/wx/sys.cpp	/^bool systemPauseOnFrame()$/;"	f
systemPossibleCartridgeRumble	src/win32/VBA.cpp	/^void systemPossibleCartridgeRumble(bool) { }$/;"	f
systemReadJoypad	src/gtk/system.cpp	/^u32 systemReadJoypad(int joy)$/;"	f
systemReadJoypad	src/libretro/libretro.cpp	/^u32 systemReadJoypad(int which)$/;"	f
systemReadJoypad	src/sdl/SDL.cpp	/^u32 systemReadJoypad(int which)$/;"	f
systemReadJoypad	src/win32/VBA.cpp	/^u32 systemReadJoypad(int which)$/;"	f
systemReadJoypad	src/wx/sys.cpp	/^u32 systemReadJoypad(int joy)$/;"	f
systemReadJoypads	src/gtk/system.cpp	/^bool systemReadJoypads()$/;"	f
systemReadJoypads	src/libretro/libretro.cpp	/^bool systemReadJoypads() { return true; }$/;"	f
systemReadJoypads	src/sdl/SDL.cpp	/^bool systemReadJoypads()$/;"	f
systemReadJoypads	src/win32/VBA.cpp	/^bool systemReadJoypads()$/;"	f
systemReadJoypads	src/wx/sys.cpp	/^bool systemReadJoypads()$/;"	f
systemRedShift	src/gtk/system.cpp	/^int  systemRedShift;$/;"	v
systemRedShift	src/libretro/libretro.cpp	/^int systemRedShift = 0;$/;"	v
systemRedShift	src/sdl/SDL.cpp	/^int systemRedShift = 0;$/;"	v
systemRedShift	src/win32/VBA.cpp	/^int systemRedShift = 0;$/;"	v
systemRedShift	src/wx/sys.cpp	/^int systemRedShift;$/;"	v
systemSaveUpdateCounter	src/gtk/system.cpp	/^int  systemSaveUpdateCounter;$/;"	v
systemSaveUpdateCounter	src/libretro/libretro.cpp	/^int systemSaveUpdateCounter = SYSTEM_SAVE_NOT_UPDATED;$/;"	v
systemSaveUpdateCounter	src/sdl/SDL.cpp	/^int systemSaveUpdateCounter = SYSTEM_SAVE_NOT_UPDATED;$/;"	v
systemSaveUpdateCounter	src/win32/VBA.cpp	/^int systemSaveUpdateCounter = SYSTEM_SAVE_NOT_UPDATED;$/;"	v
systemSaveUpdateCounter	src/wx/sys.cpp	/^int systemSaveUpdateCounter = SYSTEM_SAVE_NOT_UPDATED;$/;"	v
systemScreenCapture	src/gtk/system.cpp	/^void systemScreenCapture(int _iNum)$/;"	f
systemScreenCapture	src/libretro/libretro.cpp	/^void systemScreenCapture(int a) {}$/;"	f
systemScreenCapture	src/sdl/SDL.cpp	/^void systemScreenCapture(int a)$/;"	f
systemScreenCapture	src/win32/VBA.cpp	/^void systemScreenCapture(int captureNumber)$/;"	f
systemScreenCapture	src/wx/sys.cpp	/^void systemScreenCapture(int num)$/;"	f
systemScreenMessage	src/gtk/system.cpp	/^void systemScreenMessage(const char * _csMsg)$/;"	f
systemScreenMessage	src/libretro/libretro.cpp	/^void systemScreenMessage(const char*msg)$/;"	f
systemScreenMessage	src/sdl/SDL.cpp	/^void systemScreenMessage(const char *msg)$/;"	f
systemScreenMessage	src/win32/VBA.cpp	/^void systemScreenMessage(const char *msg)$/;"	f
systemScreenMessage	src/wx/sys.cpp	/^void systemScreenMessage(const char *msg)$/;"	f
systemScreenMessage	src/wx/sys.cpp	/^void systemScreenMessage(const wxString &msg)$/;"	f
systemSetTitle	src/gtk/system.cpp	/^void systemSetTitle(const char * _csTitle)$/;"	f
systemSetTitle	src/libretro/libretro.cpp	/^void systemSetTitle(const char *title) {}$/;"	f
systemSetTitle	src/sdl/SDL.cpp	/^void systemSetTitle(const char *title)$/;"	f
systemSetTitle	src/win32/VBA.cpp	/^void systemSetTitle(const char *title)$/;"	f
systemShowSpeed	src/gtk/system.cpp	/^void systemShowSpeed(int _iSpeed)$/;"	f
systemShowSpeed	src/libretro/libretro.cpp	/^void systemShowSpeed(int speed) {}$/;"	f
systemShowSpeed	src/sdl/SDL.cpp	/^void systemShowSpeed(int speed)$/;"	f
systemShowSpeed	src/win32/VBA.cpp	/^void systemShowSpeed(int speed)$/;"	f
systemShowSpeed	src/wx/sys.cpp	/^void systemShowSpeed(int speed)$/;"	f
systemSoundInit	src/gtk/system.cpp	/^SoundDriver * systemSoundInit()$/;"	f
systemSoundInit	src/libretro/libretro.cpp	/^SoundDriver *systemSoundInit()$/;"	f
systemSoundInit	src/sdl/SDL.cpp	/^SoundDriver * systemSoundInit()$/;"	f
systemSoundInit	src/win32/VBA.cpp	/^SoundDriver * systemSoundInit()$/;"	f
systemSoundInit	src/wx/sys.cpp	/^SoundDriver * systemSoundInit()$/;"	f
systemSpeed	src/libretro/libretro.cpp	/^int systemSpeed = 0;$/;"	v
systemSpeed	src/sdl/SDL.cpp	/^int systemSpeed = 0;$/;"	v
systemSpeed	src/win32/VBA.cpp	/^int systemSpeed = 0;$/;"	v
systemSpeedCounter	src/win32/VBA.cpp	/^unsigned int systemSpeedCounter;$/;"	v
systemSpeedTable	src/win32/VBA.cpp	/^int systemSpeedTable[PERFORMANCE_INTERVAL];$/;"	v
systemStartGamePlayback	src/wx/sys.cpp	/^void systemStartGamePlayback(const wxString &fname)$/;"	f
systemStartGameRecording	src/wx/sys.cpp	/^void systemStartGameRecording(const wxString &fname)$/;"	f
systemStopGamePlayback	src/wx/sys.cpp	/^void systemStopGamePlayback()$/;"	f
systemStopGameRecording	src/wx/sys.cpp	/^void systemStopGameRecording()$/;"	f
systemUpdateMotionSensor	src/gtk/system.cpp	/^void systemUpdateMotionSensor()$/;"	f
systemUpdateMotionSensor	src/libretro/libretro.cpp	/^void systemUpdateMotionSensor() {}$/;"	f
systemUpdateMotionSensor	src/sdl/SDL.cpp	/^void systemUpdateMotionSensor()$/;"	f
systemUpdateMotionSensor	src/win32/VBA.cpp	/^void systemUpdateMotionSensor()$/;"	f
systemUpdateMotionSensor	src/wx/sys.cpp	/^void systemUpdateMotionSensor()$/;"	f
systemVerbose	src/gtk/system.cpp	/^int  systemVerbose;$/;"	v
systemVerbose	src/libretro/libretro.cpp	/^int systemVerbose = 0;$/;"	v
systemVerbose	src/sdl/SDL.cpp	/^int systemVerbose = 0;$/;"	v
systemVerbose	src/win32/VBA.cpp	/^int systemVerbose = 0;$/;"	v
systemVerbose	src/wx/sys.cpp	/^int systemVerbose;$/;"	v
sz	src/common/Array.h	/^	std::size_t sz;$/;"	m	class:Array
sz	src/common/RingBuffer.h	/^	std::size_t sz;$/;"	m	class:RingBuffer
szFile	src/win32/VBA.h	/^  CString szFile;$/;"	m	class:VBA
szKey	src/win32/CmdAccelOb.h	/^  TCHAR szKey[15];$/;"	m	struct:tagMAPVIRTKEYS
t	fex/fex/blargg_common.h	/^	union T_must_be_pod { T t; }; \/\/ fails if T is not POD$/;"	m	union:blargg_vector::T_must_be_pod
t	src/wx/wxvbam.cpp	230;"	d	file:
tack_full_path	src/wx/wxvbam.cpp	/^static void tack_full_path(wxString &s, const wxString &app = wxEmptyString)$/;"	f	file:
tag	src/gba/elf.h	/^  u32 tag;$/;"	m	struct:ELFAbbrev
tagMAPVIRTKEYS	src/win32/CmdAccelOb.h	/^typedef struct tagMAPVIRTKEYS {$/;"	s
tc	src/wx/guiinit.cpp	/^    wxTreeCtrl *tc;$/;"	m	class:AccelConfig_t	file:
tc	src/wx/viewsupt.h	/^	wxTextCtrl tc;$/;"	m	class:Viewers::DisList
tcpsocket	src/gba/GBALink.h	/^	sf::SocketTCP tcpsocket;$/;"	m	struct:__anon46
tcpsocket	src/gba/GBALink.h	/^	sf::SocketTCP tcpsocket[4];$/;"	m	class:lserver
tell	fex/fex/Data_Reader.h	/^	int tell() const                    { return size_ - remain(); }$/;"	f	class:File_Reader
tell	fex/fex/File_Extractor.h	/^	int tell() const                    { return size_ - remain(); }$/;"	f	struct:fex_t
tell	fex/fex/Gzip_Reader.h	/^	int tell() const                    { return size_ - remain(); }$/;"	f	class:Gzip_Reader
tell	fex/fex/Zlib_Inflater.h	/^	int tell() const                    { return zbuf.total_out; }$/;"	f	class:Zlib_Inflater
tell_	fex/fex/File_Extractor.h	/^	fex_pos_t tell_;    \/\/ only used by default implementation of tell\/seek$/;"	m	struct:fex_t
tell_arc	fex/fex/File_Extractor.cpp	/^fex_pos_t File_Extractor::tell_arc() const$/;"	f	class:File_Extractor
tell_arc_v	fex/fex/File_Extractor.cpp	/^fex_pos_t File_Extractor::tell_arc_v() const$/;"	f	class:File_Extractor
tell_arc_v	fex/fex/Rar_Extractor.cpp	/^fex_pos_t Rar_Extractor::tell_arc_v() const$/;"	f	class:Rar_Extractor
tell_arc_v	fex/fex/Zip7_Extractor.cpp	/^fex_pos_t Zip7_Extractor::tell_arc_v() const$/;"	f	class:Zip7_Extractor
tell_arc_v	fex/fex/Zip_Extractor.cpp	/^fex_pos_t Zip_Extractor::tell_arc_v() const$/;"	f	class:Zip_Extractor
tempBuf	fex/7z_C/LzmaDec.h	/^  Byte tempBuf[LZMA_REQUIRED_INPUT_MAX];$/;"	m	struct:__anon17
tempBufSize	fex/7z_C/LzmaDec.h	/^  unsigned tempBufSize;$/;"	m	struct:__anon17
tempBuffer	src/win32/OpenAL.cpp	/^	ALuint         tempBuffer;$/;"	m	class:OpenAL	file:
tempBuffer	src/wx/openal.cpp	/^	ALuint         tempBuffer;$/;"	m	class:OpenAL	file:
tempImage	src/win32/Direct3D.cpp	/^	LPDIRECT3DTEXTURE9    tempImage;$/;"	m	class:Direct3DDisplay	file:
terminate	src/gba/GBALink.h	/^	bool terminate;$/;"	m	struct:__anon46
tex_fmt	src/wx/panel.cpp	1656;"	d	file:
texid	src/wx/drawing.h	/^    GLuint texid, vlist;$/;"	m	class:GLDrawingPanel
texsize	src/wx/drawing.h	/^    int texsize;$/;"	m	class:GLDrawingPanel
text	src/win32/Logging.cpp	/^CString Logging::text;$/;"	m	class:Logging	file:
text	src/win32/Logging.h	/^	static CString text;$/;"	m	class:Logging
textdomain	src/gtk/intl.h	28;"	d
texture	src/win32/OpenGL.cpp	/^	GLuint texture;$/;"	m	class:OpenGLDisplay	file:
textureSize	src/sdl/SDL.cpp	/^int textureSize = 256;$/;"	v
textureSize	src/win32/Direct3D.cpp	/^	unsigned int          textureSize;$/;"	m	class:Direct3DDisplay	file:
theApp	src/win32/VBA.cpp	/^VBA theApp;$/;"	v
this	src/wx/viewers.cpp	577;"	d	file:
this	src/wx/viewers.cpp	580;"	d	file:
thr	src/wx/guiinit.cpp	/^    wxSpinCtrl *thr;$/;"	m	class:ThrottleCtrl_t	file:
thread	src/gba/GBALink.h	/^	sf::Thread *thread;$/;"	m	struct:__anon46
threadPriority	src/win32/VBA.h	/^  int threadPriority;$/;"	m	class:VBA
threadno	src/wx/panel.cpp	/^    int nthreads, threadno;$/;"	m	class:FilterThread	file:
threads	src/wx/wxvbam.h	/^    FilterThread *threads;$/;"	m	class:DrawingPanel
threshold	src/filters/hq/asm/hq3x_16.asm	/^threshold    dd  0x00300706,0x00000000$/;"	d
threshold	src/filters/hq/asm/hq3x_32.asm	/^threshold    dd  0x00300706,0x00000000$/;"	d
threshold	src/filters/hq/asm/hq4x_16.asm	/^threshold    dd  0x00300706,0x00000000$/;"	d
threshold	src/filters/hq/asm/hq4x_32.asm	/^threshold    dd  0x00300706,0x00000000$/;"	d
throttle	src/win32/VBA.h	/^  unsigned short throttle;$/;"	m	class:VBA
throttle	src/wx/opts.h	/^    int throttle; \/\/ updateThrottle()$/;"	m	struct:opts_t
throttleLastTime	src/sdl/SDL.cpp	/^u32 throttleLastTime = 0;$/;"	v
throttle_ctrl	src/wx/guiinit.cpp	/^} throttle_ctrl;$/;"	v	typeref:class:ThrottleCtrl_t	file:
thrsel	src/wx/guiinit.cpp	/^    wxChoice *thrsel;$/;"	m	class:ThrottleCtrl_t	file:
thumbBreakpoint	src/gba/GBA-thumb.cpp	/^static INSN_REGPARM void thumbBreakpoint(u32 opcode)$/;"	f	file:
thumbOpcodeCount	src/gba/GBA.cpp	/^int thumbOpcodeCount = 0;$/;"	v
thumbOpcodes	src/gba/armdis.cpp	/^const Opcodes thumbOpcodes[] = {$/;"	v
thumbUnknownInsn	src/gba/GBA-thumb.cpp	/^static INSN_REGPARM void thumbUnknownInsn(u32 opcode)$/;"	f	file:
ticks_to_time	src/gb/gbSound.cpp	/^int const ticks_to_time = 2 * GB_APU_OVERCLOCK;$/;"	v
tile	src/wx/gfxviewers.cpp	/^	wxControl *coords, *addr, *tile, *flip, *palette, *prio;$/;"	m	class:Viewers::GBMapViewer	file:
tile	src/wx/gfxviewers.cpp	/^	wxControl *coords, *addr, *tile, *flip, *palette;$/;"	m	class:Viewers::MapViewer	file:
tile	src/wx/gfxviewers.cpp	/^	wxControl *pos, *mode, *colors, *pallab, *tile, *prio, *size, *rot, *flg;$/;"	m	class:Viewers::OAMViewer	file:
tileNum	src/gba/GBA.cpp	/^      \/* 0*\/	unsigned tileNum:10;$/;"	m	struct:TileEntry::__anon42	file:
tileView	src/win32/GBTileView.h	/^  BitmapControl tileView;$/;"	m	class:GBTileView
tileView	src/win32/TileView.h	/^  BitmapControl tileView;$/;"	m	class:TileView
tilelab	src/wx/gfxviewers.cpp	/^	wxControl *pos, *tilelab, *prio, *oap, *pallab, *flg, *banklab;$/;"	m	class:Viewers::GBOAMViewer	file:
tileno	src/wx/gfxviewers.cpp	/^	wxControl *addr, *tileno;$/;"	m	class:Viewers::GBTileViewer	file:
tileno	src/wx/gfxviewers.cpp	/^	wxControl *tileno, *addr;$/;"	m	class:Viewers::TileViewer	file:
timer	src/gba/Sound.cpp	/^	int  timer;$/;"	m	class:Gba_Pcm_Fifo	file:
timer	src/wx/wxvbam.h	/^    wxStopWatch timer;$/;"	m	class:wxvbamApp
timer0ClockReload	src/gba/GBA.cpp	/^int timer0ClockReload  = 0;$/;"	v
timer0On	src/gba/GBA.cpp	/^bool timer0On = false;$/;"	v
timer0Reload	src/gba/GBA.cpp	/^int timer0Reload = 0;$/;"	v
timer0Ticks	src/gba/GBA.cpp	/^int timer0Ticks = 0;$/;"	v
timer0Value	src/gba/GBA.cpp	/^u16 timer0Value = 0;$/;"	v
timer1ClockReload	src/gba/GBA.cpp	/^int timer1ClockReload  = 0;$/;"	v
timer1On	src/gba/GBA.cpp	/^bool timer1On = false;$/;"	v
timer1Reload	src/gba/GBA.cpp	/^int timer1Reload = 0;$/;"	v
timer1Ticks	src/gba/GBA.cpp	/^int timer1Ticks = 0;$/;"	v
timer1Value	src/gba/GBA.cpp	/^u16 timer1Value = 0;$/;"	v
timer2ClockReload	src/gba/GBA.cpp	/^int timer2ClockReload  = 0;$/;"	v
timer2On	src/gba/GBA.cpp	/^bool timer2On = false;$/;"	v
timer2Reload	src/gba/GBA.cpp	/^int timer2Reload = 0;$/;"	v
timer2Ticks	src/gba/GBA.cpp	/^int timer2Ticks = 0;$/;"	v
timer2Value	src/gba/GBA.cpp	/^u16 timer2Value = 0;$/;"	v
timer3ClockReload	src/gba/GBA.cpp	/^int timer3ClockReload  = 0;$/;"	v
timer3On	src/gba/GBA.cpp	/^bool timer3On = false;$/;"	v
timer3Reload	src/gba/GBA.cpp	/^int timer3Reload = 0;$/;"	v
timer3Ticks	src/gba/GBA.cpp	/^int timer3Ticks = 0;$/;"	v
timer3Value	src/gba/GBA.cpp	/^u16 timer3Value = 0;$/;"	v
timerId	src/win32/Joypad.h	/^  UINT_PTR timerId;$/;"	m	class:JoypadConfig
timerId	src/win32/Joypad.h	/^  UINT_PTR timerId;$/;"	m	class:MotionConfig
timerOnOffDelay	src/gba/GBA.cpp	/^u8 timerOnOffDelay = 0;$/;"	v
timer_overflowed	src/gba/Sound.cpp	/^void Gba_Pcm_Fifo::timer_overflowed( int which_timer )$/;"	f	class:Gba_Pcm_Fifo
timing	src/libretro/libretro.h	/^   struct retro_system_timing timing;$/;"	m	struct:retro_system_av_info	typeref:struct:retro_system_av_info::retro_system_timing
toBCD	src/gba/RTC.cpp	/^static u8 toBCD(u8 value)$/;"	f	file:
todraw	src/wx/wxvbam.h	/^    u8 *todraw;$/;"	m	class:DrawingPanel
toolTip	src/win32/AudioCoreSettingsDlg.h	/^	CToolTipCtrl *toolTip;$/;"	m	class:AudioCoreSettingsDlg
toolsClearLog	src/win32/Logging.cpp	/^void toolsClearLog()$/;"	f
toolsLog	src/win32/Logging.cpp	/^void toolsLog(const char *s)$/;"	f
toolsLogging	src/win32/Logging.cpp	/^void toolsLogging()$/;"	f
toolsLoggingClose	src/win32/Logging.cpp	/^void toolsLoggingClose()$/;"	f
top	src/gba/elf.h	/^  u8 *top;$/;"	m	struct:CompileUnit
topaddr	src/wx/viewsupt.h	/^	u32 topaddr;$/;"	m	class:Viewers::DisList
topaddr	src/wx/viewsupt.h	/^	u32 topaddr;$/;"	m	class:Viewers::MemView
transfer	src/gba/GBALink.cpp	/^u8 transfer = 0;$/;"	v
transpVertices	src/win32/Direct3D.cpp	/^	} transpVertices[4];$/;"	m	class:Direct3DDisplay	typeref:struct:Direct3DDisplay::TRANSP_VERTEX	file:
transparent	src/common/memgzio.c	/^    int      transparent; \/* 1 if input file is not a .gz file *\/$/;"	m	struct:mem_stream	file:
treble	src/apu/Blip_Buffer.h	/^	double treble;$/;"	m	class:blip_eq_t
treble	src/apu/Effects_Buffer.h	/^		fixed_t treble;$/;"	m	struct:Effects_Buffer::__anon131
treble	src/apu/Effects_Buffer.h	/^		float treble;   \/\/ 1.0 = full treble, 0.1 = very little, 0.0 = silent$/;"	m	struct:Effects_Buffer::config_t
treble_eq	src/apu/Blip_Buffer.cpp	/^void Blip_Synth_::treble_eq( blip_eq_t const& eq )$/;"	f	class:Blip_Synth_
treble_eq	src/apu/Blip_Buffer.h	/^		void treble_eq( blip_eq_t const& ) { }$/;"	f	class:Blip_Synth_Fast_
treble_eq	src/apu/Blip_Buffer.h	/^	void treble_eq( blip_eq_t const& eq )       { impl.treble_eq( eq ); }$/;"	f	class:Blip_Synth
treble_eq	src/apu/Gb_Apu.cpp	/^void Gb_Apu::treble_eq( blip_eq_t const& eq )$/;"	f	class:Gb_Apu
treeid_to_name	src/wx/guiinit.cpp	/^static bool treeid_to_name(int id, wxString &name, wxTreeCtrl *tc,$/;"	f	file:
trgbas	src/gba/GBALink.h	/^	u8 trgbas;$/;"	m	struct:__anon45
trigger_mask	src/apu/Gb_Oscs.cpp	/^int const trigger_mask   = 0x80;$/;"	v
tripleBuffering	src/win32/VBA.h	/^  bool tripleBuffering;$/;"	m	class:VBA
trtimedata	src/gba/GBALink.cpp	/^int trtimedata[4][4] = {$/;"	v
trtimeend	src/gba/GBALink.cpp	/^int trtimeend[3][4] = {$/;"	v
true	src/apu/blargg_common.h	/^	const bool true  = 1;$/;"	v
true	src/libretro/libretro.h	14;"	d
tspeed	src/gba/GBALink.cpp	/^u8 tspeed = 3;$/;"	v
turbo	src/wx/sys.cpp	/^bool turbo;$/;"	v
tx	src/win32/Direct3D.cpp	/^		FLOAT tx, ty;       \/\/ texture coordinates$/;"	m	struct:Direct3DDisplay::VERTEX	file:
tx	src/win32/Direct3D.cpp	/^		FLOAT tx, ty;$/;"	m	struct:Direct3DDisplay::TRANSP_VERTEX	file:
tx1	src/win32/glfont.h	/^	float tx1, ty1;$/;"	m	struct:__anon68
tx2	src/win32/glfont.h	/^	float tx2, ty2;$/;"	m	struct:__anon68
txt	src/wx/guiinit.cpp	/^    wxControl *txt;$/;"	m	class:PluginListFiller	file:
ty	src/win32/Direct3D.cpp	/^		FLOAT tx, ty;       \/\/ texture coordinates$/;"	m	struct:Direct3DDisplay::VERTEX	file:
ty	src/win32/Direct3D.cpp	/^		FLOAT tx, ty;$/;"	m	struct:Direct3DDisplay::TRANSP_VERTEX	file:
ty1	src/win32/glfont.h	/^	float tx1, ty1;$/;"	m	struct:__anon68
ty2	src/win32/glfont.h	/^	float tx2, ty2;$/;"	m	struct:__anon68
type	fex/fex/File_Extractor.h	/^	fex_type_t type() const             { return type_; }$/;"	f	struct:fex_t
type	fex/fex/Zip_Extractor.cpp	/^	char type [4];$/;"	m	struct:end_entry_t	file:
type	fex/fex/Zip_Extractor.cpp	/^	char type [4];$/;"	m	struct:entry_t	file:
type	fex/fex/Zip_Extractor.cpp	/^	char type [4];$/;"	m	struct:header_t	file:
type	src/gba/GBALink.h	/^	int type;$/;"	m	struct:__anon46
type	src/gba/elf.h	/^  Type *type;$/;"	m	struct:Array
type	src/gba/elf.h	/^  Type *type;$/;"	m	struct:Member
type	src/gba/elf.h	/^  Type *type;$/;"	m	struct:Object
type	src/gba/elf.h	/^  TypeEnum type;$/;"	m	struct:Type
type	src/gba/elf.h	/^  int type;$/;"	m	struct:Symbol
type	src/gba/elf.h	/^  u32 type;$/;"	m	struct:ELFProgramHeader
type	src/gba/elf.h	/^  u32 type;$/;"	m	struct:ELFSectionHeader
type	src/sdl/exprNode.h	/^  Type *type;$/;"	m	struct:Node
type	src/wx/guiinit.cpp	/^    wxChoice *type, *size;$/;"	m	class:BatConfig_t	file:
type_	fex/fex/File_Extractor.h	/^	fex_type_t const type_;$/;"	m	struct:fex_t
type_index_mask	src/apu/Multi_Buffer.h	/^	enum { type_index_mask = 0xFF };$/;"	e	enum:Multi_Buffer::__anon147
types	src/gba/elf.h	/^  Type *types;$/;"	m	struct:CompileUnit
u16	src/common/Types.h	/^typedef uint16_t u16;$/;"	t
u16inbuffer	src/gba/GBALink.h	/^	u16 *u16inbuffer;$/;"	m	class:lclient
u16inbuffer	src/gba/GBALink.h	/^	u16 *u16inbuffer;$/;"	m	class:lserver
u16outbuffer	src/gba/GBALink.h	/^	u16 *u16outbuffer;$/;"	m	class:lclient
u16outbuffer	src/gba/GBALink.h	/^	u16 *u16outbuffer;$/;"	m	class:lserver
u32	src/common/Types.h	/^typedef uint32_t u32;$/;"	t
u64	src/common/Types.h	/^typedef uint64_t u64;$/;"	t
u8	src/common/Types.h	/^typedef uint8_t u8;$/;"	t
u8h	src/gba/GBA.cpp	/^union u8h$/;"	u	file:
uControlID	src/win32/ResizeDlg.h	/^  UINT uControlID;$/;"	m	struct:DialogSizerSizingItem
uDesc	src/gtk/cheatlist.h	/^    Gtk::TreeModelColumn<Glib::ustring> uDesc;$/;"	m	class:VBA::ListCheatCodeColumns
uSizeInfo	src/win32/ResizeDlg.h	/^  UINT uSizeInfo;$/;"	m	struct:DialogSizerSizingItem
uText	src/gtk/cheatedit.h	/^    Gtk::TreeModelColumn<Glib::ustring> uText;$/;"	m	class:VBA::EditCheatCodeColumns
udpaddr	src/gba/GBALink.h	/^	sf::IPAddress udpaddr[4];$/;"	m	class:lserver
uint16_t	fex/fex/blargg_common.h	/^		typedef unsigned short  uint16_t;$/;"	t	struct:BOOST
uint16_t	src/apu/blargg_common.h	/^			typedef struct see_blargg_common_h uint16_t;$/;"	t	struct:BOOST	typeref:struct:BOOST::see_blargg_common_h
uint16_t	src/apu/blargg_common.h	/^			typedef unsigned short  uint16_t;$/;"	t	struct:BOOST
uint16_t	src/libretro/msvc/msvc-2003-xbox1/stdint.h	/^   typedef unsigned __int16  uint16_t;$/;"	t
uint16_t	src/libretro/msvc/msvc-2003-xbox1/stdint.h	/^   typedef unsigned short    uint16_t;$/;"	t
uint32_t	fex/fex/blargg_common.h	/^		typedef unsigned int    uint32_t;$/;"	t	struct:BOOST
uint32_t	src/apu/blargg_common.h	/^			typedef struct see_blargg_common_h uint32_t;$/;"	t	struct:BOOST	typeref:struct:BOOST::see_blargg_common_h
uint32_t	src/apu/blargg_common.h	/^			typedef unsigned int    uint32_t;$/;"	t	struct:BOOST
uint32_t	src/apu/blargg_common.h	/^			typedef unsigned long   uint32_t;$/;"	t	struct:BOOST
uint32_t	src/libretro/msvc/msvc-2003-xbox1/stdint.h	/^   typedef unsigned __int32  uint32_t;$/;"	t
uint32_t	src/libretro/msvc/msvc-2003-xbox1/stdint.h	/^   typedef unsigned int      uint32_t;$/;"	t
uint64_t	src/libretro/msvc/msvc-2003-xbox1/stdint.h	/^typedef unsigned __int64     uint64_t;$/;"	t
uint8_t	fex/fex/blargg_common.h	/^		typedef unsigned char    uint8_t;$/;"	t	struct:BOOST
uint8_t	src/apu/blargg_common.h	/^			typedef unsigned char   uint8_t;$/;"	t	struct:BOOST
uint8_t	src/libretro/msvc/msvc-2003-xbox1/stdint.h	/^   typedef unsigned __int8   uint8_t;$/;"	t
uint8_t	src/libretro/msvc/msvc-2003-xbox1/stdint.h	/^   typedef unsigned char     uint8_t;$/;"	t
uint_fast16_t	src/libretro/msvc/msvc-2003-xbox1/stdint.h	/^typedef uint16_t  uint_fast16_t;$/;"	t
uint_fast32_t	src/libretro/msvc/msvc-2003-xbox1/stdint.h	/^typedef uint32_t  uint_fast32_t;$/;"	t
uint_fast64_t	src/libretro/msvc/msvc-2003-xbox1/stdint.h	/^typedef uint64_t  uint_fast64_t;$/;"	t
uint_fast8_t	src/libretro/msvc/msvc-2003-xbox1/stdint.h	/^typedef uint8_t   uint_fast8_t;$/;"	t
uint_least16_t	src/libretro/msvc/msvc-2003-xbox1/stdint.h	/^typedef uint16_t  uint_least16_t;$/;"	t
uint_least32_t	src/libretro/msvc/msvc-2003-xbox1/stdint.h	/^typedef uint32_t  uint_least32_t;$/;"	t
uint_least64_t	src/libretro/msvc/msvc-2003-xbox1/stdint.h	/^typedef uint64_t  uint_least64_t;$/;"	t
uint_least8_t	src/libretro/msvc/msvc-2003-xbox1/stdint.h	/^typedef uint8_t   uint_least8_t;$/;"	t
uintmax_t	src/libretro/msvc/msvc-2003-xbox1/stdint.h	/^typedef uint64_t  uintmax_t;$/;"	t
uintptr_t	src/libretro/msvc/msvc-2003-xbox1/stdint.h	/^   typedef _W64 unsigned int uintptr_t;$/;"	t
uintptr_t	src/libretro/msvc/msvc-2003-xbox1/stdint.h	/^   typedef unsigned __int64  uintptr_t;$/;"	t
umix	src/wx/guiinit.cpp	/^    wxControl *umix, *hwacc;$/;"	m	class:SoundConfig_t	file:
unkctrl	src/wx/viewsupt.h	226;"	d
unpackSize	fex/7z_C/Lzma2Dec.h	/^  UInt32 unpackSize;$/;"	m	struct:__anon34
unput	src/sdl/expr-lex.cpp	181;"	d	file:
unrar	fex/fex/Rar_Extractor.h	/^	unrar_t* unrar;$/;"	m	class:Rar_Extractor
unsettled	src/apu/Blip_Buffer.h	/^inline blip_ulong Blip_Buffer::unsettled() const$/;"	f	class:Blip_Buffer
unused	src/apu/Gb_Apu.h	/^	val_t unused  [13]; \/\/ for future expansion$/;"	m	struct:gb_apu_state_t
up	src/win32/Joypad.h	/^  JoypadEditControl  up;$/;"	m	class:JoypadConfig
up	src/win32/Joypad.h	/^  JoypadEditControl  up;$/;"	m	class:MotionConfig
update	src/apu/Blip_Buffer.h	/^void Blip_Synth<quality,range>::update( blip_time_t t, int amp )$/;"	f	class:Blip_Synth
update	src/gba/Sound.cpp	/^void Gba_Pcm::update( int dac )$/;"	f	class:Gba_Pcm
update	src/win32/Disassemble.cpp	/^void Disassemble::update()$/;"	f	class:Disassemble
update	src/win32/GBDisassemble.cpp	/^void GBDisassemble::update()$/;"	f	class:GBDisassemble
update	src/win32/GBMapView.cpp	/^void GBMapView::update()$/;"	f	class:GBMapView
update	src/win32/GBMemoryViewerDlg.cpp	/^void GBMemoryViewerDlg::update()$/;"	f	class:GBMemoryViewerDlg
update	src/win32/GBOamView.cpp	/^void GBOamView::update()$/;"	f	class:GBOamView
update	src/win32/GBPaletteView.cpp	/^void GBPaletteView::update()$/;"	f	class:GBPaletteView
update	src/win32/GBTileView.cpp	/^void GBTileView::update()$/;"	f	class:GBTileView
update	src/win32/IOViewer.cpp	/^void IOViewer::update()$/;"	f	class:IOViewer
update	src/win32/MapView.cpp	/^void MapView::update()$/;"	f	class:MapView
update	src/win32/MemoryViewerDlg.cpp	/^void MemoryViewerDlg::update()$/;"	f	class:MemoryViewerDlg
update	src/win32/OamView.cpp	/^void OamView::update()$/;"	f	class:OamView
update	src/win32/PaletteView.cpp	/^void PaletteView::update()$/;"	f	class:PaletteView
update	src/win32/TileView.cpp	/^void TileView::update()$/;"	f	class:TileView
updateCount	src/win32/VBA.h	/^  int updateCount;$/;"	m	class:VBA
updateFilter	src/win32/VBA.cpp	/^void VBA::updateFilter()$/;"	f	class:VBA
updateFiltering	src/win32/OpenGL.cpp	/^void OpenGLDisplay::updateFiltering( int value )$/;"	f	class:OpenGLDisplay
updateFrameSkip	src/win32/VBA.cpp	/^void VBA::updateFrameSkip()$/;"	f	class:VBA
updateIFB	src/win32/VBA.cpp	/^void VBA::updateIFB()$/;"	f	class:VBA
updateList	src/win32/VBA.h	/^  CList<IUpdateListener *, IUpdateListener*&> updateList;$/;"	m	class:VBA
updateMenuBar	src/win32/VBA.cpp	/^void VBA::updateMenuBar()$/;"	f	class:VBA
updatePalette	src/win32/GBPaletteView.cpp	/^void GBPaletteViewControl::updatePalette()$/;"	f	class:GBPaletteViewControl
updatePalette	src/win32/PaletteView.cpp	/^void GBAPaletteViewControl::updatePalette()$/;"	f	class:GBAPaletteViewControl
updatePriority	src/win32/VBA.cpp	/^void VBA::updatePriority()$/;"	f	class:VBA
updateRenderMethod	src/win32/VBA.cpp	/^bool VBA::updateRenderMethod(bool force)$/;"	f	class:VBA
updateRenderMethod0	src/win32/VBA.cpp	/^bool VBA::updateRenderMethod0(bool force)$/;"	f	class:VBA
updateRumbleFrame	src/win32/VBA.cpp	/^void updateRumbleFrame() { }$/;"	f
updateScrollInfo	src/win32/GBOamView.cpp	/^void GBOamView::updateScrollInfo()$/;"	f	class:GBOamView
updateScrollInfo	src/win32/MemoryViewer.cpp	/^void MemoryViewer::updateScrollInfo(int lines)$/;"	f	class:MemoryViewer
updateScrollInfo	src/win32/OamView.cpp	/^void OamView::updateScrollInfo()$/;"	f	class:OamView
updateSoundChannels	src/win32/MainWndOptions.cpp	/^void MainWnd::updateSoundChannels(UINT id)$/;"	f	class:MainWnd
updateThrottle	src/win32/VBA.cpp	/^void VBA::updateThrottle( unsigned short throttle )$/;"	f	class:VBA
updateValues	src/win32/GBACheats.h	/^  BOOL  updateValues;$/;"	m	class:GBACheatSearch
updateValues	src/win32/GBCheatsDlg.h	/^  BOOL  updateValues;$/;"	m	class:GBCheatSearch
updateVideoSize	src/win32/VBA.cpp	/^void VBA::updateVideoSize(UINT id)$/;"	f	class:VBA
updateWindowSize	src/win32/VBA.cpp	/^void VBA::updateWindowSize(int value)$/;"	f	class:VBA
update_amp	src/apu/Gb_Oscs.cpp	/^inline void Gb_Osc::update_amp( blip_time_t time, int new_amp )$/;"	f	class:Gb_Osc
update_b	src/wx/guiinit.cpp	/^    wxControl *update_b, *clear_b, *add_b;$/;"	m	class:CheatFind_t	file:
update_bcheck	src/wx/cmdevents.cpp	30;"	d	file:
update_check	src/wx/cmdevents.cpp	54;"	d	file:
update_icheck	src/wx/cmdevents.cpp	41;"	d	file:
update_icheck1	src/wx/cmdevents.cpp	52;"	d	file:
update_info	fex/fex/Zip_Extractor.cpp	/^blargg_err_t Zip_Extractor::update_info( bool advance_first )$/;"	f	class:Zip_Extractor
update_opts	src/wx/opts.cpp	/^void update_opts()$/;"	f
update_state_ts	src/wx/wxvbam.cpp	/^void MainFrame::update_state_ts(bool force)$/;"	f	class:MainFrame
update_variables	src/libretro/libretro.cpp	/^static void update_variables(void)$/;"	f	file:
upmix	src/wx/opts.h	/^    bool upmix; \/\/ xa2 only$/;"	m	struct:opts_t
usage	src/sdl/SDL.cpp	/^void usage(char *cmd)$/;"	f
useBios	src/gba/Globals.cpp	/^bool useBios = false;$/;"	v
useBios	src/libretro/libretro.cpp	/^	int useBios;$/;"	m	struct:__anon59	file:
useBiosFileGB	src/win32/VBA.h	/^  bool useBiosFileGB;$/;"	m	class:VBA
useBiosFileGBA	src/win32/VBA.h	/^  bool useBiosFileGBA;$/;"	m	class:VBA
useBiosFileGBC	src/win32/VBA.h	/^  bool useBiosFileGBC;$/;"	m	class:VBA
used	src/common/RingBuffer.h	/^	std::size_t used() const {$/;"	f	class:RingBuffer
user_accels	src/wx/guiinit.cpp	/^    wxAcceleratorEntry_v user_accels, accels;$/;"	m	class:AccelConfig_t	file:
user_data	fex/fex/Data_Reader.h	/^	void* const user_data;$/;"	m	class:Callback_File_Reader
user_data	fex/fex/Data_Reader.h	/^	void* const user_data;$/;"	m	class:Callback_Reader
user_data	fex/fex/Zlib_Inflater.h	/^	void* user_data;$/;"	m	class:Zlib_Inflater
utf16ToUtf8	fex/fex/Zip7_Extractor.cpp	/^bool Zip7_Extractor::utf16ToUtf8( unsigned char* dest, size_t* destLen, const short* src, size_t srcLen )$/;"	f	class:Zip7_Extractor
utf16_decode_char	fex/fex/Data_Reader.cpp	/^size_t utf16_decode_char( const wchar_t * p_source, unsigned * p_out, size_t p_source_length )$/;"	f
utf16_encode_char	fex/fex/Data_Reader.cpp	/^size_t utf16_encode_char( unsigned cur_wchar, wchar_t * out )$/;"	f
utf8_char_len_from_header	fex/fex/Data_Reader.cpp	/^size_t utf8_char_len_from_header( char p_c )$/;"	f
utf8_decode_char	fex/fex/Data_Reader.cpp	/^size_t utf8_decode_char( const char *p_utf8, unsigned & wide, size_t mmax )$/;"	f
utf8_encode_char	fex/fex/Data_Reader.cpp	/^size_t utf8_encode_char( unsigned wide, char * target )$/;"	f
utilFileExists	src/Util.cpp	/^bool utilFileExists( const char *filename )$/;"	f
utilFileExists	src/libretro/UtilRetro.cpp	/^bool utilFileExists( const char *filename )$/;"	f
utilFindType	src/Util.cpp	/^IMAGE_TYPE utilFindType(const char *file)$/;"	f
utilFindType	src/Util.cpp	/^IMAGE_TYPE utilFindType(const char *file, char (&buffer)[2048])$/;"	f
utilFindType	src/libretro/UtilRetro.cpp	/^IMAGE_TYPE utilFindType(const char *file)$/;"	f
utilGBAFindSave	src/Util.cpp	/^void utilGBAFindSave(const u8 *data, const int size)$/;"	f
utilGBAFindSave	src/libretro/UtilRetro.cpp	/^void utilGBAFindSave(const uint8_t *data, const int size)$/;"	f
utilGetSize	src/Util.cpp	/^static int utilGetSize(int size)$/;"	f	file:
utilGetSize	src/libretro/UtilRetro.cpp	/^static int utilGetSize(int size)$/;"	f	file:
utilGzClose	src/Util.cpp	/^int utilGzClose(gzFile file)$/;"	f
utilGzCloseFunc	src/Util.cpp	/^static int (ZEXPORT *utilGzCloseFunc)(gzFile) = NULL;$/;"	v	file:
utilGzMemTell	src/Util.cpp	/^long utilGzMemTell(gzFile file)$/;"	f
utilGzOpen	src/Util.cpp	/^gzFile utilGzOpen(const char *file, const char *mode)$/;"	f
utilGzRead	src/Util.cpp	/^int utilGzRead(gzFile file, voidp buffer, unsigned int len)$/;"	f
utilGzReadFunc	src/Util.cpp	/^static int (ZEXPORT *utilGzReadFunc)(gzFile, voidp, unsigned int) = NULL;$/;"	v	file:
utilGzSeek	src/Util.cpp	/^z_off_t utilGzSeek(gzFile file, z_off_t offset, int whence)$/;"	f
utilGzSeekFunc	src/Util.cpp	/^static z_off_t (ZEXPORT *utilGzSeekFunc)(gzFile, z_off_t, int) = NULL;$/;"	v	file:
utilGzWrite	src/Util.cpp	/^int utilGzWrite(gzFile file, const voidp buffer, unsigned int len)$/;"	f
utilGzWriteFunc	src/Util.cpp	/^static int (ZEXPORT *utilGzWriteFunc)(gzFile, const voidp, unsigned int) = NULL;$/;"	v	file:
utilIsGBAImage	src/Util.cpp	/^bool utilIsGBAImage(const char * file)$/;"	f
utilIsGBAImage	src/libretro/UtilRetro.cpp	/^bool utilIsGBAImage(const char * file)$/;"	f
utilIsGBImage	src/Util.cpp	/^bool utilIsGBImage(const char * file)$/;"	f
utilIsGBImage	src/libretro/UtilRetro.cpp	/^bool utilIsGBImage(const char * file)$/;"	f
utilIsGzipFile	src/Util.cpp	/^bool utilIsGzipFile(const char *file)$/;"	f
utilIsGzipFile	src/libretro/UtilRetro.cpp	/^bool utilIsGzipFile(const char *file)$/;"	f
utilIsImage	src/Util.cpp	/^static bool utilIsImage(const char *file)$/;"	f	file:
utilIsImage	src/libretro/UtilRetro.cpp	/^static bool utilIsImage(const char *file)$/;"	f	file:
utilLoad	src/Util.cpp	/^u8 *utilLoad(const char *file,$/;"	f
utilLoad	src/libretro/UtilRetro.cpp	/^uint8_t *utilLoad(const char *file, bool (*accept)(const char *), uint8_t *data, int &size)$/;"	f
utilMemGzOpen	src/Util.cpp	/^gzFile utilMemGzOpen(char *memory, int available, const char *mode)$/;"	f
utilPutDword	src/Util.cpp	/^void utilPutDword(u8 *p, u32 value)$/;"	f
utilPutDword	src/libretro/UtilRetro.cpp	/^void utilPutDword(u8 *p, u32 value)$/;"	f
utilPutWord	src/Util.cpp	/^void utilPutWord(u8 *p, u16 value)$/;"	f
utilPutWord	src/libretro/UtilRetro.cpp	/^void utilPutWord(uint8_t *p, uint16_t value)$/;"	f
utilReadData	src/Util.cpp	/^void utilReadData(gzFile gzFile, variable_desc* data)$/;"	f
utilReadDataMem	src/libretro/UtilRetro.cpp	/^void utilReadDataMem(const uint8_t *& data, variable_desc *desc)$/;"	f
utilReadDataSkip	src/Util.cpp	/^void utilReadDataSkip(gzFile gzFile, variable_desc* data)$/;"	f
utilReadInt	src/Util.cpp	/^int utilReadInt(gzFile gzFile)$/;"	f
utilReadIntMem	src/libretro/UtilRetro.cpp	/^int utilReadIntMem(const uint8_t *& data)$/;"	f
utilReadMem	src/libretro/UtilRetro.cpp	/^void utilReadMem(void *buf, const uint8_t *& data, unsigned size)$/;"	f
utilStripDoubleExtension	src/Util.cpp	/^void utilStripDoubleExtension(const char *file, char *buffer)$/;"	f
utilStripDoubleExtension	src/libretro/UtilRetro.cpp	/^void utilStripDoubleExtension(const char *file, char *buffer)$/;"	f
utilUpdateSystemColorMaps	src/Util.cpp	/^void utilUpdateSystemColorMaps(bool lcd)$/;"	f
utilUpdateSystemColorMaps	src/libretro/UtilRetro.cpp	/^void utilUpdateSystemColorMaps(bool lcd)$/;"	f
utilWriteBMPFile	src/Util.cpp	/^bool utilWriteBMPFile(const char *fileName, int w, int h, u8 *pix)$/;"	f
utilWriteBMPFile	src/libretro/UtilRetro.cpp	/^bool utilWriteBMPFile(const char *fileName, int w, int h, uint8_t *pix)$/;"	f
utilWriteData	src/Util.cpp	/^void utilWriteData(gzFile gzFile, variable_desc *data)$/;"	f
utilWriteDataMem	src/libretro/UtilRetro.cpp	/^void utilWriteDataMem(uint8_t *& data, variable_desc *desc)$/;"	f
utilWriteInt	src/Util.cpp	/^void utilWriteInt(gzFile gzFile, int i)$/;"	f
utilWriteIntMem	src/libretro/UtilRetro.cpp	/^void utilWriteIntMem(uint8_t *& data, int val)$/;"	f
utilWriteMem	src/libretro/UtilRetro.cpp	/^void utilWriteMem(uint8_t *& data, const void *in_data, unsigned size)$/;"	f
utilWritePNGFile	src/Util.cpp	/^bool utilWritePNGFile(const char *fileName, int w, int h, u8 *pix)$/;"	f
utilWritePNGFile	src/libretro/UtilRetro.cpp	/^bool utilWritePNGFile(const char *fileName, int w, int h, uint8_t *pix)$/;"	f
v1_deadtable1	src/gba/Cheats.cpp	/^u8 v1_deadtable1[256] = {$/;"	v
v1_deadtable2	src/gba/Cheats.cpp	/^u8 v1_deadtable2[256] = {$/;"	v
v3_deadtable1	src/gba/Cheats.cpp	/^u8 v3_deadtable1[256] = {$/;"	v
v3_deadtable2	src/gba/Cheats.cpp	/^u8 v3_deadtable2[256] = {$/;"	v
vAddCheat	src/gtk/gameboyadvancecheatlist.cpp	/^void GameBoyAdvanceCheatListDialog::vAddCheat(Glib::ustring sDesc, ECheatType type, Glib::RefPtr<Gtk::TextBuffer> buffer)$/;"	f	class:VBA::GameBoyAdvanceCheatListDialog
vAddCheat	src/gtk/gameboycheatlist.cpp	/^void GameBoyCheatListDialog::vAddCheat(Glib::ustring sDesc, ECheatType type, Glib::RefPtr<Gtk::TextBuffer> buffer)$/;"	f	class:VBA::GameBoyCheatListDialog
vApplyConfigFilter	src/gtk/window.cpp	/^void Window::vApplyConfigFilter()$/;"	f	class:VBA::Window
vApplyConfigFilterIB	src/gtk/window.cpp	/^void Window::vApplyConfigFilterIB()$/;"	f	class:VBA::Window
vApplyConfigFrameskip	src/gtk/window.cpp	/^void Window::vApplyConfigFrameskip()$/;"	f	class:VBA::Window
vApplyConfigGBAFlashSize	src/gtk/window.cpp	/^void Window::vApplyConfigGBAFlashSize()$/;"	f	class:VBA::Window
vApplyConfigGBARTC	src/gtk/window.cpp	/^void Window::vApplyConfigGBARTC()$/;"	f	class:VBA::Window
vApplyConfigGBASaveType	src/gtk/window.cpp	/^void Window::vApplyConfigGBASaveType()$/;"	f	class:VBA::Window
vApplyConfigGBBorder	src/gtk/window.cpp	/^void Window::vApplyConfigGBBorder()$/;"	f	class:VBA::Window
vApplyConfigGBPrinter	src/gtk/window.cpp	/^void Window::vApplyConfigGBPrinter()$/;"	f	class:VBA::Window
vApplyConfigGBSystem	src/gtk/window.cpp	/^void Window::vApplyConfigGBSystem()$/;"	f	class:VBA::Window
vApplyConfigJoypads	src/gtk/window.cpp	/^void Window::vApplyConfigJoypads()$/;"	f	class:VBA::Window
vApplyConfigMute	src/gtk/window.cpp	/^void Window::vApplyConfigMute()$/;"	f	class:VBA::Window
vApplyConfigScreenArea	src/gtk/window.cpp	/^void Window::vApplyConfigScreenArea()$/;"	f	class:VBA::Window
vApplyConfigShowSpeed	src/gtk/window.cpp	/^void Window::vApplyConfigShowSpeed()$/;"	f	class:VBA::Window
vApplyConfigSoundSampleRate	src/gtk/window.cpp	/^void Window::vApplyConfigSoundSampleRate()$/;"	f	class:VBA::Window
vApplyConfigVolume	src/gtk/window.cpp	/^void Window::vApplyConfigVolume()$/;"	f	class:VBA::Window
vApplyPerGameConfig	src/gtk/window.cpp	/^void Window::vApplyPerGameConfig()$/;"	f	class:VBA::Window
vCaptureScreen	src/gtk/window.cpp	/^void Window::vCaptureScreen(int _iNum)$/;"	f	class:VBA::Window
vCheatListOpen	src/gtk/gameboyadvancecheatlist.cpp	/^bool GameBoyAdvanceCheatListDialog::vCheatListOpen(const char *file)$/;"	f	class:VBA::GameBoyAdvanceCheatListDialog
vCheatListOpen	src/gtk/gameboycheatlist.cpp	/^bool GameBoyCheatListDialog::vCheatListOpen(const char *file)$/;"	f	class:VBA::GameBoyCheatListDialog
vCheatListSave	src/gtk/gameboyadvancecheatlist.cpp	/^void GameBoyAdvanceCheatListDialog::vCheatListSave(const char *file)$/;"	f	class:VBA::GameBoyAdvanceCheatListDialog
vCheatListSave	src/gtk/gameboycheatlist.cpp	/^void GameBoyCheatListDialog::vCheatListSave(const char *file)$/;"	f	class:VBA::GameBoyCheatListDialog
vCheckConfig	src/gtk/window.cpp	/^void Window::vCheckConfig()$/;"	f	class:VBA::Window
vClear	src/gtk/configfile.cpp	/^void File::vClear()$/;"	f	class:VBA::Config::File
vComputeFrameskip	src/gtk/window.cpp	/^void Window::vComputeFrameskip(int _iRate)$/;"	f	class:VBA::Window
vCreateFileOpenDialog	src/gtk/window.cpp	/^void Window::vCreateFileOpenDialog()$/;"	f	class:VBA::Window
vDrawBlackScreen	src/gtk/screenarea-cairo.cpp	/^void ScreenAreaCairo::vDrawBlackScreen()$/;"	f	class:VBA::ScreenAreaCairo
vDrawBlackScreen	src/gtk/screenarea-opengl.cpp	/^void ScreenAreaGl::vDrawBlackScreen()$/;"	f	class:VBA::ScreenAreaGl
vDrawDefaultScreen	src/gtk/window.cpp	/^void Window::vDrawDefaultScreen()$/;"	f	class:VBA::Window
vDrawPixels	src/gtk/screenarea-cairo.cpp	/^void ScreenAreaCairo::vDrawPixels(u8 * _puiData)$/;"	f	class:VBA::ScreenAreaCairo
vDrawPixels	src/gtk/screenarea-opengl.cpp	/^void ScreenAreaGl::vDrawPixels(u8 * _puiData)$/;"	f	class:VBA::ScreenAreaGl
vDrawPixels	src/gtk/screenarea.cpp	/^void ScreenArea::vDrawPixels(u8 * _puiData)$/;"	f	class:VBA::ScreenArea
vDrawScreen	src/gtk/window.cpp	/^void Window::vDrawScreen()$/;"	f	class:VBA::Window
vEmptyEventQueue	src/gtk/joypadconfig.cpp	/^void JoypadConfigDialog::vEmptyEventQueue()$/;"	f	class:VBA::JoypadConfigDialog
vFlip	src/gba/GBA.cpp	/^      \/*13*\/	unsigned vFlip:1;$/;"	m	struct:TileEntry::__anon42	file:
vGetCode	src/gtk/cheatedit.cpp	/^Glib::RefPtr<Gtk::TextBuffer> CheatEditDialog::vGetCode()$/;"	f	class:VBA::CheatEditDialog
vGetDesc	src/gtk/cheatedit.cpp	/^Glib::ustring CheatEditDialog::vGetDesc()$/;"	f	class:VBA::CheatEditDialog
vGetType	src/gtk/cheatedit.cpp	/^ECheatType CheatEditDialog::vGetType()$/;"	f	class:VBA::CheatEditDialog
vHideCursor	src/gtk/screenarea.cpp	/^void ScreenArea::vHideCursor()$/;"	f	class:VBA::ScreenArea
vHistoryAdd	src/gtk/window.cpp	/^void Window::vHistoryAdd(const std::string & _rsFile)$/;"	f	class:VBA::Window
vInitColors	src/gtk/window.cpp	/^void Window::vInitColors(EColorFormat _eColorFormat)$/;"	f	class:VBA::Window
vInitConfig	src/gtk/window.cpp	/^void Window::vInitConfig()$/;"	f	class:VBA::Window
vInitSDL	src/gtk/window.cpp	/^void Window::vInitSDL()$/;"	f	class:VBA::Window
vInitSystem	src/gtk/window.cpp	/^void Window::vInitSystem()$/;"	f	class:VBA::Window
vLoad	src/gtk/configfile.cpp	/^void File::vLoad(const string & _rsFile,$/;"	f	class:VBA::Config::File
vLoadBattery	src/gtk/window.cpp	/^void Window::vLoadBattery()$/;"	f	class:VBA::Window
vLoadCheats	src/gtk/window.cpp	/^void Window::vLoadCheats()$/;"	f	class:VBA::Window
vLoadConfig	src/gtk/window.cpp	/^void Window::vLoadConfig(const std::string & _rsFile)$/;"	f	class:VBA::Window
vOnApply	src/gtk/cheatedit.cpp	/^void CheatEditDialog::vOnApply()$/;"	f	class:VBA::CheatEditDialog
vOnBiosSelectionChanged	src/gtk/gameboyadvanceconfig.cpp	/^void GameBoyAdvanceConfigDialog::vOnBiosSelectionChanged()$/;"	f	class:VBA::GameBoyAdvanceConfigDialog
vOnBootRomSelectionChanged	src/gtk/gameboyconfig.cpp	/^void GameBoyConfigDialog::vOnBootRomSelectionChanged()$/;"	f	class:VBA::GameBoyConfigDialog
vOnBorderChanged	src/gtk/gameboyconfig.cpp	/^void GameBoyConfigDialog::vOnBorderChanged()$/;"	f	class:VBA::GameBoyConfigDialog
vOnCancel	src/gtk/cheatedit.cpp	/^void CheatEditDialog::vOnCancel() {$/;"	f	class:VBA::CheatEditDialog
vOnCheatAdd	src/gtk/cheatlist.cpp	/^void CheatListDialog::vOnCheatAdd()$/;"	f	class:VBA::CheatListDialog
vOnCheatDisableToggled	src/gtk/windowcallbacks.cpp	/^void Window::vOnCheatDisableToggled(Gtk::CheckMenuItem * _poCMI)$/;"	f	class:VBA::Window
vOnCheatList	src/gtk/windowcallbacks.cpp	/^void Window::vOnCheatList()$/;"	f	class:VBA::Window
vOnCheatListOpen	src/gtk/cheatlist.cpp	/^void CheatListDialog::vOnCheatListOpen()$/;"	f	class:VBA::CheatListDialog
vOnCheatListSave	src/gtk/cheatlist.cpp	/^void CheatListDialog::vOnCheatListSave()$/;"	f	class:VBA::CheatListDialog
vOnCheatMarkAll	src/gtk/cheatlist.cpp	/^void CheatListDialog::vOnCheatMarkAll()$/;"	f	class:VBA::CheatListDialog
vOnCheatRemove	src/gtk/cheatlist.cpp	/^void CheatListDialog::vOnCheatRemove()$/;"	f	class:VBA::CheatListDialog
vOnCheatRemoveAll	src/gtk/cheatlist.cpp	/^void CheatListDialog::vOnCheatRemoveAll()$/;"	f	class:VBA::CheatListDialog
vOnCheatToggled	src/gtk/cheatlist.cpp	/^void CheatListDialog::vOnCheatToggled(Glib::ustring const& string_path)$/;"	f	class:VBA::CheatListDialog
vOnDefaultJoypadSelect	src/gtk/joypadconfig.cpp	/^void JoypadConfigDialog::vOnDefaultJoypadSelect()$/;"	f	class:VBA::JoypadConfigDialog
vOnDirectories	src/gtk/windowcallbacks.cpp	/^void Window::vOnDirectories()$/;"	f	class:VBA::Window
vOnDisplayConfigure	src/gtk/windowcallbacks.cpp	/^void Window::vOnDisplayConfigure()$/;"	f	class:VBA::Window
vOnEnableRTCChanged	src/gtk/gameboyadvanceconfig.cpp	/^void GameBoyAdvanceConfigDialog::vOnEnableRTCChanged()$/;"	f	class:VBA::GameBoyAdvanceConfigDialog
vOnFileClose	src/gtk/windowcallbacks.cpp	/^void Window::vOnFileClose()$/;"	f	class:VBA::Window
vOnFileExit	src/gtk/windowcallbacks.cpp	/^void Window::vOnFileExit()$/;"	f	class:VBA::Window
vOnFileLoad	src/gtk/windowcallbacks.cpp	/^void Window::vOnFileLoad()$/;"	f	class:VBA::Window
vOnFileOpen	src/gtk/windowcallbacks.cpp	/^void Window::vOnFileOpen()$/;"	f	class:VBA::Window
vOnFilePauseToggled	src/gtk/windowcallbacks.cpp	/^void Window::vOnFilePauseToggled(Gtk::CheckMenuItem * _poCMI)$/;"	f	class:VBA::Window
vOnFileReset	src/gtk/windowcallbacks.cpp	/^void Window::vOnFileReset()$/;"	f	class:VBA::Window
vOnFileSave	src/gtk/windowcallbacks.cpp	/^void Window::vOnFileSave()$/;"	f	class:VBA::Window
vOnFileScreenCapture	src/gtk/windowcallbacks.cpp	/^void Window::vOnFileScreenCapture()$/;"	f	class:VBA::Window
vOnFilterChanged	src/gtk/displayconfig.cpp	/^void DisplayConfigDialog::vOnFilterChanged()$/;"	f	class:VBA::DisplayConfigDialog
vOnFilterIBChanged	src/gtk/displayconfig.cpp	/^void DisplayConfigDialog::vOnFilterIBChanged()$/;"	f	class:VBA::DisplayConfigDialog
vOnFlashSizeChanged	src/gtk/gameboyadvanceconfig.cpp	/^void GameBoyAdvanceConfigDialog::vOnFlashSizeChanged()$/;"	f	class:VBA::GameBoyAdvanceConfigDialog
vOnFrameskipChanged	src/gtk/generalconfig.cpp	/^void PreferencesDialog::vOnFrameskipChanged()$/;"	f	class:VBA::PreferencesDialog
vOnGameBoyAdvanceConfigure	src/gtk/windowcallbacks.cpp	/^void Window::vOnGameBoyAdvanceConfigure()$/;"	f	class:VBA::Window
vOnGameBoyConfigure	src/gtk/windowcallbacks.cpp	/^void Window::vOnGameBoyConfigure()$/;"	f	class:VBA::Window
vOnGeneralConfigure	src/gtk/windowcallbacks.cpp	/^void Window::vOnGeneralConfigure()$/;"	f	class:VBA::Window
vOnHelpAbout	src/gtk/windowcallbacks.cpp	/^void Window::vOnHelpAbout()$/;"	f	class:VBA::Window
vOnInputEvent	src/gtk/joypadconfig.cpp	/^void JoypadConfigDialog::vOnInputEvent(const SDL_Event &event)$/;"	f	class:VBA::JoypadConfigDialog
vOnJoypadConfigure	src/gtk/windowcallbacks.cpp	/^void Window::vOnJoypadConfigure()$/;"	f	class:VBA::Window
vOnJoypadSelect	src/gtk/joypadconfig.cpp	/^void JoypadConfigDialog::vOnJoypadSelect()$/;"	f	class:VBA::JoypadConfigDialog
vOnLoadGame	src/gtk/windowcallbacks.cpp	/^void Window::vOnLoadGame(int _iSlot)$/;"	f	class:VBA::Window
vOnLoadGameAutoToggled	src/gtk/windowcallbacks.cpp	/^void Window::vOnLoadGameAutoToggled(Gtk::CheckMenuItem * _poCMI)$/;"	f	class:VBA::Window
vOnLoadGameMostRecent	src/gtk/windowcallbacks.cpp	/^void Window::vOnLoadGameMostRecent()$/;"	f	class:VBA::Window
vOnMenuEnter	src/gtk/windowcallbacks.cpp	/^void Window::vOnMenuEnter()$/;"	f	class:VBA::Window
vOnMenuExit	src/gtk/windowcallbacks.cpp	/^void Window::vOnMenuExit()$/;"	f	class:VBA::Window
vOnOutputChanged	src/gtk/displayconfig.cpp	/^void DisplayConfigDialog::vOnOutputChanged(VBA::Window::EVideoOutput _eOutput)$/;"	f	class:VBA::DisplayConfigDialog
vOnPauseWhenInactiveChanged	src/gtk/generalconfig.cpp	/^void PreferencesDialog::vOnPauseWhenInactiveChanged()$/;"	f	class:VBA::PreferencesDialog
vOnPrinterChanged	src/gtk/gameboyconfig.cpp	/^void GameBoyConfigDialog::vOnPrinterChanged()$/;"	f	class:VBA::GameBoyConfigDialog
vOnRateChanged	src/gtk/soundconfig.cpp	/^void SoundConfigDialog::vOnRateChanged()$/;"	f	class:VBA::SoundConfigDialog
vOnRecentFile	src/gtk/windowcallbacks.cpp	/^void Window::vOnRecentFile()$/;"	f	class:VBA::Window
vOnSaveGame	src/gtk/windowcallbacks.cpp	/^void Window::vOnSaveGame(int _iSlot)$/;"	f	class:VBA::Window
vOnSaveGameOldest	src/gtk/windowcallbacks.cpp	/^void Window::vOnSaveGameOldest()$/;"	f	class:VBA::Window
vOnSaveTypeChanged	src/gtk/gameboyadvanceconfig.cpp	/^void GameBoyAdvanceConfigDialog::vOnSaveTypeChanged()$/;"	f	class:VBA::GameBoyAdvanceConfigDialog
vOnScaleChanged	src/gtk/displayconfig.cpp	/^void DisplayConfigDialog::vOnScaleChanged()$/;"	f	class:VBA::DisplayConfigDialog
vOnSizeUpdated	src/gtk/screenarea-opengl.cpp	/^void ScreenAreaGl::vOnSizeUpdated()$/;"	f	class:VBA::ScreenAreaGl
vOnSizeUpdated	src/gtk/screenarea.h	/^  virtual void vOnSizeUpdated() {}$/;"	f	class:VBA::ScreenArea
vOnSoundConfigure	src/gtk/windowcallbacks.cpp	/^void Window::vOnSoundConfigure()$/;"	f	class:VBA::Window
vOnSpeedIndicatorChanged	src/gtk/generalconfig.cpp	/^void PreferencesDialog::vOnSpeedIndicatorChanged()$/;"	f	class:VBA::PreferencesDialog
vOnSystemChanged	src/gtk/gameboyconfig.cpp	/^void GameBoyConfigDialog::vOnSystemChanged()$/;"	f	class:VBA::GameBoyConfigDialog
vOnUseBiosChanged	src/gtk/gameboyadvanceconfig.cpp	/^void GameBoyAdvanceConfigDialog::vOnUseBiosChanged()$/;"	f	class:VBA::GameBoyAdvanceConfigDialog
vOnUseBootRomChanged	src/gtk/gameboyconfig.cpp	/^void GameBoyConfigDialog::vOnUseBootRomChanged()$/;"	f	class:VBA::GameBoyConfigDialog
vOnVideoFullscreen	src/gtk/windowcallbacks.cpp	/^void Window::vOnVideoFullscreen()$/;"	f	class:VBA::Window
vOnVolumeChanged	src/gtk/soundconfig.cpp	/^void SoundConfigDialog::vOnVolumeChanged()$/;"	f	class:VBA::SoundConfigDialog
vOnWidgetResize	src/gtk/screenarea-cairo.cpp	/^void ScreenAreaCairo::vOnWidgetResize()$/;"	f	class:VBA::ScreenAreaCairo
vOnWidgetResize	src/gtk/screenarea-opengl.cpp	/^void ScreenAreaGl::vOnWidgetResize()$/;"	f	class:VBA::ScreenAreaGl
vPopupError	src/gtk/window.cpp	/^void Window::vPopupError(const char * _csFormat, ...)$/;"	f	class:VBA::Window
vPopupErrorV	src/gtk/window.cpp	/^void Window::vPopupErrorV(const char * _csFormat, va_list _args)$/;"	f	class:VBA::Window
vRemoveAllCheats	src/gtk/gameboyadvancecheatlist.cpp	/^void GameBoyAdvanceCheatListDialog::vRemoveAllCheats() {$/;"	f	class:VBA::GameBoyAdvanceCheatListDialog
vRemoveAllCheats	src/gtk/gameboycheatlist.cpp	/^void GameBoyCheatListDialog::vRemoveAllCheats()$/;"	f	class:VBA::GameBoyCheatListDialog
vRemoveCheat	src/gtk/gameboyadvancecheatlist.cpp	/^void GameBoyAdvanceCheatListDialog::vRemoveCheat(int index) {$/;"	f	class:VBA::GameBoyAdvanceCheatListDialog
vRemoveCheat	src/gtk/gameboycheatlist.cpp	/^void GameBoyCheatListDialog::vRemoveCheat(int index)$/;"	f	class:VBA::GameBoyCheatListDialog
vRemoveKey	src/gtk/configfile.cpp	/^void Section::vRemoveKey(const string & _rsKey)$/;"	f	class:VBA::Config::Section
vRemoveSection	src/gtk/configfile.cpp	/^void File::vRemoveSection(const string & _rsName)$/;"	f	class:VBA::Config::File
vSDLPollEvents	src/gtk/window.cpp	/^void Window::vSDLPollEvents()$/;"	f	class:VBA::Window
vSave	src/gtk/configfile.cpp	/^void File::vSave(const string & _rsFile)$/;"	f	class:VBA::Config::File
vSaveBattery	src/gtk/window.cpp	/^void Window::vSaveBattery()$/;"	f	class:VBA::Window
vSaveCheats	src/gtk/window.cpp	/^void Window::vSaveCheats()$/;"	f	class:VBA::Window
vSaveConfig	src/gtk/window.cpp	/^void Window::vSaveConfig(const std::string & _rsFile)$/;"	f	class:VBA::Window
vSaveJoypadsToConfig	src/gtk/window.cpp	/^void Window::vSaveJoypadsToConfig()$/;"	f	class:VBA::Window
vSetConfig	src/gtk/displayconfig.cpp	/^void DisplayConfigDialog::vSetConfig(Config::Section * _poConfig, VBA::Window * _poWindow)$/;"	f	class:VBA::DisplayConfigDialog
vSetConfig	src/gtk/gameboyadvanceconfig.cpp	/^void GameBoyAdvanceConfigDialog::vSetConfig(Config::Section * _poConfig, VBA::Window * _poWindow)$/;"	f	class:VBA::GameBoyAdvanceConfigDialog
vSetConfig	src/gtk/gameboyconfig.cpp	/^void GameBoyConfigDialog::vSetConfig(Config::Section * _poConfig, VBA::Window * _poWindow)$/;"	f	class:VBA::GameBoyConfigDialog
vSetConfig	src/gtk/generalconfig.cpp	/^void PreferencesDialog::vSetConfig(Config::Section * _poConfig, VBA::Window * _poWindow)$/;"	f	class:VBA::PreferencesDialog
vSetConfig	src/gtk/soundconfig.cpp	/^void SoundConfigDialog::vSetConfig(Config::Section * _poConfig, VBA::Window * _poWindow)$/;"	f	class:VBA::SoundConfigDialog
vSetDefaultTitle	src/gtk/window.cpp	/^void Window::vSetDefaultTitle()$/;"	f	class:VBA::Window
vSetEnableRender	src/gtk/screenarea.cpp	/^void ScreenArea::vSetEnableRender(bool _bEnable)$/;"	f	class:VBA::ScreenArea
vSetFilter	src/gtk/screenarea.cpp	/^void ScreenArea::vSetFilter(EFilter _eFilter)$/;"	f	class:VBA::ScreenArea
vSetFilterIB	src/gtk/screenarea.cpp	/^void ScreenArea::vSetFilterIB(EFilterIB _eFilterIB)$/;"	f	class:VBA::ScreenArea
vSetKey	src/gtk/configfile.cpp	/^void Section::vSetKey(const string & _rsKey, const string & _rsValue)$/;"	f	class:VBA::Config::Section
vSetKey	src/gtk/configfile.h	/^void Section::vSetKey(const std::string & _rsKey, const T & _rValue)$/;"	f	class:VBA::Config::Section
vSetScale	src/gtk/screenarea.cpp	/^void ScreenArea::vSetScale(int _iScale)$/;"	f	class:VBA::ScreenArea
vSetSize	src/gtk/screenarea.cpp	/^void ScreenArea::vSetSize(int _iWidth, int _iHeight)$/;"	f	class:VBA::ScreenArea
vSetWindow	src/gtk/cheatedit.cpp	/^void CheatEditDialog::vSetWindow(VBA::Window * _poWindow)$/;"	f	class:VBA::CheatEditDialog
vSetWindow	src/gtk/cheatlist.cpp	/^void CheatListDialog::vSetWindow(VBA::Window * _poWindow)$/;"	f	class:VBA::CheatListDialog
vShowCursor	src/gtk/screenarea.cpp	/^void ScreenArea::vShowCursor()$/;"	f	class:VBA::ScreenArea
vShowSpeed	src/gtk/window.cpp	/^void Window::vShowSpeed(int _iSpeed)$/;"	f	class:VBA::Window
vStartCursorTimeout	src/gtk/screenarea.cpp	/^void ScreenArea::vStartCursorTimeout()$/;"	f	class:VBA::ScreenArea
vStartEmu	src/gtk/window.cpp	/^void Window::vStartEmu()$/;"	f	class:VBA::Window
vState	src/win32/XAudio2.cpp	/^	XAUDIO2_VOICE_STATE     vState;$/;"	m	class:XAudio2_Output	file:
vState	src/wx/xaudio2.cpp	/^	XAUDIO2_VOICE_STATE     vState;$/;"	m	class:XAudio2_Output	file:
vStopCursorTimeout	src/gtk/screenarea.cpp	/^void ScreenArea::vStopCursorTimeout()$/;"	f	class:VBA::ScreenArea
vStopEmu	src/gtk/window.cpp	/^void Window::vStopEmu()$/;"	f	class:VBA::Window
vToggleCheat	src/gtk/gameboyadvancecheatlist.cpp	/^void GameBoyAdvanceCheatListDialog::vToggleCheat(int index, bool enable) {$/;"	f	class:VBA::GameBoyAdvanceCheatListDialog
vToggleCheat	src/gtk/gameboycheatlist.cpp	/^void GameBoyCheatListDialog::vToggleCheat(int index, bool enable) {$/;"	f	class:VBA::GameBoyCheatListDialog
vToggleFullscreen	src/gtk/window.cpp	/^void Window::vToggleFullscreen()$/;"	f	class:VBA::Window
vTokenize	src/gtk/tools.cpp	/^void vTokenize(Glib::ustring source, std::vector<Glib::ustring>& tokens)$/;"	f	namespace:VBA
vUnInitSystem	src/gtk/window.cpp	/^void Window::vUnInitSystem()$/;"	f	class:VBA::Window
vUpdateEntries	src/gtk/joypadconfig.cpp	/^void JoypadConfigDialog::vUpdateEntries()$/;"	f	class:VBA::JoypadConfigDialog
vUpdateGameSlots	src/gtk/window.cpp	/^void Window::vUpdateGameSlots()$/;"	f	class:VBA::Window
vUpdateList	src/gtk/gameboyadvancecheatlist.cpp	/^void GameBoyAdvanceCheatListDialog::vUpdateList(int previous)$/;"	f	class:VBA::GameBoyAdvanceCheatListDialog
vUpdateList	src/gtk/gameboycheatlist.cpp	/^void GameBoyCheatListDialog::vUpdateList(int previous)$/;"	f	class:VBA::GameBoyCheatListDialog
vUpdateScreen	src/gtk/window.cpp	/^void Window::vUpdateScreen()$/;"	f	class:VBA::Window
vUpdateSize	src/gtk/screenarea.cpp	/^void ScreenArea::vUpdateSize()$/;"	f	class:VBA::ScreenArea
vUpdateTexture	src/gtk/screenarea-opengl.cpp	/^void ScreenAreaGl::vUpdateTexture()$/;"	f	class:VBA::ScreenAreaGl
vaddr	src/gba/elf.h	/^  u32 vaddr;$/;"	m	struct:ELFProgramHeader
val	src/gba/GBA.cpp	/^   u16 val;$/;"	m	union:TileEntry	file:
val	src/gba/GBA.cpp	/^   u8 val;$/;"	m	union:u8h	file:
val	src/sdl/getopt.h	/^  int val;$/;"	m	struct:option
val	src/wx/gfxviewers.cpp	/^	wxControl *addr, *val;$/;"	m	class:Viewers::PaletteViewer	file:
val	src/wx/gfxviewers.cpp	/^	wxControl *idx, *val;$/;"	m	class:Viewers::GBPaletteViewer	file:
val	src/wx/guiinit.cpp	/^    int val;$/;"	m	class:TreeInt	file:
val	src/wx/viewers.cpp	/^	wxControl *val;$/;"	m	class:Viewers::IOViewer	file:
val	src/wx/widgets/wx/joyedit.h	/^    wxJoyKeyBinding_v *val;$/;"	m	class:wxJoyKeyValidator
val	src/wx/widgets/wx/keyedit.h	/^    wxAcceleratorEntry_v *val;$/;"	m	class:wxKeyValidator
val	src/wx/widgets/wx/wxmisc.h	/^    int val, mask, *vptr;$/;"	m	class:wxBoolIntValidator
val	src/wx/wxvbam.h	/^    int *intopt, mask, val;$/;"	m	struct:checkable_mi_t
val_hexdigits_s	src/wx/widgets/wxmisc.cpp	/^				  val_hexdigits_s);$/;"	v
val_hexdigits_s	src/wx/widgets/wxmisc.cpp	/^const wxArrayString val_hexdigits(sizeof(val_hexdigits_s)\/sizeof(val_hexdigits_s[0]),$/;"	v
val_hexdigits_s	src/wx/widgets/wxmisc.cpp	/^static const wxChar * \/* const *\/ val_hexdigits_s[] = {$/;"	v	file:
val_rb	src/wx/guiinit.cpp	/^    wxRadioButton *old_rb, *val_rb;$/;"	m	class:CheatFind_t	file:
val_s	src/wx/guiinit.cpp	/^    wxString val_s;$/;"	m	class:CheatFind_t	file:
val_sigdigits_s	src/wx/widgets/wxmisc.cpp	/^				  val_sigdigits_s);$/;"	v
val_sigdigits_s	src/wx/widgets/wxmisc.cpp	/^const wxArrayString val_sigdigits(sizeof(val_sigdigits_s)\/sizeof(val_sigdigits_s[0]),$/;"	v
val_sigdigits_s	src/wx/widgets/wxmisc.cpp	/^static const wxChar * \/* const *\/ val_sigdigits_s[] = {$/;"	v	file:
val_t	src/apu/Gb_Apu.h	/^	typedef int val_t;$/;"	t	struct:gb_apu_state_t
val_tab	fex/fex/Data_Reader.cpp	/^static const BOOST::uint8_t val_tab[6]={0,0xC0,0xE0,0xF0,0xF8,0xFC};$/;"	v	file:
val_tc	src/wx/guiinit.cpp	/^    wxTextCtrl *val_tc;$/;"	m	class:CheatFind_t	file:
val_unsdigits_s	src/wx/widgets/wxmisc.cpp	/^				  val_unsdigits_s);$/;"	v
val_unsdigits_s	src/wx/widgets/wxmisc.cpp	/^const wxArrayString val_unsdigits(sizeof(val_unsdigits_s)\/sizeof(val_unsdigits_s[0]),$/;"	v
val_unsdigits_s	src/wx/widgets/wxmisc.cpp	/^static const wxChar * \/* const *\/ val_unsdigits_s[] = {$/;"	v	file:
valid_extensions	src/libretro/libretro.h	/^   const char *valid_extensions;  \/\/ A string listing probably rom extensions the core will be able to load, separated with pipe.$/;"	m	struct:retro_system_info
valp	src/wx/guiinit.cpp	/^    wxString *valp;$/;"	m	class:IPHostValidator	file:
valsrc	src/wx/guiinit.cpp	/^    int valsrc, size, op, fmt;$/;"	m	class:CheatFind_t	file:
value	src/gb/gbCheats.h	/^  u8 value;$/;"	m	struct:gbCheat
value	src/gb/gbDis.cpp	/^  u8 value;$/;"	m	struct:__anon152	file:
value	src/gb/gbMemory.h	/^  int value;$/;"	m	struct:mapperMBC7
value	src/gba/Cheats.h	/^  u32 value;$/;"	m	struct:CheatsData
value	src/gba/elf.h	/^    u32 value;$/;"	m	union:ELFAttr::__anon39
value	src/gba/elf.h	/^  u32 value;$/;"	m	struct:ELFSymbol
value	src/gba/elf.h	/^  u32 value;$/;"	m	struct:EnumMember
value	src/gba/elf.h	/^  u32 value;$/;"	m	struct:Symbol
value	src/libretro/libretro.h	/^   const char *value;      \/\/ Value to be obtained. If key does not exist, it is set to NULL.$/;"	m	struct:retro_variable
value	src/sdl/debugger.cpp	/^  u32 value;$/;"	m	struct:breakpointInfo	file:
value	src/sdl/exprNode.h	/^  int value;$/;"	m	struct:Node
valueType	src/win32/GBACheats.h	/^  int    valueType;$/;"	m	class:GBACheatSearch
valueType	src/win32/GBCheatsDlg.h	/^  int    valueType;$/;"	m	class:GBCheatSearch
variable_desc	src/Util.h	/^} variable_desc;$/;"	t	typeref:struct:__anon58
variables	src/gba/elf.h	/^  Object *variables;$/;"	m	struct:CompileUnit
variables	src/gba/elf.h	/^  Object *variables;$/;"	m	struct:Function
vbKey	src/win32/Reg.cpp	/^static HKEY vbKey = NULL;$/;"	v	file:
vbaid	src/gba/GBALink.cpp	/^int vbaid = 0;$/;"	v
vendor	fex/7z_C/CpuArch.h	/^  UInt32 vendor[3];$/;"	m	struct:__anon35
ver	fex/7z_C/CpuArch.h	/^  UInt32 ver;$/;"	m	struct:__anon35
vers	fex/fex/Zip_Extractor.cpp	/^	byte vers [2];$/;"	m	struct:entry_t	file:
vers	fex/fex/Zip_Extractor.cpp	/^	byte vers [2];$/;"	m	struct:header_t	file:
version	src/apu/Gb_Apu.h	/^	val_t version;  \/\/ later versions just add fields to end$/;"	m	struct:gb_apu_state_t
version	src/gb/gbSound.cpp	/^	int version;$/;"	m	struct:__anon150	file:
version	src/gba/elf.h	/^  u8 version;$/;"	m	struct:ELFHeader
vfld	src/wx/guiinit.cpp	2338;"	d	file:
vid_rec	src/wx/wxvbam.h	/^    MediaRecorder snd_rec, vid_rec;$/;"	m	class:GameArea
vid_st	src/common/ffmpeg.h	/^    priv_AVStream *vid_st, *aud_st;$/;"	m	class:MediaRecorder
videoOption	src/win32/VBA.h	/^  int videoOption;$/;"	m	class:VBA
video_buf	src/common/ffmpeg.h	/^    u8 *audio_buf, *video_buf;$/;"	m	class:MediaRecorder
video_cb	src/libretro/libretro.cpp	/^static retro_video_refresh_t video_cb;$/;"	v	file:
video_scale	src/wx/opts.h	/^    int video_scale;$/;"	m	struct:opts_t
vlist	src/wx/drawing.h	/^    GLuint texid, vlist;$/;"	m	class:GLDrawingPanel
vm	src/wx/guiinit.cpp	/^    wxArrayVideoModes vm;$/;"	m	class:ScreenModeList	file:
vol	src/apu/Effects_Buffer.h	/^		fixed_t vol [stereo];$/;"	m	struct:Effects_Buffer::buf_t
vol	src/apu/Effects_Buffer.h	/^		fixed_t vol [stereo];$/;"	m	struct:Effects_Buffer::chan_t
vol	src/apu/Effects_Buffer.h	/^		float vol; \/\/ 0.0 = silent, 0.5 = half volume, 1.0 = normal$/;"	m	struct:Effects_Buffer::pan_vol_t
vol	src/wx/guiinit.cpp	/^    wxSlider *vol, *bufs;$/;"	m	class:SoundConfig_t	file:
vol_reg	src/apu/Gb_Apu.cpp	/^unsigned const vol_reg    = 0xFF24;$/;"	v
volume	src/apu/Blip_Buffer.h	/^	void volume( double v ) { impl.volume_unit( v * (1.0 \/ (range < 0 ? -range : range)) ); }$/;"	f	class:Blip_Synth
volume	src/apu/Gb_Apu.cpp	/^void Gb_Apu::volume( double v )$/;"	f	class:Gb_Apu
volume	src/apu/Gb_Oscs.h	/^	int  volume;$/;"	m	class:Gb_Env
volume	src/win32/AudioCoreSettingsDlg.h	/^	CSliderCtrl volume;$/;"	m	class:AudioCoreSettingsDlg
volume_	src/apu/Gb_Apu.h	/^	double      volume_;$/;"	m	class:Gb_Apu
volume_unit	src/apu/Blip_Buffer.cpp	/^void Blip_Synth_::volume_unit( double new_unit )$/;"	f	class:Blip_Synth_
volume_unit	src/apu/Blip_Buffer.cpp	/^void Blip_Synth_Fast_::volume_unit( double new_unit )$/;"	f	class:Blip_Synth_Fast_
volume_unit_	src/apu/Blip_Buffer.h	/^		double volume_unit_;$/;"	m	class:Blip_Synth_
vptr	src/wx/widgets/wx/wxmisc.h	/^    bool *vptr;$/;"	m	class:wxBoolRevValidator
vptr	src/wx/widgets/wx/wxmisc.h	/^    int val, mask, *vptr;$/;"	m	class:wxBoolIntValidator
vptr	src/wx/widgets/wx/wxmisc.h	/^    wxString *vptr;$/;"	m	class:wxFileDirPickerValidator
vram	src/gba/Globals.cpp	/^u8 *vram = 0;$/;"	v
vsync	src/win32/VBA.h	/^  bool vsync;$/;"	m	class:VBA
vsync	src/wx/opts.h	/^    bool vsync;$/;"	m	struct:opts_t
w	src/win32/BitmapControl.h	/^  int w;$/;"	m	class:BitmapControl
w	src/win32/GBMapView.h	/^  int w;$/;"	m	class:GBMapView
w	src/win32/GBOamView.h	/^  int w;$/;"	m	class:GBOamView
w	src/win32/GBTileView.h	/^  int w;$/;"	m	class:GBTileView
w	src/win32/MapView.h	/^  int w;$/;"	m	class:MapView
w	src/win32/OamView.h	/^  int w;$/;"	m	class:OamView
w	src/win32/PaletteViewControl.h	/^  int w;$/;"	m	class:PaletteViewControl
w	src/win32/TileView.h	/^  int w;$/;"	m	class:TileView
w1	src/filters/hq/asm/hq3x_16.asm	/^w1        equ 24$/;"	d
w1	src/filters/hq/asm/hq3x_32.asm	/^w1        equ 24$/;"	d
w1	src/filters/hq/asm/hq4x_16.asm	/^w1        equ 24$/;"	d
w1	src/filters/hq/asm/hq4x_32.asm	/^w1        equ 24$/;"	d
w2	src/filters/hq/asm/hq3x_16.asm	/^w2        equ 28$/;"	d
w2	src/filters/hq/asm/hq3x_32.asm	/^w2        equ 28$/;"	d
w2	src/filters/hq/asm/hq4x_16.asm	/^w2        equ 28$/;"	d
w2	src/filters/hq/asm/hq4x_32.asm	/^w2        equ 28$/;"	d
w3	src/filters/hq/asm/hq3x_16.asm	/^w3        equ 32$/;"	d
w3	src/filters/hq/asm/hq3x_32.asm	/^w3        equ 32$/;"	d
w3	src/filters/hq/asm/hq4x_16.asm	/^w3        equ 32$/;"	d
w3	src/filters/hq/asm/hq4x_32.asm	/^w3        equ 32$/;"	d
w4	src/filters/hq/asm/hq3x_16.asm	/^w4        equ 36$/;"	d
w4	src/filters/hq/asm/hq3x_32.asm	/^w4        equ 36$/;"	d
w4	src/filters/hq/asm/hq4x_16.asm	/^w4        equ 36$/;"	d
w4	src/filters/hq/asm/hq4x_32.asm	/^w4        equ 36$/;"	d
w5	src/filters/hq/asm/hq3x_16.asm	/^w5        equ 40$/;"	d
w5	src/filters/hq/asm/hq3x_32.asm	/^w5        equ 40$/;"	d
w5	src/filters/hq/asm/hq4x_16.asm	/^w5        equ 40$/;"	d
w5	src/filters/hq/asm/hq4x_32.asm	/^w5        equ 40$/;"	d
w6	src/filters/hq/asm/hq3x_16.asm	/^w6        equ 44$/;"	d
w6	src/filters/hq/asm/hq3x_32.asm	/^w6        equ 44$/;"	d
w6	src/filters/hq/asm/hq4x_16.asm	/^w6        equ 44$/;"	d
w6	src/filters/hq/asm/hq4x_32.asm	/^w6        equ 44$/;"	d
w7	src/filters/hq/asm/hq3x_16.asm	/^w7        equ 48$/;"	d
w7	src/filters/hq/asm/hq3x_32.asm	/^w7        equ 48$/;"	d
w7	src/filters/hq/asm/hq4x_16.asm	/^w7        equ 48$/;"	d
w7	src/filters/hq/asm/hq4x_32.asm	/^w7        equ 48$/;"	d
w8	src/filters/hq/asm/hq3x_16.asm	/^w8        equ 52$/;"	d
w8	src/filters/hq/asm/hq3x_32.asm	/^w8        equ 52$/;"	d
w8	src/filters/hq/asm/hq4x_16.asm	/^w8        equ 52$/;"	d
w8	src/filters/hq/asm/hq4x_32.asm	/^w8        equ 52$/;"	d
w9	src/filters/hq/asm/hq3x_16.asm	/^w9        equ 56$/;"	d
w9	src/filters/hq/asm/hq3x_32.asm	/^w9        equ 56$/;"	d
w9	src/filters/hq/asm/hq4x_16.asm	/^w9        equ 56$/;"	d
w9	src/filters/hq/asm/hq4x_32.asm	/^w9        equ 56$/;"	d
wKey	src/win32/CmdAccelOb.h	/^  WORD wKey;$/;"	m	struct:tagMAPVIRTKEYS
wasPaused	src/sdl/SDL.cpp	/^bool wasPaused = false;$/;"	v
wasPaused	src/win32/VBA.h	/^  bool wasPaused;$/;"	m	class:VBA
was_paused	src/wx/wxvbam.h	/^    bool was_paused;$/;"	m	class:GameArea
wave	src/apu/Gb_Apu.h	/^	Gb_Wave         wave;$/;"	m	class:Gb_Apu
wave_bank	src/apu/Gb_Oscs.h	/^	BOOST::uint8_t* wave_bank() const { return &wave_ram [(~regs [0] & bank40_mask) >> 2 & agb_mask]; }$/;"	f	class:Gb_Wave
wave_buf	src/apu/Gb_Apu.h	/^	val_t wave_buf;$/;"	m	struct:gb_apu_state_t
wave_ram	src/apu/Gb_Apu.cpp	/^unsigned const wave_ram   = 0xFF30;$/;"	v
wave_ram	src/apu/Gb_Oscs.h	/^	BOOST::uint8_t* wave_ram;   \/\/ 32 bytes (64 nybbles), stored in APU$/;"	m	class:Gb_Wave
wave_type	src/apu/Multi_Buffer.h	/^	enum { wave_type = 0x100, noise_type = 0x200, mixed_type = wave_type | noise_type };$/;"	e	enum:Multi_Buffer::__anon148
wfx	src/win32/DirectSound.cpp	/^	WAVEFORMATEX         wfx;          \/\/ Primary buffer wave format$/;"	m	class:DirectSound	file:
wfx	src/wx/dsound.cpp	/^	WAVEFORMATEX         wfx;          \/\/ Primary buffer wave format$/;"	m	class:DirectSound	file:
which	src/gba/Sound.cpp	/^	int     which;$/;"	m	class:Gba_Pcm_Fifo	file:
which	src/win32/GBColorDlg.h	/^  int    which;$/;"	m	class:GBColorDlg
which	src/win32/Joypad.h	/^  int which;$/;"	m	class:JoypadConfig
width	src/apu/Blip_Buffer.h	/^		int const width;$/;"	m	class:Blip_Synth_
width	src/filters/2xSaImmx.asm	/^width         equ 20$/;"	d
width	src/win32/Direct3D.cpp	/^	int width;$/;"	m	struct:PFTHREAD_DATA	file:
width	src/win32/Direct3D.cpp	/^	unsigned int          width, height;$/;"	m	class:Direct3DDisplay	file:
width	src/win32/Display.h	/^	  unsigned int width;$/;"	m	struct:IDisplay::VIDEO_MODE
width	src/win32/OpenGL.cpp	/^	int width,height;$/;"	m	class:OpenGLDisplay	file:
width	src/wx/panel.cpp	/^    int width, height, scale;$/;"	m	class:FilterThread	file:
width	src/wx/wxvbam.h	/^    int width, height, scale;$/;"	m	class:DrawingPanel
winAccelAddCommands	src/win32/Commands.cpp	/^void winAccelAddCommands(CAcceleratorManager& mgr)$/;"	f
winAccelCommands	src/win32/Commands.cpp	/^} winAccelCommands[] = {$/;"	v	typeref:struct:__anon87
winAccelGetID	src/win32/Commands.cpp	/^bool winAccelGetID(const char *command, WORD& id)$/;"	f
winAccelMgr	src/win32/VBA.h	/^  CAcceleratorManager winAccelMgr;$/;"	m	class:VBA
winAccelStrings	src/win32/Commands.cpp	/^static CMapStringToWord winAccelStrings;$/;"	v	file:
winAddUpdateListener	src/win32/VBA.cpp	/^void VBA::winAddUpdateListener(IUpdateListener *l)$/;"	f	class:VBA
winFlashSize	src/win32/VBA.h	/^  int winFlashSize;$/;"	m	class:VBA
winGBARomInfoCompanies	src/win32/RomInfo.cpp	/^static WinGBACompanyName winGBARomInfoCompanies[] = {$/;"	v	file:
winGBARomInfoFindMakerCode	src/win32/RomInfo.cpp	/^static LPCTSTR winGBARomInfoFindMakerCode(LPCTSTR code)$/;"	f	file:
winGbBorderOn	src/win32/VBA.h	/^  int winGbBorderOn;$/;"	m	class:VBA
winGbCheatAddVerifyGg	src/win32/GBCheatsDlg.cpp	/^static bool winGbCheatAddVerifyGg(const char *code, const char *desc)$/;"	f	file:
winGbCheatAddVerifyGs	src/win32/GBCheatsDlg.cpp	/^static bool winGbCheatAddVerifyGs(const char *code, const char *desc)$/;"	f	file:
winGbPrinterEnabled	src/win32/VBA.h	/^  bool winGbPrinterEnabled;$/;"	m	class:VBA
winLoadCheatList	src/win32/MainWnd.cpp	/^void MainWnd::winLoadCheatList(const char *name)$/;"	f	class:MainWnd
winLoadCheatListDefault	src/win32/MainWnd.cpp	/^void MainWnd::winLoadCheatListDefault()$/;"	f	class:MainWnd
winLoadFilter	src/win32/MainWnd.cpp	/^CString MainWnd::winLoadFilter(UINT id)$/;"	f	class:MainWnd
winLoadFilter	src/win32/VBA.cpp	/^CString VBA::winLoadFilter(UINT id)$/;"	f	class:VBA
winLoadLanguage	src/win32/VBA.cpp	/^HINSTANCE VBA::winLoadLanguage(const char *name)$/;"	f	class:VBA
winMouseOn	src/win32/MainWnd.cpp	/^void MainWnd::winMouseOn()$/;"	f	class:MainWnd
winOutput	src/win32/VBA.cpp	/^void winOutput(const char *s, u32 addr)$/;"	f
winPauseNextFrame	src/win32/VBA.h	/^  bool winPauseNextFrame;$/;"	m	class:VBA
winReadKey	src/win32/DirectInput.cpp	/^void winReadKey(const char *name, KeyList& Keys)$/;"	f
winReadKey	src/win32/DirectInput.cpp	/^void winReadKey(const char *name, int num, KeyList& Keys)$/;"	f
winReadKeys	src/win32/DirectInput.cpp	/^void winReadKeys()$/;"	f
winRemoveUpdateListener	src/win32/VBA.cpp	/^void VBA::winRemoveUpdateListener(IUpdateListener *l)$/;"	f	class:VBA
winResDialogBox	src/win32/WinResUtil.cpp	/^int winResDialogBox(LPCTSTR boxName,$/;"	f
winResGetInstance	src/win32/WinResUtil.cpp	/^static HINSTANCE winResGetInstance(LPCTSTR resType, LPCTSTR resName)$/;"	f	file:
winResGetResource	src/win32/WinResUtil.cpp	/^UCHAR *winResGetResource(LPCTSTR resType, LPCTSTR resName)$/;"	f
winResLoadMenu	src/win32/WinResUtil.cpp	/^HMENU winResLoadMenu(LPCTSTR menuName)$/;"	f
winResLoadString	src/win32/WinResUtil.cpp	/^CString winResLoadString(UINT id)$/;"	f
winRtcEnable	src/win32/VBA.h	/^  bool winRtcEnable;$/;"	m	class:VBA
winSaveCheatList	src/win32/MainWnd.cpp	/^void MainWnd::winSaveCheatList(const char *name)$/;"	f	class:MainWnd
winSaveCheatListDefault	src/win32/MainWnd.cpp	/^void MainWnd::winSaveCheatListDefault()$/;"	f	class:MainWnd
winSaveKey	src/win32/DirectInput.cpp	/^static void winSaveKey(char *name, int num, KeyList& value)$/;"	f	file:
winSaveKey	src/win32/DirectInput.cpp	/^void winSaveKey(char *name, KeyList& value)$/;"	f
winSaveKeys	src/win32/DirectInput.cpp	/^void winSaveKeys()$/;"	f
winSaveType	src/win32/VBA.h	/^  int winSaveType;$/;"	m	class:VBA
winSetLanguageOption	src/win32/VBA.cpp	/^void VBA::winSetLanguageOption(int option, bool force)$/;"	f	class:VBA
winSignal	src/win32/VBA.cpp	/^void winSignal(int, int)$/;"	f
windowOn	src/gba/GBA.cpp	/^bool windowOn = false;$/;"	v
windowPositionX	src/win32/VBA.h	/^  int windowPositionX;$/;"	m	class:VBA
windowPositionY	src/win32/VBA.h	/^  int windowPositionY;$/;"	m	class:VBA
winlog	src/System.h	75;"	d
winlog	src/win32/OpenAL.cpp	30;"	d	file:
winlog	src/win32/VBA.cpp	/^void winlog(const char *msg, ...)$/;"	f
winlog	src/wx/openal.cpp	27;"	d	file:
winlog	src/wx/openal.cpp	29;"	d	file:
winout	src/win32/VBA.h	/^  FILE *winout;$/;"	m	class:VBA
wname	fex/fex/File_Extractor.h	/^	const wchar_t* wname() const        { return wname_; }$/;"	f	struct:fex_t
wname_	fex/fex/File_Extractor.h	/^	const wchar_t* wname_;$/;"	m	struct:fex_t
wndClass	src/win32/VBA.h	/^  CString wndClass;$/;"	m	class:VBA
words	src/wx/viewsupt.h	/^	wxArrayInt words;$/;"	m	class:Viewers::MemView
workRAM	src/gba/Globals.cpp	/^u8 *workRAM = 0;$/;"	v
wpos	src/common/RingBuffer.h	/^	std::size_t wpos;$/;"	m	class:RingBuffer
write	src/apu/Gb_Oscs.h	/^inline void Gb_Wave::write( unsigned addr, int data )$/;"	f	class:Gb_Wave
write	src/common/RingBuffer.h	/^void RingBuffer<T>::write(const T *in, std::size_t num) {$/;"	f	class:RingBuffer
write	src/common/SoundSDL.cpp	/^void SoundSDL::write(u16 * finalWave, int length)$/;"	f	class:SoundSDL
write	src/gba/remote.cpp	25;"	d	file:
write	src/libretro/SoundRetro.cpp	/^void SoundRetro::write(u16 * finalWave, int length)$/;"	f	class:SoundRetro
write	src/win32/DirectSound.cpp	/^void DirectSound::write(u16 * finalWave, int length)$/;"	f	class:DirectSound
write	src/win32/IOViewerRegs.h	/^  u16 write;$/;"	m	struct:IOData
write	src/win32/OpenAL.cpp	/^void OpenAL::write(u16 * finalWave, int length)$/;"	f	class:OpenAL
write	src/win32/XAudio2.cpp	/^void XAudio2_Output::write(u16 * finalWave, int length)$/;"	f	class:XAudio2_Output
write	src/wx/dsound.cpp	/^void DirectSound::write(u16 * finalWave, int length)$/;"	f	class:DirectSound
write	src/wx/ioregs.h	/^  u16 write;$/;"	m	struct:IOData
write	src/wx/openal.cpp	/^void OpenAL::write(u16 * finalWave, int length)$/;"	f	class:OpenAL
write	src/wx/xaudio2.cpp	/^void XAudio2_Output::write(u16 * finalWave, int length)$/;"	f	class:XAudio2_Output
writeBatteryFile	src/win32/MainWnd.cpp	/^void MainWnd::writeBatteryFile()$/;"	f	class:MainWnd
writeEnable	src/gb/gbMemory.h	/^  int writeEnable;$/;"	m	struct:mapperMBC7
writeIndex	src/gba/Sound.cpp	/^	int  writeIndex;$/;"	m	class:Gba_Pcm_Fifo	file:
writeSaveGame	src/win32/MainWnd.cpp	/^bool MainWnd::writeSaveGame(const char *name)$/;"	f	class:MainWnd
write_SGCNT0_H	src/gba/Sound.cpp	/^static void write_SGCNT0_H( int data )$/;"	f	file:
write_control	src/gba/Sound.cpp	/^void Gba_Pcm_Fifo::write_control( int data )$/;"	f	class:Gba_Pcm_Fifo
write_fifo	src/gba/Sound.cpp	/^void Gba_Pcm_Fifo::write_fifo( int data )$/;"	f	class:Gba_Pcm_Fifo
write_osc	src/apu/Gb_Oscs.cpp	/^void Gb_Apu::write_osc( int index, int reg, int old_data, int data )$/;"	f	class:Gb_Apu
write_register	src/apu/Gb_Apu.cpp	/^void Gb_Apu::write_register( blip_time_t time, unsigned addr, int data )$/;"	f	class:Gb_Apu
write_register	src/apu/Gb_Oscs.cpp	/^bool Gb_Env::write_register( int frame_phase, int reg, int old, int data )$/;"	f	class:Gb_Env
write_register	src/apu/Gb_Oscs.cpp	/^bool Gb_Square::write_register( int frame_phase, int reg, int old_data, int data )$/;"	f	class:Gb_Square
write_register	src/apu/Gb_Oscs.cpp	/^inline void Gb_Noise::write_register( int frame_phase, int reg, int old_data, int data )$/;"	f	class:Gb_Noise
write_register	src/apu/Gb_Oscs.cpp	/^inline void Gb_Sweep_Square::write_register( int frame_phase, int reg, int old_data, int data )$/;"	f	class:Gb_Sweep_Square
write_register	src/apu/Gb_Oscs.cpp	/^inline void Gb_Wave::write_register( int frame_phase, int reg, int old_data, int data )$/;"	f	class:Gb_Wave
write_trig	src/apu/Gb_Oscs.cpp	/^int Gb_Osc::write_trig( int frame_phase, int max_len, int old_data )$/;"	f	class:Gb_Osc
writeaddr	src/wx/viewsupt.h	/^	u32 writeaddr, writeval;$/;"	m	class:Viewers::MemView
writeval	src/wx/viewsupt.h	/^	u32 writeaddr, writeval;$/;"	m	class:Viewers::MemView
wxAcceleratorEntry_v	src/wx/widgets/wx/keyedit.h	/^typedef std::vector<wxAcceleratorEntry> wxAcceleratorEntry_v;$/;"	t
wxBoolEnHandler	src/wx/widgets/wx/wxmisc.h	/^class wxBoolEnHandler : public wxEvtHandler$/;"	c
wxBoolEnValidator	src/wx/widgets/wx/wxmisc.h	/^    wxBoolEnValidator(bool *vptr) : wxGenericValidator(vptr) {}$/;"	f	class:wxBoolEnValidator
wxBoolEnValidator	src/wx/widgets/wx/wxmisc.h	/^    wxBoolEnValidator(bool *vptr, wxWindow_v &cnt, std::vector<bool>rev = std::vector<bool>()) :$/;"	f	class:wxBoolEnValidator
wxBoolEnValidator	src/wx/widgets/wx/wxmisc.h	/^    wxBoolEnValidator(const wxBoolEnValidator &v) : wxGenericValidator(v),$/;"	f	class:wxBoolEnValidator
wxBoolEnValidator	src/wx/widgets/wx/wxmisc.h	/^class wxBoolEnValidator : public wxGenericValidator$/;"	c
wxBoolIntEnValidator	src/wx/widgets/wx/wxmisc.h	/^    wxBoolIntEnValidator(const wxBoolIntEnValidator &v) :$/;"	f	class:wxBoolIntEnValidator
wxBoolIntEnValidator	src/wx/widgets/wx/wxmisc.h	/^    wxBoolIntEnValidator(int *vptr, int val, int mask = ~0) :$/;"	f	class:wxBoolIntEnValidator
wxBoolIntEnValidator	src/wx/widgets/wx/wxmisc.h	/^    wxBoolIntEnValidator(int *vptr, int val, int mask, wxWindow_v &cnt,$/;"	f	class:wxBoolIntEnValidator
wxBoolIntEnValidator	src/wx/widgets/wx/wxmisc.h	/^class wxBoolIntEnValidator : public wxBoolIntValidator$/;"	c
wxBoolIntValidator	src/wx/widgets/wx/wxmisc.h	/^    wxBoolIntValidator(const wxBoolIntValidator &v) : wxValidator(),$/;"	f	class:wxBoolIntValidator
wxBoolIntValidator	src/wx/widgets/wx/wxmisc.h	/^    wxBoolIntValidator(int *_vptr, int _val, int _mask = ~0) : wxValidator(),$/;"	f	class:wxBoolIntValidator
wxBoolIntValidator	src/wx/widgets/wx/wxmisc.h	/^class wxBoolIntValidator : public wxValidator$/;"	c
wxBoolRevEnValidator	src/wx/widgets/wx/wxmisc.h	/^    wxBoolRevEnValidator(bool *vptr) : wxBoolRevValidator(vptr) {}$/;"	f	class:wxBoolRevEnValidator
wxBoolRevEnValidator	src/wx/widgets/wx/wxmisc.h	/^    wxBoolRevEnValidator(bool *vptr, wxWindow_v &cnt, std::vector<bool>rev = std::vector<bool>()) :$/;"	f	class:wxBoolRevEnValidator
wxBoolRevEnValidator	src/wx/widgets/wx/wxmisc.h	/^    wxBoolRevEnValidator(const wxBoolRevEnValidator &v) : wxBoolRevValidator(v),$/;"	f	class:wxBoolRevEnValidator
wxBoolRevEnValidator	src/wx/widgets/wx/wxmisc.h	/^class wxBoolRevEnValidator : public wxBoolRevValidator$/;"	c
wxBoolRevValidator	src/wx/widgets/wx/wxmisc.h	/^    wxBoolRevValidator(bool *_vptr) : wxValidator(), vptr(_vptr) {}$/;"	f	class:wxBoolRevValidator
wxBoolRevValidator	src/wx/widgets/wx/wxmisc.h	/^    wxBoolRevValidator(const wxBoolRevValidator &v) : wxValidator(), vptr(v.vptr) {}$/;"	f	class:wxBoolRevValidator
wxBoolRevValidator	src/wx/widgets/wx/wxmisc.h	/^class wxBoolRevValidator : public wxValidator$/;"	c
wxCBBoolEnHandlerConnect	src/wx/widgets/wx/wxmisc.h	179;"	d
wxCLC_CHECKED_IMGIDX	src/wx/widgets/wx/checkedlistctrl.h	25;"	d
wxCLC_CHECK_WHEN_SELECTING	src/wx/widgets/wx/checkedlistctrl.h	35;"	d
wxCLC_DISABLED_CHECKED_IMGIDX	src/wx/widgets/wx/checkedlistctrl.h	27;"	d
wxCLC_DISABLED_UNCHECKED_IMGIDX	src/wx/widgets/wx/checkedlistctrl.h	26;"	d
wxCLC_UNCHECKED_IMGIDX	src/wx/widgets/wx/checkedlistctrl.h	24;"	d
wxCheckedListCtrl	src/wx/widgets/wx/checkedlistctrl.h	/^	wxCheckedListCtrl()$/;"	f	class:wxCheckedListCtrl
wxCheckedListCtrl	src/wx/widgets/wx/checkedlistctrl.h	/^	wxCheckedListCtrl(wxWindow *parent, wxWindowID id = -1, $/;"	f	class:wxCheckedListCtrl
wxCheckedListCtrl	src/wx/widgets/wx/checkedlistctrl.h	/^class WXDLLIMPEXP_WEBUPDATE wxCheckedListCtrl : public wxListCtrl$/;"	c
wxColorValidator	src/wx/widgets/wx/wxmisc.h	/^    wxColorValidator(const wxColorValidator &v) : wxValidator(),$/;"	f	class:wxColorValidator
wxColorValidator	src/wx/widgets/wx/wxmisc.h	/^    wxColorValidator(uint16_t *vptr) : wxValidator(), ptr16(vptr), ptr32(0) {}$/;"	f	class:wxColorValidator
wxColorValidator	src/wx/widgets/wx/wxmisc.h	/^    wxColorValidator(uint32_t *vptr) : wxValidator(), ptr32(vptr), ptr16(0) {}$/;"	f	class:wxColorValidator
wxColorValidator	src/wx/widgets/wx/wxmisc.h	/^class wxColorValidator : public wxValidator$/;"	c
wxEVT_COMMAND_LIST_ITEM_CHECKED	src/wx/widgets/checkedlistctrl.cpp	/^DEFINE_EVENT_TYPE(wxEVT_COMMAND_LIST_ITEM_CHECKED);$/;"	v
wxEVT_COMMAND_LIST_ITEM_UNCHECKED	src/wx/widgets/checkedlistctrl.cpp	/^DEFINE_EVENT_TYPE(wxEVT_COMMAND_LIST_ITEM_UNCHECKED);$/;"	v
wxFarRadio	src/wx/widgets/wx/wxmisc.h	/^class wxFarRadio : public wxCheckBox$/;"	c
wxFarRadio	src/wx/widgets/wxmisc.cpp	/^wxFarRadio::wxFarRadio()$/;"	f	class:wxFarRadio
wxFileDirPickerValidator	src/wx/widgets/wx/wxmisc.h	/^    wxFileDirPickerValidator(const wxFileDirPickerValidator &v) : wxValidator(),$/;"	f	class:wxFileDirPickerValidator
wxFileDirPickerValidator	src/wx/widgets/wx/wxmisc.h	/^    wxFileDirPickerValidator(wxString *_vptr) : wxValidator(), vptr(_vptr) {}$/;"	f	class:wxFileDirPickerValidator
wxFileDirPickerValidator	src/wx/widgets/wx/wxmisc.h	/^class wxFileDirPickerValidator : public wxValidator$/;"	c
wxID_FILE10	src/wx/wxhead.h	113;"	d
wxJoyKeyBinding	src/wx/widgets/wx/joyedit.h	/^typedef struct wxJoyKeyBinding {$/;"	s
wxJoyKeyBinding	src/wx/widgets/wx/joyedit.h	/^} wxJoyKeyBinding;$/;"	t	typeref:struct:wxJoyKeyBinding
wxJoyKeyBinding_v	src/wx/widgets/wx/joyedit.h	/^typedef std::vector<wxJoyKeyBinding> wxJoyKeyBinding_v;$/;"	t
wxJoyKeyTextCtrl	src/wx/widgets/wx/joyedit.h	/^    wxJoyKeyTextCtrl() : wxKeyTextCtrl() {}$/;"	f	class:wxJoyKeyTextCtrl
wxJoyKeyTextCtrl	src/wx/widgets/wx/joyedit.h	/^class wxJoyKeyTextCtrl : public wxKeyTextCtrl$/;"	c
wxJoyKeyValidator	src/wx/widgets/wx/joyedit.h	/^    wxJoyKeyValidator(const wxJoyKeyValidator &v) : wxValidator(), val(v.val) {}$/;"	f	class:wxJoyKeyValidator
wxJoyKeyValidator	src/wx/widgets/wx/joyedit.h	/^    wxJoyKeyValidator(wxJoyKeyBinding_v *v) : wxValidator(), val(v) {}$/;"	f	class:wxJoyKeyValidator
wxJoyKeyValidator	src/wx/widgets/wx/joyedit.h	/^class wxJoyKeyValidator : public wxValidator$/;"	c
wxKeyTextCtrl	src/wx/widgets/wx/keyedit.h	/^    wxKeyTextCtrl() : wxTextCtrl(), clearable(true), multikey(wxT(',')),$/;"	f	class:wxKeyTextCtrl
wxKeyTextCtrl	src/wx/widgets/wx/keyedit.h	/^class wxKeyTextCtrl : public wxTextCtrl$/;"	c
wxKeyValidator	src/wx/widgets/wx/keyedit.h	/^    wxKeyValidator(const wxKeyValidator &v) : wxValidator(), val(v.val) {}$/;"	f	class:wxKeyValidator
wxKeyValidator	src/wx/widgets/wx/keyedit.h	/^    wxKeyValidator(wxAcceleratorEntry_v *v) : wxValidator(), val(v) {}$/;"	f	class:wxKeyValidator
wxKeyValidator	src/wx/widgets/wx/keyedit.h	/^class wxKeyValidator : public wxValidator$/;"	c
wxLIST_STATE_CHECKED	src/wx/widgets/wx/checkedlistctrl.h	30;"	d
wxLIST_STATE_ENABLED	src/wx/widgets/wx/checkedlistctrl.h	31;"	d
wxRBBoolEnHandlerConnect	src/wx/widgets/wx/wxmisc.h	184;"	d
wxRBDBoolEnHandlerConnect	src/wx/widgets/wx/wxmisc.h	190;"	d
wxRBEBoolEnHandlerConnect	src/wx/widgets/wx/wxmisc.h	189;"	d
wxRE_ICASE	src/wx/widgets/joyedit.cpp	/^		     wxRE_EXTENDED|wxRE_ICASE);$/;"	v
wxRE_ICASE	src/wx/widgets/joyedit.cpp	/^static wxRegEx axre(_("Axis([0-9]+)([+-])"), wxRE_EXTENDED|wxRE_ICASE);$/;"	v
wxRE_ICASE	src/wx/widgets/joyedit.cpp	/^static wxRegEx butre(_("Button([0-9]+)"), wxRE_EXTENDED|wxRE_ICASE);$/;"	v
wxRE_ICASE	src/wx/widgets/joyedit.cpp	/^static wxRegEx joyre(_("^Joy([0-9]+)[-+]"), wxRE_EXTENDED|wxRE_ICASE);$/;"	v
wxSDLJoy	src/wx/widgets/sdljoy.cpp	/^wxSDLJoy::wxSDLJoy(bool analog) : wxTimer(), digital(!analog),$/;"	f	class:wxSDLJoy
wxSDLJoy	src/wx/widgets/wx/sdljoy.h	/^class wxSDLJoy : public wxTimer$/;"	c
wxSDLJoyEvent	src/wx/widgets/wx/sdljoy.h	/^    wxSDLJoyEvent(wxEventType commandType = wxEVT_NULL, int id = 0) :$/;"	f	class:wxSDLJoyEvent
wxSDLJoyEvent	src/wx/widgets/wx/sdljoy.h	/^class wxSDLJoyEvent : public wxCommandEvent$/;"	c
wxSDLJoyEventFunction	src/wx/widgets/wx/sdljoy.h	/^typedef void (wxEvtHandler::*wxSDLJoyEventFunction)(wxSDLJoyEvent &);$/;"	t
wxSDLJoyState	src/wx/widgets/sdljoy.cpp	/^struct wxSDLJoyState {$/;"	s	file:
wxSDLJoyState_t	src/wx/widgets/wx/sdljoy.h	/^typedef struct wxSDLJoyState wxSDLJoyState_t;$/;"	t	typeref:struct:wxSDLJoyState
wxTRANSLATE	src/wx/wxhead.h	55;"	d
wxTRANSLATE	src/wx/wxhead.h	56;"	d
wxUSE_CHECKEDLISTCTRL	src/wx/widgets/wx/webupdatedef.h	6;"	d
wxWindow_v	src/wx/widgets/wx/wxmisc.h	/^typedef std::vector<wxWindow *>wxWindow_v;$/;"	t
wxvbam	src/wx/guiinit.cpp	24;"	d	file:
wxvbam	src/wx/guiinit.cpp	27;"	d	file:
wxvbamApp	src/wx/wxvbam.h	/^    wxvbamApp() : wxApp(), pending_fullscreen(false) {}$/;"	f	class:wxvbamApp
wxvbamApp	src/wx/wxvbam.h	/^DECLARE_APP(wxvbamApp);$/;"	v
wxvbamApp	src/wx/wxvbam.h	/^class wxvbamApp : public wxApp$/;"	c
x	src/win32/Direct3D.cpp	/^		FLOAT x, y, z, rhw; \/\/ screen coordinates$/;"	m	struct:Direct3DDisplay::VERTEX	file:
x	src/win32/Direct3D.cpp	/^		FLOAT x, y, z, rhw;$/;"	m	struct:Direct3DDisplay::TRANSP_VERTEX	file:
x86_Convert	fex/7z_C/Bra86.c	/^SizeT x86_Convert(Byte *data, SizeT size, UInt32 ip, UInt32 *state, int encoding)$/;"	f
x86_Convert_Init	fex/7z_C/Bra.h	56;"	d
x86cpuid_CheckAndRead	fex/7z_C/CpuArch.c	/^Bool x86cpuid_CheckAndRead(Cx86cpuid *p)$/;"	f
x86cpuid_GetFamily	fex/7z_C/CpuArch.h	144;"	d
x86cpuid_GetFirm	fex/7z_C/CpuArch.c	/^int x86cpuid_GetFirm(const Cx86cpuid *p)$/;"	f
x86cpuid_GetModel	fex/7z_C/CpuArch.h	145;"	d
x86cpuid_GetStepping	fex/7z_C/CpuArch.h	146;"	d
xLateUrl	doc/ips.htm	/^   function xLateUrl(aCollection, sProp) {$/;"	f
xResolveUrl	doc/ips.htm	/^   function xResolveUrl(url) {$/;"	f
xa2BufferCount	src/win32/VBA.h	/^  UINT32 xa2BufferCount;$/;"	m	class:VBA
xa2Device	src/win32/VBA.h	/^  UINT32 xa2Device;$/;"	m	class:VBA
xa2Upmixing	src/win32/VBA.h	/^  bool xa2Upmixing;$/;"	m	class:VBA
xaud	src/win32/XAudio2.cpp	/^	IXAudio2               *xaud;$/;"	m	class:XAudio2_Output	file:
xaud	src/wx/xaudio2.cpp	/^	IXAudio2               *xaud;$/;"	m	class:XAudio2_Output	file:
xaudio2_device_changed	src/win32/XAudio2.cpp	/^void xaudio2_device_changed( XAudio2_Output * instance )$/;"	f
xaudio2_device_changed	src/wx/xaudio2.cpp	/^void xaudio2_device_changed( XAudio2_Output * instance )$/;"	f
xcounter	src/filters/hq/asm/hq3x_16.asm	/^xcounter  equ 8$/;"	d
xcounter	src/filters/hq/asm/hq3x_32.asm	/^xcounter  equ 8$/;"	d
xcounter	src/filters/hq/asm/hq4x_16.asm	/^xcounter  equ 8$/;"	d
xcounter	src/filters/hq/asm/hq4x_32.asm	/^xcounter  equ 8$/;"	d
y	src/win32/Direct3D.cpp	/^		FLOAT x, y, z, rhw; \/\/ screen coordinates$/;"	m	struct:Direct3DDisplay::VERTEX	file:
y	src/win32/Direct3D.cpp	/^		FLOAT x, y, z, rhw;$/;"	m	struct:Direct3DDisplay::TRANSP_VERTEX	file:
yy_accept	src/sdl/expr-lex.cpp	/^static yyconst flex_int16_t yy_accept[24] =$/;"	v	file:
yy_at_bol	src/sdl/expr-lex.cpp	/^	int yy_at_bol;$/;"	m	struct:yy_buffer_state	file:
yy_base	src/sdl/expr-lex.cpp	/^static yyconst flex_int16_t yy_base[25] =$/;"	v	file:
yy_bs_column	src/sdl/expr-lex.cpp	/^    int yy_bs_column; \/**< The column count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_bs_lineno	src/sdl/expr-lex.cpp	/^    int yy_bs_lineno; \/**< The line count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_buf_pos	src/sdl/expr-lex.cpp	/^	char *yy_buf_pos;		\/* current position in input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_buf_size	src/sdl/expr-lex.cpp	/^	yy_size_t yy_buf_size;$/;"	m	struct:yy_buffer_state	file:
yy_buffer_stack	src/sdl/expr-lex.cpp	/^static YY_BUFFER_STATE * yy_buffer_stack = 0; \/**< Stack as an array. *\/$/;"	v	file:
yy_buffer_stack_max	src/sdl/expr-lex.cpp	/^static size_t yy_buffer_stack_max = 0; \/**< capacity of stack. *\/$/;"	v	file:
yy_buffer_stack_top	src/sdl/expr-lex.cpp	/^static size_t yy_buffer_stack_top = 0; \/**< index of top of stack. *\/$/;"	v	file:
yy_buffer_state	src/sdl/expr-lex.cpp	/^struct yy_buffer_state$/;"	s	file:
yy_buffer_status	src/sdl/expr-lex.cpp	/^	int yy_buffer_status;$/;"	m	struct:yy_buffer_state	file:
yy_c_buf_p	src/sdl/expr-lex.cpp	/^static char *yy_c_buf_p = (char *) 0;$/;"	v	file:
yy_ch_buf	src/sdl/expr-lex.cpp	/^	char *yy_ch_buf;		\/* input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_chk	src/sdl/expr-lex.cpp	/^static yyconst flex_int16_t yy_chk[50] =$/;"	v	file:
yy_create_buffer	src/sdl/expr-lex.cpp	/^    YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )$/;"	f
yy_def	src/sdl/expr-lex.cpp	/^static yyconst flex_int16_t yy_def[25] =$/;"	v	file:
yy_delete_buffer	src/sdl/expr-lex.cpp	/^    void yy_delete_buffer (YY_BUFFER_STATE  b )$/;"	f
yy_did_buffer_switch_on_eof	src/sdl/expr-lex.cpp	/^static int yy_did_buffer_switch_on_eof;$/;"	v	file:
yy_ec	src/sdl/expr-lex.cpp	/^static yyconst flex_int32_t yy_ec[256] =$/;"	v	file:
yy_fatal_error	src/sdl/expr-lex.cpp	/^static void yy_fatal_error (yyconst char* msg )$/;"	f	file:
yy_fill_buffer	src/sdl/expr-lex.cpp	/^	int yy_fill_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_flex_debug	src/sdl/expr-lex.cpp	/^int yy_flex_debug = 0;$/;"	v
yy_flex_strlen	src/sdl/expr-lex.cpp	/^static int yy_flex_strlen (yyconst char * s )$/;"	f	file:
yy_flex_strncpy	src/sdl/expr-lex.cpp	/^static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )$/;"	f	file:
yy_flush_buffer	src/sdl/expr-lex.cpp	/^    void yy_flush_buffer (YY_BUFFER_STATE  b )$/;"	f
yy_get_next_buffer	src/sdl/expr-lex.cpp	/^static int yy_get_next_buffer (void)$/;"	f	file:
yy_get_previous_state	src/sdl/expr-lex.cpp	/^    static yy_state_type yy_get_previous_state (void)$/;"	f	file:
yy_hold_char	src/sdl/expr-lex.cpp	/^static char yy_hold_char;$/;"	v	file:
yy_init	src/sdl/expr-lex.cpp	/^static int yy_init = 0;		\/* whether we need to initialize *\/$/;"	v	file:
yy_init_buffer	src/sdl/expr-lex.cpp	/^    static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )$/;"	f	file:
yy_init_globals	src/sdl/expr-lex.cpp	/^static int yy_init_globals (void)$/;"	f	file:
yy_input_file	src/sdl/expr-lex.cpp	/^	FILE *yy_input_file;$/;"	m	struct:yy_buffer_state	file:
yy_is_interactive	src/sdl/expr-lex.cpp	/^	int yy_is_interactive;$/;"	m	struct:yy_buffer_state	file:
yy_is_our_buffer	src/sdl/expr-lex.cpp	/^	int yy_is_our_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_last_accepting_cpos	src/sdl/expr-lex.cpp	/^static char *yy_last_accepting_cpos;$/;"	v	file:
yy_last_accepting_state	src/sdl/expr-lex.cpp	/^static yy_state_type yy_last_accepting_state;$/;"	v	file:
yy_load_buffer_state	src/sdl/expr-lex.cpp	/^static void yy_load_buffer_state  (void)$/;"	f	file:
yy_meta	src/sdl/expr-lex.cpp	/^static yyconst flex_int32_t yy_meta[17] =$/;"	v	file:
yy_n_chars	src/sdl/expr-lex.cpp	/^	int yy_n_chars;$/;"	m	struct:yy_buffer_state	file:
yy_n_chars	src/sdl/expr-lex.cpp	/^static int yy_n_chars;		\/* number of characters read into yy_ch_buf *\/$/;"	v	file:
yy_new_buffer	src/sdl/expr-lex.cpp	310;"	d	file:
yy_nxt	src/sdl/expr-lex.cpp	/^	flex_int32_t yy_nxt;$/;"	m	struct:yy_trans_info	file:
yy_nxt	src/sdl/expr-lex.cpp	/^static yyconst flex_int16_t yy_nxt[50] =$/;"	v	file:
yy_reduce_print	src/sdl/expr.cpp	/^yy_reduce_print (YYSTYPE *yyvsp, int yyrule)$/;"	f	file:
yy_scan_buffer	src/sdl/expr-lex.cpp	/^YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )$/;"	f
yy_scan_bytes	src/sdl/expr-lex.cpp	/^YY_BUFFER_STATE yy_scan_bytes  (yyconst char * yybytes, int  _yybytes_len )$/;"	f
yy_scan_string	src/sdl/expr-lex.cpp	/^YY_BUFFER_STATE yy_scan_string (yyconst char * yystr )$/;"	f
yy_set_bol	src/sdl/expr-lex.cpp	322;"	d	file:
yy_set_interactive	src/sdl/expr-lex.cpp	312;"	d	file:
yy_size_t	src/sdl/expr-lex.cpp	/^typedef size_t yy_size_t;$/;"	t	file:
yy_stack_print	src/sdl/expr.cpp	/^yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)$/;"	f	file:
yy_start	src/sdl/expr-lex.cpp	/^static int yy_start = 0;	\/* start state number *\/$/;"	v	file:
yy_state_type	src/sdl/expr-lex.cpp	/^typedef int yy_state_type;$/;"	t	file:
yy_switch_to_buffer	src/sdl/expr-lex.cpp	/^    void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )$/;"	f
yy_symbol_print	src/sdl/expr.cpp	/^yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)$/;"	f	file:
yy_symbol_value_print	src/sdl/expr.cpp	/^yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)$/;"	f	file:
yy_trans_info	src/sdl/expr-lex.cpp	/^struct yy_trans_info$/;"	s	file:
yy_try_NUL_trans	src/sdl/expr-lex.cpp	/^    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )$/;"	f	file:
yy_verify	src/sdl/expr-lex.cpp	/^	flex_int32_t yy_verify;$/;"	m	struct:yy_trans_info	file:
yyalloc	src/sdl/expr-lex.cpp	/^void *yyalloc (yy_size_t  size )$/;"	f
yyalloc	src/sdl/expr.cpp	/^union yyalloc$/;"	u	file:
yychar	src/sdl/expr.cpp	/^int yychar;$/;"	v
yycheck	src/sdl/expr.cpp	/^static const yytype_int8 yycheck[] =$/;"	v	file:
yyclearin	src/sdl/expr.cpp	537;"	d	file:
yyconst	src/sdl/expr-lex.cpp	107;"	d	file:
yyconst	src/sdl/expr-lex.cpp	109;"	d	file:
yydebug	src/sdl/expr.cpp	/^int yydebug;$/;"	v
yydefact	src/sdl/expr.cpp	/^static const yytype_uint8 yydefact[] =$/;"	v	file:
yydefgoto	src/sdl/expr.cpp	/^static const yytype_int8 yydefgoto[] =$/;"	v	file:
yydestruct	src/sdl/expr.cpp	/^yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)$/;"	f	file:
yyensure_buffer_stack	src/sdl/expr-lex.cpp	/^static void yyensure_buffer_stack (void)$/;"	f	file:
yyerrok	src/sdl/expr.cpp	536;"	d	file:
yyerror	src/sdl/expr.cpp	/^int yyerror(const char *s)$/;"	f
yyfree	src/sdl/expr-lex.cpp	/^void yyfree (void * ptr )$/;"	f
yyget_debug	src/sdl/expr-lex.cpp	/^int yyget_debug  (void)$/;"	f
yyget_in	src/sdl/expr-lex.cpp	/^FILE *yyget_in  (void)$/;"	f
yyget_leng	src/sdl/expr-lex.cpp	/^int yyget_leng  (void)$/;"	f
yyget_lineno	src/sdl/expr-lex.cpp	/^int yyget_lineno  (void)$/;"	f
yyget_out	src/sdl/expr-lex.cpp	/^FILE *yyget_out  (void)$/;"	f
yyget_text	src/sdl/expr-lex.cpp	/^char *yyget_text  (void)$/;"	f
yyin	src/sdl/expr-lex.cpp	/^FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;$/;"	v
yyinput	src/sdl/expr-lex.cpp	/^    static int yyinput (void)$/;"	f	file:
yyleng	src/sdl/expr-lex.cpp	/^int yyleng;$/;"	v
yyless	src/sdl/expr-lex.cpp	1585;"	d	file:
yyless	src/sdl/expr-lex.cpp	1586;"	d	file:
yyless	src/sdl/expr-lex.cpp	168;"	d	file:
yylex_destroy	src/sdl/expr-lex.cpp	/^int yylex_destroy  (void)$/;"	f
yylineno	src/sdl/expr-lex.cpp	/^int yylineno = 1;$/;"	v
yylval	src/sdl/expr.cpp	/^YYSTYPE yylval;$/;"	v
yymore	src/sdl/expr-lex.cpp	463;"	d	file:
yynerrs	src/sdl/expr.cpp	/^int yynerrs;$/;"	v
yyout	src/sdl/expr-lex.cpp	/^FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;$/;"	v
yypact	src/sdl/expr.cpp	/^static const yytype_int8 yypact[] =$/;"	v	file:
yyparse	src/sdl/expr.cpp	/^yyparse (void *YYPARSE_PARAM)$/;"	f
yypgoto	src/sdl/expr.cpp	/^static const yytype_int8 yypgoto[] =$/;"	v	file:
yypop_buffer_state	src/sdl/expr-lex.cpp	/^void yypop_buffer_state (void)$/;"	f
yyprhs	src/sdl/expr.cpp	/^static const yytype_uint8 yyprhs[] =$/;"	v	file:
yypush_buffer_state	src/sdl/expr-lex.cpp	/^void yypush_buffer_state (YY_BUFFER_STATE new_buffer )$/;"	f
yyr1	src/sdl/expr.cpp	/^static const yytype_uint8 yyr1[] =$/;"	v	file:
yyr2	src/sdl/expr.cpp	/^static const yytype_uint8 yyr2[] =$/;"	v	file:
yyrealloc	src/sdl/expr-lex.cpp	/^void *yyrealloc  (void * ptr, yy_size_t  size )$/;"	f
yyrestart	src/sdl/expr-lex.cpp	/^    void yyrestart  (FILE * input_file )$/;"	f
yyrhs	src/sdl/expr.cpp	/^static const yytype_int8 yyrhs[] =$/;"	v	file:
yyrline	src/sdl/expr.cpp	/^static const yytype_uint8 yyrline[] =$/;"	v	file:
yyset_debug	src/sdl/expr-lex.cpp	/^void yyset_debug (int  bdebug )$/;"	f
yyset_in	src/sdl/expr-lex.cpp	/^void yyset_in (FILE *  in_str )$/;"	f
yyset_lineno	src/sdl/expr-lex.cpp	/^void yyset_lineno (int  line_number )$/;"	f
yyset_out	src/sdl/expr-lex.cpp	/^void yyset_out (FILE *  out_str )$/;"	f
yyss	src/sdl/expr.cpp	/^  yytype_int16 yyss;$/;"	m	union:yyalloc	file:
yystos	src/sdl/expr.cpp	/^static const yytype_uint8 yystos[] =$/;"	v	file:
yystpcpy	src/sdl/expr.cpp	/^yystpcpy (char *yydest, const char *yysrc)$/;"	f	file:
yystpcpy	src/sdl/expr.cpp	832;"	d	file:
yystrlen	src/sdl/expr.cpp	/^yystrlen (const char *yystr)$/;"	f	file:
yystrlen	src/sdl/expr.cpp	809;"	d	file:
yystype	src/sdl/expr.cpp	137;"	d	file:
yystype	src/sdl/expr.cpp.h	65;"	d
yysyntax_error	src/sdl/expr.cpp	/^yysyntax_error (char *yyresult, int yystate, int yychar)$/;"	f	file:
yytable	src/sdl/expr.cpp	/^static const yytype_uint8 yytable[] =$/;"	v	file:
yyterminate	src/sdl/expr-lex.cpp	617;"	d	file:
yytext	src/sdl/expr-lex.cpp	/^char *yytext;$/;"	v
yytext_ptr	src/sdl/expr-lex.cpp	350;"	d	file:
yytname	src/sdl/expr.cpp	/^static const char *const yytname[] =$/;"	v	file:
yytnamerr	src/sdl/expr.cpp	/^yytnamerr (char *yyres, const char *yystr)$/;"	f	file:
yytokentype	src/sdl/expr.cpp	/^   enum yytokentype {$/;"	g	file:
yytokentype	src/sdl/expr.cpp.h	/^   enum yytokentype {$/;"	g
yytoknum	src/sdl/expr.cpp	/^static const yytype_uint16 yytoknum[] =$/;"	v	file:
yytranslate	src/sdl/expr.cpp	/^static const yytype_uint8 yytranslate[] =$/;"	v	file:
yytype_int16	src/sdl/expr.cpp	/^typedef YYTYPE_INT16 yytype_int16;$/;"	t	file:
yytype_int16	src/sdl/expr.cpp	/^typedef short int yytype_int16;$/;"	t	file:
yytype_int8	src/sdl/expr.cpp	/^typedef YYTYPE_INT8 yytype_int8;$/;"	t	file:
yytype_int8	src/sdl/expr.cpp	/^typedef short int yytype_int8;$/;"	t	file:
yytype_int8	src/sdl/expr.cpp	/^typedef signed char yytype_int8;$/;"	t	file:
yytype_uint16	src/sdl/expr.cpp	/^typedef YYTYPE_UINT16 yytype_uint16;$/;"	t	file:
yytype_uint16	src/sdl/expr.cpp	/^typedef unsigned short int yytype_uint16;$/;"	t	file:
yytype_uint8	src/sdl/expr.cpp	/^typedef YYTYPE_UINT8 yytype_uint8;$/;"	t	file:
yytype_uint8	src/sdl/expr.cpp	/^typedef unsigned char yytype_uint8;$/;"	t	file:
yyvs	src/sdl/expr.cpp	/^  YYSTYPE yyvs;$/;"	m	union:yyalloc	file:
yywrap	src/sdl/expr-lex.cpp	336;"	d	file:
z	src/win32/Direct3D.cpp	/^		FLOAT x, y, z, rhw; \/\/ screen coordinates$/;"	m	struct:Direct3DDisplay::VERTEX	file:
z	src/win32/Direct3D.cpp	/^		FLOAT x, y, z, rhw;$/;"	m	struct:Direct3DDisplay::TRANSP_VERTEX	file:
z_eof	src/common/memgzio.c	/^    int      z_eof;   \/* set if end of input file *\/$/;"	m	struct:mem_stream	file:
z_err	src/common/memgzio.c	/^    int      z_err;   \/* error code for last stream operation *\/$/;"	m	struct:mem_stream	file:
zbuf	fex/fex/Zlib_Inflater.h	/^	z_stream_s zbuf;$/;"	m	class:Zlib_Inflater
zerolowbits	src/filters/hq/asm/hq3x_16.asm	/^zerolowbits  dd  0xF7DEF7DE$/;"	d
zerolowbits	src/filters/hq/asm/hq4x_16.asm	/^zerolowbits  dd  0xF7DEF7DE$/;"	d
zip7_alloc	fex/fex/Zip7_Extractor.cpp	/^static ISzAlloc zip7_alloc      = { SzAlloc,     SzFree     };$/;"	v	file:
zip7_alloc_temp	fex/fex/Zip7_Extractor.cpp	/^static ISzAlloc zip7_alloc_temp = { SzAllocTemp, SzFreeTemp };$/;"	v	file:
zip7_err	fex/fex/Zip7_Extractor.cpp	/^blargg_err_t Zip7_Extractor::zip7_err( int err )$/;"	f	class:Zip7_Extractor
zip7_read_	fex/fex/Zip7_Extractor.cpp	/^	static SRes zip7_read_( void* vstream, void* out, size_t* size )$/;"	f	file:
zip7_seek_	fex/fex/Zip7_Extractor.cpp	/^	static SRes zip7_seek_( void* vstream, Int64* pos, ESzSeek mode )$/;"	f	file:
zmemcpy	src/common/memgzio.c	35;"	d	file:
zombie_volume	src/apu/Gb_Oscs.cpp	/^inline void Gb_Env::zombie_volume( int old, int data )$/;"	f	class:Gb_Env
zoom	src/win32/GBTileView.h	/^  ZoomControl zoom;$/;"	m	class:GBTileView
zoom	src/win32/TileView.h	/^  ZoomControl zoom;$/;"	m	class:TileView
~AVIWrite	src/win32/AVIWrite.cpp	/^AVIWrite::~AVIWrite()$/;"	f	class:AVIWrite
~Array	src/common/Array.h	/^	~Array() { delete []a; }$/;"	f	class:Array
~AudioCoreSettingsDlg	src/win32/AudioCoreSettingsDlg.cpp	/^AudioCoreSettingsDlg::~AudioCoreSettingsDlg()$/;"	f	class:AudioCoreSettingsDlg
~BIOSDialog	src/win32/BIOSDialog.cpp	/^BIOSDialog::~BIOSDialog()$/;"	f	class:BIOSDialog
~Binary_Extractor	fex/fex/Binary_Extractor.cpp	/^Binary_Extractor::~Binary_Extractor()$/;"	f	class:Binary_Extractor
~BitmapControl	src/win32/BitmapControl.cpp	/^BitmapControl::~BitmapControl()$/;"	f	class:BitmapControl
~Blip_Buffer	src/apu/Blip_Buffer.cpp	/^Blip_Buffer::~Blip_Buffer()$/;"	f	class:Blip_Buffer
~CAcceleratorManager	src/win32/AcceleratorManager.cpp	/^CAcceleratorManager::~CAcceleratorManager()$/;"	f	class:CAcceleratorManager
~CCmdAccelOb	src/win32/CmdAccelOb.cpp	/^CCmdAccelOb::~CCmdAccelOb()$/;"	f	class:CCmdAccelOb
~CCriticalSection	src/win32/WinHelper.h	/^      inline ~CCriticalSection() { ::DeleteCriticalSection(&m_sect); }$/;"	f	class:WinHelper::CCriticalSection
~CDeferWindowPos	src/win32/WinHelper.h	/^      inline ~CDeferWindowPos() { R_VERIFY( ::EndDeferWindowPos( m_hdlDef ) ); }$/;"	f	class:WinHelper::CDeferWindowPos
~CKeyboardEdit	src/win32/KeyboardEdit.cpp	/^CKeyboardEdit::~CKeyboardEdit()$/;"	f	class:CKeyboardEdit
~CLock	src/win32/WinHelper.h	/^          inline ~CLock() { m_sect.Unlock(); }$/;"	f	class:WinHelper::CCriticalSection::CLock
~CMyTabCtrl	src/win32/LinkOptions.cpp	/^CMyTabCtrl::~CMyTabCtrl()$/;"	f	class:CMyTabCtrl
~CairoDrawingPanel	src/wx/panel.cpp	/^CairoDrawingPanel::~CairoDrawingPanel()$/;"	f	class:CairoDrawingPanel
~CheatFind_t	src/wx/guiinit.cpp	/^    ~CheatFind_t()$/;"	f	class:CheatFind_t
~ColorButton	src/win32/ColorButton.cpp	/^ColorButton::~ColorButton()$/;"	f	class:ColorButton
~ColorControl	src/win32/ColorControl.cpp	/^ColorControl::~ColorControl()$/;"	f	class:ColorControl
~Data_Reader	fex/fex/Data_Reader.h	/^	virtual ~Data_Reader() { }$/;"	f	class:Data_Reader
~Direct3DDisplay	src/win32/Direct3D.cpp	/^Direct3DDisplay::~Direct3DDisplay()$/;"	f	class:Direct3DDisplay
~DirectInput	src/win32/DirectInput.cpp	/^DirectInput::~DirectInput()$/;"	f	class:DirectInput
~DirectSound	src/win32/DirectSound.cpp	/^DirectSound::~DirectSound()$/;"	f	class:DirectSound
~DirectSound	src/wx/dsound.cpp	/^DirectSound::~DirectSound()$/;"	f	class:DirectSound
~DrawingPanel	src/wx/panel.cpp	/^DrawingPanel::~DrawingPanel()$/;"	f	class:DrawingPanel
~EditCheatCodeColumns	src/gtk/cheatedit.h	/^    ~EditCheatCodeColumns() {}$/;"	f	class:VBA::EditCheatCodeColumns
~Effects_Buffer	src/apu/Effects_Buffer.cpp	/^Effects_Buffer::~Effects_Buffer()$/;"	f	class:Effects_Buffer
~File	src/gtk/configfile.cpp	/^File::~File()$/;"	f	class:VBA::Config::File
~FileDlg	src/win32/FileDlg.cpp	/^FileDlg::~FileDlg()$/;"	f	class:FileDlg
~FullscreenSettings	src/win32/FullscreenSettings.cpp	/^FullscreenSettings::~FullscreenSettings()$/;"	f	class:FullscreenSettings
~GBACheatSearch	src/win32/GBACheats.cpp	/^GBACheatSearch::~GBACheatSearch()$/;"	f	class:GBACheatSearch
~GBASockClient	src/gba/GBASockClient.cpp	/^GBASockClient::~GBASockClient()$/;"	f	class:GBASockClient
~GBCheatSearch	src/win32/GBCheatsDlg.cpp	/^GBCheatSearch::~GBCheatSearch()$/;"	f	class:GBCheatSearch
~GBMapView	src/win32/GBMapView.cpp	/^GBMapView::~GBMapView()$/;"	f	class:GBMapView
~GBOamView	src/win32/GBOamView.cpp	/^GBOamView::~GBOamView()$/;"	f	class:GBOamView
~GBPaletteView	src/win32/GBPaletteView.cpp	/^GBPaletteView::~GBPaletteView()$/;"	f	class:GBPaletteView
~GBPrinterDlg	src/win32/GBPrinterDlg.cpp	/^GBPrinterDlg::~GBPrinterDlg()$/;"	f	class:GBPrinterDlg
~GBTileView	src/win32/GBTileView.cpp	/^GBTileView::~GBTileView()$/;"	f	class:GBTileView
~GLDrawingPanel	src/wx/panel.cpp	/^GLDrawingPanel::~GLDrawingPanel()$/;"	f	class:GLDrawingPanel
~GameArea	src/wx/panel.cpp	/^GameArea::~GameArea()$/;"	f	class:GameArea
~Gzip_Extractor	fex/fex/Gzip_Extractor.cpp	/^Gzip_Extractor::~Gzip_Extractor()$/;"	f	class:Gzip_Extractor
~Gzip_File_Reader	fex/fex/Data_Reader.cpp	/^Gzip_File_Reader::~Gzip_File_Reader()$/;"	f	class:Gzip_File_Reader
~Gzip_Reader	fex/fex/Gzip_Reader.cpp	/^Gzip_Reader::~Gzip_Reader()$/;"	f	class:Gzip_Reader
~Hyperlink	src/win32/Hyperlink.cpp	/^Hyperlink::~Hyperlink()$/;"	f	class:Hyperlink
~IDisplay	src/win32/Display.h	/^  virtual ~IDisplay() {};$/;"	f	class:IDisplay
~Input	src/win32/Input.h	/^  virtual ~Input() {};$/;"	f	class:Input
~JoybusOptions	src/win32/JoybusOptions.cpp	/^JoybusOptions::~JoybusOptions()$/;"	f	class:JoybusOptions
~JoypadConfigDialog	src/gtk/joypadconfig.cpp	/^JoypadConfigDialog::~JoypadConfigDialog()$/;"	f	class:VBA::JoypadConfigDialog
~JoypadEditControl	src/win32/Joypad.cpp	/^JoypadEditControl::~JoypadEditControl()$/;"	f	class:JoypadEditControl
~KeyNotFound	src/gtk/configfile.h	/^  virtual ~KeyNotFound() {}$/;"	f	class:VBA::Config::KeyNotFound
~ListCheatCodeColumns	src/gtk/cheatlist.h	/^    ~ListCheatCodeColumns() {}$/;"	f	class:VBA::ListCheatCodeColumns
~MainFrame	src/wx/wxvbam.cpp	/^MainFrame::~MainFrame()$/;"	f	class:MainFrame
~MainWnd	src/win32/MainWnd.cpp	/^MainWnd::~MainWnd()$/;"	f	class:MainWnd
~MapView	src/win32/MapView.cpp	/^MapView::~MapView()$/;"	f	class:MapView
~MediaRecorder	src/common/ffmpeg.cpp	/^MediaRecorder::~MediaRecorder()$/;"	f	class:MediaRecorder
~MemoryViewer	src/win32/MemoryViewer.cpp	/^MemoryViewer::~MemoryViewer()$/;"	f	class:MemoryViewer
~ModalPause	src/wx/wxvbam.h	/^    ~ModalPause() { wxGetApp().frame->StopModal(); }$/;"	f	class:ModalPause
~Mono_Buffer	src/apu/Multi_Buffer.cpp	/^Mono_Buffer::~Mono_Buffer() { }$/;"	f	class:Mono_Buffer
~Multi_Buffer	src/apu/Multi_Buffer.h	/^	virtual ~Multi_Buffer() { }$/;"	f	class:Multi_Buffer
~NotFound	src/gtk/configfile.h	/^  virtual ~NotFound() {}$/;"	f	class:VBA::Config::NotFound
~OALConfig	src/win32/OALConfig.cpp	/^OALConfig::~OALConfig()$/;"	f	class:OALConfig
~OamView	src/win32/OamView.cpp	/^OamView::~OamView()$/;"	f	class:OamView
~OpenAL	src/win32/OpenAL.cpp	/^OpenAL::~OpenAL()$/;"	f	class:OpenAL
~OpenAL	src/wx/openal.cpp	/^OpenAL::~OpenAL()$/;"	f	class:OpenAL
~OpenGLDisplay	src/win32/OpenGL.cpp	/^OpenGLDisplay::~OpenGLDisplay()$/;"	f	class:OpenGLDisplay
~PaletteView	src/win32/PaletteView.cpp	/^PaletteView::~PaletteView()$/;"	f	class:PaletteView
~PaletteViewControl	src/win32/PaletteViewControl.cpp	/^PaletteViewControl::~PaletteViewControl()$/;"	f	class:PaletteViewControl
~PrintDialog	src/wx/sys.cpp	/^PrintDialog::~PrintDialog()$/;"	f	class:PrintDialog
~Rar_Extractor	fex/fex/Rar_Extractor.cpp	/^Rar_Extractor::~Rar_Extractor()$/;"	f	class:Rar_Extractor
~ScreenArea	src/gtk/screenarea.cpp	/^ScreenArea::~ScreenArea()$/;"	f	class:VBA::ScreenArea
~SectionNotFound	src/gtk/configfile.h	/^  virtual ~SectionNotFound() {}$/;"	f	class:VBA::Config::SectionNotFound
~SoundDriver	src/common/SoundDriver.h	/^	virtual ~SoundDriver() { };$/;"	f	class:SoundDriver
~SoundRetro	src/libretro/SoundRetro.cpp	/^SoundRetro::~SoundRetro()$/;"	f	class:SoundRetro
~SoundSDL	src/common/SoundSDL.cpp	/^SoundSDL::~SoundSDL()$/;"	f	class:SoundSDL
~Std_File_Reader	fex/fex/Data_Reader.cpp	/^Std_File_Reader::~Std_File_Reader()$/;"	f	class:Std_File_Reader
~Stereo_Buffer	src/apu/Multi_Buffer.cpp	/^Stereo_Buffer::~Stereo_Buffer() { }$/;"	f	class:Stereo_Buffer
~StringTokenizer	src/win32/StringTokenizer.cpp	/^StringTokenizer::~StringTokenizer()$/;"	f	class:StringTokenizer
~TileView	src/win32/TileView.cpp	/^TileView::~TileView()$/;"	f	class:TileView
~VBA	src/win32/VBA.cpp	/^VBA::~VBA()$/;"	f	class:VBA
~Viewer	src/wx/viewsupt.h	/^	virtual ~Viewer() {}$/;"	f	class:Viewers::Viewer
~WavWriter	src/win32/WavWriter.cpp	/^WavWriter::~WavWriter()$/;"	f	class:WavWriter
~Win32ClientInfoDisplay	src/win32/LinkOptions.cpp	/^	~Win32ClientInfoDisplay()$/;"	f	class:Win32ClientInfoDisplay
~Win32ServerInfoDisplay	src/win32/LinkOptions.cpp	/^	~Win32ServerInfoDisplay()$/;"	f	class:Win32ServerInfoDisplay
~Window	src/gtk/window.cpp	/^Window::~Window()$/;"	f	class:VBA::Window
~XAudio2_BufferNotify	src/win32/XAudio2.cpp	/^	~XAudio2_BufferNotify() {$/;"	f	class:XAudio2_BufferNotify
~XAudio2_BufferNotify	src/wx/xaudio2.cpp	/^	~XAudio2_BufferNotify() {$/;"	f	class:XAudio2_BufferNotify
~XAudio2_Config	src/win32/XAudio2_Config.cpp	/^XAudio2_Config::~XAudio2_Config()$/;"	f	class:XAudio2_Config
~XAudio2_Device_Notifier	src/win32/XAudio2.cpp	/^	~XAudio2_Device_Notifier()$/;"	f	class:XAudio2_Device_Notifier
~XAudio2_Device_Notifier	src/wx/xaudio2.cpp	/^	~XAudio2_Device_Notifier()$/;"	f	class:XAudio2_Device_Notifier
~XAudio2_Output	src/win32/XAudio2.cpp	/^XAudio2_Output::~XAudio2_Output()$/;"	f	class:XAudio2_Output
~XAudio2_Output	src/wx/xaudio2.cpp	/^XAudio2_Output::~XAudio2_Output()$/;"	f	class:XAudio2_Output
~Zip7_Extractor	fex/fex/Zip7_Extractor.cpp	/^Zip7_Extractor::~Zip7_Extractor()$/;"	f	class:Zip7_Extractor
~Zip_Extractor	fex/fex/Zip_Extractor.cpp	/^Zip_Extractor::~Zip_Extractor()$/;"	f	class:Zip_Extractor
~Zlib_Inflater	fex/fex/Zlib_Inflater.cpp	/^Zlib_Inflater::~Zlib_Inflater()$/;"	f	class:Zlib_Inflater
~ZoomControl	src/win32/ZoomControl.cpp	/^ZoomControl::~ZoomControl()$/;"	f	class:ZoomControl
~blargg_vector	fex/fex/blargg_common.h	/^	~blargg_vector()        { clear(); }$/;"	f	class:blargg_vector
~blargg_vector	src/apu/blargg_common.h	/^	~blargg_vector() { free( begin_ ); }$/;"	f	class:blargg_vector
~buf_t	src/apu/Effects_Buffer.h	/^		~buf_t() { }$/;"	f	struct:Effects_Buffer::buf_t
~fex_t	fex/fex/File_Extractor.cpp	/^File_Extractor::~fex_t()$/;"	f	class:File_Extractor
~wxCheckedListCtrl	src/wx/widgets/wx/checkedlistctrl.h	/^	virtual ~wxCheckedListCtrl() {}$/;"	f	class:wxCheckedListCtrl
~wxFarRadio	src/wx/widgets/wxmisc.cpp	/^wxFarRadio::~wxFarRadio()$/;"	f	class:wxFarRadio
~wxJoyKeyTextCtrl	src/wx/widgets/wx/joyedit.h	/^    virtual ~wxJoyKeyTextCtrl() {};$/;"	f	class:wxJoyKeyTextCtrl
~wxKeyTextCtrl	src/wx/widgets/wx/keyedit.h	/^    virtual ~wxKeyTextCtrl() {};$/;"	f	class:wxKeyTextCtrl
~wxSDLJoy	src/wx/widgets/sdljoy.cpp	/^wxSDLJoy::~wxSDLJoy()$/;"	f	class:wxSDLJoy
~wxSDLJoyState	src/wx/widgets/sdljoy.cpp	/^    ~wxSDLJoyState() { if(dev) SDL_JoystickClose(dev); }$/;"	f	struct:wxSDLJoyState
