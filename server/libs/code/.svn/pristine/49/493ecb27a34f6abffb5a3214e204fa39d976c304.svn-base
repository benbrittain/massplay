==========================
Developer Information File
==========================



Known preprocessor switches:
- SDL: Defined for the SDL version
- GBA_LOGGING: Enables logging for the GBA core
- FINAL_VERSION: Defined for release versions, disables additional GBA logging and completely disables GB logging. Increases the amount of CPU cycles being emulated in one go.
- BKPT_SUPPORT
- MMX: Enable MMX instruction set
- NO_ASM: Use C++ version of hq3x/4x filters
- RGB555: Use 16bit colors with 5bit green instead of 6bit green in hq3x/4x filters (C++ version)
- NO_OGL: Exclude OpenGL code
- NO_D3D: Exclude Direct3D code
- NO_OAL: Exclude OpenAL code
- NO_XAUDIO2: Exclude XAudio2 code (the XAudio2 interface is DirectSound's successor)
- WIN64: This macro is only defined for 64 bit builds



Download locations:
NASM:         http://nasm.us/
DirectX SDK:  http://msdn.microsoft.com/en-us/xna/aa937788.aspx
OpenAL SDK:   http://connect.creativelabs.com/openal/default.aspx
OpenGL files: http://www.opengl.org/registry/
zlib:         http://zlib.net/
libpng:       http://libpng.org/pub/png/libpng.html

You can find pre-built versions of zlib & libpng at:
http://spacy51.sp.funpic.de/VBA-M/libs/
Just extract them somewhere and point Visual C++ 2008 to the include & lib folders.
They are built with the static C runtime (this is what the release builds use).



#################################
# Visual C++ 2008 project files #
#################################

Using Microsoft Visual C++ 2008, you can build the Windows/MFC version.
Refer to the instructions below for further assistance:

===Win32/MFC===
This is the full-featured Windows build using the MFC GUI.
The project files are located in trunk/project/vc2008_mfc (VBA2008.sln).
You also have to install Microsoft's DirectX SDK for Direct3D, DirectInput & XAudio2.
If you want to enable OpenAL sound output, install the OpenAL SDK. If you do not want it, #define NO_OAL.
Some pixel filters come with assembler code, which is compatible to the NASM syntax.
Install NASM somewhere and add it to your compiler's executable file paths.
All .asm files will be handled with the "nasm.rules" build rules file which comes with this project file.
